{"version":3,"file":"js/chunk-vendors.bcf6ac08.js","mappings":"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,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,IAAI,EAAE,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,IAAI,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,IAAI,EAAE,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,KAAK,GAAG,GAAG,KAAK,GAAG,EAAE,KAAK,IAAI,KAAK,IAAI,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,IAAI,GAAG,IAAI,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,KAAK,EAAE,KAAK,GAAG,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,IAAI,KAAK,IAAI,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,KAAK,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,KAAK,GAAG,EAAE,EAAE,IAAI,GAAG,IAAI,GAAG,GAAG,EAAE,GAAG,EAAE,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,GAAG,GAAG,EAAE,EAAE,KAAK,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,KAAK,MAAM,GAAG,KAAK,EAAE,IAAI,EAAE,KAAK,GAAG,KAAK,GAAG,IAAI,KAAK,IAAI,KAAK,KAAK,EAAE,MAE79CC,GAAwB,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,IAAI,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,IAAI,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,EAAE,GAAG,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,GAAG,EAAE,GAAG,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,GAAG,IAAI,GAAG,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,GAAG,KAAK,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,GAAG,IAAI,GAAG,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,OAAO,KAK7vB,SAA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","sources":["webpack://srt/./node_modules/core-js/internals/a-callable.js","webpack://srt/./node_modules/core-js/internals/an-object.js","webpack://srt/./node_modules/core-js/internals/array-includes.js","webpack://srt/./node_modules/core-js/internals/array-set-length.js","webpack://srt/./node_modules/core-js/internals/classof-raw.js","webpack://srt/./node_modules/core-js/internals/copy-constructor-properties.js","webpack://srt/./node_modules/core-js/internals/create-non-enumerable-property.js","webpack://srt/./node_modules/core-js/internals/create-property-descriptor.js","webpack://srt/./node_modules/core-js/internals/define-built-in-accessor.js","webpack://srt/./node_modules/core-js/internals/define-built-in.js","webpack://srt/./node_modules/core-js/internals/define-global-property.js","webpack://srt/./node_modules/core-js/internals/delete-property-or-throw.js","webpack://srt/./node_modules/core-js/internals/descriptors.js","webpack://srt/./node_modules/core-js/internals/document-all.js","webpack://srt/./node_modules/core-js/internals/document-create-element.js","webpack://srt/./node_modules/core-js/internals/does-not-exceed-safe-integer.js","webpack://srt/./node_modules/core-js/internals/engine-user-agent.js","webpack://srt/./node_modules/core-js/internals/engine-v8-version.js","webpack://srt/./node_modules/core-js/internals/enum-bug-keys.js","webpack://srt/./node_modules/core-js/internals/export.js","webpack://srt/./node_modules/core-js/internals/fails.js","webpack://srt/./node_modules/core-js/internals/function-bind-native.js","webpack://srt/./node_modules/core-js/internals/function-call.js","webpack://srt/./node_modules/core-js/internals/function-name.js","webpack://srt/./node_modules/core-js/internals/function-uncurry-this.js","webpack://srt/./node_modules/core-js/internals/get-built-in.js","webpack://srt/./node_modules/core-js/internals/get-method.js","webpack://srt/./node_modules/core-js/internals/global.js","webpack://srt/./node_modules/core-js/internals/has-own-property.js","webpack://srt/./node_modules/core-js/internals/hidden-keys.js","webpack://srt/./node_modules/core-js/internals/ie8-dom-define.js","webpack://srt/./node_modules/core-js/internals/indexed-object.js","webpack://srt/./node_modules/core-js/internals/inspect-source.js","webpack://srt/./node_modules/core-js/internals/internal-state.js","webpack://srt/./node_modules/core-js/internals/is-array.js","webpack://srt/./node_modules/core-js/internals/is-callable.js","webpack://srt/./node_modules/core-js/internals/is-forced.js","webpack://srt/./node_modules/core-js/internals/is-null-or-undefined.js","webpack://srt/./node_modules/core-js/internals/is-object.js","webpack://srt/./node_modules/core-js/internals/is-pure.js","webpack://srt/./node_modules/core-js/internals/is-symbol.js","webpack://srt/./node_modules/core-js/internals/length-of-array-like.js","webpack://srt/./node_modules/core-js/internals/make-built-in.js","webpack://srt/./node_modules/core-js/internals/math-trunc.js","webpack://srt/./node_modules/core-js/internals/object-define-property.js","webpack://srt/./node_modules/core-js/internals/object-get-own-property-descriptor.js","webpack://srt/./node_modules/core-js/internals/object-get-own-property-names.js","webpack://srt/./node_modules/core-js/internals/object-get-own-property-symbols.js","webpack://srt/./node_modules/core-js/internals/object-is-prototype-of.js","webpack://srt/./node_modules/core-js/internals/object-keys-internal.js","webpack://srt/./node_modules/core-js/internals/object-property-is-enumerable.js","webpack://srt/./node_modules/core-js/internals/ordinary-to-primitive.js","webpack://srt/./node_modules/core-js/internals/own-keys.js","webpack://srt/./node_modules/core-js/internals/regexp-flags.js","webpack://srt/./node_modules/core-js/internals/require-object-coercible.js","webpack://srt/./node_modules/core-js/internals/shared-key.js","webpack://srt/./node_modules/core-js/internals/shared-store.js","webpack://srt/./node_modules/core-js/internals/shared.js","webpack://srt/./node_modules/core-js/internals/symbol-constructor-detection.js","webpack://srt/./node_modules/core-js/internals/to-absolute-index.js","webpack://srt/./node_modules/core-js/internals/to-indexed-object.js","webpack://srt/./node_modules/core-js/internals/to-integer-or-infinity.js","webpack://srt/./node_modules/core-js/internals/to-length.js","webpack://srt/./node_modules/core-js/internals/to-object.js","webpack://srt/./node_modules/core-js/internals/to-primitive.js","webpack://srt/./node_modules/core-js/internals/to-property-key.js","webpack://srt/./node_modules/core-js/internals/try-to-string.js","webpack://srt/./node_modules/core-js/internals/uid.js","webpack://srt/./node_modules/core-js/internals/use-symbol-as-uid.js","webpack://srt/./node_modules/core-js/internals/v8-prototype-define-bug.js","webpack://srt/./node_modules/core-js/internals/weak-map-basic-detection.js","webpack://srt/./node_modules/core-js/internals/well-known-symbol.js","webpack://srt/./node_modules/core-js/modules/es.array.push.js","webpack://srt/./node_modules/core-js/modules/es.array.unshift.js","webpack://srt/./node_modules/core-js/modules/es.regexp.flags.js","webpack://srt/./node_modules/vue-loader/dist/exportHelper.js","webpack://srt/./node_modules/vue/node_modules/@vue/shared/dist/shared.esm-bundler.js","webpack://srt/./node_modules/vue/node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js","webpack://srt/./node_modules/vue/node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js","webpack://srt/./node_modules/vue/node_modules/@vue/runtime-dom/dist/runtime-dom.esm-bundler.js","webpack://srt/./node_modules/vue/node_modules/@vue/compiler-core/dist/compiler-core.esm-bundler.js","webpack://srt/./node_modules/vue/node_modules/@vue/compiler-dom/dist/compiler-dom.esm-bundler.js","webpack://srt/./node_modules/vue/dist/vue.esm-bundler.js","webpack://srt/../src/util/location.ts","webpack://srt/../src/parse-error/module-errors.ts","webpack://srt/../src/parse-error/to-node-description.ts","webpack://srt/../src/parse-error/standard-errors.ts","webpack://srt/../src/parse-error/strict-mode-errors.ts","webpack://srt/../src/parse-error/pipeline-operator-errors.ts","webpack://srt/../src/parse-error.ts","webpack://srt/../src/plugins/estree.ts","webpack://srt/../src/tokenizer/context.ts","webpack://srt/../src/tokenizer/types.ts","webpack://srt/../../babel-helper-validator-identifier/src/identifier.ts","webpack://srt/../../babel-helper-validator-identifier/src/keyword.ts","webpack://srt/../src/util/identifier.ts","webpack://srt/../src/util/scope.ts","webpack://srt/../src/plugins/flow/scope.ts","webpack://srt/../src/parser/base.ts","webpack://srt/../src/parser/comments.ts","webpack://srt/../src/util/whitespace.ts","webpack://srt/../src/tokenizer/state.ts","webpack://srt/../../babel-helper-string-parser/src/index.ts","webpack://srt/../src/tokenizer/index.ts","webpack://srt/../src/util/class-scope.ts","webpack://srt/../src/util/expression-scope.ts","webpack://srt/../src/util/production-parameter.ts","webpack://srt/../src/parser/util.ts","webpack://srt/../src/parser/node.ts","webpack://srt/../src/plugins/flow/index.ts","webpack://srt/../src/plugins/jsx/xhtml.ts","webpack://srt/../src/plugins/jsx/index.ts","webpack://srt/../src/plugins/typescript/scope.ts","webpack://srt/../src/parser/lval.ts","webpack://srt/../src/plugins/typescript/index.ts","webpack://srt/../src/plugins/placeholders.ts","webpack://srt/../src/plugins/v8intrinsic.ts","webpack://srt/../src/plugin-utils.ts","webpack://srt/../src/options.ts","webpack://srt/../src/parser/expression.ts","webpack://srt/../src/parser/statement.ts","webpack://srt/../src/parser/index.ts","webpack://srt/../src/index.ts","webpack://srt/./node_modules/vue-router/dist/vue-router.mjs"],"sourcesContent":["var isCallable = require('../internals/is-callable');\nvar tryToString = require('../internals/try-to-string');\n\nvar $TypeError = TypeError;\n\n// `Assert: IsCallable(argument) is true`\nmodule.exports = function (argument) {\n  if (isCallable(argument)) return argument;\n  throw $TypeError(tryToString(argument) + ' is not a function');\n};\n","var isObject = require('../internals/is-object');\n\nvar $String = String;\nvar $TypeError = TypeError;\n\n// `Assert: Type(argument) is Object`\nmodule.exports = function (argument) {\n  if (isObject(argument)) return argument;\n  throw $TypeError($String(argument) + ' is not an object');\n};\n","var toIndexedObject = require('../internals/to-indexed-object');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\n\n// `Array.prototype.{ indexOf, includes }` methods implementation\nvar createMethod = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIndexedObject($this);\n    var length = lengthOfArrayLike(O);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare -- NaN check\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare -- NaN check\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) {\n      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.includes` method\n  // https://tc39.es/ecma262/#sec-array.prototype.includes\n  includes: createMethod(true),\n  // `Array.prototype.indexOf` method\n  // https://tc39.es/ecma262/#sec-array.prototype.indexof\n  indexOf: createMethod(false)\n};\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar isArray = require('../internals/is-array');\n\nvar $TypeError = TypeError;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// Safari < 13 does not throw an error in this case\nvar SILENT_ON_NON_WRITABLE_LENGTH_SET = DESCRIPTORS && !function () {\n  // makes no sense without proper strict mode support\n  if (this !== undefined) return true;\n  try {\n    // eslint-disable-next-line es/no-object-defineproperty -- safe\n    Object.defineProperty([], 'length', { writable: false }).length = 1;\n  } catch (error) {\n    return error instanceof TypeError;\n  }\n}();\n\nmodule.exports = SILENT_ON_NON_WRITABLE_LENGTH_SET ? function (O, length) {\n  if (isArray(O) && !getOwnPropertyDescriptor(O, 'length').writable) {\n    throw $TypeError('Cannot set read only .length');\n  } return O.length = length;\n} : function (O, length) {\n  return O.length = length;\n};\n","var uncurryThis = require('../internals/function-uncurry-this');\n\nvar toString = uncurryThis({}.toString);\nvar stringSlice = uncurryThis(''.slice);\n\nmodule.exports = function (it) {\n  return stringSlice(toString(it), 8, -1);\n};\n","var hasOwn = require('../internals/has-own-property');\nvar ownKeys = require('../internals/own-keys');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar definePropertyModule = require('../internals/object-define-property');\n\nmodule.exports = function (target, source, exceptions) {\n  var keys = ownKeys(source);\n  var defineProperty = definePropertyModule.f;\n  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    if (!hasOwn(target, key) && !(exceptions && hasOwn(exceptions, key))) {\n      defineProperty(target, key, getOwnPropertyDescriptor(source, key));\n    }\n  }\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = DESCRIPTORS ? function (object, key, value) {\n  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","var makeBuiltIn = require('../internals/make-built-in');\nvar defineProperty = require('../internals/object-define-property');\n\nmodule.exports = function (target, name, descriptor) {\n  if (descriptor.get) makeBuiltIn(descriptor.get, name, { getter: true });\n  if (descriptor.set) makeBuiltIn(descriptor.set, name, { setter: true });\n  return defineProperty.f(target, name, descriptor);\n};\n","var isCallable = require('../internals/is-callable');\nvar definePropertyModule = require('../internals/object-define-property');\nvar makeBuiltIn = require('../internals/make-built-in');\nvar defineGlobalProperty = require('../internals/define-global-property');\n\nmodule.exports = function (O, key, value, options) {\n  if (!options) options = {};\n  var simple = options.enumerable;\n  var name = options.name !== undefined ? options.name : key;\n  if (isCallable(value)) makeBuiltIn(value, name, options);\n  if (options.global) {\n    if (simple) O[key] = value;\n    else defineGlobalProperty(key, value);\n  } else {\n    try {\n      if (!options.unsafe) delete O[key];\n      else if (O[key]) simple = true;\n    } catch (error) { /* empty */ }\n    if (simple) O[key] = value;\n    else definePropertyModule.f(O, key, {\n      value: value,\n      enumerable: false,\n      configurable: !options.nonConfigurable,\n      writable: !options.nonWritable\n    });\n  } return O;\n};\n","var global = require('../internals/global');\n\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar defineProperty = Object.defineProperty;\n\nmodule.exports = function (key, value) {\n  try {\n    defineProperty(global, key, { value: value, configurable: true, writable: true });\n  } catch (error) {\n    global[key] = value;\n  } return value;\n};\n","'use strict';\nvar tryToString = require('../internals/try-to-string');\n\nvar $TypeError = TypeError;\n\nmodule.exports = function (O, P) {\n  if (!delete O[P]) throw $TypeError('Cannot delete property ' + tryToString(P) + ' of ' + tryToString(O));\n};\n","var fails = require('../internals/fails');\n\n// Detect IE8's incomplete defineProperty implementation\nmodule.exports = !fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] != 7;\n});\n","var documentAll = typeof document == 'object' && document.all;\n\n// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot\nvar IS_HTMLDDA = typeof documentAll == 'undefined' && documentAll !== undefined;\n\nmodule.exports = {\n  all: documentAll,\n  IS_HTMLDDA: IS_HTMLDDA\n};\n","var global = require('../internals/global');\nvar isObject = require('../internals/is-object');\n\nvar document = global.document;\n// typeof document.createElement is 'object' in old IE\nvar EXISTS = isObject(document) && isObject(document.createElement);\n\nmodule.exports = function (it) {\n  return EXISTS ? document.createElement(it) : {};\n};\n","var $TypeError = TypeError;\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF; // 2 ** 53 - 1 == 9007199254740991\n\nmodule.exports = function (it) {\n  if (it > MAX_SAFE_INTEGER) throw $TypeError('Maximum allowed index exceeded');\n  return it;\n};\n","var getBuiltIn = require('../internals/get-built-in');\n\nmodule.exports = getBuiltIn('navigator', 'userAgent') || '';\n","var global = require('../internals/global');\nvar userAgent = require('../internals/engine-user-agent');\n\nvar process = global.process;\nvar Deno = global.Deno;\nvar versions = process && process.versions || Deno && Deno.version;\nvar v8 = versions && versions.v8;\nvar match, version;\n\nif (v8) {\n  match = v8.split('.');\n  // in old Chrome, versions of V8 isn't V8 = Chrome / 10\n  // but their correct versions are not interesting for us\n  version = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);\n}\n\n// BrowserFS NodeJS `process` polyfill incorrectly set `.v8` to `0.0`\n// so check `userAgent` even if `.v8` exists, but 0\nif (!version && userAgent) {\n  match = userAgent.match(/Edge\\/(\\d+)/);\n  if (!match || match[1] >= 74) {\n    match = userAgent.match(/Chrome\\/(\\d+)/);\n    if (match) version = +match[1];\n  }\n}\n\nmodule.exports = version;\n","// IE8- don't enum bug keys\nmodule.exports = [\n  'constructor',\n  'hasOwnProperty',\n  'isPrototypeOf',\n  'propertyIsEnumerable',\n  'toLocaleString',\n  'toString',\n  'valueOf'\n];\n","var global = require('../internals/global');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar defineBuiltIn = require('../internals/define-built-in');\nvar defineGlobalProperty = require('../internals/define-global-property');\nvar copyConstructorProperties = require('../internals/copy-constructor-properties');\nvar isForced = require('../internals/is-forced');\n\n/*\n  options.target         - name of the target object\n  options.global         - target is the global object\n  options.stat           - export as static methods of target\n  options.proto          - export as prototype methods of target\n  options.real           - real prototype method for the `pure` version\n  options.forced         - export even if the native feature is available\n  options.bind           - bind methods to the target, required for the `pure` version\n  options.wrap           - wrap constructors to preventing global pollution, required for the `pure` version\n  options.unsafe         - use the simple assignment of property instead of delete + defineProperty\n  options.sham           - add a flag to not completely full polyfills\n  options.enumerable     - export as enumerable property\n  options.dontCallGetSet - prevent calling a getter on target\n  options.name           - the .name of the function if it does not match the key\n*/\nmodule.exports = function (options, source) {\n  var TARGET = options.target;\n  var GLOBAL = options.global;\n  var STATIC = options.stat;\n  var FORCED, target, key, targetProperty, sourceProperty, descriptor;\n  if (GLOBAL) {\n    target = global;\n  } else if (STATIC) {\n    target = global[TARGET] || defineGlobalProperty(TARGET, {});\n  } else {\n    target = (global[TARGET] || {}).prototype;\n  }\n  if (target) for (key in source) {\n    sourceProperty = source[key];\n    if (options.dontCallGetSet) {\n      descriptor = getOwnPropertyDescriptor(target, key);\n      targetProperty = descriptor && descriptor.value;\n    } else targetProperty = target[key];\n    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);\n    // contained in target\n    if (!FORCED && targetProperty !== undefined) {\n      if (typeof sourceProperty == typeof targetProperty) continue;\n      copyConstructorProperties(sourceProperty, targetProperty);\n    }\n    // add a flag to not completely full polyfills\n    if (options.sham || (targetProperty && targetProperty.sham)) {\n      createNonEnumerableProperty(sourceProperty, 'sham', true);\n    }\n    defineBuiltIn(target, key, sourceProperty, options);\n  }\n};\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (error) {\n    return true;\n  }\n};\n","var fails = require('../internals/fails');\n\nmodule.exports = !fails(function () {\n  // eslint-disable-next-line es/no-function-prototype-bind -- safe\n  var test = (function () { /* empty */ }).bind();\n  // eslint-disable-next-line no-prototype-builtins -- safe\n  return typeof test != 'function' || test.hasOwnProperty('prototype');\n});\n","var NATIVE_BIND = require('../internals/function-bind-native');\n\nvar call = Function.prototype.call;\n\nmodule.exports = NATIVE_BIND ? call.bind(call) : function () {\n  return call.apply(call, arguments);\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar hasOwn = require('../internals/has-own-property');\n\nvar FunctionPrototype = Function.prototype;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar getDescriptor = DESCRIPTORS && Object.getOwnPropertyDescriptor;\n\nvar EXISTS = hasOwn(FunctionPrototype, 'name');\n// additional protection from minified / mangled / dropped function names\nvar PROPER = EXISTS && (function something() { /* empty */ }).name === 'something';\nvar CONFIGURABLE = EXISTS && (!DESCRIPTORS || (DESCRIPTORS && getDescriptor(FunctionPrototype, 'name').configurable));\n\nmodule.exports = {\n  EXISTS: EXISTS,\n  PROPER: PROPER,\n  CONFIGURABLE: CONFIGURABLE\n};\n","var NATIVE_BIND = require('../internals/function-bind-native');\n\nvar FunctionPrototype = Function.prototype;\nvar call = FunctionPrototype.call;\nvar uncurryThisWithBind = NATIVE_BIND && FunctionPrototype.bind.bind(call, call);\n\nmodule.exports = NATIVE_BIND ? uncurryThisWithBind : function (fn) {\n  return function () {\n    return call.apply(fn, arguments);\n  };\n};\n","var global = require('../internals/global');\nvar isCallable = require('../internals/is-callable');\n\nvar aFunction = function (argument) {\n  return isCallable(argument) ? argument : undefined;\n};\n\nmodule.exports = function (namespace, method) {\n  return arguments.length < 2 ? aFunction(global[namespace]) : global[namespace] && global[namespace][method];\n};\n","var aCallable = require('../internals/a-callable');\nvar isNullOrUndefined = require('../internals/is-null-or-undefined');\n\n// `GetMethod` abstract operation\n// https://tc39.es/ecma262/#sec-getmethod\nmodule.exports = function (V, P) {\n  var func = V[P];\n  return isNullOrUndefined(func) ? undefined : aCallable(func);\n};\n","var check = function (it) {\n  return it && it.Math == Math && it;\n};\n\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nmodule.exports =\n  // eslint-disable-next-line es/no-global-this -- safe\n  check(typeof globalThis == 'object' && globalThis) ||\n  check(typeof window == 'object' && window) ||\n  // eslint-disable-next-line no-restricted-globals -- safe\n  check(typeof self == 'object' && self) ||\n  check(typeof global == 'object' && global) ||\n  // eslint-disable-next-line no-new-func -- fallback\n  (function () { return this; })() || Function('return this')();\n","var uncurryThis = require('../internals/function-uncurry-this');\nvar toObject = require('../internals/to-object');\n\nvar hasOwnProperty = uncurryThis({}.hasOwnProperty);\n\n// `HasOwnProperty` abstract operation\n// https://tc39.es/ecma262/#sec-hasownproperty\n// eslint-disable-next-line es/no-object-hasown -- safe\nmodule.exports = Object.hasOwn || function hasOwn(it, key) {\n  return hasOwnProperty(toObject(it), key);\n};\n","module.exports = {};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\nvar createElement = require('../internals/document-create-element');\n\n// Thanks to IE8 for its funny defineProperty\nmodule.exports = !DESCRIPTORS && !fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty(createElement('div'), 'a', {\n    get: function () { return 7; }\n  }).a != 7;\n});\n","var uncurryThis = require('../internals/function-uncurry-this');\nvar fails = require('../internals/fails');\nvar classof = require('../internals/classof-raw');\n\nvar $Object = Object;\nvar split = uncurryThis(''.split);\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nmodule.exports = fails(function () {\n  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346\n  // eslint-disable-next-line no-prototype-builtins -- safe\n  return !$Object('z').propertyIsEnumerable(0);\n}) ? function (it) {\n  return classof(it) == 'String' ? split(it, '') : $Object(it);\n} : $Object;\n","var uncurryThis = require('../internals/function-uncurry-this');\nvar isCallable = require('../internals/is-callable');\nvar store = require('../internals/shared-store');\n\nvar functionToString = uncurryThis(Function.toString);\n\n// this helper broken in `core-js@3.4.1-3.4.4`, so we can't use `shared` helper\nif (!isCallable(store.inspectSource)) {\n  store.inspectSource = function (it) {\n    return functionToString(it);\n  };\n}\n\nmodule.exports = store.inspectSource;\n","var NATIVE_WEAK_MAP = require('../internals/weak-map-basic-detection');\nvar global = require('../internals/global');\nvar isObject = require('../internals/is-object');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar hasOwn = require('../internals/has-own-property');\nvar shared = require('../internals/shared-store');\nvar sharedKey = require('../internals/shared-key');\nvar hiddenKeys = require('../internals/hidden-keys');\n\nvar OBJECT_ALREADY_INITIALIZED = 'Object already initialized';\nvar TypeError = global.TypeError;\nvar WeakMap = global.WeakMap;\nvar set, get, has;\n\nvar enforce = function (it) {\n  return has(it) ? get(it) : set(it, {});\n};\n\nvar getterFor = function (TYPE) {\n  return function (it) {\n    var state;\n    if (!isObject(it) || (state = get(it)).type !== TYPE) {\n      throw TypeError('Incompatible receiver, ' + TYPE + ' required');\n    } return state;\n  };\n};\n\nif (NATIVE_WEAK_MAP || shared.state) {\n  var store = shared.state || (shared.state = new WeakMap());\n  /* eslint-disable no-self-assign -- prototype methods protection */\n  store.get = store.get;\n  store.has = store.has;\n  store.set = store.set;\n  /* eslint-enable no-self-assign -- prototype methods protection */\n  set = function (it, metadata) {\n    if (store.has(it)) throw TypeError(OBJECT_ALREADY_INITIALIZED);\n    metadata.facade = it;\n    store.set(it, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return store.get(it) || {};\n  };\n  has = function (it) {\n    return store.has(it);\n  };\n} else {\n  var STATE = sharedKey('state');\n  hiddenKeys[STATE] = true;\n  set = function (it, metadata) {\n    if (hasOwn(it, STATE)) throw TypeError(OBJECT_ALREADY_INITIALIZED);\n    metadata.facade = it;\n    createNonEnumerableProperty(it, STATE, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return hasOwn(it, STATE) ? it[STATE] : {};\n  };\n  has = function (it) {\n    return hasOwn(it, STATE);\n  };\n}\n\nmodule.exports = {\n  set: set,\n  get: get,\n  has: has,\n  enforce: enforce,\n  getterFor: getterFor\n};\n","var classof = require('../internals/classof-raw');\n\n// `IsArray` abstract operation\n// https://tc39.es/ecma262/#sec-isarray\n// eslint-disable-next-line es/no-array-isarray -- safe\nmodule.exports = Array.isArray || function isArray(argument) {\n  return classof(argument) == 'Array';\n};\n","var $documentAll = require('../internals/document-all');\n\nvar documentAll = $documentAll.all;\n\n// `IsCallable` abstract operation\n// https://tc39.es/ecma262/#sec-iscallable\nmodule.exports = $documentAll.IS_HTMLDDA ? function (argument) {\n  return typeof argument == 'function' || argument === documentAll;\n} : function (argument) {\n  return typeof argument == 'function';\n};\n","var fails = require('../internals/fails');\nvar isCallable = require('../internals/is-callable');\n\nvar replacement = /#|\\.prototype\\./;\n\nvar isForced = function (feature, detection) {\n  var value = data[normalize(feature)];\n  return value == POLYFILL ? true\n    : value == NATIVE ? false\n    : isCallable(detection) ? fails(detection)\n    : !!detection;\n};\n\nvar normalize = isForced.normalize = function (string) {\n  return String(string).replace(replacement, '.').toLowerCase();\n};\n\nvar data = isForced.data = {};\nvar NATIVE = isForced.NATIVE = 'N';\nvar POLYFILL = isForced.POLYFILL = 'P';\n\nmodule.exports = isForced;\n","// we can't use just `it == null` since of `document.all` special case\n// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot-aec\nmodule.exports = function (it) {\n  return it === null || it === undefined;\n};\n","var isCallable = require('../internals/is-callable');\nvar $documentAll = require('../internals/document-all');\n\nvar documentAll = $documentAll.all;\n\nmodule.exports = $documentAll.IS_HTMLDDA ? function (it) {\n  return typeof it == 'object' ? it !== null : isCallable(it) || it === documentAll;\n} : function (it) {\n  return typeof it == 'object' ? it !== null : isCallable(it);\n};\n","module.exports = false;\n","var getBuiltIn = require('../internals/get-built-in');\nvar isCallable = require('../internals/is-callable');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\n\nvar $Object = Object;\n\nmodule.exports = USE_SYMBOL_AS_UID ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  var $Symbol = getBuiltIn('Symbol');\n  return isCallable($Symbol) && isPrototypeOf($Symbol.prototype, $Object(it));\n};\n","var toLength = require('../internals/to-length');\n\n// `LengthOfArrayLike` abstract operation\n// https://tc39.es/ecma262/#sec-lengthofarraylike\nmodule.exports = function (obj) {\n  return toLength(obj.length);\n};\n","var fails = require('../internals/fails');\nvar isCallable = require('../internals/is-callable');\nvar hasOwn = require('../internals/has-own-property');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar CONFIGURABLE_FUNCTION_NAME = require('../internals/function-name').CONFIGURABLE;\nvar inspectSource = require('../internals/inspect-source');\nvar InternalStateModule = require('../internals/internal-state');\n\nvar enforceInternalState = InternalStateModule.enforce;\nvar getInternalState = InternalStateModule.get;\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar defineProperty = Object.defineProperty;\n\nvar CONFIGURABLE_LENGTH = DESCRIPTORS && !fails(function () {\n  return defineProperty(function () { /* empty */ }, 'length', { value: 8 }).length !== 8;\n});\n\nvar TEMPLATE = String(String).split('String');\n\nvar makeBuiltIn = module.exports = function (value, name, options) {\n  if (String(name).slice(0, 7) === 'Symbol(') {\n    name = '[' + String(name).replace(/^Symbol\\(([^)]*)\\)/, '$1') + ']';\n  }\n  if (options && options.getter) name = 'get ' + name;\n  if (options && options.setter) name = 'set ' + name;\n  if (!hasOwn(value, 'name') || (CONFIGURABLE_FUNCTION_NAME && value.name !== name)) {\n    if (DESCRIPTORS) defineProperty(value, 'name', { value: name, configurable: true });\n    else value.name = name;\n  }\n  if (CONFIGURABLE_LENGTH && options && hasOwn(options, 'arity') && value.length !== options.arity) {\n    defineProperty(value, 'length', { value: options.arity });\n  }\n  try {\n    if (options && hasOwn(options, 'constructor') && options.constructor) {\n      if (DESCRIPTORS) defineProperty(value, 'prototype', { writable: false });\n    // in V8 ~ Chrome 53, prototypes of some methods, like `Array.prototype.values`, are non-writable\n    } else if (value.prototype) value.prototype = undefined;\n  } catch (error) { /* empty */ }\n  var state = enforceInternalState(value);\n  if (!hasOwn(state, 'source')) {\n    state.source = TEMPLATE.join(typeof name == 'string' ? name : '');\n  } return value;\n};\n\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n// eslint-disable-next-line no-extend-native -- required\nFunction.prototype.toString = makeBuiltIn(function toString() {\n  return isCallable(this) && getInternalState(this).source || inspectSource(this);\n}, 'toString');\n","var ceil = Math.ceil;\nvar floor = Math.floor;\n\n// `Math.trunc` method\n// https://tc39.es/ecma262/#sec-math.trunc\n// eslint-disable-next-line es/no-math-trunc -- safe\nmodule.exports = Math.trunc || function trunc(x) {\n  var n = +x;\n  return (n > 0 ? floor : ceil)(n);\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\nvar V8_PROTOTYPE_DEFINE_BUG = require('../internals/v8-prototype-define-bug');\nvar anObject = require('../internals/an-object');\nvar toPropertyKey = require('../internals/to-property-key');\n\nvar $TypeError = TypeError;\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar $defineProperty = Object.defineProperty;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar ENUMERABLE = 'enumerable';\nvar CONFIGURABLE = 'configurable';\nvar WRITABLE = 'writable';\n\n// `Object.defineProperty` method\n// https://tc39.es/ecma262/#sec-object.defineproperty\nexports.f = DESCRIPTORS ? V8_PROTOTYPE_DEFINE_BUG ? function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPropertyKey(P);\n  anObject(Attributes);\n  if (typeof O === 'function' && P === 'prototype' && 'value' in Attributes && WRITABLE in Attributes && !Attributes[WRITABLE]) {\n    var current = $getOwnPropertyDescriptor(O, P);\n    if (current && current[WRITABLE]) {\n      O[P] = Attributes.value;\n      Attributes = {\n        configurable: CONFIGURABLE in Attributes ? Attributes[CONFIGURABLE] : current[CONFIGURABLE],\n        enumerable: ENUMERABLE in Attributes ? Attributes[ENUMERABLE] : current[ENUMERABLE],\n        writable: false\n      };\n    }\n  } return $defineProperty(O, P, Attributes);\n} : $defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPropertyKey(P);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return $defineProperty(O, P, Attributes);\n  } catch (error) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw $TypeError('Accessors not supported');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar call = require('../internals/function-call');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toPropertyKey = require('../internals/to-property-key');\nvar hasOwn = require('../internals/has-own-property');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\n\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// `Object.getOwnPropertyDescriptor` method\n// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor\nexports.f = DESCRIPTORS ? $getOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {\n  O = toIndexedObject(O);\n  P = toPropertyKey(P);\n  if (IE8_DOM_DEFINE) try {\n    return $getOwnPropertyDescriptor(O, P);\n  } catch (error) { /* empty */ }\n  if (hasOwn(O, P)) return createPropertyDescriptor(!call(propertyIsEnumerableModule.f, O, P), O[P]);\n};\n","var internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\nvar hiddenKeys = enumBugKeys.concat('length', 'prototype');\n\n// `Object.getOwnPropertyNames` method\n// https://tc39.es/ecma262/#sec-object.getownpropertynames\n// eslint-disable-next-line es/no-object-getownpropertynames -- safe\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return internalObjectKeys(O, hiddenKeys);\n};\n","// eslint-disable-next-line es/no-object-getownpropertysymbols -- safe\nexports.f = Object.getOwnPropertySymbols;\n","var uncurryThis = require('../internals/function-uncurry-this');\n\nmodule.exports = uncurryThis({}.isPrototypeOf);\n","var uncurryThis = require('../internals/function-uncurry-this');\nvar hasOwn = require('../internals/has-own-property');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar indexOf = require('../internals/array-includes').indexOf;\nvar hiddenKeys = require('../internals/hidden-keys');\n\nvar push = uncurryThis([].push);\n\nmodule.exports = function (object, names) {\n  var O = toIndexedObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) !hasOwn(hiddenKeys, key) && hasOwn(O, key) && push(result, key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (hasOwn(O, key = names[i++])) {\n    ~indexOf(result, key) || push(result, key);\n  }\n  return result;\n};\n","'use strict';\nvar $propertyIsEnumerable = {}.propertyIsEnumerable;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// Nashorn ~ JDK8 bug\nvar NASHORN_BUG = getOwnPropertyDescriptor && !$propertyIsEnumerable.call({ 1: 2 }, 1);\n\n// `Object.prototype.propertyIsEnumerable` method implementation\n// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable\nexports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {\n  var descriptor = getOwnPropertyDescriptor(this, V);\n  return !!descriptor && descriptor.enumerable;\n} : $propertyIsEnumerable;\n","var call = require('../internals/function-call');\nvar isCallable = require('../internals/is-callable');\nvar isObject = require('../internals/is-object');\n\nvar $TypeError = TypeError;\n\n// `OrdinaryToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-ordinarytoprimitive\nmodule.exports = function (input, pref) {\n  var fn, val;\n  if (pref === 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;\n  if (isCallable(fn = input.valueOf) && !isObject(val = call(fn, input))) return val;\n  if (pref !== 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;\n  throw $TypeError(\"Can't convert object to primitive value\");\n};\n","var getBuiltIn = require('../internals/get-built-in');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar getOwnPropertyNamesModule = require('../internals/object-get-own-property-names');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar anObject = require('../internals/an-object');\n\nvar concat = uncurryThis([].concat);\n\n// all object keys, includes non-enumerable and symbols\nmodule.exports = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {\n  var keys = getOwnPropertyNamesModule.f(anObject(it));\n  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;\n  return getOwnPropertySymbols ? concat(keys, getOwnPropertySymbols(it)) : keys;\n};\n","'use strict';\nvar anObject = require('../internals/an-object');\n\n// `RegExp.prototype.flags` getter implementation\n// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.hasIndices) result += 'd';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.dotAll) result += 's';\n  if (that.unicode) result += 'u';\n  if (that.unicodeSets) result += 'v';\n  if (that.sticky) result += 'y';\n  return result;\n};\n","var isNullOrUndefined = require('../internals/is-null-or-undefined');\n\nvar $TypeError = TypeError;\n\n// `RequireObjectCoercible` abstract operation\n// https://tc39.es/ecma262/#sec-requireobjectcoercible\nmodule.exports = function (it) {\n  if (isNullOrUndefined(it)) throw $TypeError(\"Can't call method on \" + it);\n  return it;\n};\n","var shared = require('../internals/shared');\nvar uid = require('../internals/uid');\n\nvar keys = shared('keys');\n\nmodule.exports = function (key) {\n  return keys[key] || (keys[key] = uid(key));\n};\n","var global = require('../internals/global');\nvar defineGlobalProperty = require('../internals/define-global-property');\n\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || defineGlobalProperty(SHARED, {});\n\nmodule.exports = store;\n","var IS_PURE = require('../internals/is-pure');\nvar store = require('../internals/shared-store');\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: '3.26.1',\n  mode: IS_PURE ? 'pure' : 'global',\n  copyright: '© 2014-2022 Denis Pushkarev (zloirock.ru)',\n  license: 'https://github.com/zloirock/core-js/blob/v3.26.1/LICENSE',\n  source: 'https://github.com/zloirock/core-js'\n});\n","/* eslint-disable es/no-symbol -- required for testing */\nvar V8_VERSION = require('../internals/engine-v8-version');\nvar fails = require('../internals/fails');\n\n// eslint-disable-next-line es/no-object-getownpropertysymbols -- required for testing\nmodule.exports = !!Object.getOwnPropertySymbols && !fails(function () {\n  var symbol = Symbol();\n  // Chrome 38 Symbol has incorrect toString conversion\n  // `get-own-property-symbols` polyfill symbols converted to object are not Symbol instances\n  return !String(symbol) || !(Object(symbol) instanceof Symbol) ||\n    // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances\n    !Symbol.sham && V8_VERSION && V8_VERSION < 41;\n});\n","var toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar max = Math.max;\nvar min = Math.min;\n\n// Helper for a popular repeating case of the spec:\n// Let integer be ? ToInteger(index).\n// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).\nmodule.exports = function (index, length) {\n  var integer = toIntegerOrInfinity(index);\n  return integer < 0 ? max(integer + length, 0) : min(integer, length);\n};\n","// toObject with fallback for non-array-like ES3 strings\nvar IndexedObject = require('../internals/indexed-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nmodule.exports = function (it) {\n  return IndexedObject(requireObjectCoercible(it));\n};\n","var trunc = require('../internals/math-trunc');\n\n// `ToIntegerOrInfinity` abstract operation\n// https://tc39.es/ecma262/#sec-tointegerorinfinity\nmodule.exports = function (argument) {\n  var number = +argument;\n  // eslint-disable-next-line no-self-compare -- NaN check\n  return number !== number || number === 0 ? 0 : trunc(number);\n};\n","var toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar min = Math.min;\n\n// `ToLength` abstract operation\n// https://tc39.es/ecma262/#sec-tolength\nmodule.exports = function (argument) {\n  return argument > 0 ? min(toIntegerOrInfinity(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991\n};\n","var requireObjectCoercible = require('../internals/require-object-coercible');\n\nvar $Object = Object;\n\n// `ToObject` abstract operation\n// https://tc39.es/ecma262/#sec-toobject\nmodule.exports = function (argument) {\n  return $Object(requireObjectCoercible(argument));\n};\n","var call = require('../internals/function-call');\nvar isObject = require('../internals/is-object');\nvar isSymbol = require('../internals/is-symbol');\nvar getMethod = require('../internals/get-method');\nvar ordinaryToPrimitive = require('../internals/ordinary-to-primitive');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar $TypeError = TypeError;\nvar TO_PRIMITIVE = wellKnownSymbol('toPrimitive');\n\n// `ToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-toprimitive\nmodule.exports = function (input, pref) {\n  if (!isObject(input) || isSymbol(input)) return input;\n  var exoticToPrim = getMethod(input, TO_PRIMITIVE);\n  var result;\n  if (exoticToPrim) {\n    if (pref === undefined) pref = 'default';\n    result = call(exoticToPrim, input, pref);\n    if (!isObject(result) || isSymbol(result)) return result;\n    throw $TypeError(\"Can't convert object to primitive value\");\n  }\n  if (pref === undefined) pref = 'number';\n  return ordinaryToPrimitive(input, pref);\n};\n","var toPrimitive = require('../internals/to-primitive');\nvar isSymbol = require('../internals/is-symbol');\n\n// `ToPropertyKey` abstract operation\n// https://tc39.es/ecma262/#sec-topropertykey\nmodule.exports = function (argument) {\n  var key = toPrimitive(argument, 'string');\n  return isSymbol(key) ? key : key + '';\n};\n","var $String = String;\n\nmodule.exports = function (argument) {\n  try {\n    return $String(argument);\n  } catch (error) {\n    return 'Object';\n  }\n};\n","var uncurryThis = require('../internals/function-uncurry-this');\n\nvar id = 0;\nvar postfix = Math.random();\nvar toString = uncurryThis(1.0.toString);\n\nmodule.exports = function (key) {\n  return 'Symbol(' + (key === undefined ? '' : key) + ')_' + toString(++id + postfix, 36);\n};\n","/* eslint-disable es/no-symbol -- required for testing */\nvar NATIVE_SYMBOL = require('../internals/symbol-constructor-detection');\n\nmodule.exports = NATIVE_SYMBOL\n  && !Symbol.sham\n  && typeof Symbol.iterator == 'symbol';\n","var DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\n\n// V8 ~ Chrome 36-\n// https://bugs.chromium.org/p/v8/issues/detail?id=3334\nmodule.exports = DESCRIPTORS && fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty(function () { /* empty */ }, 'prototype', {\n    value: 42,\n    writable: false\n  }).prototype != 42;\n});\n","var global = require('../internals/global');\nvar isCallable = require('../internals/is-callable');\n\nvar WeakMap = global.WeakMap;\n\nmodule.exports = isCallable(WeakMap) && /native code/.test(String(WeakMap));\n","var global = require('../internals/global');\nvar shared = require('../internals/shared');\nvar hasOwn = require('../internals/has-own-property');\nvar uid = require('../internals/uid');\nvar NATIVE_SYMBOL = require('../internals/symbol-constructor-detection');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\n\nvar WellKnownSymbolsStore = shared('wks');\nvar Symbol = global.Symbol;\nvar symbolFor = Symbol && Symbol['for'];\nvar createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol : Symbol && Symbol.withoutSetter || uid;\n\nmodule.exports = function (name) {\n  if (!hasOwn(WellKnownSymbolsStore, name) || !(NATIVE_SYMBOL || typeof WellKnownSymbolsStore[name] == 'string')) {\n    var description = 'Symbol.' + name;\n    if (NATIVE_SYMBOL && hasOwn(Symbol, name)) {\n      WellKnownSymbolsStore[name] = Symbol[name];\n    } else if (USE_SYMBOL_AS_UID && symbolFor) {\n      WellKnownSymbolsStore[name] = symbolFor(description);\n    } else {\n      WellKnownSymbolsStore[name] = createWellKnownSymbol(description);\n    }\n  } return WellKnownSymbolsStore[name];\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar toObject = require('../internals/to-object');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar setArrayLength = require('../internals/array-set-length');\nvar doesNotExceedSafeInteger = require('../internals/does-not-exceed-safe-integer');\nvar fails = require('../internals/fails');\n\nvar INCORRECT_TO_LENGTH = fails(function () {\n  return [].push.call({ length: 0x100000000 }, 1) !== 4294967297;\n});\n\n// V8 and Safari <= 15.4, FF < 23 throws InternalError\n// https://bugs.chromium.org/p/v8/issues/detail?id=12681\nvar SILENT_ON_NON_WRITABLE_LENGTH = !function () {\n  try {\n    // eslint-disable-next-line es/no-object-defineproperty -- safe\n    Object.defineProperty([], 'length', { writable: false }).push();\n  } catch (error) {\n    return error instanceof TypeError;\n  }\n}();\n\n// `Array.prototype.push` method\n// https://tc39.es/ecma262/#sec-array.prototype.push\n$({ target: 'Array', proto: true, arity: 1, forced: INCORRECT_TO_LENGTH || SILENT_ON_NON_WRITABLE_LENGTH }, {\n  // eslint-disable-next-line no-unused-vars -- required for `.length`\n  push: function push(item) {\n    var O = toObject(this);\n    var len = lengthOfArrayLike(O);\n    var argCount = arguments.length;\n    doesNotExceedSafeInteger(len + argCount);\n    for (var i = 0; i < argCount; i++) {\n      O[len] = arguments[i];\n      len++;\n    }\n    setArrayLength(O, len);\n    return len;\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar toObject = require('../internals/to-object');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar setArrayLength = require('../internals/array-set-length');\nvar deletePropertyOrThrow = require('../internals/delete-property-or-throw');\nvar doesNotExceedSafeInteger = require('../internals/does-not-exceed-safe-integer');\n\n// IE8-\nvar INCORRECT_RESULT = [].unshift(0) !== 1;\n\n// V8 ~ Chrome < 71 and Safari <= 15.4, FF < 23 throws InternalError\nvar SILENT_ON_NON_WRITABLE_LENGTH = !function () {\n  try {\n    // eslint-disable-next-line es/no-object-defineproperty -- safe\n    Object.defineProperty([], 'length', { writable: false }).unshift();\n  } catch (error) {\n    return error instanceof TypeError;\n  }\n}();\n\n// `Array.prototype.unshift` method\n// https://tc39.es/ecma262/#sec-array.prototype.unshift\n$({ target: 'Array', proto: true, arity: 1, forced: INCORRECT_RESULT || SILENT_ON_NON_WRITABLE_LENGTH }, {\n  // eslint-disable-next-line no-unused-vars -- required for `.length`\n  unshift: function unshift(item) {\n    var O = toObject(this);\n    var len = lengthOfArrayLike(O);\n    var argCount = arguments.length;\n    if (argCount) {\n      doesNotExceedSafeInteger(len + argCount);\n      var k = len;\n      while (k--) {\n        var to = k + argCount;\n        if (k in O) O[to] = O[k];\n        else deletePropertyOrThrow(O, to);\n      }\n      for (var j = 0; j < argCount; j++) {\n        O[j] = arguments[j];\n      }\n    } return setArrayLength(O, len + argCount);\n  }\n});\n","var global = require('../internals/global');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar defineBuiltInAccessor = require('../internals/define-built-in-accessor');\nvar regExpFlags = require('../internals/regexp-flags');\nvar fails = require('../internals/fails');\n\n// babel-minify and Closure Compiler transpiles RegExp('.', 'd') -> /./d and it causes SyntaxError\nvar RegExp = global.RegExp;\nvar RegExpPrototype = RegExp.prototype;\n\nvar FORCED = DESCRIPTORS && fails(function () {\n  var INDICES_SUPPORT = true;\n  try {\n    RegExp('.', 'd');\n  } catch (error) {\n    INDICES_SUPPORT = false;\n  }\n\n  var O = {};\n  // modern V8 bug\n  var calls = '';\n  var expected = INDICES_SUPPORT ? 'dgimsy' : 'gimsy';\n\n  var addGetter = function (key, chr) {\n    // eslint-disable-next-line es/no-object-defineproperty -- safe\n    Object.defineProperty(O, key, { get: function () {\n      calls += chr;\n      return true;\n    } });\n  };\n\n  var pairs = {\n    dotAll: 's',\n    global: 'g',\n    ignoreCase: 'i',\n    multiline: 'm',\n    sticky: 'y'\n  };\n\n  if (INDICES_SUPPORT) pairs.hasIndices = 'd';\n\n  for (var key in pairs) addGetter(key, pairs[key]);\n\n  // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\n  var result = Object.getOwnPropertyDescriptor(RegExpPrototype, 'flags').get.call(O);\n\n  return result !== expected || calls !== expected;\n});\n\n// `RegExp.prototype.flags` getter\n// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags\nif (FORCED) defineBuiltInAccessor(RegExpPrototype, 'flags', {\n  configurable: true,\n  get: regExpFlags\n});\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// runtime helper for setting properties on components\n// in a tree-shakable way\nexports.default = (sfc, props) => {\n    const target = sfc.__vccOpts || sfc;\n    for (const [key, val] of props) {\n        target[key] = val;\n    }\n    return target;\n};\n","/**\r\n * Make a map and return a function for checking if a key\r\n * is in that map.\r\n * IMPORTANT: all calls of this function must be prefixed with\r\n * \\/\\*#\\_\\_PURE\\_\\_\\*\\/\r\n * So that rollup can tree-shake them if necessary.\r\n */\r\nfunction makeMap(str, expectsLowerCase) {\r\n    const map = Object.create(null);\r\n    const list = str.split(',');\r\n    for (let i = 0; i < list.length; i++) {\r\n        map[list[i]] = true;\r\n    }\r\n    return expectsLowerCase ? val => !!map[val.toLowerCase()] : val => !!map[val];\r\n}\n\n/**\r\n * dev only flag -> name mapping\r\n */\r\nconst PatchFlagNames = {\r\n    [1 /* TEXT */]: `TEXT`,\r\n    [2 /* CLASS */]: `CLASS`,\r\n    [4 /* STYLE */]: `STYLE`,\r\n    [8 /* PROPS */]: `PROPS`,\r\n    [16 /* FULL_PROPS */]: `FULL_PROPS`,\r\n    [32 /* HYDRATE_EVENTS */]: `HYDRATE_EVENTS`,\r\n    [64 /* STABLE_FRAGMENT */]: `STABLE_FRAGMENT`,\r\n    [128 /* KEYED_FRAGMENT */]: `KEYED_FRAGMENT`,\r\n    [256 /* UNKEYED_FRAGMENT */]: `UNKEYED_FRAGMENT`,\r\n    [512 /* NEED_PATCH */]: `NEED_PATCH`,\r\n    [1024 /* DYNAMIC_SLOTS */]: `DYNAMIC_SLOTS`,\r\n    [2048 /* DEV_ROOT_FRAGMENT */]: `DEV_ROOT_FRAGMENT`,\r\n    [-1 /* HOISTED */]: `HOISTED`,\r\n    [-2 /* BAIL */]: `BAIL`\r\n};\n\n/**\r\n * Dev only\r\n */\r\nconst slotFlagsText = {\r\n    [1 /* STABLE */]: 'STABLE',\r\n    [2 /* DYNAMIC */]: 'DYNAMIC',\r\n    [3 /* FORWARDED */]: 'FORWARDED'\r\n};\n\nconst GLOBALS_WHITE_LISTED = 'Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,' +\r\n    'decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,' +\r\n    'Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt';\r\nconst isGloballyWhitelisted = /*#__PURE__*/ makeMap(GLOBALS_WHITE_LISTED);\n\nconst range = 2;\r\nfunction generateCodeFrame(source, start = 0, end = source.length) {\r\n    // Split the content into individual lines but capture the newline sequence\r\n    // that separated each line. This is important because the actual sequence is\r\n    // needed to properly take into account the full line length for offset\r\n    // comparison\r\n    let lines = source.split(/(\\r?\\n)/);\r\n    // Separate the lines and newline sequences into separate arrays for easier referencing\r\n    const newlineSequences = lines.filter((_, idx) => idx % 2 === 1);\r\n    lines = lines.filter((_, idx) => idx % 2 === 0);\r\n    let count = 0;\r\n    const res = [];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        count +=\r\n            lines[i].length +\r\n                ((newlineSequences[i] && newlineSequences[i].length) || 0);\r\n        if (count >= start) {\r\n            for (let j = i - range; j <= i + range || end > count; j++) {\r\n                if (j < 0 || j >= lines.length)\r\n                    continue;\r\n                const line = j + 1;\r\n                res.push(`${line}${' '.repeat(Math.max(3 - String(line).length, 0))}|  ${lines[j]}`);\r\n                const lineLength = lines[j].length;\r\n                const newLineSeqLength = (newlineSequences[j] && newlineSequences[j].length) || 0;\r\n                if (j === i) {\r\n                    // push underline\r\n                    const pad = start - (count - (lineLength + newLineSeqLength));\r\n                    const length = Math.max(1, end > count ? lineLength - pad : end - start);\r\n                    res.push(`   |  ` + ' '.repeat(pad) + '^'.repeat(length));\r\n                }\r\n                else if (j > i) {\r\n                    if (end > count) {\r\n                        const length = Math.max(Math.min(end - count, lineLength), 1);\r\n                        res.push(`   |  ` + '^'.repeat(length));\r\n                    }\r\n                    count += lineLength + newLineSeqLength;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    }\r\n    return res.join('\\n');\r\n}\n\n/**\r\n * On the client we only need to offer special cases for boolean attributes that\r\n * have different names from their corresponding dom properties:\r\n * - itemscope -> N/A\r\n * - allowfullscreen -> allowFullscreen\r\n * - formnovalidate -> formNoValidate\r\n * - ismap -> isMap\r\n * - nomodule -> noModule\r\n * - novalidate -> noValidate\r\n * - readonly -> readOnly\r\n */\r\nconst specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`;\r\nconst isSpecialBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs);\r\n/**\r\n * The full list is needed during SSR to produce the correct initial markup.\r\n */\r\nconst isBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs +\r\n    `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,` +\r\n    `loop,open,required,reversed,scoped,seamless,` +\r\n    `checked,muted,multiple,selected`);\r\n/**\r\n * Boolean attributes should be included if the value is truthy or ''.\r\n * e.g. <select multiple> compiles to { multiple: '' }\r\n */\r\nfunction includeBooleanAttr(value) {\r\n    return !!value || value === '';\r\n}\r\nconst unsafeAttrCharRE = /[>/=\"'\\u0009\\u000a\\u000c\\u0020]/;\r\nconst attrValidationCache = {};\r\nfunction isSSRSafeAttrName(name) {\r\n    if (attrValidationCache.hasOwnProperty(name)) {\r\n        return attrValidationCache[name];\r\n    }\r\n    const isUnsafe = unsafeAttrCharRE.test(name);\r\n    if (isUnsafe) {\r\n        console.error(`unsafe attribute name: ${name}`);\r\n    }\r\n    return (attrValidationCache[name] = !isUnsafe);\r\n}\r\nconst propsToAttrMap = {\r\n    acceptCharset: 'accept-charset',\r\n    className: 'class',\r\n    htmlFor: 'for',\r\n    httpEquiv: 'http-equiv'\r\n};\r\n/**\r\n * CSS properties that accept plain numbers\r\n */\r\nconst isNoUnitNumericStyleProp = /*#__PURE__*/ makeMap(`animation-iteration-count,border-image-outset,border-image-slice,` +\r\n    `border-image-width,box-flex,box-flex-group,box-ordinal-group,column-count,` +\r\n    `columns,flex,flex-grow,flex-positive,flex-shrink,flex-negative,flex-order,` +\r\n    `grid-row,grid-row-end,grid-row-span,grid-row-start,grid-column,` +\r\n    `grid-column-end,grid-column-span,grid-column-start,font-weight,line-clamp,` +\r\n    `line-height,opacity,order,orphans,tab-size,widows,z-index,zoom,` +\r\n    // SVG\r\n    `fill-opacity,flood-opacity,stop-opacity,stroke-dasharray,stroke-dashoffset,` +\r\n    `stroke-miterlimit,stroke-opacity,stroke-width`);\r\n/**\r\n * Known attributes, this is used for stringification of runtime static nodes\r\n * so that we don't stringify bindings that cannot be set from HTML.\r\n * Don't also forget to allow `data-*` and `aria-*`!\r\n * Generated from https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes\r\n */\r\nconst isKnownHtmlAttr = /*#__PURE__*/ makeMap(`accept,accept-charset,accesskey,action,align,allow,alt,async,` +\r\n    `autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,` +\r\n    `border,buffered,capture,challenge,charset,checked,cite,class,code,` +\r\n    `codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,` +\r\n    `coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,` +\r\n    `disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,` +\r\n    `formaction,formenctype,formmethod,formnovalidate,formtarget,headers,` +\r\n    `height,hidden,high,href,hreflang,http-equiv,icon,id,importance,integrity,` +\r\n    `ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,` +\r\n    `manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,` +\r\n    `open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,` +\r\n    `referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,` +\r\n    `selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,` +\r\n    `start,step,style,summary,tabindex,target,title,translate,type,usemap,` +\r\n    `value,width,wrap`);\r\n/**\r\n * Generated from https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute\r\n */\r\nconst isKnownSvgAttr = /*#__PURE__*/ makeMap(`xmlns,accent-height,accumulate,additive,alignment-baseline,alphabetic,amplitude,` +\r\n    `arabic-form,ascent,attributeName,attributeType,azimuth,baseFrequency,` +\r\n    `baseline-shift,baseProfile,bbox,begin,bias,by,calcMode,cap-height,class,` +\r\n    `clip,clipPathUnits,clip-path,clip-rule,color,color-interpolation,` +\r\n    `color-interpolation-filters,color-profile,color-rendering,` +\r\n    `contentScriptType,contentStyleType,crossorigin,cursor,cx,cy,d,decelerate,` +\r\n    `descent,diffuseConstant,direction,display,divisor,dominant-baseline,dur,dx,` +\r\n    `dy,edgeMode,elevation,enable-background,end,exponent,fill,fill-opacity,` +\r\n    `fill-rule,filter,filterRes,filterUnits,flood-color,flood-opacity,` +\r\n    `font-family,font-size,font-size-adjust,font-stretch,font-style,` +\r\n    `font-variant,font-weight,format,from,fr,fx,fy,g1,g2,glyph-name,` +\r\n    `glyph-orientation-horizontal,glyph-orientation-vertical,glyphRef,` +\r\n    `gradientTransform,gradientUnits,hanging,height,href,hreflang,horiz-adv-x,` +\r\n    `horiz-origin-x,id,ideographic,image-rendering,in,in2,intercept,k,k1,k2,k3,` +\r\n    `k4,kernelMatrix,kernelUnitLength,kerning,keyPoints,keySplines,keyTimes,` +\r\n    `lang,lengthAdjust,letter-spacing,lighting-color,limitingConeAngle,local,` +\r\n    `marker-end,marker-mid,marker-start,markerHeight,markerUnits,markerWidth,` +\r\n    `mask,maskContentUnits,maskUnits,mathematical,max,media,method,min,mode,` +\r\n    `name,numOctaves,offset,opacity,operator,order,orient,orientation,origin,` +\r\n    `overflow,overline-position,overline-thickness,panose-1,paint-order,path,` +\r\n    `pathLength,patternContentUnits,patternTransform,patternUnits,ping,` +\r\n    `pointer-events,points,pointsAtX,pointsAtY,pointsAtZ,preserveAlpha,` +\r\n    `preserveAspectRatio,primitiveUnits,r,radius,referrerPolicy,refX,refY,rel,` +\r\n    `rendering-intent,repeatCount,repeatDur,requiredExtensions,requiredFeatures,` +\r\n    `restart,result,rotate,rx,ry,scale,seed,shape-rendering,slope,spacing,` +\r\n    `specularConstant,specularExponent,speed,spreadMethod,startOffset,` +\r\n    `stdDeviation,stemh,stemv,stitchTiles,stop-color,stop-opacity,` +\r\n    `strikethrough-position,strikethrough-thickness,string,stroke,` +\r\n    `stroke-dasharray,stroke-dashoffset,stroke-linecap,stroke-linejoin,` +\r\n    `stroke-miterlimit,stroke-opacity,stroke-width,style,surfaceScale,` +\r\n    `systemLanguage,tabindex,tableValues,target,targetX,targetY,text-anchor,` +\r\n    `text-decoration,text-rendering,textLength,to,transform,transform-origin,` +\r\n    `type,u1,u2,underline-position,underline-thickness,unicode,unicode-bidi,` +\r\n    `unicode-range,units-per-em,v-alphabetic,v-hanging,v-ideographic,` +\r\n    `v-mathematical,values,vector-effect,version,vert-adv-y,vert-origin-x,` +\r\n    `vert-origin-y,viewBox,viewTarget,visibility,width,widths,word-spacing,` +\r\n    `writing-mode,x,x-height,x1,x2,xChannelSelector,xlink:actuate,xlink:arcrole,` +\r\n    `xlink:href,xlink:role,xlink:show,xlink:title,xlink:type,xml:base,xml:lang,` +\r\n    `xml:space,y,y1,y2,yChannelSelector,z,zoomAndPan`);\n\nfunction normalizeStyle(value) {\r\n    if (isArray(value)) {\r\n        const res = {};\r\n        for (let i = 0; i < value.length; i++) {\r\n            const item = value[i];\r\n            const normalized = isString(item)\r\n                ? parseStringStyle(item)\r\n                : normalizeStyle(item);\r\n            if (normalized) {\r\n                for (const key in normalized) {\r\n                    res[key] = normalized[key];\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    else if (isString(value)) {\r\n        return value;\r\n    }\r\n    else if (isObject(value)) {\r\n        return value;\r\n    }\r\n}\r\nconst listDelimiterRE = /;(?![^(]*\\))/g;\r\nconst propertyDelimiterRE = /:(.+)/;\r\nfunction parseStringStyle(cssText) {\r\n    const ret = {};\r\n    cssText.split(listDelimiterRE).forEach(item => {\r\n        if (item) {\r\n            const tmp = item.split(propertyDelimiterRE);\r\n            tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim());\r\n        }\r\n    });\r\n    return ret;\r\n}\r\nfunction stringifyStyle(styles) {\r\n    let ret = '';\r\n    if (!styles || isString(styles)) {\r\n        return ret;\r\n    }\r\n    for (const key in styles) {\r\n        const value = styles[key];\r\n        const normalizedKey = key.startsWith(`--`) ? key : hyphenate(key);\r\n        if (isString(value) ||\r\n            (typeof value === 'number' && isNoUnitNumericStyleProp(normalizedKey))) {\r\n            // only render valid values\r\n            ret += `${normalizedKey}:${value};`;\r\n        }\r\n    }\r\n    return ret;\r\n}\r\nfunction normalizeClass(value) {\r\n    let res = '';\r\n    if (isString(value)) {\r\n        res = value;\r\n    }\r\n    else if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            const normalized = normalizeClass(value[i]);\r\n            if (normalized) {\r\n                res += normalized + ' ';\r\n            }\r\n        }\r\n    }\r\n    else if (isObject(value)) {\r\n        for (const name in value) {\r\n            if (value[name]) {\r\n                res += name + ' ';\r\n            }\r\n        }\r\n    }\r\n    return res.trim();\r\n}\r\nfunction normalizeProps(props) {\r\n    if (!props)\r\n        return null;\r\n    let { class: klass, style } = props;\r\n    if (klass && !isString(klass)) {\r\n        props.class = normalizeClass(klass);\r\n    }\r\n    if (style) {\r\n        props.style = normalizeStyle(style);\r\n    }\r\n    return props;\r\n}\n\n// These tag configs are shared between compiler-dom and runtime-dom, so they\r\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Element\r\nconst HTML_TAGS = 'html,body,base,head,link,meta,style,title,address,article,aside,footer,' +\r\n    'header,h1,h2,h3,h4,h5,h6,nav,section,div,dd,dl,dt,figcaption,' +\r\n    'figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,' +\r\n    'data,dfn,em,i,kbd,mark,q,rp,rt,ruby,s,samp,small,span,strong,sub,sup,' +\r\n    'time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,' +\r\n    'canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,' +\r\n    'th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,' +\r\n    'option,output,progress,select,textarea,details,dialog,menu,' +\r\n    'summary,template,blockquote,iframe,tfoot';\r\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Element\r\nconst SVG_TAGS = 'svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,' +\r\n    'defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,' +\r\n    'feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,' +\r\n    'feDistanceLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,' +\r\n    'feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,' +\r\n    'fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,' +\r\n    'foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,' +\r\n    'mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,' +\r\n    'polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,' +\r\n    'text,textPath,title,tspan,unknown,use,view';\r\nconst VOID_TAGS = 'area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr';\r\nconst isHTMLTag = /*#__PURE__*/ makeMap(HTML_TAGS);\r\nconst isSVGTag = /*#__PURE__*/ makeMap(SVG_TAGS);\r\nconst isVoidTag = /*#__PURE__*/ makeMap(VOID_TAGS);\n\nconst escapeRE = /[\"'&<>]/;\r\nfunction escapeHtml(string) {\r\n    const str = '' + string;\r\n    const match = escapeRE.exec(str);\r\n    if (!match) {\r\n        return str;\r\n    }\r\n    let html = '';\r\n    let escaped;\r\n    let index;\r\n    let lastIndex = 0;\r\n    for (index = match.index; index < str.length; index++) {\r\n        switch (str.charCodeAt(index)) {\r\n            case 34: // \"\r\n                escaped = '&quot;';\r\n                break;\r\n            case 38: // &\r\n                escaped = '&amp;';\r\n                break;\r\n            case 39: // '\r\n                escaped = '&#39;';\r\n                break;\r\n            case 60: // <\r\n                escaped = '&lt;';\r\n                break;\r\n            case 62: // >\r\n                escaped = '&gt;';\r\n                break;\r\n            default:\r\n                continue;\r\n        }\r\n        if (lastIndex !== index) {\r\n            html += str.substring(lastIndex, index);\r\n        }\r\n        lastIndex = index + 1;\r\n        html += escaped;\r\n    }\r\n    return lastIndex !== index ? html + str.substring(lastIndex, index) : html;\r\n}\r\n// https://www.w3.org/TR/html52/syntax.html#comments\r\nconst commentStripRE = /^-?>|<!--|-->|--!>|<!-$/g;\r\nfunction escapeHtmlComment(src) {\r\n    return src.replace(commentStripRE, '');\r\n}\n\nfunction looseCompareArrays(a, b) {\r\n    if (a.length !== b.length)\r\n        return false;\r\n    let equal = true;\r\n    for (let i = 0; equal && i < a.length; i++) {\r\n        equal = looseEqual(a[i], b[i]);\r\n    }\r\n    return equal;\r\n}\r\nfunction looseEqual(a, b) {\r\n    if (a === b)\r\n        return true;\r\n    let aValidType = isDate(a);\r\n    let bValidType = isDate(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? a.getTime() === b.getTime() : false;\r\n    }\r\n    aValidType = isArray(a);\r\n    bValidType = isArray(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? looseCompareArrays(a, b) : false;\r\n    }\r\n    aValidType = isObject(a);\r\n    bValidType = isObject(b);\r\n    if (aValidType || bValidType) {\r\n        /* istanbul ignore if: this if will probably never be called */\r\n        if (!aValidType || !bValidType) {\r\n            return false;\r\n        }\r\n        const aKeysCount = Object.keys(a).length;\r\n        const bKeysCount = Object.keys(b).length;\r\n        if (aKeysCount !== bKeysCount) {\r\n            return false;\r\n        }\r\n        for (const key in a) {\r\n            const aHasKey = a.hasOwnProperty(key);\r\n            const bHasKey = b.hasOwnProperty(key);\r\n            if ((aHasKey && !bHasKey) ||\r\n                (!aHasKey && bHasKey) ||\r\n                !looseEqual(a[key], b[key])) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return String(a) === String(b);\r\n}\r\nfunction looseIndexOf(arr, val) {\r\n    return arr.findIndex(item => looseEqual(item, val));\r\n}\n\n/**\r\n * For converting {{ interpolation }} values to displayed strings.\r\n * @private\r\n */\r\nconst toDisplayString = (val) => {\r\n    return val == null\r\n        ? ''\r\n        : isArray(val) ||\r\n            (isObject(val) &&\r\n                (val.toString === objectToString || !isFunction(val.toString)))\r\n            ? JSON.stringify(val, replacer, 2)\r\n            : String(val);\r\n};\r\nconst replacer = (_key, val) => {\r\n    // can't use isRef here since @vue/shared has no deps\r\n    if (val && val.__v_isRef) {\r\n        return replacer(_key, val.value);\r\n    }\r\n    else if (isMap(val)) {\r\n        return {\r\n            [`Map(${val.size})`]: [...val.entries()].reduce((entries, [key, val]) => {\r\n                entries[`${key} =>`] = val;\r\n                return entries;\r\n            }, {})\r\n        };\r\n    }\r\n    else if (isSet(val)) {\r\n        return {\r\n            [`Set(${val.size})`]: [...val.values()]\r\n        };\r\n    }\r\n    else if (isObject(val) && !isArray(val) && !isPlainObject(val)) {\r\n        return String(val);\r\n    }\r\n    return val;\r\n};\n\n/**\r\n * List of @babel/parser plugins that are used for template expression\r\n * transforms and SFC script transforms. By default we enable proposals slated\r\n * for ES2020. This will need to be updated as the spec moves forward.\r\n * Full list at https://babeljs.io/docs/en/next/babel-parser#plugins\r\n */\r\nconst babelParserDefaultPlugins = [\r\n    'bigInt',\r\n    'optionalChaining',\r\n    'nullishCoalescingOperator'\r\n];\r\nconst EMPTY_OBJ = (process.env.NODE_ENV !== 'production')\r\n    ? Object.freeze({})\r\n    : {};\r\nconst EMPTY_ARR = (process.env.NODE_ENV !== 'production') ? Object.freeze([]) : [];\r\nconst NOOP = () => { };\r\n/**\r\n * Always return false.\r\n */\r\nconst NO = () => false;\r\nconst onRE = /^on[^a-z]/;\r\nconst isOn = (key) => onRE.test(key);\r\nconst isModelListener = (key) => key.startsWith('onUpdate:');\r\nconst extend = Object.assign;\r\nconst remove = (arr, el) => {\r\n    const i = arr.indexOf(el);\r\n    if (i > -1) {\r\n        arr.splice(i, 1);\r\n    }\r\n};\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\nconst hasOwn = (val, key) => hasOwnProperty.call(val, key);\r\nconst isArray = Array.isArray;\r\nconst isMap = (val) => toTypeString(val) === '[object Map]';\r\nconst isSet = (val) => toTypeString(val) === '[object Set]';\r\nconst isDate = (val) => val instanceof Date;\r\nconst isFunction = (val) => typeof val === 'function';\r\nconst isString = (val) => typeof val === 'string';\r\nconst isSymbol = (val) => typeof val === 'symbol';\r\nconst isObject = (val) => val !== null && typeof val === 'object';\r\nconst isPromise = (val) => {\r\n    return isObject(val) && isFunction(val.then) && isFunction(val.catch);\r\n};\r\nconst objectToString = Object.prototype.toString;\r\nconst toTypeString = (value) => objectToString.call(value);\r\nconst toRawType = (value) => {\r\n    // extract \"RawType\" from strings like \"[object RawType]\"\r\n    return toTypeString(value).slice(8, -1);\r\n};\r\nconst isPlainObject = (val) => toTypeString(val) === '[object Object]';\r\nconst isIntegerKey = (key) => isString(key) &&\r\n    key !== 'NaN' &&\r\n    key[0] !== '-' &&\r\n    '' + parseInt(key, 10) === key;\r\nconst isReservedProp = /*#__PURE__*/ makeMap(\r\n// the leading comma is intentional so empty string \"\" is also included\r\n',key,ref,' +\r\n    'onVnodeBeforeMount,onVnodeMounted,' +\r\n    'onVnodeBeforeUpdate,onVnodeUpdated,' +\r\n    'onVnodeBeforeUnmount,onVnodeUnmounted');\r\nconst cacheStringFunction = (fn) => {\r\n    const cache = Object.create(null);\r\n    return ((str) => {\r\n        const hit = cache[str];\r\n        return hit || (cache[str] = fn(str));\r\n    });\r\n};\r\nconst camelizeRE = /-(\\w)/g;\r\n/**\r\n * @private\r\n */\r\nconst camelize = cacheStringFunction((str) => {\r\n    return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''));\r\n});\r\nconst hyphenateRE = /\\B([A-Z])/g;\r\n/**\r\n * @private\r\n */\r\nconst hyphenate = cacheStringFunction((str) => str.replace(hyphenateRE, '-$1').toLowerCase());\r\n/**\r\n * @private\r\n */\r\nconst capitalize = cacheStringFunction((str) => str.charAt(0).toUpperCase() + str.slice(1));\r\n/**\r\n * @private\r\n */\r\nconst toHandlerKey = cacheStringFunction((str) => str ? `on${capitalize(str)}` : ``);\r\n// compare whether a value has changed, accounting for NaN.\r\nconst hasChanged = (value, oldValue) => !Object.is(value, oldValue);\r\nconst invokeArrayFns = (fns, arg) => {\r\n    for (let i = 0; i < fns.length; i++) {\r\n        fns[i](arg);\r\n    }\r\n};\r\nconst def = (obj, key, value) => {\r\n    Object.defineProperty(obj, key, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        value\r\n    });\r\n};\r\nconst toNumber = (val) => {\r\n    const n = parseFloat(val);\r\n    return isNaN(n) ? val : n;\r\n};\r\nlet _globalThis;\r\nconst getGlobalThis = () => {\r\n    return (_globalThis ||\r\n        (_globalThis =\r\n            typeof globalThis !== 'undefined'\r\n                ? globalThis\r\n                : typeof self !== 'undefined'\r\n                    ? self\r\n                    : typeof window !== 'undefined'\r\n                        ? window\r\n                        : typeof global !== 'undefined'\r\n                            ? global\r\n                            : {}));\r\n};\n\nexport { EMPTY_ARR, EMPTY_OBJ, NO, NOOP, PatchFlagNames, babelParserDefaultPlugins, camelize, capitalize, def, escapeHtml, escapeHtmlComment, extend, generateCodeFrame, getGlobalThis, hasChanged, hasOwn, hyphenate, includeBooleanAttr, invokeArrayFns, isArray, isBooleanAttr, isDate, isFunction, isGloballyWhitelisted, isHTMLTag, isIntegerKey, isKnownHtmlAttr, isKnownSvgAttr, isMap, isModelListener, isNoUnitNumericStyleProp, isObject, isOn, isPlainObject, isPromise, isReservedProp, isSSRSafeAttrName, isSVGTag, isSet, isSpecialBooleanAttr, isString, isSymbol, isVoidTag, looseEqual, looseIndexOf, makeMap, normalizeClass, normalizeProps, normalizeStyle, objectToString, parseStringStyle, propsToAttrMap, remove, slotFlagsText, stringifyStyle, toDisplayString, toHandlerKey, toNumber, toRawType, toTypeString };\n","import { extend, isArray, isMap, isIntegerKey, isSymbol, hasOwn, isObject, hasChanged, makeMap, capitalize, toRawType, def, isFunction, NOOP } from '@vue/shared';\n\nfunction warn(msg, ...args) {\r\n    console.warn(`[Vue warn] ${msg}`, ...args);\r\n}\n\nlet activeEffectScope;\r\nconst effectScopeStack = [];\r\nclass EffectScope {\r\n    constructor(detached = false) {\r\n        this.active = true;\r\n        this.effects = [];\r\n        this.cleanups = [];\r\n        if (!detached && activeEffectScope) {\r\n            this.parent = activeEffectScope;\r\n            this.index =\r\n                (activeEffectScope.scopes || (activeEffectScope.scopes = [])).push(this) - 1;\r\n        }\r\n    }\r\n    run(fn) {\r\n        if (this.active) {\r\n            try {\r\n                this.on();\r\n                return fn();\r\n            }\r\n            finally {\r\n                this.off();\r\n            }\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`cannot run an inactive effect scope.`);\r\n        }\r\n    }\r\n    on() {\r\n        if (this.active) {\r\n            effectScopeStack.push(this);\r\n            activeEffectScope = this;\r\n        }\r\n    }\r\n    off() {\r\n        if (this.active) {\r\n            effectScopeStack.pop();\r\n            activeEffectScope = effectScopeStack[effectScopeStack.length - 1];\r\n        }\r\n    }\r\n    stop(fromParent) {\r\n        if (this.active) {\r\n            this.effects.forEach(e => e.stop());\r\n            this.cleanups.forEach(cleanup => cleanup());\r\n            if (this.scopes) {\r\n                this.scopes.forEach(e => e.stop(true));\r\n            }\r\n            // nested scope, dereference from parent to avoid memory leaks\r\n            if (this.parent && !fromParent) {\r\n                // optimized O(1) removal\r\n                const last = this.parent.scopes.pop();\r\n                if (last && last !== this) {\r\n                    this.parent.scopes[this.index] = last;\r\n                    last.index = this.index;\r\n                }\r\n            }\r\n            this.active = false;\r\n        }\r\n    }\r\n}\r\nfunction effectScope(detached) {\r\n    return new EffectScope(detached);\r\n}\r\nfunction recordEffectScope(effect, scope) {\r\n    scope = scope || activeEffectScope;\r\n    if (scope && scope.active) {\r\n        scope.effects.push(effect);\r\n    }\r\n}\r\nfunction getCurrentScope() {\r\n    return activeEffectScope;\r\n}\r\nfunction onScopeDispose(fn) {\r\n    if (activeEffectScope) {\r\n        activeEffectScope.cleanups.push(fn);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`onScopeDispose() is called when there is no active effect scope` +\r\n            ` to be associated with.`);\r\n    }\r\n}\n\nconst createDep = (effects) => {\r\n    const dep = new Set(effects);\r\n    dep.w = 0;\r\n    dep.n = 0;\r\n    return dep;\r\n};\r\nconst wasTracked = (dep) => (dep.w & trackOpBit) > 0;\r\nconst newTracked = (dep) => (dep.n & trackOpBit) > 0;\r\nconst initDepMarkers = ({ deps }) => {\r\n    if (deps.length) {\r\n        for (let i = 0; i < deps.length; i++) {\r\n            deps[i].w |= trackOpBit; // set was tracked\r\n        }\r\n    }\r\n};\r\nconst finalizeDepMarkers = (effect) => {\r\n    const { deps } = effect;\r\n    if (deps.length) {\r\n        let ptr = 0;\r\n        for (let i = 0; i < deps.length; i++) {\r\n            const dep = deps[i];\r\n            if (wasTracked(dep) && !newTracked(dep)) {\r\n                dep.delete(effect);\r\n            }\r\n            else {\r\n                deps[ptr++] = dep;\r\n            }\r\n            // clear bits\r\n            dep.w &= ~trackOpBit;\r\n            dep.n &= ~trackOpBit;\r\n        }\r\n        deps.length = ptr;\r\n    }\r\n};\n\nconst targetMap = new WeakMap();\r\n// The number of effects currently being tracked recursively.\r\nlet effectTrackDepth = 0;\r\nlet trackOpBit = 1;\r\n/**\r\n * The bitwise track markers support at most 30 levels op recursion.\r\n * This value is chosen to enable modern JS engines to use a SMI on all platforms.\r\n * When recursion depth is greater, fall back to using a full cleanup.\r\n */\r\nconst maxMarkerBits = 30;\r\nconst effectStack = [];\r\nlet activeEffect;\r\nconst ITERATE_KEY = Symbol((process.env.NODE_ENV !== 'production') ? 'iterate' : '');\r\nconst MAP_KEY_ITERATE_KEY = Symbol((process.env.NODE_ENV !== 'production') ? 'Map key iterate' : '');\r\nclass ReactiveEffect {\r\n    constructor(fn, scheduler = null, scope) {\r\n        this.fn = fn;\r\n        this.scheduler = scheduler;\r\n        this.active = true;\r\n        this.deps = [];\r\n        recordEffectScope(this, scope);\r\n    }\r\n    run() {\r\n        if (!this.active) {\r\n            return this.fn();\r\n        }\r\n        if (!effectStack.includes(this)) {\r\n            try {\r\n                effectStack.push((activeEffect = this));\r\n                enableTracking();\r\n                trackOpBit = 1 << ++effectTrackDepth;\r\n                if (effectTrackDepth <= maxMarkerBits) {\r\n                    initDepMarkers(this);\r\n                }\r\n                else {\r\n                    cleanupEffect(this);\r\n                }\r\n                return this.fn();\r\n            }\r\n            finally {\r\n                if (effectTrackDepth <= maxMarkerBits) {\r\n                    finalizeDepMarkers(this);\r\n                }\r\n                trackOpBit = 1 << --effectTrackDepth;\r\n                resetTracking();\r\n                effectStack.pop();\r\n                const n = effectStack.length;\r\n                activeEffect = n > 0 ? effectStack[n - 1] : undefined;\r\n            }\r\n        }\r\n    }\r\n    stop() {\r\n        if (this.active) {\r\n            cleanupEffect(this);\r\n            if (this.onStop) {\r\n                this.onStop();\r\n            }\r\n            this.active = false;\r\n        }\r\n    }\r\n}\r\nfunction cleanupEffect(effect) {\r\n    const { deps } = effect;\r\n    if (deps.length) {\r\n        for (let i = 0; i < deps.length; i++) {\r\n            deps[i].delete(effect);\r\n        }\r\n        deps.length = 0;\r\n    }\r\n}\r\nfunction effect(fn, options) {\r\n    if (fn.effect) {\r\n        fn = fn.effect.fn;\r\n    }\r\n    const _effect = new ReactiveEffect(fn);\r\n    if (options) {\r\n        extend(_effect, options);\r\n        if (options.scope)\r\n            recordEffectScope(_effect, options.scope);\r\n    }\r\n    if (!options || !options.lazy) {\r\n        _effect.run();\r\n    }\r\n    const runner = _effect.run.bind(_effect);\r\n    runner.effect = _effect;\r\n    return runner;\r\n}\r\nfunction stop(runner) {\r\n    runner.effect.stop();\r\n}\r\nlet shouldTrack = true;\r\nconst trackStack = [];\r\nfunction pauseTracking() {\r\n    trackStack.push(shouldTrack);\r\n    shouldTrack = false;\r\n}\r\nfunction enableTracking() {\r\n    trackStack.push(shouldTrack);\r\n    shouldTrack = true;\r\n}\r\nfunction resetTracking() {\r\n    const last = trackStack.pop();\r\n    shouldTrack = last === undefined ? true : last;\r\n}\r\nfunction track(target, type, key) {\r\n    if (!isTracking()) {\r\n        return;\r\n    }\r\n    let depsMap = targetMap.get(target);\r\n    if (!depsMap) {\r\n        targetMap.set(target, (depsMap = new Map()));\r\n    }\r\n    let dep = depsMap.get(key);\r\n    if (!dep) {\r\n        depsMap.set(key, (dep = createDep()));\r\n    }\r\n    const eventInfo = (process.env.NODE_ENV !== 'production')\r\n        ? { effect: activeEffect, target, type, key }\r\n        : undefined;\r\n    trackEffects(dep, eventInfo);\r\n}\r\nfunction isTracking() {\r\n    return shouldTrack && activeEffect !== undefined;\r\n}\r\nfunction trackEffects(dep, debuggerEventExtraInfo) {\r\n    let shouldTrack = false;\r\n    if (effectTrackDepth <= maxMarkerBits) {\r\n        if (!newTracked(dep)) {\r\n            dep.n |= trackOpBit; // set newly tracked\r\n            shouldTrack = !wasTracked(dep);\r\n        }\r\n    }\r\n    else {\r\n        // Full cleanup mode.\r\n        shouldTrack = !dep.has(activeEffect);\r\n    }\r\n    if (shouldTrack) {\r\n        dep.add(activeEffect);\r\n        activeEffect.deps.push(dep);\r\n        if ((process.env.NODE_ENV !== 'production') && activeEffect.onTrack) {\r\n            activeEffect.onTrack(Object.assign({\r\n                effect: activeEffect\r\n            }, debuggerEventExtraInfo));\r\n        }\r\n    }\r\n}\r\nfunction trigger(target, type, key, newValue, oldValue, oldTarget) {\r\n    const depsMap = targetMap.get(target);\r\n    if (!depsMap) {\r\n        // never been tracked\r\n        return;\r\n    }\r\n    let deps = [];\r\n    if (type === \"clear\" /* CLEAR */) {\r\n        // collection being cleared\r\n        // trigger all effects for target\r\n        deps = [...depsMap.values()];\r\n    }\r\n    else if (key === 'length' && isArray(target)) {\r\n        depsMap.forEach((dep, key) => {\r\n            if (key === 'length' || key >= newValue) {\r\n                deps.push(dep);\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        // schedule runs for SET | ADD | DELETE\r\n        if (key !== void 0) {\r\n            deps.push(depsMap.get(key));\r\n        }\r\n        // also run for iteration key on ADD | DELETE | Map.SET\r\n        switch (type) {\r\n            case \"add\" /* ADD */:\r\n                if (!isArray(target)) {\r\n                    deps.push(depsMap.get(ITERATE_KEY));\r\n                    if (isMap(target)) {\r\n                        deps.push(depsMap.get(MAP_KEY_ITERATE_KEY));\r\n                    }\r\n                }\r\n                else if (isIntegerKey(key)) {\r\n                    // new index added to array -> length changes\r\n                    deps.push(depsMap.get('length'));\r\n                }\r\n                break;\r\n            case \"delete\" /* DELETE */:\r\n                if (!isArray(target)) {\r\n                    deps.push(depsMap.get(ITERATE_KEY));\r\n                    if (isMap(target)) {\r\n                        deps.push(depsMap.get(MAP_KEY_ITERATE_KEY));\r\n                    }\r\n                }\r\n                break;\r\n            case \"set\" /* SET */:\r\n                if (isMap(target)) {\r\n                    deps.push(depsMap.get(ITERATE_KEY));\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    const eventInfo = (process.env.NODE_ENV !== 'production')\r\n        ? { target, type, key, newValue, oldValue, oldTarget }\r\n        : undefined;\r\n    if (deps.length === 1) {\r\n        if (deps[0]) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                triggerEffects(deps[0], eventInfo);\r\n            }\r\n            else {\r\n                triggerEffects(deps[0]);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        const effects = [];\r\n        for (const dep of deps) {\r\n            if (dep) {\r\n                effects.push(...dep);\r\n            }\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            triggerEffects(createDep(effects), eventInfo);\r\n        }\r\n        else {\r\n            triggerEffects(createDep(effects));\r\n        }\r\n    }\r\n}\r\nfunction triggerEffects(dep, debuggerEventExtraInfo) {\r\n    // spread into array for stabilization\r\n    for (const effect of isArray(dep) ? dep : [...dep]) {\r\n        if (effect !== activeEffect || effect.allowRecurse) {\r\n            if ((process.env.NODE_ENV !== 'production') && effect.onTrigger) {\r\n                effect.onTrigger(extend({ effect }, debuggerEventExtraInfo));\r\n            }\r\n            if (effect.scheduler) {\r\n                effect.scheduler();\r\n            }\r\n            else {\r\n                effect.run();\r\n            }\r\n        }\r\n    }\r\n}\n\nconst isNonTrackableKeys = /*#__PURE__*/ makeMap(`__proto__,__v_isRef,__isVue`);\r\nconst builtInSymbols = new Set(Object.getOwnPropertyNames(Symbol)\r\n    .map(key => Symbol[key])\r\n    .filter(isSymbol));\r\nconst get = /*#__PURE__*/ createGetter();\r\nconst shallowGet = /*#__PURE__*/ createGetter(false, true);\r\nconst readonlyGet = /*#__PURE__*/ createGetter(true);\r\nconst shallowReadonlyGet = /*#__PURE__*/ createGetter(true, true);\r\nconst arrayInstrumentations = /*#__PURE__*/ createArrayInstrumentations();\r\nfunction createArrayInstrumentations() {\r\n    const instrumentations = {};\r\n    ['includes', 'indexOf', 'lastIndexOf'].forEach(key => {\r\n        instrumentations[key] = function (...args) {\r\n            const arr = toRaw(this);\r\n            for (let i = 0, l = this.length; i < l; i++) {\r\n                track(arr, \"get\" /* GET */, i + '');\r\n            }\r\n            // we run the method using the original args first (which may be reactive)\r\n            const res = arr[key](...args);\r\n            if (res === -1 || res === false) {\r\n                // if that didn't work, run it again using raw values.\r\n                return arr[key](...args.map(toRaw));\r\n            }\r\n            else {\r\n                return res;\r\n            }\r\n        };\r\n    });\r\n    ['push', 'pop', 'shift', 'unshift', 'splice'].forEach(key => {\r\n        instrumentations[key] = function (...args) {\r\n            pauseTracking();\r\n            const res = toRaw(this)[key].apply(this, args);\r\n            resetTracking();\r\n            return res;\r\n        };\r\n    });\r\n    return instrumentations;\r\n}\r\nfunction createGetter(isReadonly = false, shallow = false) {\r\n    return function get(target, key, receiver) {\r\n        if (key === \"__v_isReactive\" /* IS_REACTIVE */) {\r\n            return !isReadonly;\r\n        }\r\n        else if (key === \"__v_isReadonly\" /* IS_READONLY */) {\r\n            return isReadonly;\r\n        }\r\n        else if (key === \"__v_raw\" /* RAW */ &&\r\n            receiver ===\r\n                (isReadonly\r\n                    ? shallow\r\n                        ? shallowReadonlyMap\r\n                        : readonlyMap\r\n                    : shallow\r\n                        ? shallowReactiveMap\r\n                        : reactiveMap).get(target)) {\r\n            return target;\r\n        }\r\n        const targetIsArray = isArray(target);\r\n        if (!isReadonly && targetIsArray && hasOwn(arrayInstrumentations, key)) {\r\n            return Reflect.get(arrayInstrumentations, key, receiver);\r\n        }\r\n        const res = Reflect.get(target, key, receiver);\r\n        if (isSymbol(key) ? builtInSymbols.has(key) : isNonTrackableKeys(key)) {\r\n            return res;\r\n        }\r\n        if (!isReadonly) {\r\n            track(target, \"get\" /* GET */, key);\r\n        }\r\n        if (shallow) {\r\n            return res;\r\n        }\r\n        if (isRef(res)) {\r\n            // ref unwrapping - does not apply for Array + integer key.\r\n            const shouldUnwrap = !targetIsArray || !isIntegerKey(key);\r\n            return shouldUnwrap ? res.value : res;\r\n        }\r\n        if (isObject(res)) {\r\n            // Convert returned value into a proxy as well. we do the isObject check\r\n            // here to avoid invalid value warning. Also need to lazy access readonly\r\n            // and reactive here to avoid circular dependency.\r\n            return isReadonly ? readonly(res) : reactive(res);\r\n        }\r\n        return res;\r\n    };\r\n}\r\nconst set = /*#__PURE__*/ createSetter();\r\nconst shallowSet = /*#__PURE__*/ createSetter(true);\r\nfunction createSetter(shallow = false) {\r\n    return function set(target, key, value, receiver) {\r\n        let oldValue = target[key];\r\n        if (!shallow) {\r\n            value = toRaw(value);\r\n            oldValue = toRaw(oldValue);\r\n            if (!isArray(target) && isRef(oldValue) && !isRef(value)) {\r\n                oldValue.value = value;\r\n                return true;\r\n            }\r\n        }\r\n        const hadKey = isArray(target) && isIntegerKey(key)\r\n            ? Number(key) < target.length\r\n            : hasOwn(target, key);\r\n        const result = Reflect.set(target, key, value, receiver);\r\n        // don't trigger if target is something up in the prototype chain of original\r\n        if (target === toRaw(receiver)) {\r\n            if (!hadKey) {\r\n                trigger(target, \"add\" /* ADD */, key, value);\r\n            }\r\n            else if (hasChanged(value, oldValue)) {\r\n                trigger(target, \"set\" /* SET */, key, value, oldValue);\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n}\r\nfunction deleteProperty(target, key) {\r\n    const hadKey = hasOwn(target, key);\r\n    const oldValue = target[key];\r\n    const result = Reflect.deleteProperty(target, key);\r\n    if (result && hadKey) {\r\n        trigger(target, \"delete\" /* DELETE */, key, undefined, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction has(target, key) {\r\n    const result = Reflect.has(target, key);\r\n    if (!isSymbol(key) || !builtInSymbols.has(key)) {\r\n        track(target, \"has\" /* HAS */, key);\r\n    }\r\n    return result;\r\n}\r\nfunction ownKeys(target) {\r\n    track(target, \"iterate\" /* ITERATE */, isArray(target) ? 'length' : ITERATE_KEY);\r\n    return Reflect.ownKeys(target);\r\n}\r\nconst mutableHandlers = {\r\n    get,\r\n    set,\r\n    deleteProperty,\r\n    has,\r\n    ownKeys\r\n};\r\nconst readonlyHandlers = {\r\n    get: readonlyGet,\r\n    set(target, key) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`Set operation on key \"${String(key)}\" failed: target is readonly.`, target);\r\n        }\r\n        return true;\r\n    },\r\n    deleteProperty(target, key) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`Delete operation on key \"${String(key)}\" failed: target is readonly.`, target);\r\n        }\r\n        return true;\r\n    }\r\n};\r\nconst shallowReactiveHandlers = /*#__PURE__*/ extend({}, mutableHandlers, {\r\n    get: shallowGet,\r\n    set: shallowSet\r\n});\r\n// Props handlers are special in the sense that it should not unwrap top-level\r\n// refs (in order to allow refs to be explicitly passed down), but should\r\n// retain the reactivity of the normal readonly object.\r\nconst shallowReadonlyHandlers = /*#__PURE__*/ extend({}, readonlyHandlers, {\r\n    get: shallowReadonlyGet\r\n});\n\nconst toReactive = (value) => isObject(value) ? reactive(value) : value;\r\nconst toReadonly = (value) => isObject(value) ? readonly(value) : value;\r\nconst toShallow = (value) => value;\r\nconst getProto = (v) => Reflect.getPrototypeOf(v);\r\nfunction get$1(target, key, isReadonly = false, isShallow = false) {\r\n    // #1772: readonly(reactive(Map)) should return readonly + reactive version\r\n    // of the value\r\n    target = target[\"__v_raw\" /* RAW */];\r\n    const rawTarget = toRaw(target);\r\n    const rawKey = toRaw(key);\r\n    if (key !== rawKey) {\r\n        !isReadonly && track(rawTarget, \"get\" /* GET */, key);\r\n    }\r\n    !isReadonly && track(rawTarget, \"get\" /* GET */, rawKey);\r\n    const { has } = getProto(rawTarget);\r\n    const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\r\n    if (has.call(rawTarget, key)) {\r\n        return wrap(target.get(key));\r\n    }\r\n    else if (has.call(rawTarget, rawKey)) {\r\n        return wrap(target.get(rawKey));\r\n    }\r\n    else if (target !== rawTarget) {\r\n        // #3602 readonly(reactive(Map))\r\n        // ensure that the nested reactive `Map` can do tracking for itself\r\n        target.get(key);\r\n    }\r\n}\r\nfunction has$1(key, isReadonly = false) {\r\n    const target = this[\"__v_raw\" /* RAW */];\r\n    const rawTarget = toRaw(target);\r\n    const rawKey = toRaw(key);\r\n    if (key !== rawKey) {\r\n        !isReadonly && track(rawTarget, \"has\" /* HAS */, key);\r\n    }\r\n    !isReadonly && track(rawTarget, \"has\" /* HAS */, rawKey);\r\n    return key === rawKey\r\n        ? target.has(key)\r\n        : target.has(key) || target.has(rawKey);\r\n}\r\nfunction size(target, isReadonly = false) {\r\n    target = target[\"__v_raw\" /* RAW */];\r\n    !isReadonly && track(toRaw(target), \"iterate\" /* ITERATE */, ITERATE_KEY);\r\n    return Reflect.get(target, 'size', target);\r\n}\r\nfunction add(value) {\r\n    value = toRaw(value);\r\n    const target = toRaw(this);\r\n    const proto = getProto(target);\r\n    const hadKey = proto.has.call(target, value);\r\n    if (!hadKey) {\r\n        target.add(value);\r\n        trigger(target, \"add\" /* ADD */, value, value);\r\n    }\r\n    return this;\r\n}\r\nfunction set$1(key, value) {\r\n    value = toRaw(value);\r\n    const target = toRaw(this);\r\n    const { has, get } = getProto(target);\r\n    let hadKey = has.call(target, key);\r\n    if (!hadKey) {\r\n        key = toRaw(key);\r\n        hadKey = has.call(target, key);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        checkIdentityKeys(target, has, key);\r\n    }\r\n    const oldValue = get.call(target, key);\r\n    target.set(key, value);\r\n    if (!hadKey) {\r\n        trigger(target, \"add\" /* ADD */, key, value);\r\n    }\r\n    else if (hasChanged(value, oldValue)) {\r\n        trigger(target, \"set\" /* SET */, key, value, oldValue);\r\n    }\r\n    return this;\r\n}\r\nfunction deleteEntry(key) {\r\n    const target = toRaw(this);\r\n    const { has, get } = getProto(target);\r\n    let hadKey = has.call(target, key);\r\n    if (!hadKey) {\r\n        key = toRaw(key);\r\n        hadKey = has.call(target, key);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        checkIdentityKeys(target, has, key);\r\n    }\r\n    const oldValue = get ? get.call(target, key) : undefined;\r\n    // forward the operation before queueing reactions\r\n    const result = target.delete(key);\r\n    if (hadKey) {\r\n        trigger(target, \"delete\" /* DELETE */, key, undefined, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction clear() {\r\n    const target = toRaw(this);\r\n    const hadItems = target.size !== 0;\r\n    const oldTarget = (process.env.NODE_ENV !== 'production')\r\n        ? isMap(target)\r\n            ? new Map(target)\r\n            : new Set(target)\r\n        : undefined;\r\n    // forward the operation before queueing reactions\r\n    const result = target.clear();\r\n    if (hadItems) {\r\n        trigger(target, \"clear\" /* CLEAR */, undefined, undefined, oldTarget);\r\n    }\r\n    return result;\r\n}\r\nfunction createForEach(isReadonly, isShallow) {\r\n    return function forEach(callback, thisArg) {\r\n        const observed = this;\r\n        const target = observed[\"__v_raw\" /* RAW */];\r\n        const rawTarget = toRaw(target);\r\n        const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\r\n        !isReadonly && track(rawTarget, \"iterate\" /* ITERATE */, ITERATE_KEY);\r\n        return target.forEach((value, key) => {\r\n            // important: make sure the callback is\r\n            // 1. invoked with the reactive map as `this` and 3rd arg\r\n            // 2. the value received should be a corresponding reactive/readonly.\r\n            return callback.call(thisArg, wrap(value), wrap(key), observed);\r\n        });\r\n    };\r\n}\r\nfunction createIterableMethod(method, isReadonly, isShallow) {\r\n    return function (...args) {\r\n        const target = this[\"__v_raw\" /* RAW */];\r\n        const rawTarget = toRaw(target);\r\n        const targetIsMap = isMap(rawTarget);\r\n        const isPair = method === 'entries' || (method === Symbol.iterator && targetIsMap);\r\n        const isKeyOnly = method === 'keys' && targetIsMap;\r\n        const innerIterator = target[method](...args);\r\n        const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\r\n        !isReadonly &&\r\n            track(rawTarget, \"iterate\" /* ITERATE */, isKeyOnly ? MAP_KEY_ITERATE_KEY : ITERATE_KEY);\r\n        // return a wrapped iterator which returns observed versions of the\r\n        // values emitted from the real iterator\r\n        return {\r\n            // iterator protocol\r\n            next() {\r\n                const { value, done } = innerIterator.next();\r\n                return done\r\n                    ? { value, done }\r\n                    : {\r\n                        value: isPair ? [wrap(value[0]), wrap(value[1])] : wrap(value),\r\n                        done\r\n                    };\r\n            },\r\n            // iterable protocol\r\n            [Symbol.iterator]() {\r\n                return this;\r\n            }\r\n        };\r\n    };\r\n}\r\nfunction createReadonlyMethod(type) {\r\n    return function (...args) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            const key = args[0] ? `on key \"${args[0]}\" ` : ``;\r\n            console.warn(`${capitalize(type)} operation ${key}failed: target is readonly.`, toRaw(this));\r\n        }\r\n        return type === \"delete\" /* DELETE */ ? false : this;\r\n    };\r\n}\r\nfunction createInstrumentations() {\r\n    const mutableInstrumentations = {\r\n        get(key) {\r\n            return get$1(this, key);\r\n        },\r\n        get size() {\r\n            return size(this);\r\n        },\r\n        has: has$1,\r\n        add,\r\n        set: set$1,\r\n        delete: deleteEntry,\r\n        clear,\r\n        forEach: createForEach(false, false)\r\n    };\r\n    const shallowInstrumentations = {\r\n        get(key) {\r\n            return get$1(this, key, false, true);\r\n        },\r\n        get size() {\r\n            return size(this);\r\n        },\r\n        has: has$1,\r\n        add,\r\n        set: set$1,\r\n        delete: deleteEntry,\r\n        clear,\r\n        forEach: createForEach(false, true)\r\n    };\r\n    const readonlyInstrumentations = {\r\n        get(key) {\r\n            return get$1(this, key, true);\r\n        },\r\n        get size() {\r\n            return size(this, true);\r\n        },\r\n        has(key) {\r\n            return has$1.call(this, key, true);\r\n        },\r\n        add: createReadonlyMethod(\"add\" /* ADD */),\r\n        set: createReadonlyMethod(\"set\" /* SET */),\r\n        delete: createReadonlyMethod(\"delete\" /* DELETE */),\r\n        clear: createReadonlyMethod(\"clear\" /* CLEAR */),\r\n        forEach: createForEach(true, false)\r\n    };\r\n    const shallowReadonlyInstrumentations = {\r\n        get(key) {\r\n            return get$1(this, key, true, true);\r\n        },\r\n        get size() {\r\n            return size(this, true);\r\n        },\r\n        has(key) {\r\n            return has$1.call(this, key, true);\r\n        },\r\n        add: createReadonlyMethod(\"add\" /* ADD */),\r\n        set: createReadonlyMethod(\"set\" /* SET */),\r\n        delete: createReadonlyMethod(\"delete\" /* DELETE */),\r\n        clear: createReadonlyMethod(\"clear\" /* CLEAR */),\r\n        forEach: createForEach(true, true)\r\n    };\r\n    const iteratorMethods = ['keys', 'values', 'entries', Symbol.iterator];\r\n    iteratorMethods.forEach(method => {\r\n        mutableInstrumentations[method] = createIterableMethod(method, false, false);\r\n        readonlyInstrumentations[method] = createIterableMethod(method, true, false);\r\n        shallowInstrumentations[method] = createIterableMethod(method, false, true);\r\n        shallowReadonlyInstrumentations[method] = createIterableMethod(method, true, true);\r\n    });\r\n    return [\r\n        mutableInstrumentations,\r\n        readonlyInstrumentations,\r\n        shallowInstrumentations,\r\n        shallowReadonlyInstrumentations\r\n    ];\r\n}\r\nconst [mutableInstrumentations, readonlyInstrumentations, shallowInstrumentations, shallowReadonlyInstrumentations] = /* #__PURE__*/ createInstrumentations();\r\nfunction createInstrumentationGetter(isReadonly, shallow) {\r\n    const instrumentations = shallow\r\n        ? isReadonly\r\n            ? shallowReadonlyInstrumentations\r\n            : shallowInstrumentations\r\n        : isReadonly\r\n            ? readonlyInstrumentations\r\n            : mutableInstrumentations;\r\n    return (target, key, receiver) => {\r\n        if (key === \"__v_isReactive\" /* IS_REACTIVE */) {\r\n            return !isReadonly;\r\n        }\r\n        else if (key === \"__v_isReadonly\" /* IS_READONLY */) {\r\n            return isReadonly;\r\n        }\r\n        else if (key === \"__v_raw\" /* RAW */) {\r\n            return target;\r\n        }\r\n        return Reflect.get(hasOwn(instrumentations, key) && key in target\r\n            ? instrumentations\r\n            : target, key, receiver);\r\n    };\r\n}\r\nconst mutableCollectionHandlers = {\r\n    get: /*#__PURE__*/ createInstrumentationGetter(false, false)\r\n};\r\nconst shallowCollectionHandlers = {\r\n    get: /*#__PURE__*/ createInstrumentationGetter(false, true)\r\n};\r\nconst readonlyCollectionHandlers = {\r\n    get: /*#__PURE__*/ createInstrumentationGetter(true, false)\r\n};\r\nconst shallowReadonlyCollectionHandlers = {\r\n    get: /*#__PURE__*/ createInstrumentationGetter(true, true)\r\n};\r\nfunction checkIdentityKeys(target, has, key) {\r\n    const rawKey = toRaw(key);\r\n    if (rawKey !== key && has.call(target, rawKey)) {\r\n        const type = toRawType(target);\r\n        console.warn(`Reactive ${type} contains both the raw and reactive ` +\r\n            `versions of the same object${type === `Map` ? ` as keys` : ``}, ` +\r\n            `which can lead to inconsistencies. ` +\r\n            `Avoid differentiating between the raw and reactive versions ` +\r\n            `of an object and only use the reactive version if possible.`);\r\n    }\r\n}\n\nconst reactiveMap = new WeakMap();\r\nconst shallowReactiveMap = new WeakMap();\r\nconst readonlyMap = new WeakMap();\r\nconst shallowReadonlyMap = new WeakMap();\r\nfunction targetTypeMap(rawType) {\r\n    switch (rawType) {\r\n        case 'Object':\r\n        case 'Array':\r\n            return 1 /* COMMON */;\r\n        case 'Map':\r\n        case 'Set':\r\n        case 'WeakMap':\r\n        case 'WeakSet':\r\n            return 2 /* COLLECTION */;\r\n        default:\r\n            return 0 /* INVALID */;\r\n    }\r\n}\r\nfunction getTargetType(value) {\r\n    return value[\"__v_skip\" /* SKIP */] || !Object.isExtensible(value)\r\n        ? 0 /* INVALID */\r\n        : targetTypeMap(toRawType(value));\r\n}\r\nfunction reactive(target) {\r\n    // if trying to observe a readonly proxy, return the readonly version.\r\n    if (target && target[\"__v_isReadonly\" /* IS_READONLY */]) {\r\n        return target;\r\n    }\r\n    return createReactiveObject(target, false, mutableHandlers, mutableCollectionHandlers, reactiveMap);\r\n}\r\n/**\r\n * Return a shallowly-reactive copy of the original object, where only the root\r\n * level properties are reactive. It also does not auto-unwrap refs (even at the\r\n * root level).\r\n */\r\nfunction shallowReactive(target) {\r\n    return createReactiveObject(target, false, shallowReactiveHandlers, shallowCollectionHandlers, shallowReactiveMap);\r\n}\r\n/**\r\n * Creates a readonly copy of the original object. Note the returned copy is not\r\n * made reactive, but `readonly` can be called on an already reactive object.\r\n */\r\nfunction readonly(target) {\r\n    return createReactiveObject(target, true, readonlyHandlers, readonlyCollectionHandlers, readonlyMap);\r\n}\r\n/**\r\n * Returns a reactive-copy of the original object, where only the root level\r\n * properties are readonly, and does NOT unwrap refs nor recursively convert\r\n * returned properties.\r\n * This is used for creating the props proxy object for stateful components.\r\n */\r\nfunction shallowReadonly(target) {\r\n    return createReactiveObject(target, true, shallowReadonlyHandlers, shallowReadonlyCollectionHandlers, shallowReadonlyMap);\r\n}\r\nfunction createReactiveObject(target, isReadonly, baseHandlers, collectionHandlers, proxyMap) {\r\n    if (!isObject(target)) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`value cannot be made reactive: ${String(target)}`);\r\n        }\r\n        return target;\r\n    }\r\n    // target is already a Proxy, return it.\r\n    // exception: calling readonly() on a reactive object\r\n    if (target[\"__v_raw\" /* RAW */] &&\r\n        !(isReadonly && target[\"__v_isReactive\" /* IS_REACTIVE */])) {\r\n        return target;\r\n    }\r\n    // target already has corresponding Proxy\r\n    const existingProxy = proxyMap.get(target);\r\n    if (existingProxy) {\r\n        return existingProxy;\r\n    }\r\n    // only a whitelist of value types can be observed.\r\n    const targetType = getTargetType(target);\r\n    if (targetType === 0 /* INVALID */) {\r\n        return target;\r\n    }\r\n    const proxy = new Proxy(target, targetType === 2 /* COLLECTION */ ? collectionHandlers : baseHandlers);\r\n    proxyMap.set(target, proxy);\r\n    return proxy;\r\n}\r\nfunction isReactive(value) {\r\n    if (isReadonly(value)) {\r\n        return isReactive(value[\"__v_raw\" /* RAW */]);\r\n    }\r\n    return !!(value && value[\"__v_isReactive\" /* IS_REACTIVE */]);\r\n}\r\nfunction isReadonly(value) {\r\n    return !!(value && value[\"__v_isReadonly\" /* IS_READONLY */]);\r\n}\r\nfunction isProxy(value) {\r\n    return isReactive(value) || isReadonly(value);\r\n}\r\nfunction toRaw(observed) {\r\n    const raw = observed && observed[\"__v_raw\" /* RAW */];\r\n    return raw ? toRaw(raw) : observed;\r\n}\r\nfunction markRaw(value) {\r\n    def(value, \"__v_skip\" /* SKIP */, true);\r\n    return value;\r\n}\n\nfunction trackRefValue(ref) {\r\n    if (isTracking()) {\r\n        ref = toRaw(ref);\r\n        if (!ref.dep) {\r\n            ref.dep = createDep();\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            trackEffects(ref.dep, {\r\n                target: ref,\r\n                type: \"get\" /* GET */,\r\n                key: 'value'\r\n            });\r\n        }\r\n        else {\r\n            trackEffects(ref.dep);\r\n        }\r\n    }\r\n}\r\nfunction triggerRefValue(ref, newVal) {\r\n    ref = toRaw(ref);\r\n    if (ref.dep) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            triggerEffects(ref.dep, {\r\n                target: ref,\r\n                type: \"set\" /* SET */,\r\n                key: 'value',\r\n                newValue: newVal\r\n            });\r\n        }\r\n        else {\r\n            triggerEffects(ref.dep);\r\n        }\r\n    }\r\n}\r\nconst convert = (val) => isObject(val) ? reactive(val) : val;\r\nfunction isRef(r) {\r\n    return Boolean(r && r.__v_isRef === true);\r\n}\r\nfunction ref(value) {\r\n    return createRef(value, false);\r\n}\r\nfunction shallowRef(value) {\r\n    return createRef(value, true);\r\n}\r\nclass RefImpl {\r\n    constructor(value, _shallow) {\r\n        this._shallow = _shallow;\r\n        this.dep = undefined;\r\n        this.__v_isRef = true;\r\n        this._rawValue = _shallow ? value : toRaw(value);\r\n        this._value = _shallow ? value : convert(value);\r\n    }\r\n    get value() {\r\n        trackRefValue(this);\r\n        return this._value;\r\n    }\r\n    set value(newVal) {\r\n        newVal = this._shallow ? newVal : toRaw(newVal);\r\n        if (hasChanged(newVal, this._rawValue)) {\r\n            this._rawValue = newVal;\r\n            this._value = this._shallow ? newVal : convert(newVal);\r\n            triggerRefValue(this, newVal);\r\n        }\r\n    }\r\n}\r\nfunction createRef(rawValue, shallow) {\r\n    if (isRef(rawValue)) {\r\n        return rawValue;\r\n    }\r\n    return new RefImpl(rawValue, shallow);\r\n}\r\nfunction triggerRef(ref) {\r\n    triggerRefValue(ref, (process.env.NODE_ENV !== 'production') ? ref.value : void 0);\r\n}\r\nfunction unref(ref) {\r\n    return isRef(ref) ? ref.value : ref;\r\n}\r\nconst shallowUnwrapHandlers = {\r\n    get: (target, key, receiver) => unref(Reflect.get(target, key, receiver)),\r\n    set: (target, key, value, receiver) => {\r\n        const oldValue = target[key];\r\n        if (isRef(oldValue) && !isRef(value)) {\r\n            oldValue.value = value;\r\n            return true;\r\n        }\r\n        else {\r\n            return Reflect.set(target, key, value, receiver);\r\n        }\r\n    }\r\n};\r\nfunction proxyRefs(objectWithRefs) {\r\n    return isReactive(objectWithRefs)\r\n        ? objectWithRefs\r\n        : new Proxy(objectWithRefs, shallowUnwrapHandlers);\r\n}\r\nclass CustomRefImpl {\r\n    constructor(factory) {\r\n        this.dep = undefined;\r\n        this.__v_isRef = true;\r\n        const { get, set } = factory(() => trackRefValue(this), () => triggerRefValue(this));\r\n        this._get = get;\r\n        this._set = set;\r\n    }\r\n    get value() {\r\n        return this._get();\r\n    }\r\n    set value(newVal) {\r\n        this._set(newVal);\r\n    }\r\n}\r\nfunction customRef(factory) {\r\n    return new CustomRefImpl(factory);\r\n}\r\nfunction toRefs(object) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isProxy(object)) {\r\n        console.warn(`toRefs() expects a reactive object but received a plain one.`);\r\n    }\r\n    const ret = isArray(object) ? new Array(object.length) : {};\r\n    for (const key in object) {\r\n        ret[key] = toRef(object, key);\r\n    }\r\n    return ret;\r\n}\r\nclass ObjectRefImpl {\r\n    constructor(_object, _key) {\r\n        this._object = _object;\r\n        this._key = _key;\r\n        this.__v_isRef = true;\r\n    }\r\n    get value() {\r\n        return this._object[this._key];\r\n    }\r\n    set value(newVal) {\r\n        this._object[this._key] = newVal;\r\n    }\r\n}\r\nfunction toRef(object, key) {\r\n    const val = object[key];\r\n    return isRef(val) ? val : new ObjectRefImpl(object, key);\r\n}\n\nclass ComputedRefImpl {\r\n    constructor(getter, _setter, isReadonly) {\r\n        this._setter = _setter;\r\n        this.dep = undefined;\r\n        this._dirty = true;\r\n        this.__v_isRef = true;\r\n        this.effect = new ReactiveEffect(getter, () => {\r\n            if (!this._dirty) {\r\n                this._dirty = true;\r\n                triggerRefValue(this);\r\n            }\r\n        });\r\n        this[\"__v_isReadonly\" /* IS_READONLY */] = isReadonly;\r\n    }\r\n    get value() {\r\n        // the computed ref may get wrapped by other proxies e.g. readonly() #3376\r\n        const self = toRaw(this);\r\n        trackRefValue(self);\r\n        if (self._dirty) {\r\n            self._dirty = false;\r\n            self._value = self.effect.run();\r\n        }\r\n        return self._value;\r\n    }\r\n    set value(newValue) {\r\n        this._setter(newValue);\r\n    }\r\n}\r\nfunction computed(getterOrOptions, debugOptions) {\r\n    let getter;\r\n    let setter;\r\n    const onlyGetter = isFunction(getterOrOptions);\r\n    if (onlyGetter) {\r\n        getter = getterOrOptions;\r\n        setter = (process.env.NODE_ENV !== 'production')\r\n            ? () => {\r\n                console.warn('Write operation failed: computed value is readonly');\r\n            }\r\n            : NOOP;\r\n    }\r\n    else {\r\n        getter = getterOrOptions.get;\r\n        setter = getterOrOptions.set;\r\n    }\r\n    const cRef = new ComputedRefImpl(getter, setter, onlyGetter || !setter);\r\n    if ((process.env.NODE_ENV !== 'production') && debugOptions) {\r\n        cRef.effect.onTrack = debugOptions.onTrack;\r\n        cRef.effect.onTrigger = debugOptions.onTrigger;\r\n    }\r\n    return cRef;\r\n}\n\nvar _a;\r\nconst tick = Promise.resolve();\r\nconst queue = [];\r\nlet queued = false;\r\nconst scheduler = (fn) => {\r\n    queue.push(fn);\r\n    if (!queued) {\r\n        queued = true;\r\n        tick.then(flush);\r\n    }\r\n};\r\nconst flush = () => {\r\n    for (let i = 0; i < queue.length; i++) {\r\n        queue[i]();\r\n    }\r\n    queue.length = 0;\r\n    queued = false;\r\n};\r\nclass DeferredComputedRefImpl {\r\n    constructor(getter) {\r\n        this.dep = undefined;\r\n        this._dirty = true;\r\n        this.__v_isRef = true;\r\n        this[_a] = true;\r\n        let compareTarget;\r\n        let hasCompareTarget = false;\r\n        let scheduled = false;\r\n        this.effect = new ReactiveEffect(getter, (computedTrigger) => {\r\n            if (this.dep) {\r\n                if (computedTrigger) {\r\n                    compareTarget = this._value;\r\n                    hasCompareTarget = true;\r\n                }\r\n                else if (!scheduled) {\r\n                    const valueToCompare = hasCompareTarget ? compareTarget : this._value;\r\n                    scheduled = true;\r\n                    hasCompareTarget = false;\r\n                    scheduler(() => {\r\n                        if (this.effect.active && this._get() !== valueToCompare) {\r\n                            triggerRefValue(this);\r\n                        }\r\n                        scheduled = false;\r\n                    });\r\n                }\r\n                // chained upstream computeds are notified synchronously to ensure\r\n                // value invalidation in case of sync access; normal effects are\r\n                // deferred to be triggered in scheduler.\r\n                for (const e of this.dep) {\r\n                    if (e.computed) {\r\n                        e.scheduler(true /* computedTrigger */);\r\n                    }\r\n                }\r\n            }\r\n            this._dirty = true;\r\n        });\r\n        this.effect.computed = true;\r\n    }\r\n    _get() {\r\n        if (this._dirty) {\r\n            this._dirty = false;\r\n            return (this._value = this.effect.run());\r\n        }\r\n        return this._value;\r\n    }\r\n    get value() {\r\n        trackRefValue(this);\r\n        // the computed ref may get wrapped by other proxies e.g. readonly() #3376\r\n        return toRaw(this)._get();\r\n    }\r\n}\r\n_a = \"__v_isReadonly\" /* IS_READONLY */;\r\nfunction deferredComputed(getter) {\r\n    return new DeferredComputedRefImpl(getter);\r\n}\n\nexport { EffectScope, ITERATE_KEY, ReactiveEffect, computed, customRef, deferredComputed, effect, effectScope, enableTracking, getCurrentScope, isProxy, isReactive, isReadonly, isRef, markRaw, onScopeDispose, pauseTracking, proxyRefs, reactive, readonly, ref, resetTracking, shallowReactive, shallowReadonly, shallowRef, stop, toRaw, toRef, toRefs, track, trigger, triggerRef, unref };\n","import { toRaw, ref, pauseTracking, resetTracking, reactive, computed, isRef, shallowReactive, trigger, ReactiveEffect, isProxy, shallowReadonly, track, EffectScope, markRaw, proxyRefs, isReactive, isReadonly } from '@vue/reactivity';\nexport { EffectScope, ReactiveEffect, computed, customRef, effect, effectScope, getCurrentScope, isProxy, isReactive, isReadonly, isRef, markRaw, onScopeDispose, proxyRefs, reactive, readonly, ref, shallowReactive, shallowReadonly, shallowRef, stop, toRaw, toRef, toRefs, triggerRef, unref } from '@vue/reactivity';\nimport { extend, EMPTY_OBJ, toHandlerKey, isFunction as isFunction$1, toNumber, hyphenate, camelize, isArray, isOn, hasOwn, isModelListener, isObject as isObject$1, remove, isString, invokeArrayFns, isPromise as isPromise$1, NOOP, def, isReservedProp, EMPTY_ARR, capitalize, toRawType, makeMap, NO, getGlobalThis, normalizeClass, normalizeStyle, isGloballyWhitelisted, hasChanged, isSet, isMap, isPlainObject } from '@vue/shared';\nexport { camelize, capitalize, normalizeClass, normalizeProps, normalizeStyle, toDisplayString, toHandlerKey } from '@vue/shared';\n\n/* eslint-disable no-restricted-globals */\r\nlet isHmrUpdating = false;\r\nconst hmrDirtyComponents = new Set();\r\n// Expose the HMR runtime on the global object\r\n// This makes it entirely tree-shakable without polluting the exports and makes\r\n// it easier to be used in toolings like vue-loader\r\n// Note: for a component to be eligible for HMR it also needs the __hmrId option\r\n// to be set so that its instances can be registered / removed.\r\nif ((process.env.NODE_ENV !== 'production')) {\r\n    const globalObject = typeof global !== 'undefined'\r\n        ? global\r\n        : typeof self !== 'undefined'\r\n            ? self\r\n            : typeof window !== 'undefined'\r\n                ? window\r\n                : {};\r\n    globalObject.__VUE_HMR_RUNTIME__ = {\r\n        createRecord: tryWrap(createRecord),\r\n        rerender: tryWrap(rerender),\r\n        reload: tryWrap(reload)\r\n    };\r\n}\r\nconst map = new Map();\r\nfunction registerHMR(instance) {\r\n    const id = instance.type.__hmrId;\r\n    let record = map.get(id);\r\n    if (!record) {\r\n        createRecord(id);\r\n        record = map.get(id);\r\n    }\r\n    record.add(instance);\r\n}\r\nfunction unregisterHMR(instance) {\r\n    map.get(instance.type.__hmrId).delete(instance);\r\n}\r\nfunction createRecord(id) {\r\n    if (map.has(id)) {\r\n        return false;\r\n    }\r\n    map.set(id, new Set());\r\n    return true;\r\n}\r\nfunction normalizeClassComponent(component) {\r\n    return isClassComponent(component) ? component.__vccOpts : component;\r\n}\r\nfunction rerender(id, newRender) {\r\n    const record = map.get(id);\r\n    if (!record) {\r\n        return;\r\n    }\r\n    [...record].forEach(instance => {\r\n        if (newRender) {\r\n            instance.render = newRender;\r\n            normalizeClassComponent(instance.type).render = newRender;\r\n        }\r\n        instance.renderCache = [];\r\n        // this flag forces child components with slot content to update\r\n        isHmrUpdating = true;\r\n        instance.update();\r\n        isHmrUpdating = false;\r\n    });\r\n}\r\nfunction reload(id, newComp) {\r\n    const record = map.get(id);\r\n    if (!record)\r\n        return;\r\n    newComp = normalizeClassComponent(newComp);\r\n    // create a snapshot which avoids the set being mutated during updates\r\n    const instances = [...record];\r\n    for (const instance of instances) {\r\n        const oldComp = normalizeClassComponent(instance.type);\r\n        if (!hmrDirtyComponents.has(oldComp)) {\r\n            // 1. Update existing comp definition to match new one\r\n            extend(oldComp, newComp);\r\n            for (const key in oldComp) {\r\n                if (key !== '__file' && !(key in newComp)) {\r\n                    delete oldComp[key];\r\n                }\r\n            }\r\n            // 2. mark definition dirty. This forces the renderer to replace the\r\n            // component on patch.\r\n            hmrDirtyComponents.add(oldComp);\r\n        }\r\n        // 3. invalidate options resolution cache\r\n        instance.appContext.optionsCache.delete(instance.type);\r\n        // 4. actually update\r\n        if (instance.ceReload) {\r\n            // custom element\r\n            hmrDirtyComponents.add(oldComp);\r\n            instance.ceReload(newComp.styles);\r\n            hmrDirtyComponents.delete(oldComp);\r\n        }\r\n        else if (instance.parent) {\r\n            // 4. Force the parent instance to re-render. This will cause all updated\r\n            // components to be unmounted and re-mounted. Queue the update so that we\r\n            // don't end up forcing the same parent to re-render multiple times.\r\n            queueJob(instance.parent.update);\r\n            // instance is the inner component of an async custom element\r\n            // invoke to reset styles\r\n            if (instance.parent.type.__asyncLoader &&\r\n                instance.parent.ceReload) {\r\n                instance.parent.ceReload(newComp.styles);\r\n            }\r\n        }\r\n        else if (instance.appContext.reload) {\r\n            // root instance mounted via createApp() has a reload method\r\n            instance.appContext.reload();\r\n        }\r\n        else if (typeof window !== 'undefined') {\r\n            // root instance inside tree created via raw render(). Force reload.\r\n            window.location.reload();\r\n        }\r\n        else {\r\n            console.warn('[HMR] Root or manually mounted instance modified. Full reload required.');\r\n        }\r\n    }\r\n    // 5. make sure to cleanup dirty hmr components after update\r\n    queuePostFlushCb(() => {\r\n        for (const instance of instances) {\r\n            hmrDirtyComponents.delete(normalizeClassComponent(instance.type));\r\n        }\r\n    });\r\n}\r\nfunction tryWrap(fn) {\r\n    return (id, arg) => {\r\n        try {\r\n            return fn(id, arg);\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n            console.warn(`[HMR] Something went wrong during Vue component hot-reload. ` +\r\n                `Full reload required.`);\r\n        }\r\n    };\r\n}\n\nlet devtools;\r\nfunction setDevtoolsHook(hook) {\r\n    devtools = hook;\r\n}\r\nfunction devtoolsInitApp(app, version) {\r\n    // TODO queue if devtools is undefined\r\n    if (!devtools)\r\n        return;\r\n    devtools.emit(\"app:init\" /* APP_INIT */, app, version, {\r\n        Fragment,\r\n        Text,\r\n        Comment,\r\n        Static\r\n    });\r\n}\r\nfunction devtoolsUnmountApp(app) {\r\n    if (!devtools)\r\n        return;\r\n    devtools.emit(\"app:unmount\" /* APP_UNMOUNT */, app);\r\n}\r\nconst devtoolsComponentAdded = /*#__PURE__*/ createDevtoolsComponentHook(\"component:added\" /* COMPONENT_ADDED */);\r\nconst devtoolsComponentUpdated = \r\n/*#__PURE__*/ createDevtoolsComponentHook(\"component:updated\" /* COMPONENT_UPDATED */);\r\nconst devtoolsComponentRemoved = \r\n/*#__PURE__*/ createDevtoolsComponentHook(\"component:removed\" /* COMPONENT_REMOVED */);\r\nfunction createDevtoolsComponentHook(hook) {\r\n    return (component) => {\r\n        if (!devtools)\r\n            return;\r\n        devtools.emit(hook, component.appContext.app, component.uid, component.parent ? component.parent.uid : undefined, component);\r\n    };\r\n}\r\nconst devtoolsPerfStart = /*#__PURE__*/ createDevtoolsPerformanceHook(\"perf:start\" /* PERFORMANCE_START */);\r\nconst devtoolsPerfEnd = /*#__PURE__*/ createDevtoolsPerformanceHook(\"perf:end\" /* PERFORMANCE_END */);\r\nfunction createDevtoolsPerformanceHook(hook) {\r\n    return (component, type, time) => {\r\n        if (!devtools)\r\n            return;\r\n        devtools.emit(hook, component.appContext.app, component.uid, component, type, time);\r\n    };\r\n}\r\nfunction devtoolsComponentEmit(component, event, params) {\r\n    if (!devtools)\r\n        return;\r\n    devtools.emit(\"component:emit\" /* COMPONENT_EMIT */, component.appContext.app, component, event, params);\r\n}\n\nfunction emit(instance, event, ...rawArgs) {\r\n    const props = instance.vnode.props || EMPTY_OBJ;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const { emitsOptions, propsOptions: [propsOptions] } = instance;\r\n        if (emitsOptions) {\r\n            if (!(event in emitsOptions) &&\r\n                !(false )) {\r\n                if (!propsOptions || !(toHandlerKey(event) in propsOptions)) {\r\n                    warn(`Component emitted event \"${event}\" but it is neither declared in ` +\r\n                        `the emits option nor as an \"${toHandlerKey(event)}\" prop.`);\r\n                }\r\n            }\r\n            else {\r\n                const validator = emitsOptions[event];\r\n                if (isFunction$1(validator)) {\r\n                    const isValid = validator(...rawArgs);\r\n                    if (!isValid) {\r\n                        warn(`Invalid event arguments: event validation failed for event \"${event}\".`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    let args = rawArgs;\r\n    const isModelListener = event.startsWith('update:');\r\n    // for v-model update:xxx events, apply modifiers on args\r\n    const modelArg = isModelListener && event.slice(7);\r\n    if (modelArg && modelArg in props) {\r\n        const modifiersKey = `${modelArg === 'modelValue' ? 'model' : modelArg}Modifiers`;\r\n        const { number, trim } = props[modifiersKey] || EMPTY_OBJ;\r\n        if (trim) {\r\n            args = rawArgs.map(a => a.trim());\r\n        }\r\n        else if (number) {\r\n            args = rawArgs.map(toNumber);\r\n        }\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n        devtoolsComponentEmit(instance, event, args);\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const lowerCaseEvent = event.toLowerCase();\r\n        if (lowerCaseEvent !== event && props[toHandlerKey(lowerCaseEvent)]) {\r\n            warn(`Event \"${lowerCaseEvent}\" is emitted in component ` +\r\n                `${formatComponentName(instance, instance.type)} but the handler is registered for \"${event}\". ` +\r\n                `Note that HTML attributes are case-insensitive and you cannot use ` +\r\n                `v-on to listen to camelCase events when using in-DOM templates. ` +\r\n                `You should probably use \"${hyphenate(event)}\" instead of \"${event}\".`);\r\n        }\r\n    }\r\n    let handlerName;\r\n    let handler = props[(handlerName = toHandlerKey(event))] ||\r\n        // also try camelCase event handler (#2249)\r\n        props[(handlerName = toHandlerKey(camelize(event)))];\r\n    // for v-model update:xxx events, also trigger kebab-case equivalent\r\n    // for props passed via kebab-case\r\n    if (!handler && isModelListener) {\r\n        handler = props[(handlerName = toHandlerKey(hyphenate(event)))];\r\n    }\r\n    if (handler) {\r\n        callWithAsyncErrorHandling(handler, instance, 6 /* COMPONENT_EVENT_HANDLER */, args);\r\n    }\r\n    const onceHandler = props[handlerName + `Once`];\r\n    if (onceHandler) {\r\n        if (!instance.emitted) {\r\n            instance.emitted = {};\r\n        }\r\n        else if (instance.emitted[handlerName]) {\r\n            return;\r\n        }\r\n        instance.emitted[handlerName] = true;\r\n        callWithAsyncErrorHandling(onceHandler, instance, 6 /* COMPONENT_EVENT_HANDLER */, args);\r\n    }\r\n}\r\nfunction normalizeEmitsOptions(comp, appContext, asMixin = false) {\r\n    const cache = appContext.emitsCache;\r\n    const cached = cache.get(comp);\r\n    if (cached !== undefined) {\r\n        return cached;\r\n    }\r\n    const raw = comp.emits;\r\n    let normalized = {};\r\n    // apply mixin/extends props\r\n    let hasExtends = false;\r\n    if (__VUE_OPTIONS_API__ && !isFunction$1(comp)) {\r\n        const extendEmits = (raw) => {\r\n            const normalizedFromExtend = normalizeEmitsOptions(raw, appContext, true);\r\n            if (normalizedFromExtend) {\r\n                hasExtends = true;\r\n                extend(normalized, normalizedFromExtend);\r\n            }\r\n        };\r\n        if (!asMixin && appContext.mixins.length) {\r\n            appContext.mixins.forEach(extendEmits);\r\n        }\r\n        if (comp.extends) {\r\n            extendEmits(comp.extends);\r\n        }\r\n        if (comp.mixins) {\r\n            comp.mixins.forEach(extendEmits);\r\n        }\r\n    }\r\n    if (!raw && !hasExtends) {\r\n        cache.set(comp, null);\r\n        return null;\r\n    }\r\n    if (isArray(raw)) {\r\n        raw.forEach(key => (normalized[key] = null));\r\n    }\r\n    else {\r\n        extend(normalized, raw);\r\n    }\r\n    cache.set(comp, normalized);\r\n    return normalized;\r\n}\r\n// Check if an incoming prop key is a declared emit event listener.\r\n// e.g. With `emits: { click: null }`, props named `onClick` and `onclick` are\r\n// both considered matched listeners.\r\nfunction isEmitListener(options, key) {\r\n    if (!options || !isOn(key)) {\r\n        return false;\r\n    }\r\n    key = key.slice(2).replace(/Once$/, '');\r\n    return (hasOwn(options, key[0].toLowerCase() + key.slice(1)) ||\r\n        hasOwn(options, hyphenate(key)) ||\r\n        hasOwn(options, key));\r\n}\n\n/**\r\n * mark the current rendering instance for asset resolution (e.g.\r\n * resolveComponent, resolveDirective) during render\r\n */\r\nlet currentRenderingInstance = null;\r\nlet currentScopeId = null;\r\n/**\r\n * Note: rendering calls maybe nested. The function returns the parent rendering\r\n * instance if present, which should be restored after the render is done:\r\n *\r\n * ```js\r\n * const prev = setCurrentRenderingInstance(i)\r\n * // ...render\r\n * setCurrentRenderingInstance(prev)\r\n * ```\r\n */\r\nfunction setCurrentRenderingInstance(instance) {\r\n    const prev = currentRenderingInstance;\r\n    currentRenderingInstance = instance;\r\n    currentScopeId = (instance && instance.type.__scopeId) || null;\r\n    return prev;\r\n}\r\n/**\r\n * Set scope id when creating hoisted vnodes.\r\n * @private compiler helper\r\n */\r\nfunction pushScopeId(id) {\r\n    currentScopeId = id;\r\n}\r\n/**\r\n * Technically we no longer need this after 3.0.8 but we need to keep the same\r\n * API for backwards compat w/ code generated by compilers.\r\n * @private\r\n */\r\nfunction popScopeId() {\r\n    currentScopeId = null;\r\n}\r\n/**\r\n * Only for backwards compat\r\n * @private\r\n */\r\nconst withScopeId = (_id) => withCtx;\r\n/**\r\n * Wrap a slot function to memoize current rendering instance\r\n * @private compiler helper\r\n */\r\nfunction withCtx(fn, ctx = currentRenderingInstance, isNonScopedSlot // false only\r\n) {\r\n    if (!ctx)\r\n        return fn;\r\n    // already normalized\r\n    if (fn._n) {\r\n        return fn;\r\n    }\r\n    const renderFnWithContext = (...args) => {\r\n        // If a user calls a compiled slot inside a template expression (#1745), it\r\n        // can mess up block tracking, so by default we disable block tracking and\r\n        // force bail out when invoking a compiled slot (indicated by the ._d flag).\r\n        // This isn't necessary if rendering a compiled `<slot>`, so we flip the\r\n        // ._d flag off when invoking the wrapped fn inside `renderSlot`.\r\n        if (renderFnWithContext._d) {\r\n            setBlockTracking(-1);\r\n        }\r\n        const prevInstance = setCurrentRenderingInstance(ctx);\r\n        const res = fn(...args);\r\n        setCurrentRenderingInstance(prevInstance);\r\n        if (renderFnWithContext._d) {\r\n            setBlockTracking(1);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            devtoolsComponentUpdated(ctx);\r\n        }\r\n        return res;\r\n    };\r\n    // mark normalized to avoid duplicated wrapping\r\n    renderFnWithContext._n = true;\r\n    // mark this as compiled by default\r\n    // this is used in vnode.ts -> normalizeChildren() to set the slot\r\n    // rendering flag.\r\n    renderFnWithContext._c = true;\r\n    // disable block tracking by default\r\n    renderFnWithContext._d = true;\r\n    return renderFnWithContext;\r\n}\n\n/**\r\n * dev only flag to track whether $attrs was used during render.\r\n * If $attrs was used during render then the warning for failed attrs\r\n * fallthrough can be suppressed.\r\n */\r\nlet accessedAttrs = false;\r\nfunction markAttrsAccessed() {\r\n    accessedAttrs = true;\r\n}\r\nfunction renderComponentRoot(instance) {\r\n    const { type: Component, vnode, proxy, withProxy, props, propsOptions: [propsOptions], slots, attrs, emit, render, renderCache, data, setupState, ctx, inheritAttrs } = instance;\r\n    let result;\r\n    let fallthroughAttrs;\r\n    const prev = setCurrentRenderingInstance(instance);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        accessedAttrs = false;\r\n    }\r\n    try {\r\n        if (vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */) {\r\n            // withProxy is a proxy with a different `has` trap only for\r\n            // runtime-compiled render functions using `with` block.\r\n            const proxyToUse = withProxy || proxy;\r\n            result = normalizeVNode(render.call(proxyToUse, proxyToUse, renderCache, props, setupState, data, ctx));\r\n            fallthroughAttrs = attrs;\r\n        }\r\n        else {\r\n            // functional\r\n            const render = Component;\r\n            // in dev, mark attrs accessed if optional props (attrs === props)\r\n            if ((process.env.NODE_ENV !== 'production') && attrs === props) {\r\n                markAttrsAccessed();\r\n            }\r\n            result = normalizeVNode(render.length > 1\r\n                ? render(props, (process.env.NODE_ENV !== 'production')\r\n                    ? {\r\n                        get attrs() {\r\n                            markAttrsAccessed();\r\n                            return attrs;\r\n                        },\r\n                        slots,\r\n                        emit\r\n                    }\r\n                    : { attrs, slots, emit })\r\n                : render(props, null /* we know it doesn't need it */));\r\n            fallthroughAttrs = Component.props\r\n                ? attrs\r\n                : getFunctionalFallthrough(attrs);\r\n        }\r\n    }\r\n    catch (err) {\r\n        blockStack.length = 0;\r\n        handleError(err, instance, 1 /* RENDER_FUNCTION */);\r\n        result = createVNode(Comment);\r\n    }\r\n    // attr merging\r\n    // in dev mode, comments are preserved, and it's possible for a template\r\n    // to have comments along side the root element which makes it a fragment\r\n    let root = result;\r\n    let setRoot = undefined;\r\n    if ((process.env.NODE_ENV !== 'production') &&\r\n        result.patchFlag > 0 &&\r\n        result.patchFlag & 2048 /* DEV_ROOT_FRAGMENT */) {\r\n        [root, setRoot] = getChildRoot(result);\r\n    }\r\n    if (fallthroughAttrs && inheritAttrs !== false) {\r\n        const keys = Object.keys(fallthroughAttrs);\r\n        const { shapeFlag } = root;\r\n        if (keys.length) {\r\n            if (shapeFlag & (1 /* ELEMENT */ | 6 /* COMPONENT */)) {\r\n                if (propsOptions && keys.some(isModelListener)) {\r\n                    // If a v-model listener (onUpdate:xxx) has a corresponding declared\r\n                    // prop, it indicates this component expects to handle v-model and\r\n                    // it should not fallthrough.\r\n                    // related: #1543, #1643, #1989\r\n                    fallthroughAttrs = filterModelListeners(fallthroughAttrs, propsOptions);\r\n                }\r\n                root = cloneVNode(root, fallthroughAttrs);\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production') && !accessedAttrs && root.type !== Comment) {\r\n                const allAttrs = Object.keys(attrs);\r\n                const eventAttrs = [];\r\n                const extraAttrs = [];\r\n                for (let i = 0, l = allAttrs.length; i < l; i++) {\r\n                    const key = allAttrs[i];\r\n                    if (isOn(key)) {\r\n                        // ignore v-model handlers when they fail to fallthrough\r\n                        if (!isModelListener(key)) {\r\n                            // remove `on`, lowercase first letter to reflect event casing\r\n                            // accurately\r\n                            eventAttrs.push(key[2].toLowerCase() + key.slice(3));\r\n                        }\r\n                    }\r\n                    else {\r\n                        extraAttrs.push(key);\r\n                    }\r\n                }\r\n                if (extraAttrs.length) {\r\n                    warn(`Extraneous non-props attributes (` +\r\n                        `${extraAttrs.join(', ')}) ` +\r\n                        `were passed to component but could not be automatically inherited ` +\r\n                        `because component renders fragment or text root nodes.`);\r\n                }\r\n                if (eventAttrs.length) {\r\n                    warn(`Extraneous non-emits event listeners (` +\r\n                        `${eventAttrs.join(', ')}) ` +\r\n                        `were passed to component but could not be automatically inherited ` +\r\n                        `because component renders fragment or text root nodes. ` +\r\n                        `If the listener is intended to be a component custom event listener only, ` +\r\n                        `declare it using the \"emits\" option.`);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // inherit directives\r\n    if (vnode.dirs) {\r\n        if ((process.env.NODE_ENV !== 'production') && !isElementRoot(root)) {\r\n            warn(`Runtime directive used on component with non-element root node. ` +\r\n                `The directives will not function as intended.`);\r\n        }\r\n        root.dirs = root.dirs ? root.dirs.concat(vnode.dirs) : vnode.dirs;\r\n    }\r\n    // inherit transition data\r\n    if (vnode.transition) {\r\n        if ((process.env.NODE_ENV !== 'production') && !isElementRoot(root)) {\r\n            warn(`Component inside <Transition> renders non-element root node ` +\r\n                `that cannot be animated.`);\r\n        }\r\n        root.transition = vnode.transition;\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && setRoot) {\r\n        setRoot(root);\r\n    }\r\n    else {\r\n        result = root;\r\n    }\r\n    setCurrentRenderingInstance(prev);\r\n    return result;\r\n}\r\n/**\r\n * dev only\r\n * In dev mode, template root level comments are rendered, which turns the\r\n * template into a fragment root, but we need to locate the single element\r\n * root for attrs and scope id processing.\r\n */\r\nconst getChildRoot = (vnode) => {\r\n    const rawChildren = vnode.children;\r\n    const dynamicChildren = vnode.dynamicChildren;\r\n    const childRoot = filterSingleRoot(rawChildren);\r\n    if (!childRoot) {\r\n        return [vnode, undefined];\r\n    }\r\n    const index = rawChildren.indexOf(childRoot);\r\n    const dynamicIndex = dynamicChildren ? dynamicChildren.indexOf(childRoot) : -1;\r\n    const setRoot = (updatedRoot) => {\r\n        rawChildren[index] = updatedRoot;\r\n        if (dynamicChildren) {\r\n            if (dynamicIndex > -1) {\r\n                dynamicChildren[dynamicIndex] = updatedRoot;\r\n            }\r\n            else if (updatedRoot.patchFlag > 0) {\r\n                vnode.dynamicChildren = [...dynamicChildren, updatedRoot];\r\n            }\r\n        }\r\n    };\r\n    return [normalizeVNode(childRoot), setRoot];\r\n};\r\nfunction filterSingleRoot(children) {\r\n    let singleRoot;\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        if (isVNode(child)) {\r\n            // ignore user comment\r\n            if (child.type !== Comment || child.children === 'v-if') {\r\n                if (singleRoot) {\r\n                    // has more than 1 non-comment child, return now\r\n                    return;\r\n                }\r\n                else {\r\n                    singleRoot = child;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n    }\r\n    return singleRoot;\r\n}\r\nconst getFunctionalFallthrough = (attrs) => {\r\n    let res;\r\n    for (const key in attrs) {\r\n        if (key === 'class' || key === 'style' || isOn(key)) {\r\n            (res || (res = {}))[key] = attrs[key];\r\n        }\r\n    }\r\n    return res;\r\n};\r\nconst filterModelListeners = (attrs, props) => {\r\n    const res = {};\r\n    for (const key in attrs) {\r\n        if (!isModelListener(key) || !(key.slice(9) in props)) {\r\n            res[key] = attrs[key];\r\n        }\r\n    }\r\n    return res;\r\n};\r\nconst isElementRoot = (vnode) => {\r\n    return (vnode.shapeFlag & (6 /* COMPONENT */ | 1 /* ELEMENT */) ||\r\n        vnode.type === Comment // potential v-if branch switch\r\n    );\r\n};\r\nfunction shouldUpdateComponent(prevVNode, nextVNode, optimized) {\r\n    const { props: prevProps, children: prevChildren, component } = prevVNode;\r\n    const { props: nextProps, children: nextChildren, patchFlag } = nextVNode;\r\n    const emits = component.emitsOptions;\r\n    // Parent component's render function was hot-updated. Since this may have\r\n    // caused the child component's slots content to have changed, we need to\r\n    // force the child to update as well.\r\n    if ((process.env.NODE_ENV !== 'production') && (prevChildren || nextChildren) && isHmrUpdating) {\r\n        return true;\r\n    }\r\n    // force child update for runtime directive or transition on component vnode.\r\n    if (nextVNode.dirs || nextVNode.transition) {\r\n        return true;\r\n    }\r\n    if (optimized && patchFlag >= 0) {\r\n        if (patchFlag & 1024 /* DYNAMIC_SLOTS */) {\r\n            // slot content that references values that might have changed,\r\n            // e.g. in a v-for\r\n            return true;\r\n        }\r\n        if (patchFlag & 16 /* FULL_PROPS */) {\r\n            if (!prevProps) {\r\n                return !!nextProps;\r\n            }\r\n            // presence of this flag indicates props are always non-null\r\n            return hasPropsChanged(prevProps, nextProps, emits);\r\n        }\r\n        else if (patchFlag & 8 /* PROPS */) {\r\n            const dynamicProps = nextVNode.dynamicProps;\r\n            for (let i = 0; i < dynamicProps.length; i++) {\r\n                const key = dynamicProps[i];\r\n                if (nextProps[key] !== prevProps[key] &&\r\n                    !isEmitListener(emits, key)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // this path is only taken by manually written render functions\r\n        // so presence of any children leads to a forced update\r\n        if (prevChildren || nextChildren) {\r\n            if (!nextChildren || !nextChildren.$stable) {\r\n                return true;\r\n            }\r\n        }\r\n        if (prevProps === nextProps) {\r\n            return false;\r\n        }\r\n        if (!prevProps) {\r\n            return !!nextProps;\r\n        }\r\n        if (!nextProps) {\r\n            return true;\r\n        }\r\n        return hasPropsChanged(prevProps, nextProps, emits);\r\n    }\r\n    return false;\r\n}\r\nfunction hasPropsChanged(prevProps, nextProps, emitsOptions) {\r\n    const nextKeys = Object.keys(nextProps);\r\n    if (nextKeys.length !== Object.keys(prevProps).length) {\r\n        return true;\r\n    }\r\n    for (let i = 0; i < nextKeys.length; i++) {\r\n        const key = nextKeys[i];\r\n        if (nextProps[key] !== prevProps[key] &&\r\n            !isEmitListener(emitsOptions, key)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction updateHOCHostEl({ vnode, parent }, el // HostNode\r\n) {\r\n    while (parent && parent.subTree === vnode) {\r\n        (vnode = parent.vnode).el = el;\r\n        parent = parent.parent;\r\n    }\r\n}\n\nconst isSuspense = (type) => type.__isSuspense;\r\n// Suspense exposes a component-like API, and is treated like a component\r\n// in the compiler, but internally it's a special built-in type that hooks\r\n// directly into the renderer.\r\nconst SuspenseImpl = {\r\n    name: 'Suspense',\r\n    // In order to make Suspense tree-shakable, we need to avoid importing it\r\n    // directly in the renderer. The renderer checks for the __isSuspense flag\r\n    // on a vnode's type and calls the `process` method, passing in renderer\r\n    // internals.\r\n    __isSuspense: true,\r\n    process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, \r\n    // platform-specific impl passed from renderer\r\n    rendererInternals) {\r\n        if (n1 == null) {\r\n            mountSuspense(n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, rendererInternals);\r\n        }\r\n        else {\r\n            patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, slotScopeIds, optimized, rendererInternals);\r\n        }\r\n    },\r\n    hydrate: hydrateSuspense,\r\n    create: createSuspenseBoundary,\r\n    normalize: normalizeSuspenseChildren\r\n};\r\n// Force-casted public typing for h and TSX props inference\r\nconst Suspense = (SuspenseImpl );\r\nfunction triggerEvent(vnode, name) {\r\n    const eventListener = vnode.props && vnode.props[name];\r\n    if (isFunction$1(eventListener)) {\r\n        eventListener();\r\n    }\r\n}\r\nfunction mountSuspense(vnode, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, rendererInternals) {\r\n    const { p: patch, o: { createElement } } = rendererInternals;\r\n    const hiddenContainer = createElement('div');\r\n    const suspense = (vnode.suspense = createSuspenseBoundary(vnode, parentSuspense, parentComponent, container, hiddenContainer, anchor, isSVG, slotScopeIds, optimized, rendererInternals));\r\n    // start mounting the content subtree in an off-dom container\r\n    patch(null, (suspense.pendingBranch = vnode.ssContent), hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds);\r\n    // now check if we have encountered any async deps\r\n    if (suspense.deps > 0) {\r\n        // has async\r\n        // invoke @fallback event\r\n        triggerEvent(vnode, 'onPending');\r\n        triggerEvent(vnode, 'onFallback');\r\n        // mount the fallback tree\r\n        patch(null, vnode.ssFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n        isSVG, slotScopeIds);\r\n        setActiveBranch(suspense, vnode.ssFallback);\r\n    }\r\n    else {\r\n        // Suspense has no async deps. Just resolve.\r\n        suspense.resolve();\r\n    }\r\n}\r\nfunction patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, slotScopeIds, optimized, { p: patch, um: unmount, o: { createElement } }) {\r\n    const suspense = (n2.suspense = n1.suspense);\r\n    suspense.vnode = n2;\r\n    n2.el = n1.el;\r\n    const newBranch = n2.ssContent;\r\n    const newFallback = n2.ssFallback;\r\n    const { activeBranch, pendingBranch, isInFallback, isHydrating } = suspense;\r\n    if (pendingBranch) {\r\n        suspense.pendingBranch = newBranch;\r\n        if (isSameVNodeType(newBranch, pendingBranch)) {\r\n            // same root type but content may have changed.\r\n            patch(pendingBranch, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n            if (suspense.deps <= 0) {\r\n                suspense.resolve();\r\n            }\r\n            else if (isInFallback) {\r\n                patch(activeBranch, newFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                isSVG, slotScopeIds, optimized);\r\n                setActiveBranch(suspense, newFallback);\r\n            }\r\n        }\r\n        else {\r\n            // toggled before pending tree is resolved\r\n            suspense.pendingId++;\r\n            if (isHydrating) {\r\n                // if toggled before hydration is finished, the current DOM tree is\r\n                // no longer valid. set it as the active branch so it will be unmounted\r\n                // when resolved\r\n                suspense.isHydrating = false;\r\n                suspense.activeBranch = pendingBranch;\r\n            }\r\n            else {\r\n                unmount(pendingBranch, parentComponent, suspense);\r\n            }\r\n            // increment pending ID. this is used to invalidate async callbacks\r\n            // reset suspense state\r\n            suspense.deps = 0;\r\n            // discard effects from pending branch\r\n            suspense.effects.length = 0;\r\n            // discard previous container\r\n            suspense.hiddenContainer = createElement('div');\r\n            if (isInFallback) {\r\n                // already in fallback state\r\n                patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n                if (suspense.deps <= 0) {\r\n                    suspense.resolve();\r\n                }\r\n                else {\r\n                    patch(activeBranch, newFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                    isSVG, slotScopeIds, optimized);\r\n                    setActiveBranch(suspense, newFallback);\r\n                }\r\n            }\r\n            else if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\r\n                // toggled \"back\" to current active branch\r\n                patch(activeBranch, newBranch, container, anchor, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n                // force resolve\r\n                suspense.resolve(true);\r\n            }\r\n            else {\r\n                // switched to a 3rd branch\r\n                patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n                if (suspense.deps <= 0) {\r\n                    suspense.resolve();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\r\n            // root did not change, just normal patch\r\n            patch(activeBranch, newBranch, container, anchor, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n            setActiveBranch(suspense, newBranch);\r\n        }\r\n        else {\r\n            // root node toggled\r\n            // invoke @pending event\r\n            triggerEvent(n2, 'onPending');\r\n            // mount pending branch in off-dom container\r\n            suspense.pendingBranch = newBranch;\r\n            suspense.pendingId++;\r\n            patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n            if (suspense.deps <= 0) {\r\n                // incoming branch has no async deps, resolve now.\r\n                suspense.resolve();\r\n            }\r\n            else {\r\n                const { timeout, pendingId } = suspense;\r\n                if (timeout > 0) {\r\n                    setTimeout(() => {\r\n                        if (suspense.pendingId === pendingId) {\r\n                            suspense.fallback(newFallback);\r\n                        }\r\n                    }, timeout);\r\n                }\r\n                else if (timeout === 0) {\r\n                    suspense.fallback(newFallback);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nlet hasWarned = false;\r\nfunction createSuspenseBoundary(vnode, parent, parentComponent, container, hiddenContainer, anchor, isSVG, slotScopeIds, optimized, rendererInternals, isHydrating = false) {\r\n    /* istanbul ignore if */\r\n    if ((process.env.NODE_ENV !== 'production') && !false && !hasWarned) {\r\n        hasWarned = true;\r\n        // @ts-ignore `console.info` cannot be null error\r\n        console[console.info ? 'info' : 'log'](`<Suspense> is an experimental feature and its API will likely change.`);\r\n    }\r\n    const { p: patch, m: move, um: unmount, n: next, o: { parentNode, remove } } = rendererInternals;\r\n    const timeout = toNumber(vnode.props && vnode.props.timeout);\r\n    const suspense = {\r\n        vnode,\r\n        parent,\r\n        parentComponent,\r\n        isSVG,\r\n        container,\r\n        hiddenContainer,\r\n        anchor,\r\n        deps: 0,\r\n        pendingId: 0,\r\n        timeout: typeof timeout === 'number' ? timeout : -1,\r\n        activeBranch: null,\r\n        pendingBranch: null,\r\n        isInFallback: true,\r\n        isHydrating,\r\n        isUnmounted: false,\r\n        effects: [],\r\n        resolve(resume = false) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (!resume && !suspense.pendingBranch) {\r\n                    throw new Error(`suspense.resolve() is called without a pending branch.`);\r\n                }\r\n                if (suspense.isUnmounted) {\r\n                    throw new Error(`suspense.resolve() is called on an already unmounted suspense boundary.`);\r\n                }\r\n            }\r\n            const { vnode, activeBranch, pendingBranch, pendingId, effects, parentComponent, container } = suspense;\r\n            if (suspense.isHydrating) {\r\n                suspense.isHydrating = false;\r\n            }\r\n            else if (!resume) {\r\n                const delayEnter = activeBranch &&\r\n                    pendingBranch.transition &&\r\n                    pendingBranch.transition.mode === 'out-in';\r\n                if (delayEnter) {\r\n                    activeBranch.transition.afterLeave = () => {\r\n                        if (pendingId === suspense.pendingId) {\r\n                            move(pendingBranch, container, anchor, 0 /* ENTER */);\r\n                        }\r\n                    };\r\n                }\r\n                // this is initial anchor on mount\r\n                let { anchor } = suspense;\r\n                // unmount current active tree\r\n                if (activeBranch) {\r\n                    // if the fallback tree was mounted, it may have been moved\r\n                    // as part of a parent suspense. get the latest anchor for insertion\r\n                    anchor = next(activeBranch);\r\n                    unmount(activeBranch, parentComponent, suspense, true);\r\n                }\r\n                if (!delayEnter) {\r\n                    // move content from off-dom container to actual container\r\n                    move(pendingBranch, container, anchor, 0 /* ENTER */);\r\n                }\r\n            }\r\n            setActiveBranch(suspense, pendingBranch);\r\n            suspense.pendingBranch = null;\r\n            suspense.isInFallback = false;\r\n            // flush buffered effects\r\n            // check if there is a pending parent suspense\r\n            let parent = suspense.parent;\r\n            let hasUnresolvedAncestor = false;\r\n            while (parent) {\r\n                if (parent.pendingBranch) {\r\n                    // found a pending parent suspense, merge buffered post jobs\r\n                    // into that parent\r\n                    parent.effects.push(...effects);\r\n                    hasUnresolvedAncestor = true;\r\n                    break;\r\n                }\r\n                parent = parent.parent;\r\n            }\r\n            // no pending parent suspense, flush all jobs\r\n            if (!hasUnresolvedAncestor) {\r\n                queuePostFlushCb(effects);\r\n            }\r\n            suspense.effects = [];\r\n            // invoke @resolve event\r\n            triggerEvent(vnode, 'onResolve');\r\n        },\r\n        fallback(fallbackVNode) {\r\n            if (!suspense.pendingBranch) {\r\n                return;\r\n            }\r\n            const { vnode, activeBranch, parentComponent, container, isSVG } = suspense;\r\n            // invoke @fallback event\r\n            triggerEvent(vnode, 'onFallback');\r\n            const anchor = next(activeBranch);\r\n            const mountFallback = () => {\r\n                if (!suspense.isInFallback) {\r\n                    return;\r\n                }\r\n                // mount the fallback tree\r\n                patch(null, fallbackVNode, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                isSVG, slotScopeIds, optimized);\r\n                setActiveBranch(suspense, fallbackVNode);\r\n            };\r\n            const delayEnter = fallbackVNode.transition && fallbackVNode.transition.mode === 'out-in';\r\n            if (delayEnter) {\r\n                activeBranch.transition.afterLeave = mountFallback;\r\n            }\r\n            suspense.isInFallback = true;\r\n            // unmount current active branch\r\n            unmount(activeBranch, parentComponent, null, // no suspense so unmount hooks fire now\r\n            true // shouldRemove\r\n            );\r\n            if (!delayEnter) {\r\n                mountFallback();\r\n            }\r\n        },\r\n        move(container, anchor, type) {\r\n            suspense.activeBranch &&\r\n                move(suspense.activeBranch, container, anchor, type);\r\n            suspense.container = container;\r\n        },\r\n        next() {\r\n            return suspense.activeBranch && next(suspense.activeBranch);\r\n        },\r\n        registerDep(instance, setupRenderEffect) {\r\n            const isInPendingSuspense = !!suspense.pendingBranch;\r\n            if (isInPendingSuspense) {\r\n                suspense.deps++;\r\n            }\r\n            const hydratedEl = instance.vnode.el;\r\n            instance\r\n                .asyncDep.catch(err => {\r\n                handleError(err, instance, 0 /* SETUP_FUNCTION */);\r\n            })\r\n                .then(asyncSetupResult => {\r\n                // retry when the setup() promise resolves.\r\n                // component may have been unmounted before resolve.\r\n                if (instance.isUnmounted ||\r\n                    suspense.isUnmounted ||\r\n                    suspense.pendingId !== instance.suspenseId) {\r\n                    return;\r\n                }\r\n                // retry from this component\r\n                instance.asyncResolved = true;\r\n                const { vnode } = instance;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(vnode);\r\n                }\r\n                handleSetupResult(instance, asyncSetupResult, false);\r\n                if (hydratedEl) {\r\n                    // vnode may have been replaced if an update happened before the\r\n                    // async dep is resolved.\r\n                    vnode.el = hydratedEl;\r\n                }\r\n                const placeholder = !hydratedEl && instance.subTree.el;\r\n                setupRenderEffect(instance, vnode, \r\n                // component may have been moved before resolve.\r\n                // if this is not a hydration, instance.subTree will be the comment\r\n                // placeholder.\r\n                parentNode(hydratedEl || instance.subTree.el), \r\n                // anchor will not be used if this is hydration, so only need to\r\n                // consider the comment placeholder case.\r\n                hydratedEl ? null : next(instance.subTree), suspense, isSVG, optimized);\r\n                if (placeholder) {\r\n                    remove(placeholder);\r\n                }\r\n                updateHOCHostEl(instance, vnode.el);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n                // only decrease deps count if suspense is not already resolved\r\n                if (isInPendingSuspense && --suspense.deps === 0) {\r\n                    suspense.resolve();\r\n                }\r\n            });\r\n        },\r\n        unmount(parentSuspense, doRemove) {\r\n            suspense.isUnmounted = true;\r\n            if (suspense.activeBranch) {\r\n                unmount(suspense.activeBranch, parentComponent, parentSuspense, doRemove);\r\n            }\r\n            if (suspense.pendingBranch) {\r\n                unmount(suspense.pendingBranch, parentComponent, parentSuspense, doRemove);\r\n            }\r\n        }\r\n    };\r\n    return suspense;\r\n}\r\nfunction hydrateSuspense(node, vnode, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, rendererInternals, hydrateNode) {\r\n    /* eslint-disable no-restricted-globals */\r\n    const suspense = (vnode.suspense = createSuspenseBoundary(vnode, parentSuspense, parentComponent, node.parentNode, document.createElement('div'), null, isSVG, slotScopeIds, optimized, rendererInternals, true /* hydrating */));\r\n    // there are two possible scenarios for server-rendered suspense:\r\n    // - success: ssr content should be fully resolved\r\n    // - failure: ssr content should be the fallback branch.\r\n    // however, on the client we don't really know if it has failed or not\r\n    // attempt to hydrate the DOM assuming it has succeeded, but we still\r\n    // need to construct a suspense boundary first\r\n    const result = hydrateNode(node, (suspense.pendingBranch = vnode.ssContent), parentComponent, suspense, slotScopeIds, optimized);\r\n    if (suspense.deps === 0) {\r\n        suspense.resolve();\r\n    }\r\n    return result;\r\n    /* eslint-enable no-restricted-globals */\r\n}\r\nfunction normalizeSuspenseChildren(vnode) {\r\n    const { shapeFlag, children } = vnode;\r\n    const isSlotChildren = shapeFlag & 32 /* SLOTS_CHILDREN */;\r\n    vnode.ssContent = normalizeSuspenseSlot(isSlotChildren ? children.default : children);\r\n    vnode.ssFallback = isSlotChildren\r\n        ? normalizeSuspenseSlot(children.fallback)\r\n        : createVNode(Comment);\r\n}\r\nfunction normalizeSuspenseSlot(s) {\r\n    let block;\r\n    if (isFunction$1(s)) {\r\n        const trackBlock = isBlockTreeEnabled && s._c;\r\n        if (trackBlock) {\r\n            // disableTracking: false\r\n            // allow block tracking for compiled slots\r\n            // (see ./componentRenderContext.ts)\r\n            s._d = false;\r\n            openBlock();\r\n        }\r\n        s = s();\r\n        if (trackBlock) {\r\n            s._d = true;\r\n            block = currentBlock;\r\n            closeBlock();\r\n        }\r\n    }\r\n    if (isArray(s)) {\r\n        const singleChild = filterSingleRoot(s);\r\n        if ((process.env.NODE_ENV !== 'production') && !singleChild) {\r\n            warn(`<Suspense> slots expect a single root node.`);\r\n        }\r\n        s = singleChild;\r\n    }\r\n    s = normalizeVNode(s);\r\n    if (block && !s.dynamicChildren) {\r\n        s.dynamicChildren = block.filter(c => c !== s);\r\n    }\r\n    return s;\r\n}\r\nfunction queueEffectWithSuspense(fn, suspense) {\r\n    if (suspense && suspense.pendingBranch) {\r\n        if (isArray(fn)) {\r\n            suspense.effects.push(...fn);\r\n        }\r\n        else {\r\n            suspense.effects.push(fn);\r\n        }\r\n    }\r\n    else {\r\n        queuePostFlushCb(fn);\r\n    }\r\n}\r\nfunction setActiveBranch(suspense, branch) {\r\n    suspense.activeBranch = branch;\r\n    const { vnode, parentComponent } = suspense;\r\n    const el = (vnode.el = branch.el);\r\n    // in case suspense is the root node of a component,\r\n    // recursively update the HOC el\r\n    if (parentComponent && parentComponent.subTree === vnode) {\r\n        parentComponent.vnode.el = el;\r\n        updateHOCHostEl(parentComponent, el);\r\n    }\r\n}\n\nfunction provide(key, value) {\r\n    if (!currentInstance) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`provide() can only be used inside setup().`);\r\n        }\r\n    }\r\n    else {\r\n        let provides = currentInstance.provides;\r\n        // by default an instance inherits its parent's provides object\r\n        // but when it needs to provide values of its own, it creates its\r\n        // own provides object using parent provides object as prototype.\r\n        // this way in `inject` we can simply look up injections from direct\r\n        // parent and let the prototype chain do the work.\r\n        const parentProvides = currentInstance.parent && currentInstance.parent.provides;\r\n        if (parentProvides === provides) {\r\n            provides = currentInstance.provides = Object.create(parentProvides);\r\n        }\r\n        // TS doesn't allow symbol as index type\r\n        provides[key] = value;\r\n    }\r\n}\r\nfunction inject(key, defaultValue, treatDefaultAsFactory = false) {\r\n    // fallback to `currentRenderingInstance` so that this can be called in\r\n    // a functional component\r\n    const instance = currentInstance || currentRenderingInstance;\r\n    if (instance) {\r\n        // #2400\r\n        // to support `app.use` plugins,\r\n        // fallback to appContext's `provides` if the intance is at root\r\n        const provides = instance.parent == null\r\n            ? instance.vnode.appContext && instance.vnode.appContext.provides\r\n            : instance.parent.provides;\r\n        if (provides && key in provides) {\r\n            // TS doesn't allow symbol as index type\r\n            return provides[key];\r\n        }\r\n        else if (arguments.length > 1) {\r\n            return treatDefaultAsFactory && isFunction$1(defaultValue)\r\n                ? defaultValue.call(instance.proxy)\r\n                : defaultValue;\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`injection \"${String(key)}\" not found.`);\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`inject() can only be used inside setup() or functional components.`);\r\n    }\r\n}\n\nfunction useTransitionState() {\r\n    const state = {\r\n        isMounted: false,\r\n        isLeaving: false,\r\n        isUnmounting: false,\r\n        leavingVNodes: new Map()\r\n    };\r\n    onMounted(() => {\r\n        state.isMounted = true;\r\n    });\r\n    onBeforeUnmount(() => {\r\n        state.isUnmounting = true;\r\n    });\r\n    return state;\r\n}\r\nconst TransitionHookValidator = [Function, Array];\r\nconst BaseTransitionImpl = {\r\n    name: `BaseTransition`,\r\n    props: {\r\n        mode: String,\r\n        appear: Boolean,\r\n        persisted: Boolean,\r\n        // enter\r\n        onBeforeEnter: TransitionHookValidator,\r\n        onEnter: TransitionHookValidator,\r\n        onAfterEnter: TransitionHookValidator,\r\n        onEnterCancelled: TransitionHookValidator,\r\n        // leave\r\n        onBeforeLeave: TransitionHookValidator,\r\n        onLeave: TransitionHookValidator,\r\n        onAfterLeave: TransitionHookValidator,\r\n        onLeaveCancelled: TransitionHookValidator,\r\n        // appear\r\n        onBeforeAppear: TransitionHookValidator,\r\n        onAppear: TransitionHookValidator,\r\n        onAfterAppear: TransitionHookValidator,\r\n        onAppearCancelled: TransitionHookValidator\r\n    },\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        const state = useTransitionState();\r\n        let prevTransitionKey;\r\n        return () => {\r\n            const children = slots.default && getTransitionRawChildren(slots.default(), true);\r\n            if (!children || !children.length) {\r\n                return;\r\n            }\r\n            // warn multiple elements\r\n            if ((process.env.NODE_ENV !== 'production') && children.length > 1) {\r\n                warn('<transition> can only be used on a single element or component. Use ' +\r\n                    '<transition-group> for lists.');\r\n            }\r\n            // there's no need to track reactivity for these props so use the raw\r\n            // props for a bit better perf\r\n            const rawProps = toRaw(props);\r\n            const { mode } = rawProps;\r\n            // check mode\r\n            if ((process.env.NODE_ENV !== 'production') && mode && !['in-out', 'out-in', 'default'].includes(mode)) {\r\n                warn(`invalid <transition> mode: ${mode}`);\r\n            }\r\n            // at this point children has a guaranteed length of 1.\r\n            const child = children[0];\r\n            if (state.isLeaving) {\r\n                return emptyPlaceholder(child);\r\n            }\r\n            // in the case of <transition><keep-alive/></transition>, we need to\r\n            // compare the type of the kept-alive children.\r\n            const innerChild = getKeepAliveChild(child);\r\n            if (!innerChild) {\r\n                return emptyPlaceholder(child);\r\n            }\r\n            const enterHooks = resolveTransitionHooks(innerChild, rawProps, state, instance);\r\n            setTransitionHooks(innerChild, enterHooks);\r\n            const oldChild = instance.subTree;\r\n            const oldInnerChild = oldChild && getKeepAliveChild(oldChild);\r\n            let transitionKeyChanged = false;\r\n            const { getTransitionKey } = innerChild.type;\r\n            if (getTransitionKey) {\r\n                const key = getTransitionKey();\r\n                if (prevTransitionKey === undefined) {\r\n                    prevTransitionKey = key;\r\n                }\r\n                else if (key !== prevTransitionKey) {\r\n                    prevTransitionKey = key;\r\n                    transitionKeyChanged = true;\r\n                }\r\n            }\r\n            // handle mode\r\n            if (oldInnerChild &&\r\n                oldInnerChild.type !== Comment &&\r\n                (!isSameVNodeType(innerChild, oldInnerChild) || transitionKeyChanged)) {\r\n                const leavingHooks = resolveTransitionHooks(oldInnerChild, rawProps, state, instance);\r\n                // update old tree's hooks in case of dynamic transition\r\n                setTransitionHooks(oldInnerChild, leavingHooks);\r\n                // switching between different views\r\n                if (mode === 'out-in') {\r\n                    state.isLeaving = true;\r\n                    // return placeholder node and queue update when leave finishes\r\n                    leavingHooks.afterLeave = () => {\r\n                        state.isLeaving = false;\r\n                        instance.update();\r\n                    };\r\n                    return emptyPlaceholder(child);\r\n                }\r\n                else if (mode === 'in-out' && innerChild.type !== Comment) {\r\n                    leavingHooks.delayLeave = (el, earlyRemove, delayedLeave) => {\r\n                        const leavingVNodesCache = getLeavingNodesForType(state, oldInnerChild);\r\n                        leavingVNodesCache[String(oldInnerChild.key)] = oldInnerChild;\r\n                        // early removal callback\r\n                        el._leaveCb = () => {\r\n                            earlyRemove();\r\n                            el._leaveCb = undefined;\r\n                            delete enterHooks.delayedLeave;\r\n                        };\r\n                        enterHooks.delayedLeave = delayedLeave;\r\n                    };\r\n                }\r\n            }\r\n            return child;\r\n        };\r\n    }\r\n};\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nconst BaseTransition = BaseTransitionImpl;\r\nfunction getLeavingNodesForType(state, vnode) {\r\n    const { leavingVNodes } = state;\r\n    let leavingVNodesCache = leavingVNodes.get(vnode.type);\r\n    if (!leavingVNodesCache) {\r\n        leavingVNodesCache = Object.create(null);\r\n        leavingVNodes.set(vnode.type, leavingVNodesCache);\r\n    }\r\n    return leavingVNodesCache;\r\n}\r\n// The transition hooks are attached to the vnode as vnode.transition\r\n// and will be called at appropriate timing in the renderer.\r\nfunction resolveTransitionHooks(vnode, props, state, instance) {\r\n    const { appear, mode, persisted = false, onBeforeEnter, onEnter, onAfterEnter, onEnterCancelled, onBeforeLeave, onLeave, onAfterLeave, onLeaveCancelled, onBeforeAppear, onAppear, onAfterAppear, onAppearCancelled } = props;\r\n    const key = String(vnode.key);\r\n    const leavingVNodesCache = getLeavingNodesForType(state, vnode);\r\n    const callHook = (hook, args) => {\r\n        hook &&\r\n            callWithAsyncErrorHandling(hook, instance, 9 /* TRANSITION_HOOK */, args);\r\n    };\r\n    const hooks = {\r\n        mode,\r\n        persisted,\r\n        beforeEnter(el) {\r\n            let hook = onBeforeEnter;\r\n            if (!state.isMounted) {\r\n                if (appear) {\r\n                    hook = onBeforeAppear || onBeforeEnter;\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n            // for same element (v-show)\r\n            if (el._leaveCb) {\r\n                el._leaveCb(true /* cancelled */);\r\n            }\r\n            // for toggled element with same key (v-if)\r\n            const leavingVNode = leavingVNodesCache[key];\r\n            if (leavingVNode &&\r\n                isSameVNodeType(vnode, leavingVNode) &&\r\n                leavingVNode.el._leaveCb) {\r\n                // force early removal (not cancelled)\r\n                leavingVNode.el._leaveCb();\r\n            }\r\n            callHook(hook, [el]);\r\n        },\r\n        enter(el) {\r\n            let hook = onEnter;\r\n            let afterHook = onAfterEnter;\r\n            let cancelHook = onEnterCancelled;\r\n            if (!state.isMounted) {\r\n                if (appear) {\r\n                    hook = onAppear || onEnter;\r\n                    afterHook = onAfterAppear || onAfterEnter;\r\n                    cancelHook = onAppearCancelled || onEnterCancelled;\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n            let called = false;\r\n            const done = (el._enterCb = (cancelled) => {\r\n                if (called)\r\n                    return;\r\n                called = true;\r\n                if (cancelled) {\r\n                    callHook(cancelHook, [el]);\r\n                }\r\n                else {\r\n                    callHook(afterHook, [el]);\r\n                }\r\n                if (hooks.delayedLeave) {\r\n                    hooks.delayedLeave();\r\n                }\r\n                el._enterCb = undefined;\r\n            });\r\n            if (hook) {\r\n                hook(el, done);\r\n                if (hook.length <= 1) {\r\n                    done();\r\n                }\r\n            }\r\n            else {\r\n                done();\r\n            }\r\n        },\r\n        leave(el, remove) {\r\n            const key = String(vnode.key);\r\n            if (el._enterCb) {\r\n                el._enterCb(true /* cancelled */);\r\n            }\r\n            if (state.isUnmounting) {\r\n                return remove();\r\n            }\r\n            callHook(onBeforeLeave, [el]);\r\n            let called = false;\r\n            const done = (el._leaveCb = (cancelled) => {\r\n                if (called)\r\n                    return;\r\n                called = true;\r\n                remove();\r\n                if (cancelled) {\r\n                    callHook(onLeaveCancelled, [el]);\r\n                }\r\n                else {\r\n                    callHook(onAfterLeave, [el]);\r\n                }\r\n                el._leaveCb = undefined;\r\n                if (leavingVNodesCache[key] === vnode) {\r\n                    delete leavingVNodesCache[key];\r\n                }\r\n            });\r\n            leavingVNodesCache[key] = vnode;\r\n            if (onLeave) {\r\n                onLeave(el, done);\r\n                if (onLeave.length <= 1) {\r\n                    done();\r\n                }\r\n            }\r\n            else {\r\n                done();\r\n            }\r\n        },\r\n        clone(vnode) {\r\n            return resolveTransitionHooks(vnode, props, state, instance);\r\n        }\r\n    };\r\n    return hooks;\r\n}\r\n// the placeholder really only handles one special case: KeepAlive\r\n// in the case of a KeepAlive in a leave phase we need to return a KeepAlive\r\n// placeholder with empty content to avoid the KeepAlive instance from being\r\n// unmounted.\r\nfunction emptyPlaceholder(vnode) {\r\n    if (isKeepAlive(vnode)) {\r\n        vnode = cloneVNode(vnode);\r\n        vnode.children = null;\r\n        return vnode;\r\n    }\r\n}\r\nfunction getKeepAliveChild(vnode) {\r\n    return isKeepAlive(vnode)\r\n        ? vnode.children\r\n            ? vnode.children[0]\r\n            : undefined\r\n        : vnode;\r\n}\r\nfunction setTransitionHooks(vnode, hooks) {\r\n    if (vnode.shapeFlag & 6 /* COMPONENT */ && vnode.component) {\r\n        setTransitionHooks(vnode.component.subTree, hooks);\r\n    }\r\n    else if (vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n        vnode.ssContent.transition = hooks.clone(vnode.ssContent);\r\n        vnode.ssFallback.transition = hooks.clone(vnode.ssFallback);\r\n    }\r\n    else {\r\n        vnode.transition = hooks;\r\n    }\r\n}\r\nfunction getTransitionRawChildren(children, keepComment = false) {\r\n    let ret = [];\r\n    let keyedFragmentCount = 0;\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        // handle fragment children case, e.g. v-for\r\n        if (child.type === Fragment) {\r\n            if (child.patchFlag & 128 /* KEYED_FRAGMENT */)\r\n                keyedFragmentCount++;\r\n            ret = ret.concat(getTransitionRawChildren(child.children, keepComment));\r\n        }\r\n        // comment placeholders should be skipped, e.g. v-if\r\n        else if (keepComment || child.type !== Comment) {\r\n            ret.push(child);\r\n        }\r\n    }\r\n    // #1126 if a transition children list contains multiple sub fragments, these\r\n    // fragments will be merged into a flat children array. Since each v-for\r\n    // fragment may contain different static bindings inside, we need to de-op\r\n    // these children to force full diffs to ensure correct behavior.\r\n    if (keyedFragmentCount > 1) {\r\n        for (let i = 0; i < ret.length; i++) {\r\n            ret[i].patchFlag = -2 /* BAIL */;\r\n        }\r\n    }\r\n    return ret;\r\n}\n\n// implementation, close to no-op\r\nfunction defineComponent(options) {\r\n    return isFunction$1(options) ? { setup: options, name: options.name } : options;\r\n}\n\nconst isAsyncWrapper = (i) => !!i.type.__asyncLoader;\r\nfunction defineAsyncComponent(source) {\r\n    if (isFunction$1(source)) {\r\n        source = { loader: source };\r\n    }\r\n    const { loader, loadingComponent, errorComponent, delay = 200, timeout, // undefined = never times out\r\n    suspensible = true, onError: userOnError } = source;\r\n    let pendingRequest = null;\r\n    let resolvedComp;\r\n    let retries = 0;\r\n    const retry = () => {\r\n        retries++;\r\n        pendingRequest = null;\r\n        return load();\r\n    };\r\n    const load = () => {\r\n        let thisRequest;\r\n        return (pendingRequest ||\r\n            (thisRequest = pendingRequest =\r\n                loader()\r\n                    .catch(err => {\r\n                    err = err instanceof Error ? err : new Error(String(err));\r\n                    if (userOnError) {\r\n                        return new Promise((resolve, reject) => {\r\n                            const userRetry = () => resolve(retry());\r\n                            const userFail = () => reject(err);\r\n                            userOnError(err, userRetry, userFail, retries + 1);\r\n                        });\r\n                    }\r\n                    else {\r\n                        throw err;\r\n                    }\r\n                })\r\n                    .then((comp) => {\r\n                    if (thisRequest !== pendingRequest && pendingRequest) {\r\n                        return pendingRequest;\r\n                    }\r\n                    if ((process.env.NODE_ENV !== 'production') && !comp) {\r\n                        warn(`Async component loader resolved to undefined. ` +\r\n                            `If you are using retry(), make sure to return its return value.`);\r\n                    }\r\n                    // interop module default\r\n                    if (comp &&\r\n                        (comp.__esModule || comp[Symbol.toStringTag] === 'Module')) {\r\n                        comp = comp.default;\r\n                    }\r\n                    if ((process.env.NODE_ENV !== 'production') && comp && !isObject$1(comp) && !isFunction$1(comp)) {\r\n                        throw new Error(`Invalid async component load result: ${comp}`);\r\n                    }\r\n                    resolvedComp = comp;\r\n                    return comp;\r\n                })));\r\n    };\r\n    return defineComponent({\r\n        name: 'AsyncComponentWrapper',\r\n        __asyncLoader: load,\r\n        get __asyncResolved() {\r\n            return resolvedComp;\r\n        },\r\n        setup() {\r\n            const instance = currentInstance;\r\n            // already resolved\r\n            if (resolvedComp) {\r\n                return () => createInnerComp(resolvedComp, instance);\r\n            }\r\n            const onError = (err) => {\r\n                pendingRequest = null;\r\n                handleError(err, instance, 13 /* ASYNC_COMPONENT_LOADER */, !errorComponent /* do not throw in dev if user provided error component */);\r\n            };\r\n            // suspense-controlled or SSR.\r\n            if ((suspensible && instance.suspense) ||\r\n                (false )) {\r\n                return load()\r\n                    .then(comp => {\r\n                    return () => createInnerComp(comp, instance);\r\n                })\r\n                    .catch(err => {\r\n                    onError(err);\r\n                    return () => errorComponent\r\n                        ? createVNode(errorComponent, {\r\n                            error: err\r\n                        })\r\n                        : null;\r\n                });\r\n            }\r\n            const loaded = ref(false);\r\n            const error = ref();\r\n            const delayed = ref(!!delay);\r\n            if (delay) {\r\n                setTimeout(() => {\r\n                    delayed.value = false;\r\n                }, delay);\r\n            }\r\n            if (timeout != null) {\r\n                setTimeout(() => {\r\n                    if (!loaded.value && !error.value) {\r\n                        const err = new Error(`Async component timed out after ${timeout}ms.`);\r\n                        onError(err);\r\n                        error.value = err;\r\n                    }\r\n                }, timeout);\r\n            }\r\n            load()\r\n                .then(() => {\r\n                loaded.value = true;\r\n                if (instance.parent && isKeepAlive(instance.parent.vnode)) {\r\n                    // parent is keep-alive, force update so the loaded component's\r\n                    // name is taken into account\r\n                    queueJob(instance.parent.update);\r\n                }\r\n            })\r\n                .catch(err => {\r\n                onError(err);\r\n                error.value = err;\r\n            });\r\n            return () => {\r\n                if (loaded.value && resolvedComp) {\r\n                    return createInnerComp(resolvedComp, instance);\r\n                }\r\n                else if (error.value && errorComponent) {\r\n                    return createVNode(errorComponent, {\r\n                        error: error.value\r\n                    });\r\n                }\r\n                else if (loadingComponent && !delayed.value) {\r\n                    return createVNode(loadingComponent);\r\n                }\r\n            };\r\n        }\r\n    });\r\n}\r\nfunction createInnerComp(comp, { vnode: { ref, props, children } }) {\r\n    const vnode = createVNode(comp, props, children);\r\n    // ensure inner component inherits the async wrapper's ref owner\r\n    vnode.ref = ref;\r\n    return vnode;\r\n}\n\nconst isKeepAlive = (vnode) => vnode.type.__isKeepAlive;\r\nconst KeepAliveImpl = {\r\n    name: `KeepAlive`,\r\n    // Marker for special handling inside the renderer. We are not using a ===\r\n    // check directly on KeepAlive in the renderer, because importing it directly\r\n    // would prevent it from being tree-shaken.\r\n    __isKeepAlive: true,\r\n    props: {\r\n        include: [String, RegExp, Array],\r\n        exclude: [String, RegExp, Array],\r\n        max: [String, Number]\r\n    },\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        // KeepAlive communicates with the instantiated renderer via the\r\n        // ctx where the renderer passes in its internals,\r\n        // and the KeepAlive instance exposes activate/deactivate implementations.\r\n        // The whole point of this is to avoid importing KeepAlive directly in the\r\n        // renderer to facilitate tree-shaking.\r\n        const sharedContext = instance.ctx;\r\n        // if the internal renderer is not registered, it indicates that this is server-side rendering,\r\n        // for KeepAlive, we just need to render its children\r\n        if (!sharedContext.renderer) {\r\n            return slots.default;\r\n        }\r\n        const cache = new Map();\r\n        const keys = new Set();\r\n        let current = null;\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            instance.__v_cache = cache;\r\n        }\r\n        const parentSuspense = instance.suspense;\r\n        const { renderer: { p: patch, m: move, um: _unmount, o: { createElement } } } = sharedContext;\r\n        const storageContainer = createElement('div');\r\n        sharedContext.activate = (vnode, container, anchor, isSVG, optimized) => {\r\n            const instance = vnode.component;\r\n            move(vnode, container, anchor, 0 /* ENTER */, parentSuspense);\r\n            // in case props have changed\r\n            patch(instance.vnode, vnode, container, anchor, instance, parentSuspense, isSVG, vnode.slotScopeIds, optimized);\r\n            queuePostRenderEffect(() => {\r\n                instance.isDeactivated = false;\r\n                if (instance.a) {\r\n                    invokeArrayFns(instance.a);\r\n                }\r\n                const vnodeHook = vnode.props && vnode.props.onVnodeMounted;\r\n                if (vnodeHook) {\r\n                    invokeVNodeHook(vnodeHook, instance.parent, vnode);\r\n                }\r\n            }, parentSuspense);\r\n            if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                // Update components tree\r\n                devtoolsComponentAdded(instance);\r\n            }\r\n        };\r\n        sharedContext.deactivate = (vnode) => {\r\n            const instance = vnode.component;\r\n            move(vnode, storageContainer, null, 1 /* LEAVE */, parentSuspense);\r\n            queuePostRenderEffect(() => {\r\n                if (instance.da) {\r\n                    invokeArrayFns(instance.da);\r\n                }\r\n                const vnodeHook = vnode.props && vnode.props.onVnodeUnmounted;\r\n                if (vnodeHook) {\r\n                    invokeVNodeHook(vnodeHook, instance.parent, vnode);\r\n                }\r\n                instance.isDeactivated = true;\r\n            }, parentSuspense);\r\n            if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                // Update components tree\r\n                devtoolsComponentAdded(instance);\r\n            }\r\n        };\r\n        function unmount(vnode) {\r\n            // reset the shapeFlag so it can be properly unmounted\r\n            resetShapeFlag(vnode);\r\n            _unmount(vnode, instance, parentSuspense);\r\n        }\r\n        function pruneCache(filter) {\r\n            cache.forEach((vnode, key) => {\r\n                const name = getComponentName(vnode.type);\r\n                if (name && (!filter || !filter(name))) {\r\n                    pruneCacheEntry(key);\r\n                }\r\n            });\r\n        }\r\n        function pruneCacheEntry(key) {\r\n            const cached = cache.get(key);\r\n            if (!current || cached.type !== current.type) {\r\n                unmount(cached);\r\n            }\r\n            else if (current) {\r\n                // current active instance should no longer be kept-alive.\r\n                // we can't unmount it now but it might be later, so reset its flag now.\r\n                resetShapeFlag(current);\r\n            }\r\n            cache.delete(key);\r\n            keys.delete(key);\r\n        }\r\n        // prune cache on include/exclude prop change\r\n        watch(() => [props.include, props.exclude], ([include, exclude]) => {\r\n            include && pruneCache(name => matches(include, name));\r\n            exclude && pruneCache(name => !matches(exclude, name));\r\n        }, \r\n        // prune post-render after `current` has been updated\r\n        { flush: 'post', deep: true });\r\n        // cache sub tree after render\r\n        let pendingCacheKey = null;\r\n        const cacheSubtree = () => {\r\n            // fix #1621, the pendingCacheKey could be 0\r\n            if (pendingCacheKey != null) {\r\n                cache.set(pendingCacheKey, getInnerChild(instance.subTree));\r\n            }\r\n        };\r\n        onMounted(cacheSubtree);\r\n        onUpdated(cacheSubtree);\r\n        onBeforeUnmount(() => {\r\n            cache.forEach(cached => {\r\n                const { subTree, suspense } = instance;\r\n                const vnode = getInnerChild(subTree);\r\n                if (cached.type === vnode.type) {\r\n                    // current instance will be unmounted as part of keep-alive's unmount\r\n                    resetShapeFlag(vnode);\r\n                    // but invoke its deactivated hook here\r\n                    const da = vnode.component.da;\r\n                    da && queuePostRenderEffect(da, suspense);\r\n                    return;\r\n                }\r\n                unmount(cached);\r\n            });\r\n        });\r\n        return () => {\r\n            pendingCacheKey = null;\r\n            if (!slots.default) {\r\n                return null;\r\n            }\r\n            const children = slots.default();\r\n            const rawVNode = children[0];\r\n            if (children.length > 1) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`KeepAlive should contain exactly one component child.`);\r\n                }\r\n                current = null;\r\n                return children;\r\n            }\r\n            else if (!isVNode(rawVNode) ||\r\n                (!(rawVNode.shapeFlag & 4 /* STATEFUL_COMPONENT */) &&\r\n                    !(rawVNode.shapeFlag & 128 /* SUSPENSE */))) {\r\n                current = null;\r\n                return rawVNode;\r\n            }\r\n            let vnode = getInnerChild(rawVNode);\r\n            const comp = vnode.type;\r\n            // for async components, name check should be based in its loaded\r\n            // inner component if available\r\n            const name = getComponentName(isAsyncWrapper(vnode)\r\n                ? vnode.type.__asyncResolved || {}\r\n                : comp);\r\n            const { include, exclude, max } = props;\r\n            if ((include && (!name || !matches(include, name))) ||\r\n                (exclude && name && matches(exclude, name))) {\r\n                current = vnode;\r\n                return rawVNode;\r\n            }\r\n            const key = vnode.key == null ? comp : vnode.key;\r\n            const cachedVNode = cache.get(key);\r\n            // clone vnode if it's reused because we are going to mutate it\r\n            if (vnode.el) {\r\n                vnode = cloneVNode(vnode);\r\n                if (rawVNode.shapeFlag & 128 /* SUSPENSE */) {\r\n                    rawVNode.ssContent = vnode;\r\n                }\r\n            }\r\n            // #1513 it's possible for the returned vnode to be cloned due to attr\r\n            // fallthrough or scopeId, so the vnode here may not be the final vnode\r\n            // that is mounted. Instead of caching it directly, we store the pending\r\n            // key and cache `instance.subTree` (the normalized vnode) in\r\n            // beforeMount/beforeUpdate hooks.\r\n            pendingCacheKey = key;\r\n            if (cachedVNode) {\r\n                // copy over mounted state\r\n                vnode.el = cachedVNode.el;\r\n                vnode.component = cachedVNode.component;\r\n                if (vnode.transition) {\r\n                    // recursively update transition hooks on subTree\r\n                    setTransitionHooks(vnode, vnode.transition);\r\n                }\r\n                // avoid vnode being mounted as fresh\r\n                vnode.shapeFlag |= 512 /* COMPONENT_KEPT_ALIVE */;\r\n                // make this key the freshest\r\n                keys.delete(key);\r\n                keys.add(key);\r\n            }\r\n            else {\r\n                keys.add(key);\r\n                // prune oldest entry\r\n                if (max && keys.size > parseInt(max, 10)) {\r\n                    pruneCacheEntry(keys.values().next().value);\r\n                }\r\n            }\r\n            // avoid vnode being unmounted\r\n            vnode.shapeFlag |= 256 /* COMPONENT_SHOULD_KEEP_ALIVE */;\r\n            current = vnode;\r\n            return rawVNode;\r\n        };\r\n    }\r\n};\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nconst KeepAlive = KeepAliveImpl;\r\nfunction matches(pattern, name) {\r\n    if (isArray(pattern)) {\r\n        return pattern.some((p) => matches(p, name));\r\n    }\r\n    else if (isString(pattern)) {\r\n        return pattern.split(',').indexOf(name) > -1;\r\n    }\r\n    else if (pattern.test) {\r\n        return pattern.test(name);\r\n    }\r\n    /* istanbul ignore next */\r\n    return false;\r\n}\r\nfunction onActivated(hook, target) {\r\n    registerKeepAliveHook(hook, \"a\" /* ACTIVATED */, target);\r\n}\r\nfunction onDeactivated(hook, target) {\r\n    registerKeepAliveHook(hook, \"da\" /* DEACTIVATED */, target);\r\n}\r\nfunction registerKeepAliveHook(hook, type, target = currentInstance) {\r\n    // cache the deactivate branch check wrapper for injected hooks so the same\r\n    // hook can be properly deduped by the scheduler. \"__wdc\" stands for \"with\r\n    // deactivation check\".\r\n    const wrappedHook = hook.__wdc ||\r\n        (hook.__wdc = () => {\r\n            // only fire the hook if the target instance is NOT in a deactivated branch.\r\n            let current = target;\r\n            while (current) {\r\n                if (current.isDeactivated) {\r\n                    return;\r\n                }\r\n                current = current.parent;\r\n            }\r\n            hook();\r\n        });\r\n    injectHook(type, wrappedHook, target);\r\n    // In addition to registering it on the target instance, we walk up the parent\r\n    // chain and register it on all ancestor instances that are keep-alive roots.\r\n    // This avoids the need to walk the entire component tree when invoking these\r\n    // hooks, and more importantly, avoids the need to track child components in\r\n    // arrays.\r\n    if (target) {\r\n        let current = target.parent;\r\n        while (current && current.parent) {\r\n            if (isKeepAlive(current.parent.vnode)) {\r\n                injectToKeepAliveRoot(wrappedHook, type, target, current);\r\n            }\r\n            current = current.parent;\r\n        }\r\n    }\r\n}\r\nfunction injectToKeepAliveRoot(hook, type, target, keepAliveRoot) {\r\n    // injectHook wraps the original for error handling, so make sure to remove\r\n    // the wrapped version.\r\n    const injected = injectHook(type, hook, keepAliveRoot, true /* prepend */);\r\n    onUnmounted(() => {\r\n        remove(keepAliveRoot[type], injected);\r\n    }, target);\r\n}\r\nfunction resetShapeFlag(vnode) {\r\n    let shapeFlag = vnode.shapeFlag;\r\n    if (shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n        shapeFlag -= 256 /* COMPONENT_SHOULD_KEEP_ALIVE */;\r\n    }\r\n    if (shapeFlag & 512 /* COMPONENT_KEPT_ALIVE */) {\r\n        shapeFlag -= 512 /* COMPONENT_KEPT_ALIVE */;\r\n    }\r\n    vnode.shapeFlag = shapeFlag;\r\n}\r\nfunction getInnerChild(vnode) {\r\n    return vnode.shapeFlag & 128 /* SUSPENSE */ ? vnode.ssContent : vnode;\r\n}\n\nfunction injectHook(type, hook, target = currentInstance, prepend = false) {\r\n    if (target) {\r\n        const hooks = target[type] || (target[type] = []);\r\n        // cache the error handling wrapper for injected hooks so the same hook\r\n        // can be properly deduped by the scheduler. \"__weh\" stands for \"with error\r\n        // handling\".\r\n        const wrappedHook = hook.__weh ||\r\n            (hook.__weh = (...args) => {\r\n                if (target.isUnmounted) {\r\n                    return;\r\n                }\r\n                // disable tracking inside all lifecycle hooks\r\n                // since they can potentially be called inside effects.\r\n                pauseTracking();\r\n                // Set currentInstance during hook invocation.\r\n                // This assumes the hook does not synchronously trigger other hooks, which\r\n                // can only be false when the user does something really funky.\r\n                setCurrentInstance(target);\r\n                const res = callWithAsyncErrorHandling(hook, target, type, args);\r\n                unsetCurrentInstance();\r\n                resetTracking();\r\n                return res;\r\n            });\r\n        if (prepend) {\r\n            hooks.unshift(wrappedHook);\r\n        }\r\n        else {\r\n            hooks.push(wrappedHook);\r\n        }\r\n        return wrappedHook;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        const apiName = toHandlerKey(ErrorTypeStrings[type].replace(/ hook$/, ''));\r\n        warn(`${apiName} is called when there is no active component instance to be ` +\r\n            `associated with. ` +\r\n            `Lifecycle injection APIs can only be used during execution of setup().` +\r\n            (` If you are using async setup(), make sure to register lifecycle ` +\r\n                    `hooks before the first await statement.`\r\n                ));\r\n    }\r\n}\r\nconst createHook = (lifecycle) => (hook, target = currentInstance) => \r\n// post-create lifecycle registrations are noops during SSR (except for serverPrefetch)\r\n(!isInSSRComponentSetup || lifecycle === \"sp\" /* SERVER_PREFETCH */) &&\r\n    injectHook(lifecycle, hook, target);\r\nconst onBeforeMount = createHook(\"bm\" /* BEFORE_MOUNT */);\r\nconst onMounted = createHook(\"m\" /* MOUNTED */);\r\nconst onBeforeUpdate = createHook(\"bu\" /* BEFORE_UPDATE */);\r\nconst onUpdated = createHook(\"u\" /* UPDATED */);\r\nconst onBeforeUnmount = createHook(\"bum\" /* BEFORE_UNMOUNT */);\r\nconst onUnmounted = createHook(\"um\" /* UNMOUNTED */);\r\nconst onServerPrefetch = createHook(\"sp\" /* SERVER_PREFETCH */);\r\nconst onRenderTriggered = createHook(\"rtg\" /* RENDER_TRIGGERED */);\r\nconst onRenderTracked = createHook(\"rtc\" /* RENDER_TRACKED */);\r\nfunction onErrorCaptured(hook, target = currentInstance) {\r\n    injectHook(\"ec\" /* ERROR_CAPTURED */, hook, target);\r\n}\n\nfunction createDuplicateChecker() {\r\n    const cache = Object.create(null);\r\n    return (type, key) => {\r\n        if (cache[key]) {\r\n            warn(`${type} property \"${key}\" is already defined in ${cache[key]}.`);\r\n        }\r\n        else {\r\n            cache[key] = type;\r\n        }\r\n    };\r\n}\r\nlet shouldCacheAccess = true;\r\nfunction applyOptions(instance) {\r\n    const options = resolveMergedOptions(instance);\r\n    const publicThis = instance.proxy;\r\n    const ctx = instance.ctx;\r\n    // do not cache property access on public proxy during state initialization\r\n    shouldCacheAccess = false;\r\n    // call beforeCreate first before accessing other options since\r\n    // the hook may mutate resolved options (#2791)\r\n    if (options.beforeCreate) {\r\n        callHook(options.beforeCreate, instance, \"bc\" /* BEFORE_CREATE */);\r\n    }\r\n    const { \r\n    // state\r\n    data: dataOptions, computed: computedOptions, methods, watch: watchOptions, provide: provideOptions, inject: injectOptions, \r\n    // lifecycle\r\n    created, beforeMount, mounted, beforeUpdate, updated, activated, deactivated, beforeDestroy, beforeUnmount, destroyed, unmounted, render, renderTracked, renderTriggered, errorCaptured, serverPrefetch, \r\n    // public API\r\n    expose, inheritAttrs, \r\n    // assets\r\n    components, directives, filters } = options;\r\n    const checkDuplicateProperties = (process.env.NODE_ENV !== 'production') ? createDuplicateChecker() : null;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const [propsOptions] = instance.propsOptions;\r\n        if (propsOptions) {\r\n            for (const key in propsOptions) {\r\n                checkDuplicateProperties(\"Props\" /* PROPS */, key);\r\n            }\r\n        }\r\n    }\r\n    // options initialization order (to be consistent with Vue 2):\r\n    // - props (already done outside of this function)\r\n    // - inject\r\n    // - methods\r\n    // - data (deferred since it relies on `this` access)\r\n    // - computed\r\n    // - watch (deferred since it relies on `this` access)\r\n    if (injectOptions) {\r\n        resolveInjections(injectOptions, ctx, checkDuplicateProperties, instance.appContext.config.unwrapInjectedRef);\r\n    }\r\n    if (methods) {\r\n        for (const key in methods) {\r\n            const methodHandler = methods[key];\r\n            if (isFunction$1(methodHandler)) {\r\n                // In dev mode, we use the `createRenderContext` function to define\r\n                // methods to the proxy target, and those are read-only but\r\n                // reconfigurable, so it needs to be redefined here\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    Object.defineProperty(ctx, key, {\r\n                        value: methodHandler.bind(publicThis),\r\n                        configurable: true,\r\n                        enumerable: true,\r\n                        writable: true\r\n                    });\r\n                }\r\n                else {\r\n                    ctx[key] = methodHandler.bind(publicThis);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkDuplicateProperties(\"Methods\" /* METHODS */, key);\r\n                }\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Method \"${key}\" has type \"${typeof methodHandler}\" in the component definition. ` +\r\n                    `Did you reference the function correctly?`);\r\n            }\r\n        }\r\n    }\r\n    if (dataOptions) {\r\n        if ((process.env.NODE_ENV !== 'production') && !isFunction$1(dataOptions)) {\r\n            warn(`The data option must be a function. ` +\r\n                `Plain object usage is no longer supported.`);\r\n        }\r\n        const data = dataOptions.call(publicThis, publicThis);\r\n        if ((process.env.NODE_ENV !== 'production') && isPromise$1(data)) {\r\n            warn(`data() returned a Promise - note data() cannot be async; If you ` +\r\n                `intend to perform data fetching before component renders, use ` +\r\n                `async setup() + <Suspense>.`);\r\n        }\r\n        if (!isObject$1(data)) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`data() should return an object.`);\r\n        }\r\n        else {\r\n            instance.data = reactive(data);\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                for (const key in data) {\r\n                    checkDuplicateProperties(\"Data\" /* DATA */, key);\r\n                    // expose data on ctx during dev\r\n                    if (key[0] !== '$' && key[0] !== '_') {\r\n                        Object.defineProperty(ctx, key, {\r\n                            configurable: true,\r\n                            enumerable: true,\r\n                            get: () => data[key],\r\n                            set: NOOP\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // state initialization complete at this point - start caching access\r\n    shouldCacheAccess = true;\r\n    if (computedOptions) {\r\n        for (const key in computedOptions) {\r\n            const opt = computedOptions[key];\r\n            const get = isFunction$1(opt)\r\n                ? opt.bind(publicThis, publicThis)\r\n                : isFunction$1(opt.get)\r\n                    ? opt.get.bind(publicThis, publicThis)\r\n                    : NOOP;\r\n            if ((process.env.NODE_ENV !== 'production') && get === NOOP) {\r\n                warn(`Computed property \"${key}\" has no getter.`);\r\n            }\r\n            const set = !isFunction$1(opt) && isFunction$1(opt.set)\r\n                ? opt.set.bind(publicThis)\r\n                : (process.env.NODE_ENV !== 'production')\r\n                    ? () => {\r\n                        warn(`Write operation failed: computed property \"${key}\" is readonly.`);\r\n                    }\r\n                    : NOOP;\r\n            const c = computed({\r\n                get,\r\n                set\r\n            });\r\n            Object.defineProperty(ctx, key, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get: () => c.value,\r\n                set: v => (c.value = v)\r\n            });\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                checkDuplicateProperties(\"Computed\" /* COMPUTED */, key);\r\n            }\r\n        }\r\n    }\r\n    if (watchOptions) {\r\n        for (const key in watchOptions) {\r\n            createWatcher(watchOptions[key], ctx, publicThis, key);\r\n        }\r\n    }\r\n    if (provideOptions) {\r\n        const provides = isFunction$1(provideOptions)\r\n            ? provideOptions.call(publicThis)\r\n            : provideOptions;\r\n        Reflect.ownKeys(provides).forEach(key => {\r\n            provide(key, provides[key]);\r\n        });\r\n    }\r\n    if (created) {\r\n        callHook(created, instance, \"c\" /* CREATED */);\r\n    }\r\n    function registerLifecycleHook(register, hook) {\r\n        if (isArray(hook)) {\r\n            hook.forEach(_hook => register(_hook.bind(publicThis)));\r\n        }\r\n        else if (hook) {\r\n            register(hook.bind(publicThis));\r\n        }\r\n    }\r\n    registerLifecycleHook(onBeforeMount, beforeMount);\r\n    registerLifecycleHook(onMounted, mounted);\r\n    registerLifecycleHook(onBeforeUpdate, beforeUpdate);\r\n    registerLifecycleHook(onUpdated, updated);\r\n    registerLifecycleHook(onActivated, activated);\r\n    registerLifecycleHook(onDeactivated, deactivated);\r\n    registerLifecycleHook(onErrorCaptured, errorCaptured);\r\n    registerLifecycleHook(onRenderTracked, renderTracked);\r\n    registerLifecycleHook(onRenderTriggered, renderTriggered);\r\n    registerLifecycleHook(onBeforeUnmount, beforeUnmount);\r\n    registerLifecycleHook(onUnmounted, unmounted);\r\n    registerLifecycleHook(onServerPrefetch, serverPrefetch);\r\n    if (isArray(expose)) {\r\n        if (expose.length) {\r\n            const exposed = instance.exposed || (instance.exposed = {});\r\n            expose.forEach(key => {\r\n                Object.defineProperty(exposed, key, {\r\n                    get: () => publicThis[key],\r\n                    set: val => (publicThis[key] = val)\r\n                });\r\n            });\r\n        }\r\n        else if (!instance.exposed) {\r\n            instance.exposed = {};\r\n        }\r\n    }\r\n    // options that are handled when creating the instance but also need to be\r\n    // applied from mixins\r\n    if (render && instance.render === NOOP) {\r\n        instance.render = render;\r\n    }\r\n    if (inheritAttrs != null) {\r\n        instance.inheritAttrs = inheritAttrs;\r\n    }\r\n    // asset options.\r\n    if (components)\r\n        instance.components = components;\r\n    if (directives)\r\n        instance.directives = directives;\r\n}\r\nfunction resolveInjections(injectOptions, ctx, checkDuplicateProperties = NOOP, unwrapRef = false) {\r\n    if (isArray(injectOptions)) {\r\n        injectOptions = normalizeInject(injectOptions);\r\n    }\r\n    for (const key in injectOptions) {\r\n        const opt = injectOptions[key];\r\n        let injected;\r\n        if (isObject$1(opt)) {\r\n            if ('default' in opt) {\r\n                injected = inject(opt.from || key, opt.default, true /* treat default function as factory */);\r\n            }\r\n            else {\r\n                injected = inject(opt.from || key);\r\n            }\r\n        }\r\n        else {\r\n            injected = inject(opt);\r\n        }\r\n        if (isRef(injected)) {\r\n            // TODO remove the check in 3.3\r\n            if (unwrapRef) {\r\n                Object.defineProperty(ctx, key, {\r\n                    enumerable: true,\r\n                    configurable: true,\r\n                    get: () => injected.value,\r\n                    set: v => (injected.value = v)\r\n                });\r\n            }\r\n            else {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`injected property \"${key}\" is a ref and will be auto-unwrapped ` +\r\n                        `and no longer needs \\`.value\\` in the next minor release. ` +\r\n                        `To opt-in to the new behavior now, ` +\r\n                        `set \\`app.config.unwrapInjectedRef = true\\` (this config is ` +\r\n                        `temporary and will not be needed in the future.)`);\r\n                }\r\n                ctx[key] = injected;\r\n            }\r\n        }\r\n        else {\r\n            ctx[key] = injected;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            checkDuplicateProperties(\"Inject\" /* INJECT */, key);\r\n        }\r\n    }\r\n}\r\nfunction callHook(hook, instance, type) {\r\n    callWithAsyncErrorHandling(isArray(hook)\r\n        ? hook.map(h => h.bind(instance.proxy))\r\n        : hook.bind(instance.proxy), instance, type);\r\n}\r\nfunction createWatcher(raw, ctx, publicThis, key) {\r\n    const getter = key.includes('.')\r\n        ? createPathGetter(publicThis, key)\r\n        : () => publicThis[key];\r\n    if (isString(raw)) {\r\n        const handler = ctx[raw];\r\n        if (isFunction$1(handler)) {\r\n            watch(getter, handler);\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`Invalid watch handler specified by key \"${raw}\"`, handler);\r\n        }\r\n    }\r\n    else if (isFunction$1(raw)) {\r\n        watch(getter, raw.bind(publicThis));\r\n    }\r\n    else if (isObject$1(raw)) {\r\n        if (isArray(raw)) {\r\n            raw.forEach(r => createWatcher(r, ctx, publicThis, key));\r\n        }\r\n        else {\r\n            const handler = isFunction$1(raw.handler)\r\n                ? raw.handler.bind(publicThis)\r\n                : ctx[raw.handler];\r\n            if (isFunction$1(handler)) {\r\n                watch(getter, handler, raw);\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Invalid watch handler specified by key \"${raw.handler}\"`, handler);\r\n            }\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`Invalid watch option: \"${key}\"`, raw);\r\n    }\r\n}\r\n/**\r\n * Resolve merged options and cache it on the component.\r\n * This is done only once per-component since the merging does not involve\r\n * instances.\r\n */\r\nfunction resolveMergedOptions(instance) {\r\n    const base = instance.type;\r\n    const { mixins, extends: extendsOptions } = base;\r\n    const { mixins: globalMixins, optionsCache: cache, config: { optionMergeStrategies } } = instance.appContext;\r\n    const cached = cache.get(base);\r\n    let resolved;\r\n    if (cached) {\r\n        resolved = cached;\r\n    }\r\n    else if (!globalMixins.length && !mixins && !extendsOptions) {\r\n        {\r\n            resolved = base;\r\n        }\r\n    }\r\n    else {\r\n        resolved = {};\r\n        if (globalMixins.length) {\r\n            globalMixins.forEach(m => mergeOptions(resolved, m, optionMergeStrategies, true));\r\n        }\r\n        mergeOptions(resolved, base, optionMergeStrategies);\r\n    }\r\n    cache.set(base, resolved);\r\n    return resolved;\r\n}\r\nfunction mergeOptions(to, from, strats, asMixin = false) {\r\n    const { mixins, extends: extendsOptions } = from;\r\n    if (extendsOptions) {\r\n        mergeOptions(to, extendsOptions, strats, true);\r\n    }\r\n    if (mixins) {\r\n        mixins.forEach((m) => mergeOptions(to, m, strats, true));\r\n    }\r\n    for (const key in from) {\r\n        if (asMixin && key === 'expose') {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`\"expose\" option is ignored when declared in mixins or extends. ` +\r\n                    `It should only be declared in the base component itself.`);\r\n        }\r\n        else {\r\n            const strat = internalOptionMergeStrats[key] || (strats && strats[key]);\r\n            to[key] = strat ? strat(to[key], from[key]) : from[key];\r\n        }\r\n    }\r\n    return to;\r\n}\r\nconst internalOptionMergeStrats = {\r\n    data: mergeDataFn,\r\n    props: mergeObjectOptions,\r\n    emits: mergeObjectOptions,\r\n    // objects\r\n    methods: mergeObjectOptions,\r\n    computed: mergeObjectOptions,\r\n    // lifecycle\r\n    beforeCreate: mergeAsArray,\r\n    created: mergeAsArray,\r\n    beforeMount: mergeAsArray,\r\n    mounted: mergeAsArray,\r\n    beforeUpdate: mergeAsArray,\r\n    updated: mergeAsArray,\r\n    beforeDestroy: mergeAsArray,\r\n    beforeUnmount: mergeAsArray,\r\n    destroyed: mergeAsArray,\r\n    unmounted: mergeAsArray,\r\n    activated: mergeAsArray,\r\n    deactivated: mergeAsArray,\r\n    errorCaptured: mergeAsArray,\r\n    serverPrefetch: mergeAsArray,\r\n    // assets\r\n    components: mergeObjectOptions,\r\n    directives: mergeObjectOptions,\r\n    // watch\r\n    watch: mergeWatchOptions,\r\n    // provide / inject\r\n    provide: mergeDataFn,\r\n    inject: mergeInject\r\n};\r\nfunction mergeDataFn(to, from) {\r\n    if (!from) {\r\n        return to;\r\n    }\r\n    if (!to) {\r\n        return from;\r\n    }\r\n    return function mergedDataFn() {\r\n        return (extend)(isFunction$1(to) ? to.call(this, this) : to, isFunction$1(from) ? from.call(this, this) : from);\r\n    };\r\n}\r\nfunction mergeInject(to, from) {\r\n    return mergeObjectOptions(normalizeInject(to), normalizeInject(from));\r\n}\r\nfunction normalizeInject(raw) {\r\n    if (isArray(raw)) {\r\n        const res = {};\r\n        for (let i = 0; i < raw.length; i++) {\r\n            res[raw[i]] = raw[i];\r\n        }\r\n        return res;\r\n    }\r\n    return raw;\r\n}\r\nfunction mergeAsArray(to, from) {\r\n    return to ? [...new Set([].concat(to, from))] : from;\r\n}\r\nfunction mergeObjectOptions(to, from) {\r\n    return to ? extend(extend(Object.create(null), to), from) : from;\r\n}\r\nfunction mergeWatchOptions(to, from) {\r\n    if (!to)\r\n        return from;\r\n    if (!from)\r\n        return to;\r\n    const merged = extend(Object.create(null), to);\r\n    for (const key in from) {\r\n        merged[key] = mergeAsArray(to[key], from[key]);\r\n    }\r\n    return merged;\r\n}\n\nfunction initProps(instance, rawProps, isStateful, // result of bitwise flag comparison\r\nisSSR = false) {\r\n    const props = {};\r\n    const attrs = {};\r\n    def(attrs, InternalObjectKey, 1);\r\n    instance.propsDefaults = Object.create(null);\r\n    setFullProps(instance, rawProps, props, attrs);\r\n    // ensure all declared prop keys are present\r\n    for (const key in instance.propsOptions[0]) {\r\n        if (!(key in props)) {\r\n            props[key] = undefined;\r\n        }\r\n    }\r\n    // validation\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        validateProps(rawProps || {}, props, instance);\r\n    }\r\n    if (isStateful) {\r\n        // stateful\r\n        instance.props = isSSR ? props : shallowReactive(props);\r\n    }\r\n    else {\r\n        if (!instance.type.props) {\r\n            // functional w/ optional props, props === attrs\r\n            instance.props = attrs;\r\n        }\r\n        else {\r\n            // functional w/ declared props\r\n            instance.props = props;\r\n        }\r\n    }\r\n    instance.attrs = attrs;\r\n}\r\nfunction updateProps(instance, rawProps, rawPrevProps, optimized) {\r\n    const { props, attrs, vnode: { patchFlag } } = instance;\r\n    const rawCurrentProps = toRaw(props);\r\n    const [options] = instance.propsOptions;\r\n    let hasAttrsChanged = false;\r\n    if (\r\n    // always force full diff in dev\r\n    // - #1942 if hmr is enabled with sfc component\r\n    // - vite#872 non-sfc component used by sfc component\r\n    !((process.env.NODE_ENV !== 'production') &&\r\n        (instance.type.__hmrId ||\r\n            (instance.parent && instance.parent.type.__hmrId))) &&\r\n        (optimized || patchFlag > 0) &&\r\n        !(patchFlag & 16 /* FULL_PROPS */)) {\r\n        if (patchFlag & 8 /* PROPS */) {\r\n            // Compiler-generated props & no keys change, just set the updated\r\n            // the props.\r\n            const propsToUpdate = instance.vnode.dynamicProps;\r\n            for (let i = 0; i < propsToUpdate.length; i++) {\r\n                let key = propsToUpdate[i];\r\n                // PROPS flag guarantees rawProps to be non-null\r\n                const value = rawProps[key];\r\n                if (options) {\r\n                    // attr / props separation was done on init and will be consistent\r\n                    // in this code path, so just check if attrs have it.\r\n                    if (hasOwn(attrs, key)) {\r\n                        if (value !== attrs[key]) {\r\n                            attrs[key] = value;\r\n                            hasAttrsChanged = true;\r\n                        }\r\n                    }\r\n                    else {\r\n                        const camelizedKey = camelize(key);\r\n                        props[camelizedKey] = resolvePropValue(options, rawCurrentProps, camelizedKey, value, instance, false /* isAbsent */);\r\n                    }\r\n                }\r\n                else {\r\n                    if (value !== attrs[key]) {\r\n                        attrs[key] = value;\r\n                        hasAttrsChanged = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // full props update.\r\n        if (setFullProps(instance, rawProps, props, attrs)) {\r\n            hasAttrsChanged = true;\r\n        }\r\n        // in case of dynamic props, check if we need to delete keys from\r\n        // the props object\r\n        let kebabKey;\r\n        for (const key in rawCurrentProps) {\r\n            if (!rawProps ||\r\n                // for camelCase\r\n                (!hasOwn(rawProps, key) &&\r\n                    // it's possible the original props was passed in as kebab-case\r\n                    // and converted to camelCase (#955)\r\n                    ((kebabKey = hyphenate(key)) === key || !hasOwn(rawProps, kebabKey)))) {\r\n                if (options) {\r\n                    if (rawPrevProps &&\r\n                        // for camelCase\r\n                        (rawPrevProps[key] !== undefined ||\r\n                            // for kebab-case\r\n                            rawPrevProps[kebabKey] !== undefined)) {\r\n                        props[key] = resolvePropValue(options, rawCurrentProps, key, undefined, instance, true /* isAbsent */);\r\n                    }\r\n                }\r\n                else {\r\n                    delete props[key];\r\n                }\r\n            }\r\n        }\r\n        // in the case of functional component w/o props declaration, props and\r\n        // attrs point to the same object so it should already have been updated.\r\n        if (attrs !== rawCurrentProps) {\r\n            for (const key in attrs) {\r\n                if (!rawProps || !hasOwn(rawProps, key)) {\r\n                    delete attrs[key];\r\n                    hasAttrsChanged = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // trigger updates for $attrs in case it's used in component slots\r\n    if (hasAttrsChanged) {\r\n        trigger(instance, \"set\" /* SET */, '$attrs');\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        validateProps(rawProps || {}, props, instance);\r\n    }\r\n}\r\nfunction setFullProps(instance, rawProps, props, attrs) {\r\n    const [options, needCastKeys] = instance.propsOptions;\r\n    let hasAttrsChanged = false;\r\n    let rawCastValues;\r\n    if (rawProps) {\r\n        for (let key in rawProps) {\r\n            // key, ref are reserved and never passed down\r\n            if (isReservedProp(key)) {\r\n                continue;\r\n            }\r\n            const value = rawProps[key];\r\n            // prop option names are camelized during normalization, so to support\r\n            // kebab -> camel conversion here we need to camelize the key.\r\n            let camelKey;\r\n            if (options && hasOwn(options, (camelKey = camelize(key)))) {\r\n                if (!needCastKeys || !needCastKeys.includes(camelKey)) {\r\n                    props[camelKey] = value;\r\n                }\r\n                else {\r\n                    (rawCastValues || (rawCastValues = {}))[camelKey] = value;\r\n                }\r\n            }\r\n            else if (!isEmitListener(instance.emitsOptions, key)) {\r\n                if (value !== attrs[key]) {\r\n                    attrs[key] = value;\r\n                    hasAttrsChanged = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (needCastKeys) {\r\n        const rawCurrentProps = toRaw(props);\r\n        const castValues = rawCastValues || EMPTY_OBJ;\r\n        for (let i = 0; i < needCastKeys.length; i++) {\r\n            const key = needCastKeys[i];\r\n            props[key] = resolvePropValue(options, rawCurrentProps, key, castValues[key], instance, !hasOwn(castValues, key));\r\n        }\r\n    }\r\n    return hasAttrsChanged;\r\n}\r\nfunction resolvePropValue(options, props, key, value, instance, isAbsent) {\r\n    const opt = options[key];\r\n    if (opt != null) {\r\n        const hasDefault = hasOwn(opt, 'default');\r\n        // default values\r\n        if (hasDefault && value === undefined) {\r\n            const defaultValue = opt.default;\r\n            if (opt.type !== Function && isFunction$1(defaultValue)) {\r\n                const { propsDefaults } = instance;\r\n                if (key in propsDefaults) {\r\n                    value = propsDefaults[key];\r\n                }\r\n                else {\r\n                    setCurrentInstance(instance);\r\n                    value = propsDefaults[key] = defaultValue.call(null, props);\r\n                    unsetCurrentInstance();\r\n                }\r\n            }\r\n            else {\r\n                value = defaultValue;\r\n            }\r\n        }\r\n        // boolean casting\r\n        if (opt[0 /* shouldCast */]) {\r\n            if (isAbsent && !hasDefault) {\r\n                value = false;\r\n            }\r\n            else if (opt[1 /* shouldCastTrue */] &&\r\n                (value === '' || value === hyphenate(key))) {\r\n                value = true;\r\n            }\r\n        }\r\n    }\r\n    return value;\r\n}\r\nfunction normalizePropsOptions(comp, appContext, asMixin = false) {\r\n    const cache = appContext.propsCache;\r\n    const cached = cache.get(comp);\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    const raw = comp.props;\r\n    const normalized = {};\r\n    const needCastKeys = [];\r\n    // apply mixin/extends props\r\n    let hasExtends = false;\r\n    if (__VUE_OPTIONS_API__ && !isFunction$1(comp)) {\r\n        const extendProps = (raw) => {\r\n            hasExtends = true;\r\n            const [props, keys] = normalizePropsOptions(raw, appContext, true);\r\n            extend(normalized, props);\r\n            if (keys)\r\n                needCastKeys.push(...keys);\r\n        };\r\n        if (!asMixin && appContext.mixins.length) {\r\n            appContext.mixins.forEach(extendProps);\r\n        }\r\n        if (comp.extends) {\r\n            extendProps(comp.extends);\r\n        }\r\n        if (comp.mixins) {\r\n            comp.mixins.forEach(extendProps);\r\n        }\r\n    }\r\n    if (!raw && !hasExtends) {\r\n        cache.set(comp, EMPTY_ARR);\r\n        return EMPTY_ARR;\r\n    }\r\n    if (isArray(raw)) {\r\n        for (let i = 0; i < raw.length; i++) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isString(raw[i])) {\r\n                warn(`props must be strings when using array syntax.`, raw[i]);\r\n            }\r\n            const normalizedKey = camelize(raw[i]);\r\n            if (validatePropName(normalizedKey)) {\r\n                normalized[normalizedKey] = EMPTY_OBJ;\r\n            }\r\n        }\r\n    }\r\n    else if (raw) {\r\n        if ((process.env.NODE_ENV !== 'production') && !isObject$1(raw)) {\r\n            warn(`invalid props options`, raw);\r\n        }\r\n        for (const key in raw) {\r\n            const normalizedKey = camelize(key);\r\n            if (validatePropName(normalizedKey)) {\r\n                const opt = raw[key];\r\n                const prop = (normalized[normalizedKey] =\r\n                    isArray(opt) || isFunction$1(opt) ? { type: opt } : opt);\r\n                if (prop) {\r\n                    const booleanIndex = getTypeIndex(Boolean, prop.type);\r\n                    const stringIndex = getTypeIndex(String, prop.type);\r\n                    prop[0 /* shouldCast */] = booleanIndex > -1;\r\n                    prop[1 /* shouldCastTrue */] =\r\n                        stringIndex < 0 || booleanIndex < stringIndex;\r\n                    // if the prop needs boolean casting or default value\r\n                    if (booleanIndex > -1 || hasOwn(prop, 'default')) {\r\n                        needCastKeys.push(normalizedKey);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    const res = [normalized, needCastKeys];\r\n    cache.set(comp, res);\r\n    return res;\r\n}\r\nfunction validatePropName(key) {\r\n    if (key[0] !== '$') {\r\n        return true;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`Invalid prop name: \"${key}\" is a reserved property.`);\r\n    }\r\n    return false;\r\n}\r\n// use function string name to check type constructors\r\n// so that it works across vms / iframes.\r\nfunction getType(ctor) {\r\n    const match = ctor && ctor.toString().match(/^\\s*function (\\w+)/);\r\n    return match ? match[1] : ctor === null ? 'null' : '';\r\n}\r\nfunction isSameType(a, b) {\r\n    return getType(a) === getType(b);\r\n}\r\nfunction getTypeIndex(type, expectedTypes) {\r\n    if (isArray(expectedTypes)) {\r\n        return expectedTypes.findIndex(t => isSameType(t, type));\r\n    }\r\n    else if (isFunction$1(expectedTypes)) {\r\n        return isSameType(expectedTypes, type) ? 0 : -1;\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction validateProps(rawProps, props, instance) {\r\n    const resolvedValues = toRaw(props);\r\n    const options = instance.propsOptions[0];\r\n    for (const key in options) {\r\n        let opt = options[key];\r\n        if (opt == null)\r\n            continue;\r\n        validateProp(key, resolvedValues[key], opt, !hasOwn(rawProps, key) && !hasOwn(rawProps, hyphenate(key)));\r\n    }\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction validateProp(name, value, prop, isAbsent) {\r\n    const { type, required, validator } = prop;\r\n    // required!\r\n    if (required && isAbsent) {\r\n        warn('Missing required prop: \"' + name + '\"');\r\n        return;\r\n    }\r\n    // missing but optional\r\n    if (value == null && !prop.required) {\r\n        return;\r\n    }\r\n    // type check\r\n    if (type != null && type !== true) {\r\n        let isValid = false;\r\n        const types = isArray(type) ? type : [type];\r\n        const expectedTypes = [];\r\n        // value is valid as long as one of the specified types match\r\n        for (let i = 0; i < types.length && !isValid; i++) {\r\n            const { valid, expectedType } = assertType(value, types[i]);\r\n            expectedTypes.push(expectedType || '');\r\n            isValid = valid;\r\n        }\r\n        if (!isValid) {\r\n            warn(getInvalidTypeMessage(name, value, expectedTypes));\r\n            return;\r\n        }\r\n    }\r\n    // custom validator\r\n    if (validator && !validator(value)) {\r\n        warn('Invalid prop: custom validator check failed for prop \"' + name + '\".');\r\n    }\r\n}\r\nconst isSimpleType = /*#__PURE__*/ makeMap('String,Number,Boolean,Function,Symbol,BigInt');\r\n/**\r\n * dev only\r\n */\r\nfunction assertType(value, type) {\r\n    let valid;\r\n    const expectedType = getType(type);\r\n    if (isSimpleType(expectedType)) {\r\n        const t = typeof value;\r\n        valid = t === expectedType.toLowerCase();\r\n        // for primitive wrapper objects\r\n        if (!valid && t === 'object') {\r\n            valid = value instanceof type;\r\n        }\r\n    }\r\n    else if (expectedType === 'Object') {\r\n        valid = isObject$1(value);\r\n    }\r\n    else if (expectedType === 'Array') {\r\n        valid = isArray(value);\r\n    }\r\n    else if (expectedType === 'null') {\r\n        valid = value === null;\r\n    }\r\n    else {\r\n        valid = value instanceof type;\r\n    }\r\n    return {\r\n        valid,\r\n        expectedType\r\n    };\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction getInvalidTypeMessage(name, value, expectedTypes) {\r\n    let message = `Invalid prop: type check failed for prop \"${name}\".` +\r\n        ` Expected ${expectedTypes.map(capitalize).join(' | ')}`;\r\n    const expectedType = expectedTypes[0];\r\n    const receivedType = toRawType(value);\r\n    const expectedValue = styleValue(value, expectedType);\r\n    const receivedValue = styleValue(value, receivedType);\r\n    // check if we need to specify expected value\r\n    if (expectedTypes.length === 1 &&\r\n        isExplicable(expectedType) &&\r\n        !isBoolean(expectedType, receivedType)) {\r\n        message += ` with value ${expectedValue}`;\r\n    }\r\n    message += `, got ${receivedType} `;\r\n    // check if we need to specify received value\r\n    if (isExplicable(receivedType)) {\r\n        message += `with value ${receivedValue}.`;\r\n    }\r\n    return message;\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction styleValue(value, type) {\r\n    if (type === 'String') {\r\n        return `\"${value}\"`;\r\n    }\r\n    else if (type === 'Number') {\r\n        return `${Number(value)}`;\r\n    }\r\n    else {\r\n        return `${value}`;\r\n    }\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction isExplicable(type) {\r\n    const explicitTypes = ['string', 'number', 'boolean'];\r\n    return explicitTypes.some(elem => type.toLowerCase() === elem);\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction isBoolean(...args) {\r\n    return args.some(elem => elem.toLowerCase() === 'boolean');\r\n}\n\nconst isInternalKey = (key) => key[0] === '_' || key === '$stable';\r\nconst normalizeSlotValue = (value) => isArray(value)\r\n    ? value.map(normalizeVNode)\r\n    : [normalizeVNode(value)];\r\nconst normalizeSlot = (key, rawSlot, ctx) => {\r\n    const normalized = withCtx((...args) => {\r\n        if ((process.env.NODE_ENV !== 'production') && currentInstance) {\r\n            warn(`Slot \"${key}\" invoked outside of the render function: ` +\r\n                `this will not track dependencies used in the slot. ` +\r\n                `Invoke the slot function inside the render function instead.`);\r\n        }\r\n        return normalizeSlotValue(rawSlot(...args));\r\n    }, ctx);\r\n    normalized._c = false;\r\n    return normalized;\r\n};\r\nconst normalizeObjectSlots = (rawSlots, slots, instance) => {\r\n    const ctx = rawSlots._ctx;\r\n    for (const key in rawSlots) {\r\n        if (isInternalKey(key))\r\n            continue;\r\n        const value = rawSlots[key];\r\n        if (isFunction$1(value)) {\r\n            slots[key] = normalizeSlot(key, value, ctx);\r\n        }\r\n        else if (value != null) {\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                !(false )) {\r\n                warn(`Non-function value encountered for slot \"${key}\". ` +\r\n                    `Prefer function slots for better performance.`);\r\n            }\r\n            const normalized = normalizeSlotValue(value);\r\n            slots[key] = () => normalized;\r\n        }\r\n    }\r\n};\r\nconst normalizeVNodeSlots = (instance, children) => {\r\n    if ((process.env.NODE_ENV !== 'production') &&\r\n        !isKeepAlive(instance.vnode) &&\r\n        !(false )) {\r\n        warn(`Non-function value encountered for default slot. ` +\r\n            `Prefer function slots for better performance.`);\r\n    }\r\n    const normalized = normalizeSlotValue(children);\r\n    instance.slots.default = () => normalized;\r\n};\r\nconst initSlots = (instance, children) => {\r\n    if (instance.vnode.shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        const type = children._;\r\n        if (type) {\r\n            // users can get the shallow readonly version of the slots object through `this.$slots`,\r\n            // we should avoid the proxy object polluting the slots of the internal instance\r\n            instance.slots = toRaw(children);\r\n            // make compiler marker non-enumerable\r\n            def(children, '_', type);\r\n        }\r\n        else {\r\n            normalizeObjectSlots(children, (instance.slots = {}));\r\n        }\r\n    }\r\n    else {\r\n        instance.slots = {};\r\n        if (children) {\r\n            normalizeVNodeSlots(instance, children);\r\n        }\r\n    }\r\n    def(instance.slots, InternalObjectKey, 1);\r\n};\r\nconst updateSlots = (instance, children, optimized) => {\r\n    const { vnode, slots } = instance;\r\n    let needDeletionCheck = true;\r\n    let deletionComparisonTarget = EMPTY_OBJ;\r\n    if (vnode.shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        const type = children._;\r\n        if (type) {\r\n            // compiled slots.\r\n            if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n                // Parent was HMR updated so slot content may have changed.\r\n                // force update slots and mark instance for hmr as well\r\n                extend(slots, children);\r\n            }\r\n            else if (optimized && type === 1 /* STABLE */) {\r\n                // compiled AND stable.\r\n                // no need to update, and skip stale slots removal.\r\n                needDeletionCheck = false;\r\n            }\r\n            else {\r\n                // compiled but dynamic (v-if/v-for on slots) - update slots, but skip\r\n                // normalization.\r\n                extend(slots, children);\r\n                // #2893\r\n                // when rendering the optimized slots by manually written render function,\r\n                // we need to delete the `slots._` flag if necessary to make subsequent updates reliable,\r\n                // i.e. let the `renderSlot` create the bailed Fragment\r\n                if (!optimized && type === 1 /* STABLE */) {\r\n                    delete slots._;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            needDeletionCheck = !children.$stable;\r\n            normalizeObjectSlots(children, slots);\r\n        }\r\n        deletionComparisonTarget = children;\r\n    }\r\n    else if (children) {\r\n        // non slot object children (direct value) passed to a component\r\n        normalizeVNodeSlots(instance, children);\r\n        deletionComparisonTarget = { default: 1 };\r\n    }\r\n    // delete stale slots\r\n    if (needDeletionCheck) {\r\n        for (const key in slots) {\r\n            if (!isInternalKey(key) && !(key in deletionComparisonTarget)) {\r\n                delete slots[key];\r\n            }\r\n        }\r\n    }\r\n};\n\n/**\r\nRuntime helper for applying directives to a vnode. Example usage:\r\n\nconst comp = resolveComponent('comp')\r\nconst foo = resolveDirective('foo')\r\nconst bar = resolveDirective('bar')\r\n\nreturn withDirectives(h(comp), [\r\n  [foo, this.x],\r\n  [bar, this.y]\r\n])\r\n*/\r\nconst isBuiltInDirective = /*#__PURE__*/ makeMap('bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text');\r\nfunction validateDirectiveName(name) {\r\n    if (isBuiltInDirective(name)) {\r\n        warn('Do not use built-in directive ids as custom directive id: ' + name);\r\n    }\r\n}\r\n/**\r\n * Adds directives to a VNode.\r\n */\r\nfunction withDirectives(vnode, directives) {\r\n    const internalInstance = currentRenderingInstance;\r\n    if (internalInstance === null) {\r\n        (process.env.NODE_ENV !== 'production') && warn(`withDirectives can only be used inside render functions.`);\r\n        return vnode;\r\n    }\r\n    const instance = internalInstance.proxy;\r\n    const bindings = vnode.dirs || (vnode.dirs = []);\r\n    for (let i = 0; i < directives.length; i++) {\r\n        let [dir, value, arg, modifiers = EMPTY_OBJ] = directives[i];\r\n        if (isFunction$1(dir)) {\r\n            dir = {\r\n                mounted: dir,\r\n                updated: dir\r\n            };\r\n        }\r\n        if (dir.deep) {\r\n            traverse(value);\r\n        }\r\n        bindings.push({\r\n            dir,\r\n            instance,\r\n            value,\r\n            oldValue: void 0,\r\n            arg,\r\n            modifiers\r\n        });\r\n    }\r\n    return vnode;\r\n}\r\nfunction invokeDirectiveHook(vnode, prevVNode, instance, name) {\r\n    const bindings = vnode.dirs;\r\n    const oldBindings = prevVNode && prevVNode.dirs;\r\n    for (let i = 0; i < bindings.length; i++) {\r\n        const binding = bindings[i];\r\n        if (oldBindings) {\r\n            binding.oldValue = oldBindings[i].value;\r\n        }\r\n        let hook = binding.dir[name];\r\n        if (hook) {\r\n            // disable tracking inside all lifecycle hooks\r\n            // since they can potentially be called inside effects.\r\n            pauseTracking();\r\n            callWithAsyncErrorHandling(hook, instance, 8 /* DIRECTIVE_HOOK */, [\r\n                vnode.el,\r\n                binding,\r\n                vnode,\r\n                prevVNode\r\n            ]);\r\n            resetTracking();\r\n        }\r\n    }\r\n}\n\nfunction createAppContext() {\r\n    return {\r\n        app: null,\r\n        config: {\r\n            isNativeTag: NO,\r\n            performance: false,\r\n            globalProperties: {},\r\n            optionMergeStrategies: {},\r\n            errorHandler: undefined,\r\n            warnHandler: undefined,\r\n            compilerOptions: {}\r\n        },\r\n        mixins: [],\r\n        components: {},\r\n        directives: {},\r\n        provides: Object.create(null),\r\n        optionsCache: new WeakMap(),\r\n        propsCache: new WeakMap(),\r\n        emitsCache: new WeakMap()\r\n    };\r\n}\r\nlet uid = 0;\r\nfunction createAppAPI(render, hydrate) {\r\n    return function createApp(rootComponent, rootProps = null) {\r\n        if (rootProps != null && !isObject$1(rootProps)) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`root props passed to app.mount() must be an object.`);\r\n            rootProps = null;\r\n        }\r\n        const context = createAppContext();\r\n        const installedPlugins = new Set();\r\n        let isMounted = false;\r\n        const app = (context.app = {\r\n            _uid: uid++,\r\n            _component: rootComponent,\r\n            _props: rootProps,\r\n            _container: null,\r\n            _context: context,\r\n            _instance: null,\r\n            version,\r\n            get config() {\r\n                return context.config;\r\n            },\r\n            set config(v) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`app.config cannot be replaced. Modify individual options instead.`);\r\n                }\r\n            },\r\n            use(plugin, ...options) {\r\n                if (installedPlugins.has(plugin)) {\r\n                    (process.env.NODE_ENV !== 'production') && warn(`Plugin has already been applied to target app.`);\r\n                }\r\n                else if (plugin && isFunction$1(plugin.install)) {\r\n                    installedPlugins.add(plugin);\r\n                    plugin.install(app, ...options);\r\n                }\r\n                else if (isFunction$1(plugin)) {\r\n                    installedPlugins.add(plugin);\r\n                    plugin(app, ...options);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`A plugin must either be a function or an object with an \"install\" ` +\r\n                        `function.`);\r\n                }\r\n                return app;\r\n            },\r\n            mixin(mixin) {\r\n                if (__VUE_OPTIONS_API__) {\r\n                    if (!context.mixins.includes(mixin)) {\r\n                        context.mixins.push(mixin);\r\n                    }\r\n                    else if ((process.env.NODE_ENV !== 'production')) {\r\n                        warn('Mixin has already been applied to target app' +\r\n                            (mixin.name ? `: ${mixin.name}` : ''));\r\n                    }\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Mixins are only available in builds supporting Options API');\r\n                }\r\n                return app;\r\n            },\r\n            component(name, component) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    validateComponentName(name, context.config);\r\n                }\r\n                if (!component) {\r\n                    return context.components[name];\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && context.components[name]) {\r\n                    warn(`Component \"${name}\" has already been registered in target app.`);\r\n                }\r\n                context.components[name] = component;\r\n                return app;\r\n            },\r\n            directive(name, directive) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    validateDirectiveName(name);\r\n                }\r\n                if (!directive) {\r\n                    return context.directives[name];\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && context.directives[name]) {\r\n                    warn(`Directive \"${name}\" has already been registered in target app.`);\r\n                }\r\n                context.directives[name] = directive;\r\n                return app;\r\n            },\r\n            mount(rootContainer, isHydrate, isSVG) {\r\n                if (!isMounted) {\r\n                    const vnode = createVNode(rootComponent, rootProps);\r\n                    // store app context on the root VNode.\r\n                    // this will be set on the root instance on initial mount.\r\n                    vnode.appContext = context;\r\n                    // HMR root reload\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        context.reload = () => {\r\n                            render(cloneVNode(vnode), rootContainer, isSVG);\r\n                        };\r\n                    }\r\n                    if (isHydrate && hydrate) {\r\n                        hydrate(vnode, rootContainer);\r\n                    }\r\n                    else {\r\n                        render(vnode, rootContainer, isSVG);\r\n                    }\r\n                    isMounted = true;\r\n                    app._container = rootContainer;\r\n                    rootContainer.__vue_app__ = app;\r\n                    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                        app._instance = vnode.component;\r\n                        devtoolsInitApp(app, version);\r\n                    }\r\n                    return getExposeProxy(vnode.component) || vnode.component.proxy;\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`App has already been mounted.\\n` +\r\n                        `If you want to remount the same app, move your app creation logic ` +\r\n                        `into a factory function and create fresh app instances for each ` +\r\n                        `mount - e.g. \\`const createMyApp = () => createApp(App)\\``);\r\n                }\r\n            },\r\n            unmount() {\r\n                if (isMounted) {\r\n                    render(null, app._container);\r\n                    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                        app._instance = null;\r\n                        devtoolsUnmountApp(app);\r\n                    }\r\n                    delete app._container.__vue_app__;\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`Cannot unmount an app that is not mounted.`);\r\n                }\r\n            },\r\n            provide(key, value) {\r\n                if ((process.env.NODE_ENV !== 'production') && key in context.provides) {\r\n                    warn(`App already provides property with key \"${String(key)}\". ` +\r\n                        `It will be overwritten with the new value.`);\r\n                }\r\n                // TypeScript doesn't allow symbols as index type\r\n                // https://github.com/Microsoft/TypeScript/issues/24587\r\n                context.provides[key] = value;\r\n                return app;\r\n            }\r\n        });\r\n        return app;\r\n    };\r\n}\n\nlet hasMismatch = false;\r\nconst isSVGContainer = (container) => /svg/.test(container.namespaceURI) && container.tagName !== 'foreignObject';\r\nconst isComment = (node) => node.nodeType === 8 /* COMMENT */;\r\n// Note: hydration is DOM-specific\r\n// But we have to place it in core due to tight coupling with core - splitting\r\n// it out creates a ton of unnecessary complexity.\r\n// Hydration also depends on some renderer internal logic which needs to be\r\n// passed in via arguments.\r\nfunction createHydrationFunctions(rendererInternals) {\r\n    const { mt: mountComponent, p: patch, o: { patchProp, nextSibling, parentNode, remove, insert, createComment } } = rendererInternals;\r\n    const hydrate = (vnode, container) => {\r\n        if (!container.hasChildNodes()) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Attempting to hydrate existing markup but container is empty. ` +\r\n                    `Performing full mount instead.`);\r\n            patch(null, vnode, container);\r\n            flushPostFlushCbs();\r\n            return;\r\n        }\r\n        hasMismatch = false;\r\n        hydrateNode(container.firstChild, vnode, null, null, null);\r\n        flushPostFlushCbs();\r\n        if (hasMismatch && !false) {\r\n            // this error should show up in production\r\n            console.error(`Hydration completed but contains mismatches.`);\r\n        }\r\n    };\r\n    const hydrateNode = (node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized = false) => {\r\n        const isFragmentStart = isComment(node) && node.data === '[';\r\n        const onMismatch = () => handleMismatch(node, vnode, parentComponent, parentSuspense, slotScopeIds, isFragmentStart);\r\n        const { type, ref, shapeFlag } = vnode;\r\n        const domType = node.nodeType;\r\n        vnode.el = node;\r\n        let nextNode = null;\r\n        switch (type) {\r\n            case Text:\r\n                if (domType !== 3 /* TEXT */) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    if (node.data !== vnode.children) {\r\n                        hasMismatch = true;\r\n                        (process.env.NODE_ENV !== 'production') &&\r\n                            warn(`Hydration text mismatch:` +\r\n                                `\\n- Client: ${JSON.stringify(node.data)}` +\r\n                                `\\n- Server: ${JSON.stringify(vnode.children)}`);\r\n                        node.data = vnode.children;\r\n                    }\r\n                    nextNode = nextSibling(node);\r\n                }\r\n                break;\r\n            case Comment:\r\n                if (domType !== 8 /* COMMENT */ || isFragmentStart) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    nextNode = nextSibling(node);\r\n                }\r\n                break;\r\n            case Static:\r\n                if (domType !== 1 /* ELEMENT */) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    // determine anchor, adopt content\r\n                    nextNode = node;\r\n                    // if the static vnode has its content stripped during build,\r\n                    // adopt it from the server-rendered HTML.\r\n                    const needToAdoptContent = !vnode.children.length;\r\n                    for (let i = 0; i < vnode.staticCount; i++) {\r\n                        if (needToAdoptContent)\r\n                            vnode.children += nextNode.outerHTML;\r\n                        if (i === vnode.staticCount - 1) {\r\n                            vnode.anchor = nextNode;\r\n                        }\r\n                        nextNode = nextSibling(nextNode);\r\n                    }\r\n                    return nextNode;\r\n                }\r\n                break;\r\n            case Fragment:\r\n                if (!isFragmentStart) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    nextNode = hydrateFragment(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n                }\r\n                break;\r\n            default:\r\n                if (shapeFlag & 1 /* ELEMENT */) {\r\n                    if (domType !== 1 /* ELEMENT */ ||\r\n                        vnode.type.toLowerCase() !==\r\n                            node.tagName.toLowerCase()) {\r\n                        nextNode = onMismatch();\r\n                    }\r\n                    else {\r\n                        nextNode = hydrateElement(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n                    }\r\n                }\r\n                else if (shapeFlag & 6 /* COMPONENT */) {\r\n                    // when setting up the render effect, if the initial vnode already\r\n                    // has .el set, the component will perform hydration instead of mount\r\n                    // on its sub-tree.\r\n                    vnode.slotScopeIds = slotScopeIds;\r\n                    const container = parentNode(node);\r\n                    mountComponent(vnode, container, null, parentComponent, parentSuspense, isSVGContainer(container), optimized);\r\n                    // component may be async, so in the case of fragments we cannot rely\r\n                    // on component's rendered output to determine the end of the fragment\r\n                    // instead, we do a lookahead to find the end anchor node.\r\n                    nextNode = isFragmentStart\r\n                        ? locateClosingAsyncAnchor(node)\r\n                        : nextSibling(node);\r\n                    // #3787\r\n                    // if component is async, it may get moved / unmounted before its\r\n                    // inner component is loaded, so we need to give it a placeholder\r\n                    // vnode that matches its adopted DOM.\r\n                    if (isAsyncWrapper(vnode)) {\r\n                        let subTree;\r\n                        if (isFragmentStart) {\r\n                            subTree = createVNode(Fragment);\r\n                            subTree.anchor = nextNode\r\n                                ? nextNode.previousSibling\r\n                                : container.lastChild;\r\n                        }\r\n                        else {\r\n                            subTree =\r\n                                node.nodeType === 3 ? createTextVNode('') : createVNode('div');\r\n                        }\r\n                        subTree.el = node;\r\n                        vnode.component.subTree = subTree;\r\n                    }\r\n                }\r\n                else if (shapeFlag & 64 /* TELEPORT */) {\r\n                    if (domType !== 8 /* COMMENT */) {\r\n                        nextNode = onMismatch();\r\n                    }\r\n                    else {\r\n                        nextNode = vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized, rendererInternals, hydrateChildren);\r\n                    }\r\n                }\r\n                else if (shapeFlag & 128 /* SUSPENSE */) {\r\n                    nextNode = vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, isSVGContainer(parentNode(node)), slotScopeIds, optimized, rendererInternals, hydrateNode);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Invalid HostVNode type:', type, `(${typeof type})`);\r\n                }\r\n        }\r\n        if (ref != null) {\r\n            setRef(ref, null, parentSuspense, vnode);\r\n        }\r\n        return nextNode;\r\n    };\r\n    const hydrateElement = (el, vnode, parentComponent, parentSuspense, slotScopeIds, optimized) => {\r\n        optimized = optimized || !!vnode.dynamicChildren;\r\n        const { type, props, patchFlag, shapeFlag, dirs } = vnode;\r\n        // #4006 for form elements with non-string v-model value bindings\r\n        // e.g. <option :value=\"obj\">, <input type=\"checkbox\" :true-value=\"1\">\r\n        const forcePatchValue = (type === 'input' && dirs) || type === 'option';\r\n        // skip props & children if this is hoisted static nodes\r\n        if (forcePatchValue || patchFlag !== -1 /* HOISTED */) {\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'created');\r\n            }\r\n            // props\r\n            if (props) {\r\n                if (forcePatchValue ||\r\n                    !optimized ||\r\n                    patchFlag & (16 /* FULL_PROPS */ | 32 /* HYDRATE_EVENTS */)) {\r\n                    for (const key in props) {\r\n                        if ((forcePatchValue && key.endsWith('value')) ||\r\n                            (isOn(key) && !isReservedProp(key))) {\r\n                            patchProp(el, key, null, props[key], false, undefined, parentComponent);\r\n                        }\r\n                    }\r\n                }\r\n                else if (props.onClick) {\r\n                    // Fast path for click listeners (which is most often) to avoid\r\n                    // iterating through props.\r\n                    patchProp(el, 'onClick', null, props.onClick, false, undefined, parentComponent);\r\n                }\r\n            }\r\n            // vnode / directive hooks\r\n            let vnodeHooks;\r\n            if ((vnodeHooks = props && props.onVnodeBeforeMount)) {\r\n                invokeVNodeHook(vnodeHooks, parentComponent, vnode);\r\n            }\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');\r\n            }\r\n            if ((vnodeHooks = props && props.onVnodeMounted) || dirs) {\r\n                queueEffectWithSuspense(() => {\r\n                    vnodeHooks && invokeVNodeHook(vnodeHooks, parentComponent, vnode);\r\n                    dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');\r\n                }, parentSuspense);\r\n            }\r\n            // children\r\n            if (shapeFlag & 16 /* ARRAY_CHILDREN */ &&\r\n                // skip if element has innerHTML / textContent\r\n                !(props && (props.innerHTML || props.textContent))) {\r\n                let next = hydrateChildren(el.firstChild, vnode, el, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n                let hasWarned = false;\r\n                while (next) {\r\n                    hasMismatch = true;\r\n                    if ((process.env.NODE_ENV !== 'production') && !hasWarned) {\r\n                        warn(`Hydration children mismatch in <${vnode.type}>: ` +\r\n                            `server rendered element contains more child nodes than client vdom.`);\r\n                        hasWarned = true;\r\n                    }\r\n                    // The SSRed DOM contains more nodes than it should. Remove them.\r\n                    const cur = next;\r\n                    next = next.nextSibling;\r\n                    remove(cur);\r\n                }\r\n            }\r\n            else if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                if (el.textContent !== vnode.children) {\r\n                    hasMismatch = true;\r\n                    (process.env.NODE_ENV !== 'production') &&\r\n                        warn(`Hydration text content mismatch in <${vnode.type}>:\\n` +\r\n                            `- Client: ${el.textContent}\\n` +\r\n                            `- Server: ${vnode.children}`);\r\n                    el.textContent = vnode.children;\r\n                }\r\n            }\r\n        }\r\n        return el.nextSibling;\r\n    };\r\n    const hydrateChildren = (node, parentVNode, container, parentComponent, parentSuspense, slotScopeIds, optimized) => {\r\n        optimized = optimized || !!parentVNode.dynamicChildren;\r\n        const children = parentVNode.children;\r\n        const l = children.length;\r\n        let hasWarned = false;\r\n        for (let i = 0; i < l; i++) {\r\n            const vnode = optimized\r\n                ? children[i]\r\n                : (children[i] = normalizeVNode(children[i]));\r\n            if (node) {\r\n                node = hydrateNode(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n            }\r\n            else if (vnode.type === Text && !vnode.children) {\r\n                continue;\r\n            }\r\n            else {\r\n                hasMismatch = true;\r\n                if ((process.env.NODE_ENV !== 'production') && !hasWarned) {\r\n                    warn(`Hydration children mismatch in <${container.tagName.toLowerCase()}>: ` +\r\n                        `server rendered element contains fewer child nodes than client vdom.`);\r\n                    hasWarned = true;\r\n                }\r\n                // the SSRed DOM didn't contain enough nodes. Mount the missing ones.\r\n                patch(null, vnode, container, null, parentComponent, parentSuspense, isSVGContainer(container), slotScopeIds);\r\n            }\r\n        }\r\n        return node;\r\n    };\r\n    const hydrateFragment = (node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized) => {\r\n        const { slotScopeIds: fragmentSlotScopeIds } = vnode;\r\n        if (fragmentSlotScopeIds) {\r\n            slotScopeIds = slotScopeIds\r\n                ? slotScopeIds.concat(fragmentSlotScopeIds)\r\n                : fragmentSlotScopeIds;\r\n        }\r\n        const container = parentNode(node);\r\n        const next = hydrateChildren(nextSibling(node), vnode, container, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n        if (next && isComment(next) && next.data === ']') {\r\n            return nextSibling((vnode.anchor = next));\r\n        }\r\n        else {\r\n            // fragment didn't hydrate successfully, since we didn't get a end anchor\r\n            // back. This should have led to node/children mismatch warnings.\r\n            hasMismatch = true;\r\n            // since the anchor is missing, we need to create one and insert it\r\n            insert((vnode.anchor = createComment(`]`)), container, next);\r\n            return next;\r\n        }\r\n    };\r\n    const handleMismatch = (node, vnode, parentComponent, parentSuspense, slotScopeIds, isFragment) => {\r\n        hasMismatch = true;\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`Hydration node mismatch:\\n- Client vnode:`, vnode.type, `\\n- Server rendered DOM:`, node, node.nodeType === 3 /* TEXT */\r\n                ? `(text)`\r\n                : isComment(node) && node.data === '['\r\n                    ? `(start of fragment)`\r\n                    : ``);\r\n        vnode.el = null;\r\n        if (isFragment) {\r\n            // remove excessive fragment nodes\r\n            const end = locateClosingAsyncAnchor(node);\r\n            while (true) {\r\n                const next = nextSibling(node);\r\n                if (next && next !== end) {\r\n                    remove(next);\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        const next = nextSibling(node);\r\n        const container = parentNode(node);\r\n        remove(node);\r\n        patch(null, vnode, container, next, parentComponent, parentSuspense, isSVGContainer(container), slotScopeIds);\r\n        return next;\r\n    };\r\n    const locateClosingAsyncAnchor = (node) => {\r\n        let match = 0;\r\n        while (node) {\r\n            node = nextSibling(node);\r\n            if (node && isComment(node)) {\r\n                if (node.data === '[')\r\n                    match++;\r\n                if (node.data === ']') {\r\n                    if (match === 0) {\r\n                        return nextSibling(node);\r\n                    }\r\n                    else {\r\n                        match--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return node;\r\n    };\r\n    return [hydrate, hydrateNode];\r\n}\n\nlet supported;\r\nlet perf;\r\nfunction startMeasure(instance, type) {\r\n    if (instance.appContext.config.performance && isSupported()) {\r\n        perf.mark(`vue-${type}-${instance.uid}`);\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n        devtoolsPerfStart(instance, type, supported ? perf.now() : Date.now());\r\n    }\r\n}\r\nfunction endMeasure(instance, type) {\r\n    if (instance.appContext.config.performance && isSupported()) {\r\n        const startTag = `vue-${type}-${instance.uid}`;\r\n        const endTag = startTag + `:end`;\r\n        perf.mark(endTag);\r\n        perf.measure(`<${formatComponentName(instance, instance.type)}> ${type}`, startTag, endTag);\r\n        perf.clearMarks(startTag);\r\n        perf.clearMarks(endTag);\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n        devtoolsPerfEnd(instance, type, supported ? perf.now() : Date.now());\r\n    }\r\n}\r\nfunction isSupported() {\r\n    if (supported !== undefined) {\r\n        return supported;\r\n    }\r\n    /* eslint-disable no-restricted-globals */\r\n    if (typeof window !== 'undefined' && window.performance) {\r\n        supported = true;\r\n        perf = window.performance;\r\n    }\r\n    else {\r\n        supported = false;\r\n    }\r\n    /* eslint-enable no-restricted-globals */\r\n    return supported;\r\n}\n\n/**\r\n * This is only called in esm-bundler builds.\r\n * It is called when a renderer is created, in `baseCreateRenderer` so that\r\n * importing runtime-core is side-effects free.\r\n *\r\n * istanbul-ignore-next\r\n */\r\nfunction initFeatureFlags() {\r\n    let needWarn = false;\r\n    if (typeof __VUE_OPTIONS_API__ !== 'boolean') {\r\n        needWarn = true;\r\n        getGlobalThis().__VUE_OPTIONS_API__ = true;\r\n    }\r\n    if (typeof __VUE_PROD_DEVTOOLS__ !== 'boolean') {\r\n        needWarn = true;\r\n        getGlobalThis().__VUE_PROD_DEVTOOLS__ = false;\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && needWarn) {\r\n        console.warn(`You are running the esm-bundler build of Vue. It is recommended to ` +\r\n            `configure your bundler to explicitly replace feature flag globals ` +\r\n            `with boolean literals to get proper tree-shaking in the final bundle. ` +\r\n            `See http://link.vuejs.org/feature-flags for more details.`);\r\n    }\r\n}\n\nconst queuePostRenderEffect = queueEffectWithSuspense\r\n    ;\r\n/**\r\n * The createRenderer function accepts two generic arguments:\r\n * HostNode and HostElement, corresponding to Node and Element types in the\r\n * host environment. For example, for runtime-dom, HostNode would be the DOM\r\n * `Node` interface and HostElement would be the DOM `Element` interface.\r\n *\r\n * Custom renderers can pass in the platform specific types like this:\r\n *\r\n * ``` js\r\n * const { render, createApp } = createRenderer<Node, Element>({\r\n *   patchProp,\r\n *   ...nodeOps\r\n * })\r\n * ```\r\n */\r\nfunction createRenderer(options) {\r\n    return baseCreateRenderer(options);\r\n}\r\n// Separate API for creating hydration-enabled renderer.\r\n// Hydration logic is only used when calling this function, making it\r\n// tree-shakable.\r\nfunction createHydrationRenderer(options) {\r\n    return baseCreateRenderer(options, createHydrationFunctions);\r\n}\r\n// implementation\r\nfunction baseCreateRenderer(options, createHydrationFns) {\r\n    // compile-time feature flags check\r\n    {\r\n        initFeatureFlags();\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n        const target = getGlobalThis();\r\n        target.__VUE__ = true;\r\n        setDevtoolsHook(target.__VUE_DEVTOOLS_GLOBAL_HOOK__);\r\n    }\r\n    const { insert: hostInsert, remove: hostRemove, patchProp: hostPatchProp, createElement: hostCreateElement, createText: hostCreateText, createComment: hostCreateComment, setText: hostSetText, setElementText: hostSetElementText, parentNode: hostParentNode, nextSibling: hostNextSibling, setScopeId: hostSetScopeId = NOOP, cloneNode: hostCloneNode, insertStaticContent: hostInsertStaticContent } = options;\r\n    // Note: functions inside this closure should use `const xxx = () => {}`\r\n    // style in order to prevent being inlined by minifiers.\r\n    const patch = (n1, n2, container, anchor = null, parentComponent = null, parentSuspense = null, isSVG = false, slotScopeIds = null, optimized = (process.env.NODE_ENV !== 'production') && isHmrUpdating ? false : !!n2.dynamicChildren) => {\r\n        if (n1 === n2) {\r\n            return;\r\n        }\r\n        // patching & not same type, unmount old tree\r\n        if (n1 && !isSameVNodeType(n1, n2)) {\r\n            anchor = getNextHostNode(n1);\r\n            unmount(n1, parentComponent, parentSuspense, true);\r\n            n1 = null;\r\n        }\r\n        if (n2.patchFlag === -2 /* BAIL */) {\r\n            optimized = false;\r\n            n2.dynamicChildren = null;\r\n        }\r\n        const { type, ref, shapeFlag } = n2;\r\n        switch (type) {\r\n            case Text:\r\n                processText(n1, n2, container, anchor);\r\n                break;\r\n            case Comment:\r\n                processCommentNode(n1, n2, container, anchor);\r\n                break;\r\n            case Static:\r\n                if (n1 == null) {\r\n                    mountStaticNode(n2, container, anchor, isSVG);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    patchStaticNode(n1, n2, container, isSVG);\r\n                }\r\n                break;\r\n            case Fragment:\r\n                processFragment(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                break;\r\n            default:\r\n                if (shapeFlag & 1 /* ELEMENT */) {\r\n                    processElement(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n                else if (shapeFlag & 6 /* COMPONENT */) {\r\n                    processComponent(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n                else if (shapeFlag & 64 /* TELEPORT */) {\r\n                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, internals);\r\n                }\r\n                else if (shapeFlag & 128 /* SUSPENSE */) {\r\n                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, internals);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Invalid VNode type:', type, `(${typeof type})`);\r\n                }\r\n        }\r\n        // set ref\r\n        if (ref != null && parentComponent) {\r\n            setRef(ref, n1 && n1.ref, parentSuspense, n2 || n1, !n2);\r\n        }\r\n    };\r\n    const processText = (n1, n2, container, anchor) => {\r\n        if (n1 == null) {\r\n            hostInsert((n2.el = hostCreateText(n2.children)), container, anchor);\r\n        }\r\n        else {\r\n            const el = (n2.el = n1.el);\r\n            if (n2.children !== n1.children) {\r\n                hostSetText(el, n2.children);\r\n            }\r\n        }\r\n    };\r\n    const processCommentNode = (n1, n2, container, anchor) => {\r\n        if (n1 == null) {\r\n            hostInsert((n2.el = hostCreateComment(n2.children || '')), container, anchor);\r\n        }\r\n        else {\r\n            // there's no support for dynamic comments\r\n            n2.el = n1.el;\r\n        }\r\n    };\r\n    const mountStaticNode = (n2, container, anchor, isSVG) => {\r\n        [n2.el, n2.anchor] = hostInsertStaticContent(n2.children, container, anchor, isSVG);\r\n    };\r\n    /**\r\n     * Dev / HMR only\r\n     */\r\n    const patchStaticNode = (n1, n2, container, isSVG) => {\r\n        // static nodes are only patched during dev for HMR\r\n        if (n2.children !== n1.children) {\r\n            const anchor = hostNextSibling(n1.anchor);\r\n            // remove existing\r\n            removeStaticNode(n1);\r\n            [n2.el, n2.anchor] = hostInsertStaticContent(n2.children, container, anchor, isSVG);\r\n        }\r\n        else {\r\n            n2.el = n1.el;\r\n            n2.anchor = n1.anchor;\r\n        }\r\n    };\r\n    const moveStaticNode = ({ el, anchor }, container, nextSibling) => {\r\n        let next;\r\n        while (el && el !== anchor) {\r\n            next = hostNextSibling(el);\r\n            hostInsert(el, container, nextSibling);\r\n            el = next;\r\n        }\r\n        hostInsert(anchor, container, nextSibling);\r\n    };\r\n    const removeStaticNode = ({ el, anchor }) => {\r\n        let next;\r\n        while (el && el !== anchor) {\r\n            next = hostNextSibling(el);\r\n            hostRemove(el);\r\n            el = next;\r\n        }\r\n        hostRemove(anchor);\r\n    };\r\n    const processElement = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        isSVG = isSVG || n2.type === 'svg';\r\n        if (n1 == null) {\r\n            mountElement(n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n        }\r\n        else {\r\n            patchElement(n1, n2, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n        }\r\n    };\r\n    const mountElement = (vnode, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        let el;\r\n        let vnodeHook;\r\n        const { type, props, shapeFlag, transition, patchFlag, dirs } = vnode;\r\n        if (!(process.env.NODE_ENV !== 'production') &&\r\n            vnode.el &&\r\n            hostCloneNode !== undefined &&\r\n            patchFlag === -1 /* HOISTED */) {\r\n            // If a vnode has non-null el, it means it's being reused.\r\n            // Only static vnodes can be reused, so its mounted DOM nodes should be\r\n            // exactly the same, and we can simply do a clone here.\r\n            // only do this in production since cloned trees cannot be HMR updated.\r\n            el = vnode.el = hostCloneNode(vnode.el);\r\n        }\r\n        else {\r\n            el = vnode.el = hostCreateElement(vnode.type, isSVG, props && props.is, props);\r\n            // mount children first, since some props may rely on child content\r\n            // being already rendered, e.g. `<select value>`\r\n            if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                hostSetElementText(el, vnode.children);\r\n            }\r\n            else if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                mountChildren(vnode.children, el, null, parentComponent, parentSuspense, isSVG && type !== 'foreignObject', slotScopeIds, optimized);\r\n            }\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'created');\r\n            }\r\n            // props\r\n            if (props) {\r\n                for (const key in props) {\r\n                    if (key !== 'value' && !isReservedProp(key)) {\r\n                        hostPatchProp(el, key, null, props[key], isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                    }\r\n                }\r\n                /**\r\n                 * Special case for setting value on DOM elements:\r\n                 * - it can be order-sensitive (e.g. should be set *after* min/max, #2325, #4024)\r\n                 * - it needs to be forced (#1471)\r\n                 * #2353 proposes adding another renderer option to configure this, but\r\n                 * the properties affects are so finite it is worth special casing it\r\n                 * here to reduce the complexity. (Special casing it also should not\r\n                 * affect non-DOM renderers)\r\n                 */\r\n                if ('value' in props) {\r\n                    hostPatchProp(el, 'value', null, props.value);\r\n                }\r\n                if ((vnodeHook = props.onVnodeBeforeMount)) {\r\n                    invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                }\r\n            }\r\n            // scopeId\r\n            setScopeId(el, vnode, vnode.scopeId, slotScopeIds, parentComponent);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            Object.defineProperty(el, '__vnode', {\r\n                value: vnode,\r\n                enumerable: false\r\n            });\r\n            Object.defineProperty(el, '__vueParentComponent', {\r\n                value: parentComponent,\r\n                enumerable: false\r\n            });\r\n        }\r\n        if (dirs) {\r\n            invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');\r\n        }\r\n        // #1583 For inside suspense + suspense not resolved case, enter hook should call when suspense resolved\r\n        // #1689 For inside suspense + suspense resolved case, just call it\r\n        const needCallTransitionHooks = (!parentSuspense || (parentSuspense && !parentSuspense.pendingBranch)) &&\r\n            transition &&\r\n            !transition.persisted;\r\n        if (needCallTransitionHooks) {\r\n            transition.beforeEnter(el);\r\n        }\r\n        hostInsert(el, container, anchor);\r\n        if ((vnodeHook = props && props.onVnodeMounted) ||\r\n            needCallTransitionHooks ||\r\n            dirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                needCallTransitionHooks && transition.enter(el);\r\n                dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    const setScopeId = (el, vnode, scopeId, slotScopeIds, parentComponent) => {\r\n        if (scopeId) {\r\n            hostSetScopeId(el, scopeId);\r\n        }\r\n        if (slotScopeIds) {\r\n            for (let i = 0; i < slotScopeIds.length; i++) {\r\n                hostSetScopeId(el, slotScopeIds[i]);\r\n            }\r\n        }\r\n        if (parentComponent) {\r\n            let subTree = parentComponent.subTree;\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                subTree.patchFlag > 0 &&\r\n                subTree.patchFlag & 2048 /* DEV_ROOT_FRAGMENT */) {\r\n                subTree =\r\n                    filterSingleRoot(subTree.children) || subTree;\r\n            }\r\n            if (vnode === subTree) {\r\n                const parentVNode = parentComponent.vnode;\r\n                setScopeId(el, parentVNode, parentVNode.scopeId, parentVNode.slotScopeIds, parentComponent.parent);\r\n            }\r\n        }\r\n    };\r\n    const mountChildren = (children, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, start = 0) => {\r\n        for (let i = start; i < children.length; i++) {\r\n            const child = (children[i] = optimized\r\n                ? cloneIfMounted(children[i])\r\n                : normalizeVNode(children[i]));\r\n            patch(null, child, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n        }\r\n    };\r\n    const patchElement = (n1, n2, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        const el = (n2.el = n1.el);\r\n        let { patchFlag, dynamicChildren, dirs } = n2;\r\n        // #1426 take the old vnode's patch flag into account since user may clone a\r\n        // compiler-generated vnode, which de-opts to FULL_PROPS\r\n        patchFlag |= n1.patchFlag & 16 /* FULL_PROPS */;\r\n        const oldProps = n1.props || EMPTY_OBJ;\r\n        const newProps = n2.props || EMPTY_OBJ;\r\n        let vnodeHook;\r\n        if ((vnodeHook = newProps.onVnodeBeforeUpdate)) {\r\n            invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\r\n        }\r\n        if (dirs) {\r\n            invokeDirectiveHook(n2, n1, parentComponent, 'beforeUpdate');\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n            // HMR updated, force full diff\r\n            patchFlag = 0;\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        const areChildrenSVG = isSVG && n2.type !== 'foreignObject';\r\n        if (dynamicChildren) {\r\n            patchBlockChildren(n1.dynamicChildren, dynamicChildren, el, parentComponent, parentSuspense, areChildrenSVG, slotScopeIds);\r\n            if ((process.env.NODE_ENV !== 'production') && parentComponent && parentComponent.type.__hmrId) {\r\n                traverseStaticChildren(n1, n2);\r\n            }\r\n        }\r\n        else if (!optimized) {\r\n            // full diff\r\n            patchChildren(n1, n2, el, null, parentComponent, parentSuspense, areChildrenSVG, slotScopeIds, false);\r\n        }\r\n        if (patchFlag > 0) {\r\n            // the presence of a patchFlag means this element's render code was\r\n            // generated by the compiler and can take the fast path.\r\n            // in this path old node and new node are guaranteed to have the same shape\r\n            // (i.e. at the exact same position in the source template)\r\n            if (patchFlag & 16 /* FULL_PROPS */) {\r\n                // element props contain dynamic keys, full diff needed\r\n                patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\r\n            }\r\n            else {\r\n                // class\r\n                // this flag is matched when the element has dynamic class bindings.\r\n                if (patchFlag & 2 /* CLASS */) {\r\n                    if (oldProps.class !== newProps.class) {\r\n                        hostPatchProp(el, 'class', null, newProps.class, isSVG);\r\n                    }\r\n                }\r\n                // style\r\n                // this flag is matched when the element has dynamic style bindings\r\n                if (patchFlag & 4 /* STYLE */) {\r\n                    hostPatchProp(el, 'style', oldProps.style, newProps.style, isSVG);\r\n                }\r\n                // props\r\n                // This flag is matched when the element has dynamic prop/attr bindings\r\n                // other than class and style. The keys of dynamic prop/attrs are saved for\r\n                // faster iteration.\r\n                // Note dynamic keys like :[foo]=\"bar\" will cause this optimization to\r\n                // bail out and go through a full diff because we need to unset the old key\r\n                if (patchFlag & 8 /* PROPS */) {\r\n                    // if the flag is present then dynamicProps must be non-null\r\n                    const propsToUpdate = n2.dynamicProps;\r\n                    for (let i = 0; i < propsToUpdate.length; i++) {\r\n                        const key = propsToUpdate[i];\r\n                        const prev = oldProps[key];\r\n                        const next = newProps[key];\r\n                        // #1471 force patch value\r\n                        if (next !== prev || key === 'value') {\r\n                            hostPatchProp(el, key, prev, next, isSVG, n1.children, parentComponent, parentSuspense, unmountChildren);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // text\r\n            // This flag is matched when the element has only dynamic text children.\r\n            if (patchFlag & 1 /* TEXT */) {\r\n                if (n1.children !== n2.children) {\r\n                    hostSetElementText(el, n2.children);\r\n                }\r\n            }\r\n        }\r\n        else if (!optimized && dynamicChildren == null) {\r\n            // unoptimized, full diff\r\n            patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\r\n        }\r\n        if ((vnodeHook = newProps.onVnodeUpdated) || dirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\r\n                dirs && invokeDirectiveHook(n2, n1, parentComponent, 'updated');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    // The fast path for blocks.\r\n    const patchBlockChildren = (oldChildren, newChildren, fallbackContainer, parentComponent, parentSuspense, isSVG, slotScopeIds) => {\r\n        for (let i = 0; i < newChildren.length; i++) {\r\n            const oldVNode = oldChildren[i];\r\n            const newVNode = newChildren[i];\r\n            // Determine the container (parent element) for the patch.\r\n            const container = \r\n            // oldVNode may be an errored async setup() component inside Suspense\r\n            // which will not have a mounted element\r\n            oldVNode.el &&\r\n                // - In the case of a Fragment, we need to provide the actual parent\r\n                // of the Fragment itself so it can move its children.\r\n                (oldVNode.type === Fragment ||\r\n                    // - In the case of different nodes, there is going to be a replacement\r\n                    // which also requires the correct parent container\r\n                    !isSameVNodeType(oldVNode, newVNode) ||\r\n                    // - In the case of a component, it could contain anything.\r\n                    oldVNode.shapeFlag & (6 /* COMPONENT */ | 64 /* TELEPORT */))\r\n                ? hostParentNode(oldVNode.el)\r\n                : // In other cases, the parent container is not actually used so we\r\n                    // just pass the block element here to avoid a DOM parentNode call.\r\n                    fallbackContainer;\r\n            patch(oldVNode, newVNode, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, true);\r\n        }\r\n    };\r\n    const patchProps = (el, vnode, oldProps, newProps, parentComponent, parentSuspense, isSVG) => {\r\n        if (oldProps !== newProps) {\r\n            for (const key in newProps) {\r\n                // empty string is not valid prop\r\n                if (isReservedProp(key))\r\n                    continue;\r\n                const next = newProps[key];\r\n                const prev = oldProps[key];\r\n                // defer patching value\r\n                if (next !== prev && key !== 'value') {\r\n                    hostPatchProp(el, key, prev, next, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                }\r\n            }\r\n            if (oldProps !== EMPTY_OBJ) {\r\n                for (const key in oldProps) {\r\n                    if (!isReservedProp(key) && !(key in newProps)) {\r\n                        hostPatchProp(el, key, oldProps[key], null, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                    }\r\n                }\r\n            }\r\n            if ('value' in newProps) {\r\n                hostPatchProp(el, 'value', oldProps.value, newProps.value);\r\n            }\r\n        }\r\n    };\r\n    const processFragment = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        const fragmentStartAnchor = (n2.el = n1 ? n1.el : hostCreateText(''));\r\n        const fragmentEndAnchor = (n2.anchor = n1 ? n1.anchor : hostCreateText(''));\r\n        let { patchFlag, dynamicChildren, slotScopeIds: fragmentSlotScopeIds } = n2;\r\n        if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n            // HMR updated, force full diff\r\n            patchFlag = 0;\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        // check if this is a slot fragment with :slotted scope ids\r\n        if (fragmentSlotScopeIds) {\r\n            slotScopeIds = slotScopeIds\r\n                ? slotScopeIds.concat(fragmentSlotScopeIds)\r\n                : fragmentSlotScopeIds;\r\n        }\r\n        if (n1 == null) {\r\n            hostInsert(fragmentStartAnchor, container, anchor);\r\n            hostInsert(fragmentEndAnchor, container, anchor);\r\n            // a fragment can only have array children\r\n            // since they are either generated by the compiler, or implicitly created\r\n            // from arrays.\r\n            mountChildren(n2.children, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n        }\r\n        else {\r\n            if (patchFlag > 0 &&\r\n                patchFlag & 64 /* STABLE_FRAGMENT */ &&\r\n                dynamicChildren &&\r\n                // #2715 the previous fragment could've been a BAILed one as a result\r\n                // of renderSlot() with no valid children\r\n                n1.dynamicChildren) {\r\n                // a stable fragment (template root or <template v-for>) doesn't need to\r\n                // patch children order, but it may contain dynamicChildren.\r\n                patchBlockChildren(n1.dynamicChildren, dynamicChildren, container, parentComponent, parentSuspense, isSVG, slotScopeIds);\r\n                if ((process.env.NODE_ENV !== 'production') && parentComponent && parentComponent.type.__hmrId) {\r\n                    traverseStaticChildren(n1, n2);\r\n                }\r\n                else if (\r\n                // #2080 if the stable fragment has a key, it's a <template v-for> that may\r\n                //  get moved around. Make sure all root level vnodes inherit el.\r\n                // #2134 or if it's a component root, it may also get moved around\r\n                // as the component is being moved.\r\n                n2.key != null ||\r\n                    (parentComponent && n2 === parentComponent.subTree)) {\r\n                    traverseStaticChildren(n1, n2, true /* shallow */);\r\n                }\r\n            }\r\n            else {\r\n                // keyed / unkeyed, or manual fragments.\r\n                // for keyed & unkeyed, since they are compiler generated from v-for,\r\n                // each child is guaranteed to be a block so the fragment will never\r\n                // have dynamicChildren.\r\n                patchChildren(n1, n2, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n            }\r\n        }\r\n    };\r\n    const processComponent = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        n2.slotScopeIds = slotScopeIds;\r\n        if (n1 == null) {\r\n            if (n2.shapeFlag & 512 /* COMPONENT_KEPT_ALIVE */) {\r\n                parentComponent.ctx.activate(n2, container, anchor, isSVG, optimized);\r\n            }\r\n            else {\r\n                mountComponent(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n        }\r\n        else {\r\n            updateComponent(n1, n2, optimized);\r\n        }\r\n    };\r\n    const mountComponent = (initialVNode, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        const instance = (initialVNode.component = createComponentInstance(initialVNode, parentComponent, parentSuspense));\r\n        if ((process.env.NODE_ENV !== 'production') && instance.type.__hmrId) {\r\n            registerHMR(instance);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            pushWarningContext(initialVNode);\r\n            startMeasure(instance, `mount`);\r\n        }\r\n        // inject renderer internals for keepAlive\r\n        if (isKeepAlive(initialVNode)) {\r\n            instance.ctx.renderer = internals;\r\n        }\r\n        // resolve props and slots for setup context\r\n        {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                startMeasure(instance, `init`);\r\n            }\r\n            setupComponent(instance);\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                endMeasure(instance, `init`);\r\n            }\r\n        }\r\n        // setup() is async. This component relies on async logic to be resolved\r\n        // before proceeding\r\n        if (instance.asyncDep) {\r\n            parentSuspense && parentSuspense.registerDep(instance, setupRenderEffect);\r\n            // Give it a placeholder if this is not hydration\r\n            // TODO handle self-defined fallback\r\n            if (!initialVNode.el) {\r\n                const placeholder = (instance.subTree = createVNode(Comment));\r\n                processCommentNode(null, placeholder, container, anchor);\r\n            }\r\n            return;\r\n        }\r\n        setupRenderEffect(instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            popWarningContext();\r\n            endMeasure(instance, `mount`);\r\n        }\r\n    };\r\n    const updateComponent = (n1, n2, optimized) => {\r\n        const instance = (n2.component = n1.component);\r\n        if (shouldUpdateComponent(n1, n2, optimized)) {\r\n            if (instance.asyncDep &&\r\n                !instance.asyncResolved) {\r\n                // async & still pending - just update props and slots\r\n                // since the component's reactive effect for render isn't set-up yet\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(n2);\r\n                }\r\n                updateComponentPreRender(instance, n2, optimized);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n                return;\r\n            }\r\n            else {\r\n                // normal update\r\n                instance.next = n2;\r\n                // in case the child component is also queued, remove it to avoid\r\n                // double updating the same child component in the same flush.\r\n                invalidateJob(instance.update);\r\n                // instance.update is the reactive effect.\r\n                instance.update();\r\n            }\r\n        }\r\n        else {\r\n            // no update needed. just copy over properties\r\n            n2.component = n1.component;\r\n            n2.el = n1.el;\r\n            instance.vnode = n2;\r\n        }\r\n    };\r\n    const setupRenderEffect = (instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized) => {\r\n        const componentUpdateFn = () => {\r\n            if (!instance.isMounted) {\r\n                let vnodeHook;\r\n                const { el, props } = initialVNode;\r\n                const { bm, m, parent } = instance;\r\n                const isAsyncWrapperVNode = isAsyncWrapper(initialVNode);\r\n                effect.allowRecurse = false;\r\n                // beforeMount hook\r\n                if (bm) {\r\n                    invokeArrayFns(bm);\r\n                }\r\n                // onVnodeBeforeMount\r\n                if (!isAsyncWrapperVNode &&\r\n                    (vnodeHook = props && props.onVnodeBeforeMount)) {\r\n                    invokeVNodeHook(vnodeHook, parent, initialVNode);\r\n                }\r\n                effect.allowRecurse = true;\r\n                if (el && hydrateNode) {\r\n                    // vnode has adopted host node - perform hydration instead of mount.\r\n                    const hydrateSubTree = () => {\r\n                        if ((process.env.NODE_ENV !== 'production')) {\r\n                            startMeasure(instance, `render`);\r\n                        }\r\n                        instance.subTree = renderComponentRoot(instance);\r\n                        if ((process.env.NODE_ENV !== 'production')) {\r\n                            endMeasure(instance, `render`);\r\n                        }\r\n                        if ((process.env.NODE_ENV !== 'production')) {\r\n                            startMeasure(instance, `hydrate`);\r\n                        }\r\n                        hydrateNode(el, instance.subTree, instance, parentSuspense, null);\r\n                        if ((process.env.NODE_ENV !== 'production')) {\r\n                            endMeasure(instance, `hydrate`);\r\n                        }\r\n                    };\r\n                    if (isAsyncWrapperVNode) {\r\n                        initialVNode.type.__asyncLoader().then(\r\n                        // note: we are moving the render call into an async callback,\r\n                        // which means it won't track dependencies - but it's ok because\r\n                        // a server-rendered async wrapper is already in resolved state\r\n                        // and it will never need to change.\r\n                        () => !instance.isUnmounted && hydrateSubTree());\r\n                    }\r\n                    else {\r\n                        hydrateSubTree();\r\n                    }\r\n                }\r\n                else {\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        startMeasure(instance, `render`);\r\n                    }\r\n                    const subTree = (instance.subTree = renderComponentRoot(instance));\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        endMeasure(instance, `render`);\r\n                    }\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        startMeasure(instance, `patch`);\r\n                    }\r\n                    patch(null, subTree, container, anchor, instance, parentSuspense, isSVG);\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        endMeasure(instance, `patch`);\r\n                    }\r\n                    initialVNode.el = subTree.el;\r\n                }\r\n                // mounted hook\r\n                if (m) {\r\n                    queuePostRenderEffect(m, parentSuspense);\r\n                }\r\n                // onVnodeMounted\r\n                if (!isAsyncWrapperVNode &&\r\n                    (vnodeHook = props && props.onVnodeMounted)) {\r\n                    const scopedInitialVNode = initialVNode;\r\n                    queuePostRenderEffect(() => invokeVNodeHook(vnodeHook, parent, scopedInitialVNode), parentSuspense);\r\n                }\r\n                // activated hook for keep-alive roots.\r\n                // #1742 activated hook must be accessed after first render\r\n                // since the hook may be injected by a child keep-alive\r\n                if (initialVNode.shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n                    instance.a && queuePostRenderEffect(instance.a, parentSuspense);\r\n                }\r\n                instance.isMounted = true;\r\n                if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                    devtoolsComponentAdded(instance);\r\n                }\r\n                // #2458: deference mount-only object parameters to prevent memleaks\r\n                initialVNode = container = anchor = null;\r\n            }\r\n            else {\r\n                // updateComponent\r\n                // This is triggered by mutation of component's own state (next: null)\r\n                // OR parent calling processComponent (next: VNode)\r\n                let { next, bu, u, parent, vnode } = instance;\r\n                let originNext = next;\r\n                let vnodeHook;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(next || instance.vnode);\r\n                }\r\n                // Disallow component effect recursion during pre-lifecycle hooks.\r\n                effect.allowRecurse = false;\r\n                if (next) {\r\n                    next.el = vnode.el;\r\n                    updateComponentPreRender(instance, next, optimized);\r\n                }\r\n                else {\r\n                    next = vnode;\r\n                }\r\n                // beforeUpdate hook\r\n                if (bu) {\r\n                    invokeArrayFns(bu);\r\n                }\r\n                // onVnodeBeforeUpdate\r\n                if ((vnodeHook = next.props && next.props.onVnodeBeforeUpdate)) {\r\n                    invokeVNodeHook(vnodeHook, parent, next, vnode);\r\n                }\r\n                effect.allowRecurse = true;\r\n                // render\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `render`);\r\n                }\r\n                const nextTree = renderComponentRoot(instance);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `render`);\r\n                }\r\n                const prevTree = instance.subTree;\r\n                instance.subTree = nextTree;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `patch`);\r\n                }\r\n                patch(prevTree, nextTree, \r\n                // parent may have changed if it's in a teleport\r\n                hostParentNode(prevTree.el), \r\n                // anchor may have changed if it's in a fragment\r\n                getNextHostNode(prevTree), instance, parentSuspense, isSVG);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `patch`);\r\n                }\r\n                next.el = nextTree.el;\r\n                if (originNext === null) {\r\n                    // self-triggered update. In case of HOC, update parent component\r\n                    // vnode el. HOC is indicated by parent instance's subTree pointing\r\n                    // to child component's vnode\r\n                    updateHOCHostEl(instance, nextTree.el);\r\n                }\r\n                // updated hook\r\n                if (u) {\r\n                    queuePostRenderEffect(u, parentSuspense);\r\n                }\r\n                // onVnodeUpdated\r\n                if ((vnodeHook = next.props && next.props.onVnodeUpdated)) {\r\n                    queuePostRenderEffect(() => invokeVNodeHook(vnodeHook, parent, next, vnode), parentSuspense);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                    devtoolsComponentUpdated(instance);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n            }\r\n        };\r\n        // create reactive effect for rendering\r\n        const effect = new ReactiveEffect(componentUpdateFn, () => queueJob(instance.update), instance.scope // track it in component's effect scope\r\n        );\r\n        const update = (instance.update = effect.run.bind(effect));\r\n        update.id = instance.uid;\r\n        // allowRecurse\r\n        // #1801, #2043 component render effects should allow recursive updates\r\n        effect.allowRecurse = update.allowRecurse = true;\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            effect.onTrack = instance.rtc\r\n                ? e => invokeArrayFns(instance.rtc, e)\r\n                : void 0;\r\n            effect.onTrigger = instance.rtg\r\n                ? e => invokeArrayFns(instance.rtg, e)\r\n                : void 0;\r\n            // @ts-ignore (for scheduler)\r\n            update.ownerInstance = instance;\r\n        }\r\n        update();\r\n    };\r\n    const updateComponentPreRender = (instance, nextVNode, optimized) => {\r\n        nextVNode.component = instance;\r\n        const prevProps = instance.vnode.props;\r\n        instance.vnode = nextVNode;\r\n        instance.next = null;\r\n        updateProps(instance, nextVNode.props, prevProps, optimized);\r\n        updateSlots(instance, nextVNode.children, optimized);\r\n        pauseTracking();\r\n        // props update may have triggered pre-flush watchers.\r\n        // flush them before the render update.\r\n        flushPreFlushCbs(undefined, instance.update);\r\n        resetTracking();\r\n    };\r\n    const patchChildren = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized = false) => {\r\n        const c1 = n1 && n1.children;\r\n        const prevShapeFlag = n1 ? n1.shapeFlag : 0;\r\n        const c2 = n2.children;\r\n        const { patchFlag, shapeFlag } = n2;\r\n        // fast path\r\n        if (patchFlag > 0) {\r\n            if (patchFlag & 128 /* KEYED_FRAGMENT */) {\r\n                // this could be either fully-keyed or mixed (some keyed some not)\r\n                // presence of patchFlag means children are guaranteed to be arrays\r\n                patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                return;\r\n            }\r\n            else if (patchFlag & 256 /* UNKEYED_FRAGMENT */) {\r\n                // unkeyed\r\n                patchUnkeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                return;\r\n            }\r\n        }\r\n        // children has 3 possibilities: text, array or no children.\r\n        if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n            // text children fast path\r\n            if (prevShapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                unmountChildren(c1, parentComponent, parentSuspense);\r\n            }\r\n            if (c2 !== c1) {\r\n                hostSetElementText(container, c2);\r\n            }\r\n        }\r\n        else {\r\n            if (prevShapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                // prev children was array\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    // two arrays, cannot assume anything, do full diff\r\n                    patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n                else {\r\n                    // no new children, just unmount old\r\n                    unmountChildren(c1, parentComponent, parentSuspense, true);\r\n                }\r\n            }\r\n            else {\r\n                // prev children was text OR null\r\n                // new children is array OR null\r\n                if (prevShapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                    hostSetElementText(container, '');\r\n                }\r\n                // mount new if array\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const patchUnkeyedChildren = (c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        c1 = c1 || EMPTY_ARR;\r\n        c2 = c2 || EMPTY_ARR;\r\n        const oldLength = c1.length;\r\n        const newLength = c2.length;\r\n        const commonLength = Math.min(oldLength, newLength);\r\n        let i;\r\n        for (i = 0; i < commonLength; i++) {\r\n            const nextChild = (c2[i] = optimized\r\n                ? cloneIfMounted(c2[i])\r\n                : normalizeVNode(c2[i]));\r\n            patch(c1[i], nextChild, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n        }\r\n        if (oldLength > newLength) {\r\n            // remove old\r\n            unmountChildren(c1, parentComponent, parentSuspense, true, false, commonLength);\r\n        }\r\n        else {\r\n            // mount new\r\n            mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, commonLength);\r\n        }\r\n    };\r\n    // can be all-keyed or mixed\r\n    const patchKeyedChildren = (c1, c2, container, parentAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        let i = 0;\r\n        const l2 = c2.length;\r\n        let e1 = c1.length - 1; // prev ending index\r\n        let e2 = l2 - 1; // next ending index\r\n        // 1. sync from start\r\n        // (a b) c\r\n        // (a b) d e\r\n        while (i <= e1 && i <= e2) {\r\n            const n1 = c1[i];\r\n            const n2 = (c2[i] = optimized\r\n                ? cloneIfMounted(c2[i])\r\n                : normalizeVNode(c2[i]));\r\n            if (isSameVNodeType(n1, n2)) {\r\n                patch(n1, n2, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n            i++;\r\n        }\r\n        // 2. sync from end\r\n        // a (b c)\r\n        // d e (b c)\r\n        while (i <= e1 && i <= e2) {\r\n            const n1 = c1[e1];\r\n            const n2 = (c2[e2] = optimized\r\n                ? cloneIfMounted(c2[e2])\r\n                : normalizeVNode(c2[e2]));\r\n            if (isSameVNodeType(n1, n2)) {\r\n                patch(n1, n2, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n            e1--;\r\n            e2--;\r\n        }\r\n        // 3. common sequence + mount\r\n        // (a b)\r\n        // (a b) c\r\n        // i = 2, e1 = 1, e2 = 2\r\n        // (a b)\r\n        // c (a b)\r\n        // i = 0, e1 = -1, e2 = 0\r\n        if (i > e1) {\r\n            if (i <= e2) {\r\n                const nextPos = e2 + 1;\r\n                const anchor = nextPos < l2 ? c2[nextPos].el : parentAnchor;\r\n                while (i <= e2) {\r\n                    patch(null, (c2[i] = optimized\r\n                        ? cloneIfMounted(c2[i])\r\n                        : normalizeVNode(c2[i])), container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                    i++;\r\n                }\r\n            }\r\n        }\r\n        // 4. common sequence + unmount\r\n        // (a b) c\r\n        // (a b)\r\n        // i = 2, e1 = 2, e2 = 1\r\n        // a (b c)\r\n        // (b c)\r\n        // i = 0, e1 = 0, e2 = -1\r\n        else if (i > e2) {\r\n            while (i <= e1) {\r\n                unmount(c1[i], parentComponent, parentSuspense, true);\r\n                i++;\r\n            }\r\n        }\r\n        // 5. unknown sequence\r\n        // [i ... e1 + 1]: a b [c d e] f g\r\n        // [i ... e2 + 1]: a b [e d c h] f g\r\n        // i = 2, e1 = 4, e2 = 5\r\n        else {\r\n            const s1 = i; // prev starting index\r\n            const s2 = i; // next starting index\r\n            // 5.1 build key:index map for newChildren\r\n            const keyToNewIndexMap = new Map();\r\n            for (i = s2; i <= e2; i++) {\r\n                const nextChild = (c2[i] = optimized\r\n                    ? cloneIfMounted(c2[i])\r\n                    : normalizeVNode(c2[i]));\r\n                if (nextChild.key != null) {\r\n                    if ((process.env.NODE_ENV !== 'production') && keyToNewIndexMap.has(nextChild.key)) {\r\n                        warn(`Duplicate keys found during update:`, JSON.stringify(nextChild.key), `Make sure keys are unique.`);\r\n                    }\r\n                    keyToNewIndexMap.set(nextChild.key, i);\r\n                }\r\n            }\r\n            // 5.2 loop through old children left to be patched and try to patch\r\n            // matching nodes & remove nodes that are no longer present\r\n            let j;\r\n            let patched = 0;\r\n            const toBePatched = e2 - s2 + 1;\r\n            let moved = false;\r\n            // used to track whether any node has moved\r\n            let maxNewIndexSoFar = 0;\r\n            // works as Map<newIndex, oldIndex>\r\n            // Note that oldIndex is offset by +1\r\n            // and oldIndex = 0 is a special value indicating the new node has\r\n            // no corresponding old node.\r\n            // used for determining longest stable subsequence\r\n            const newIndexToOldIndexMap = new Array(toBePatched);\r\n            for (i = 0; i < toBePatched; i++)\r\n                newIndexToOldIndexMap[i] = 0;\r\n            for (i = s1; i <= e1; i++) {\r\n                const prevChild = c1[i];\r\n                if (patched >= toBePatched) {\r\n                    // all new children have been patched so this can only be a removal\r\n                    unmount(prevChild, parentComponent, parentSuspense, true);\r\n                    continue;\r\n                }\r\n                let newIndex;\r\n                if (prevChild.key != null) {\r\n                    newIndex = keyToNewIndexMap.get(prevChild.key);\r\n                }\r\n                else {\r\n                    // key-less node, try to locate a key-less node of the same type\r\n                    for (j = s2; j <= e2; j++) {\r\n                        if (newIndexToOldIndexMap[j - s2] === 0 &&\r\n                            isSameVNodeType(prevChild, c2[j])) {\r\n                            newIndex = j;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (newIndex === undefined) {\r\n                    unmount(prevChild, parentComponent, parentSuspense, true);\r\n                }\r\n                else {\r\n                    newIndexToOldIndexMap[newIndex - s2] = i + 1;\r\n                    if (newIndex >= maxNewIndexSoFar) {\r\n                        maxNewIndexSoFar = newIndex;\r\n                    }\r\n                    else {\r\n                        moved = true;\r\n                    }\r\n                    patch(prevChild, c2[newIndex], container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                    patched++;\r\n                }\r\n            }\r\n            // 5.3 move and mount\r\n            // generate longest stable subsequence only when nodes have moved\r\n            const increasingNewIndexSequence = moved\r\n                ? getSequence(newIndexToOldIndexMap)\r\n                : EMPTY_ARR;\r\n            j = increasingNewIndexSequence.length - 1;\r\n            // looping backwards so that we can use last patched node as anchor\r\n            for (i = toBePatched - 1; i >= 0; i--) {\r\n                const nextIndex = s2 + i;\r\n                const nextChild = c2[nextIndex];\r\n                const anchor = nextIndex + 1 < l2 ? c2[nextIndex + 1].el : parentAnchor;\r\n                if (newIndexToOldIndexMap[i] === 0) {\r\n                    // mount new\r\n                    patch(null, nextChild, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n                else if (moved) {\r\n                    // move if:\r\n                    // There is no stable subsequence (e.g. a reverse)\r\n                    // OR current node is not among the stable sequence\r\n                    if (j < 0 || i !== increasingNewIndexSequence[j]) {\r\n                        move(nextChild, container, anchor, 2 /* REORDER */);\r\n                    }\r\n                    else {\r\n                        j--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const move = (vnode, container, anchor, moveType, parentSuspense = null) => {\r\n        const { el, type, transition, children, shapeFlag } = vnode;\r\n        if (shapeFlag & 6 /* COMPONENT */) {\r\n            move(vnode.component.subTree, container, anchor, moveType);\r\n            return;\r\n        }\r\n        if (shapeFlag & 128 /* SUSPENSE */) {\r\n            vnode.suspense.move(container, anchor, moveType);\r\n            return;\r\n        }\r\n        if (shapeFlag & 64 /* TELEPORT */) {\r\n            type.move(vnode, container, anchor, internals);\r\n            return;\r\n        }\r\n        if (type === Fragment) {\r\n            hostInsert(el, container, anchor);\r\n            for (let i = 0; i < children.length; i++) {\r\n                move(children[i], container, anchor, moveType);\r\n            }\r\n            hostInsert(vnode.anchor, container, anchor);\r\n            return;\r\n        }\r\n        if (type === Static) {\r\n            moveStaticNode(vnode, container, anchor);\r\n            return;\r\n        }\r\n        // single nodes\r\n        const needTransition = moveType !== 2 /* REORDER */ &&\r\n            shapeFlag & 1 /* ELEMENT */ &&\r\n            transition;\r\n        if (needTransition) {\r\n            if (moveType === 0 /* ENTER */) {\r\n                transition.beforeEnter(el);\r\n                hostInsert(el, container, anchor);\r\n                queuePostRenderEffect(() => transition.enter(el), parentSuspense);\r\n            }\r\n            else {\r\n                const { leave, delayLeave, afterLeave } = transition;\r\n                const remove = () => hostInsert(el, container, anchor);\r\n                const performLeave = () => {\r\n                    leave(el, () => {\r\n                        remove();\r\n                        afterLeave && afterLeave();\r\n                    });\r\n                };\r\n                if (delayLeave) {\r\n                    delayLeave(el, remove, performLeave);\r\n                }\r\n                else {\r\n                    performLeave();\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            hostInsert(el, container, anchor);\r\n        }\r\n    };\r\n    const unmount = (vnode, parentComponent, parentSuspense, doRemove = false, optimized = false) => {\r\n        const { type, props, ref, children, dynamicChildren, shapeFlag, patchFlag, dirs } = vnode;\r\n        // unset ref\r\n        if (ref != null) {\r\n            setRef(ref, null, parentSuspense, vnode, true);\r\n        }\r\n        if (shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n            parentComponent.ctx.deactivate(vnode);\r\n            return;\r\n        }\r\n        const shouldInvokeDirs = shapeFlag & 1 /* ELEMENT */ && dirs;\r\n        const shouldInvokeVnodeHook = !isAsyncWrapper(vnode);\r\n        let vnodeHook;\r\n        if (shouldInvokeVnodeHook &&\r\n            (vnodeHook = props && props.onVnodeBeforeUnmount)) {\r\n            invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n        }\r\n        if (shapeFlag & 6 /* COMPONENT */) {\r\n            unmountComponent(vnode.component, parentSuspense, doRemove);\r\n        }\r\n        else {\r\n            if (shapeFlag & 128 /* SUSPENSE */) {\r\n                vnode.suspense.unmount(parentSuspense, doRemove);\r\n                return;\r\n            }\r\n            if (shouldInvokeDirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'beforeUnmount');\r\n            }\r\n            if (shapeFlag & 64 /* TELEPORT */) {\r\n                vnode.type.remove(vnode, parentComponent, parentSuspense, optimized, internals, doRemove);\r\n            }\r\n            else if (dynamicChildren &&\r\n                // #1153: fast path should not be taken for non-stable (v-for) fragments\r\n                (type !== Fragment ||\r\n                    (patchFlag > 0 && patchFlag & 64 /* STABLE_FRAGMENT */))) {\r\n                // fast path for block nodes: only need to unmount dynamic children.\r\n                unmountChildren(dynamicChildren, parentComponent, parentSuspense, false, true);\r\n            }\r\n            else if ((type === Fragment &&\r\n                patchFlag &\r\n                    (128 /* KEYED_FRAGMENT */ | 256 /* UNKEYED_FRAGMENT */)) ||\r\n                (!optimized && shapeFlag & 16 /* ARRAY_CHILDREN */)) {\r\n                unmountChildren(children, parentComponent, parentSuspense);\r\n            }\r\n            if (doRemove) {\r\n                remove(vnode);\r\n            }\r\n        }\r\n        if ((shouldInvokeVnodeHook &&\r\n            (vnodeHook = props && props.onVnodeUnmounted)) ||\r\n            shouldInvokeDirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                shouldInvokeDirs &&\r\n                    invokeDirectiveHook(vnode, null, parentComponent, 'unmounted');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    const remove = vnode => {\r\n        const { type, el, anchor, transition } = vnode;\r\n        if (type === Fragment) {\r\n            removeFragment(el, anchor);\r\n            return;\r\n        }\r\n        if (type === Static) {\r\n            removeStaticNode(vnode);\r\n            return;\r\n        }\r\n        const performRemove = () => {\r\n            hostRemove(el);\r\n            if (transition && !transition.persisted && transition.afterLeave) {\r\n                transition.afterLeave();\r\n            }\r\n        };\r\n        if (vnode.shapeFlag & 1 /* ELEMENT */ &&\r\n            transition &&\r\n            !transition.persisted) {\r\n            const { leave, delayLeave } = transition;\r\n            const performLeave = () => leave(el, performRemove);\r\n            if (delayLeave) {\r\n                delayLeave(vnode.el, performRemove, performLeave);\r\n            }\r\n            else {\r\n                performLeave();\r\n            }\r\n        }\r\n        else {\r\n            performRemove();\r\n        }\r\n    };\r\n    const removeFragment = (cur, end) => {\r\n        // For fragments, directly remove all contained DOM nodes.\r\n        // (fragment child nodes cannot have transition)\r\n        let next;\r\n        while (cur !== end) {\r\n            next = hostNextSibling(cur);\r\n            hostRemove(cur);\r\n            cur = next;\r\n        }\r\n        hostRemove(end);\r\n    };\r\n    const unmountComponent = (instance, parentSuspense, doRemove) => {\r\n        if ((process.env.NODE_ENV !== 'production') && instance.type.__hmrId) {\r\n            unregisterHMR(instance);\r\n        }\r\n        const { bum, scope, update, subTree, um } = instance;\r\n        // beforeUnmount hook\r\n        if (bum) {\r\n            invokeArrayFns(bum);\r\n        }\r\n        // stop effects in component scope\r\n        scope.stop();\r\n        // update may be null if a component is unmounted before its async\r\n        // setup has resolved.\r\n        if (update) {\r\n            // so that scheduler will no longer invoke it\r\n            update.active = false;\r\n            unmount(subTree, instance, parentSuspense, doRemove);\r\n        }\r\n        // unmounted hook\r\n        if (um) {\r\n            queuePostRenderEffect(um, parentSuspense);\r\n        }\r\n        queuePostRenderEffect(() => {\r\n            instance.isUnmounted = true;\r\n        }, parentSuspense);\r\n        // A component with async dep inside a pending suspense is unmounted before\r\n        // its async dep resolves. This should remove the dep from the suspense, and\r\n        // cause the suspense to resolve immediately if that was the last dep.\r\n        if (parentSuspense &&\r\n            parentSuspense.pendingBranch &&\r\n            !parentSuspense.isUnmounted &&\r\n            instance.asyncDep &&\r\n            !instance.asyncResolved &&\r\n            instance.suspenseId === parentSuspense.pendingId) {\r\n            parentSuspense.deps--;\r\n            if (parentSuspense.deps === 0) {\r\n                parentSuspense.resolve();\r\n            }\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            devtoolsComponentRemoved(instance);\r\n        }\r\n    };\r\n    const unmountChildren = (children, parentComponent, parentSuspense, doRemove = false, optimized = false, start = 0) => {\r\n        for (let i = start; i < children.length; i++) {\r\n            unmount(children[i], parentComponent, parentSuspense, doRemove, optimized);\r\n        }\r\n    };\r\n    const getNextHostNode = vnode => {\r\n        if (vnode.shapeFlag & 6 /* COMPONENT */) {\r\n            return getNextHostNode(vnode.component.subTree);\r\n        }\r\n        if (vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n            return vnode.suspense.next();\r\n        }\r\n        return hostNextSibling((vnode.anchor || vnode.el));\r\n    };\r\n    const render = (vnode, container, isSVG) => {\r\n        if (vnode == null) {\r\n            if (container._vnode) {\r\n                unmount(container._vnode, null, null, true);\r\n            }\r\n        }\r\n        else {\r\n            patch(container._vnode || null, vnode, container, null, null, null, isSVG);\r\n        }\r\n        flushPostFlushCbs();\r\n        container._vnode = vnode;\r\n    };\r\n    const internals = {\r\n        p: patch,\r\n        um: unmount,\r\n        m: move,\r\n        r: remove,\r\n        mt: mountComponent,\r\n        mc: mountChildren,\r\n        pc: patchChildren,\r\n        pbc: patchBlockChildren,\r\n        n: getNextHostNode,\r\n        o: options\r\n    };\r\n    let hydrate;\r\n    let hydrateNode;\r\n    if (createHydrationFns) {\r\n        [hydrate, hydrateNode] = createHydrationFns(internals);\r\n    }\r\n    return {\r\n        render,\r\n        hydrate,\r\n        createApp: createAppAPI(render, hydrate)\r\n    };\r\n}\r\nfunction setRef(rawRef, oldRawRef, parentSuspense, vnode, isUnmount = false) {\r\n    if (isArray(rawRef)) {\r\n        rawRef.forEach((r, i) => setRef(r, oldRawRef && (isArray(oldRawRef) ? oldRawRef[i] : oldRawRef), parentSuspense, vnode, isUnmount));\r\n        return;\r\n    }\r\n    if (isAsyncWrapper(vnode) && !isUnmount) {\r\n        // when mounting async components, nothing needs to be done,\r\n        // because the template ref is forwarded to inner component\r\n        return;\r\n    }\r\n    const refValue = vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */\r\n        ? getExposeProxy(vnode.component) || vnode.component.proxy\r\n        : vnode.el;\r\n    const value = isUnmount ? null : refValue;\r\n    const { i: owner, r: ref } = rawRef;\r\n    if ((process.env.NODE_ENV !== 'production') && !owner) {\r\n        warn(`Missing ref owner context. ref cannot be used on hoisted vnodes. ` +\r\n            `A vnode with ref must be created inside the render function.`);\r\n        return;\r\n    }\r\n    const oldRef = oldRawRef && oldRawRef.r;\r\n    const refs = owner.refs === EMPTY_OBJ ? (owner.refs = {}) : owner.refs;\r\n    const setupState = owner.setupState;\r\n    // dynamic ref changed. unset old ref\r\n    if (oldRef != null && oldRef !== ref) {\r\n        if (isString(oldRef)) {\r\n            refs[oldRef] = null;\r\n            if (hasOwn(setupState, oldRef)) {\r\n                setupState[oldRef] = null;\r\n            }\r\n        }\r\n        else if (isRef(oldRef)) {\r\n            oldRef.value = null;\r\n        }\r\n    }\r\n    if (isString(ref)) {\r\n        const doSet = () => {\r\n            {\r\n                refs[ref] = value;\r\n            }\r\n            if (hasOwn(setupState, ref)) {\r\n                setupState[ref] = value;\r\n            }\r\n        };\r\n        // #1789: for non-null values, set them after render\r\n        // null values means this is unmount and it should not overwrite another\r\n        // ref with the same key\r\n        if (value) {\r\n            doSet.id = -1;\r\n            queuePostRenderEffect(doSet, parentSuspense);\r\n        }\r\n        else {\r\n            doSet();\r\n        }\r\n    }\r\n    else if (isRef(ref)) {\r\n        const doSet = () => {\r\n            ref.value = value;\r\n        };\r\n        if (value) {\r\n            doSet.id = -1;\r\n            queuePostRenderEffect(doSet, parentSuspense);\r\n        }\r\n        else {\r\n            doSet();\r\n        }\r\n    }\r\n    else if (isFunction$1(ref)) {\r\n        callWithErrorHandling(ref, owner, 12 /* FUNCTION_REF */, [value, refs]);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn('Invalid template ref type:', value, `(${typeof value})`);\r\n    }\r\n}\r\nfunction invokeVNodeHook(hook, instance, vnode, prevVNode = null) {\r\n    callWithAsyncErrorHandling(hook, instance, 7 /* VNODE_HOOK */, [\r\n        vnode,\r\n        prevVNode\r\n    ]);\r\n}\r\n/**\r\n * #1156\r\n * When a component is HMR-enabled, we need to make sure that all static nodes\r\n * inside a block also inherit the DOM element from the previous tree so that\r\n * HMR updates (which are full updates) can retrieve the element for patching.\r\n *\r\n * #2080\r\n * Inside keyed `template` fragment static children, if a fragment is moved,\r\n * the children will always moved so that need inherit el form previous nodes\r\n * to ensure correct moved position.\r\n */\r\nfunction traverseStaticChildren(n1, n2, shallow = false) {\r\n    const ch1 = n1.children;\r\n    const ch2 = n2.children;\r\n    if (isArray(ch1) && isArray(ch2)) {\r\n        for (let i = 0; i < ch1.length; i++) {\r\n            // this is only called in the optimized path so array children are\r\n            // guaranteed to be vnodes\r\n            const c1 = ch1[i];\r\n            let c2 = ch2[i];\r\n            if (c2.shapeFlag & 1 /* ELEMENT */ && !c2.dynamicChildren) {\r\n                if (c2.patchFlag <= 0 || c2.patchFlag === 32 /* HYDRATE_EVENTS */) {\r\n                    c2 = ch2[i] = cloneIfMounted(ch2[i]);\r\n                    c2.el = c1.el;\r\n                }\r\n                if (!shallow)\r\n                    traverseStaticChildren(c1, c2);\r\n            }\r\n            // also inherit for comment nodes, but not placeholders (e.g. v-if which\r\n            // would have received .el during block patch)\r\n            if ((process.env.NODE_ENV !== 'production') && c2.type === Comment && !c2.el) {\r\n                c2.el = c1.el;\r\n            }\r\n        }\r\n    }\r\n}\r\n// https://en.wikipedia.org/wiki/Longest_increasing_subsequence\r\nfunction getSequence(arr) {\r\n    const p = arr.slice();\r\n    const result = [0];\r\n    let i, j, u, v, c;\r\n    const len = arr.length;\r\n    for (i = 0; i < len; i++) {\r\n        const arrI = arr[i];\r\n        if (arrI !== 0) {\r\n            j = result[result.length - 1];\r\n            if (arr[j] < arrI) {\r\n                p[i] = j;\r\n                result.push(i);\r\n                continue;\r\n            }\r\n            u = 0;\r\n            v = result.length - 1;\r\n            while (u < v) {\r\n                c = (u + v) >> 1;\r\n                if (arr[result[c]] < arrI) {\r\n                    u = c + 1;\r\n                }\r\n                else {\r\n                    v = c;\r\n                }\r\n            }\r\n            if (arrI < arr[result[u]]) {\r\n                if (u > 0) {\r\n                    p[i] = result[u - 1];\r\n                }\r\n                result[u] = i;\r\n            }\r\n        }\r\n    }\r\n    u = result.length;\r\n    v = result[u - 1];\r\n    while (u-- > 0) {\r\n        result[u] = v;\r\n        v = p[v];\r\n    }\r\n    return result;\r\n}\n\nconst isTeleport = (type) => type.__isTeleport;\r\nconst isTeleportDisabled = (props) => props && (props.disabled || props.disabled === '');\r\nconst isTargetSVG = (target) => typeof SVGElement !== 'undefined' && target instanceof SVGElement;\r\nconst resolveTarget = (props, select) => {\r\n    const targetSelector = props && props.to;\r\n    if (isString(targetSelector)) {\r\n        if (!select) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Current renderer does not support string target for Teleports. ` +\r\n                    `(missing querySelector renderer option)`);\r\n            return null;\r\n        }\r\n        else {\r\n            const target = select(targetSelector);\r\n            if (!target) {\r\n                (process.env.NODE_ENV !== 'production') &&\r\n                    warn(`Failed to locate Teleport target with selector \"${targetSelector}\". ` +\r\n                        `Note the target element must exist before the component is mounted - ` +\r\n                        `i.e. the target cannot be rendered by the component itself, and ` +\r\n                        `ideally should be outside of the entire Vue component tree.`);\r\n            }\r\n            return target;\r\n        }\r\n    }\r\n    else {\r\n        if ((process.env.NODE_ENV !== 'production') && !targetSelector && !isTeleportDisabled(props)) {\r\n            warn(`Invalid Teleport target: ${targetSelector}`);\r\n        }\r\n        return targetSelector;\r\n    }\r\n};\r\nconst TeleportImpl = {\r\n    __isTeleport: true,\r\n    process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, internals) {\r\n        const { mc: mountChildren, pc: patchChildren, pbc: patchBlockChildren, o: { insert, querySelector, createText, createComment } } = internals;\r\n        const disabled = isTeleportDisabled(n2.props);\r\n        let { shapeFlag, children, dynamicChildren } = n2;\r\n        // #3302\r\n        // HMR updated, force full diff\r\n        if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        if (n1 == null) {\r\n            // insert anchors in the main view\r\n            const placeholder = (n2.el = (process.env.NODE_ENV !== 'production')\r\n                ? createComment('teleport start')\r\n                : createText(''));\r\n            const mainAnchor = (n2.anchor = (process.env.NODE_ENV !== 'production')\r\n                ? createComment('teleport end')\r\n                : createText(''));\r\n            insert(placeholder, container, anchor);\r\n            insert(mainAnchor, container, anchor);\r\n            const target = (n2.target = resolveTarget(n2.props, querySelector));\r\n            const targetAnchor = (n2.targetAnchor = createText(''));\r\n            if (target) {\r\n                insert(targetAnchor, target);\r\n                // #2652 we could be teleporting from a non-SVG tree into an SVG tree\r\n                isSVG = isSVG || isTargetSVG(target);\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production') && !disabled) {\r\n                warn('Invalid Teleport target on mount:', target, `(${typeof target})`);\r\n            }\r\n            const mount = (container, anchor) => {\r\n                // Teleport *always* has Array children. This is enforced in both the\r\n                // compiler and vnode children normalization.\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    mountChildren(children, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n            };\r\n            if (disabled) {\r\n                mount(container, mainAnchor);\r\n            }\r\n            else if (target) {\r\n                mount(target, targetAnchor);\r\n            }\r\n        }\r\n        else {\r\n            // update content\r\n            n2.el = n1.el;\r\n            const mainAnchor = (n2.anchor = n1.anchor);\r\n            const target = (n2.target = n1.target);\r\n            const targetAnchor = (n2.targetAnchor = n1.targetAnchor);\r\n            const wasDisabled = isTeleportDisabled(n1.props);\r\n            const currentContainer = wasDisabled ? container : target;\r\n            const currentAnchor = wasDisabled ? mainAnchor : targetAnchor;\r\n            isSVG = isSVG || isTargetSVG(target);\r\n            if (dynamicChildren) {\r\n                // fast path when the teleport happens to be a block root\r\n                patchBlockChildren(n1.dynamicChildren, dynamicChildren, currentContainer, parentComponent, parentSuspense, isSVG, slotScopeIds);\r\n                // even in block tree mode we need to make sure all root-level nodes\r\n                // in the teleport inherit previous DOM references so that they can\r\n                // be moved in future patches.\r\n                traverseStaticChildren(n1, n2, true);\r\n            }\r\n            else if (!optimized) {\r\n                patchChildren(n1, n2, currentContainer, currentAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, false);\r\n            }\r\n            if (disabled) {\r\n                if (!wasDisabled) {\r\n                    // enabled -> disabled\r\n                    // move into main container\r\n                    moveTeleport(n2, container, mainAnchor, internals, 1 /* TOGGLE */);\r\n                }\r\n            }\r\n            else {\r\n                // target changed\r\n                if ((n2.props && n2.props.to) !== (n1.props && n1.props.to)) {\r\n                    const nextTarget = (n2.target = resolveTarget(n2.props, querySelector));\r\n                    if (nextTarget) {\r\n                        moveTeleport(n2, nextTarget, null, internals, 0 /* TARGET_CHANGE */);\r\n                    }\r\n                    else if ((process.env.NODE_ENV !== 'production')) {\r\n                        warn('Invalid Teleport target on update:', target, `(${typeof target})`);\r\n                    }\r\n                }\r\n                else if (wasDisabled) {\r\n                    // disabled -> enabled\r\n                    // move into teleport target\r\n                    moveTeleport(n2, target, targetAnchor, internals, 1 /* TOGGLE */);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    remove(vnode, parentComponent, parentSuspense, optimized, { um: unmount, o: { remove: hostRemove } }, doRemove) {\r\n        const { shapeFlag, children, anchor, targetAnchor, target, props } = vnode;\r\n        if (target) {\r\n            hostRemove(targetAnchor);\r\n        }\r\n        // an unmounted teleport should always remove its children if not disabled\r\n        if (doRemove || !isTeleportDisabled(props)) {\r\n            hostRemove(anchor);\r\n            if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                for (let i = 0; i < children.length; i++) {\r\n                    const child = children[i];\r\n                    unmount(child, parentComponent, parentSuspense, true, !!child.dynamicChildren);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    move: moveTeleport,\r\n    hydrate: hydrateTeleport\r\n};\r\nfunction moveTeleport(vnode, container, parentAnchor, { o: { insert }, m: move }, moveType = 2 /* REORDER */) {\r\n    // move target anchor if this is a target change.\r\n    if (moveType === 0 /* TARGET_CHANGE */) {\r\n        insert(vnode.targetAnchor, container, parentAnchor);\r\n    }\r\n    const { el, anchor, shapeFlag, children, props } = vnode;\r\n    const isReorder = moveType === 2 /* REORDER */;\r\n    // move main view anchor if this is a re-order.\r\n    if (isReorder) {\r\n        insert(el, container, parentAnchor);\r\n    }\r\n    // if this is a re-order and teleport is enabled (content is in target)\r\n    // do not move children. So the opposite is: only move children if this\r\n    // is not a reorder, or the teleport is disabled\r\n    if (!isReorder || isTeleportDisabled(props)) {\r\n        // Teleport has either Array children or no children.\r\n        if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            for (let i = 0; i < children.length; i++) {\r\n                move(children[i], container, parentAnchor, 2 /* REORDER */);\r\n            }\r\n        }\r\n    }\r\n    // move main view anchor if this is a re-order.\r\n    if (isReorder) {\r\n        insert(anchor, container, parentAnchor);\r\n    }\r\n}\r\nfunction hydrateTeleport(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized, { o: { nextSibling, parentNode, querySelector } }, hydrateChildren) {\r\n    const target = (vnode.target = resolveTarget(vnode.props, querySelector));\r\n    if (target) {\r\n        // if multiple teleports rendered to the same target element, we need to\r\n        // pick up from where the last teleport finished instead of the first node\r\n        const targetNode = target._lpa || target.firstChild;\r\n        if (vnode.shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            if (isTeleportDisabled(vnode.props)) {\r\n                vnode.anchor = hydrateChildren(nextSibling(node), vnode, parentNode(node), parentComponent, parentSuspense, slotScopeIds, optimized);\r\n                vnode.targetAnchor = targetNode;\r\n            }\r\n            else {\r\n                vnode.anchor = nextSibling(node);\r\n                vnode.targetAnchor = hydrateChildren(targetNode, vnode, target, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n            }\r\n            target._lpa =\r\n                vnode.targetAnchor && nextSibling(vnode.targetAnchor);\r\n        }\r\n    }\r\n    return vnode.anchor && nextSibling(vnode.anchor);\r\n}\r\n// Force-casted public typing for h and TSX props inference\r\nconst Teleport = TeleportImpl;\n\nconst COMPONENTS = 'components';\r\nconst DIRECTIVES = 'directives';\r\n/**\r\n * @private\r\n */\r\nfunction resolveComponent(name, maybeSelfReference) {\r\n    return resolveAsset(COMPONENTS, name, true, maybeSelfReference) || name;\r\n}\r\nconst NULL_DYNAMIC_COMPONENT = Symbol();\r\n/**\r\n * @private\r\n */\r\nfunction resolveDynamicComponent(component) {\r\n    if (isString(component)) {\r\n        return resolveAsset(COMPONENTS, component, false) || component;\r\n    }\r\n    else {\r\n        // invalid types will fallthrough to createVNode and raise warning\r\n        return (component || NULL_DYNAMIC_COMPONENT);\r\n    }\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction resolveDirective(name) {\r\n    return resolveAsset(DIRECTIVES, name);\r\n}\r\n// implementation\r\nfunction resolveAsset(type, name, warnMissing = true, maybeSelfReference = false) {\r\n    const instance = currentRenderingInstance || currentInstance;\r\n    if (instance) {\r\n        const Component = instance.type;\r\n        // explicit self name has highest priority\r\n        if (type === COMPONENTS) {\r\n            const selfName = getComponentName(Component);\r\n            if (selfName &&\r\n                (selfName === name ||\r\n                    selfName === camelize(name) ||\r\n                    selfName === capitalize(camelize(name)))) {\r\n                return Component;\r\n            }\r\n        }\r\n        const res = \r\n        // local registration\r\n        // check instance[type] first which is resolved for options API\r\n        resolve(instance[type] || Component[type], name) ||\r\n            // global registration\r\n            resolve(instance.appContext[type], name);\r\n        if (!res && maybeSelfReference) {\r\n            // fallback to implicit self-reference\r\n            return Component;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && warnMissing && !res) {\r\n            const extra = type === COMPONENTS\r\n                ? `\\nIf this is a native custom element, make sure to exclude it from ` +\r\n                    `component resolution via compilerOptions.isCustomElement.`\r\n                : ``;\r\n            warn(`Failed to resolve ${type.slice(0, -1)}: ${name}${extra}`);\r\n        }\r\n        return res;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`resolve${capitalize(type.slice(0, -1))} ` +\r\n            `can only be used in render() or setup().`);\r\n    }\r\n}\r\nfunction resolve(registry, name) {\r\n    return (registry &&\r\n        (registry[name] ||\r\n            registry[camelize(name)] ||\r\n            registry[capitalize(camelize(name))]));\r\n}\n\nconst Fragment = Symbol((process.env.NODE_ENV !== 'production') ? 'Fragment' : undefined);\r\nconst Text = Symbol((process.env.NODE_ENV !== 'production') ? 'Text' : undefined);\r\nconst Comment = Symbol((process.env.NODE_ENV !== 'production') ? 'Comment' : undefined);\r\nconst Static = Symbol((process.env.NODE_ENV !== 'production') ? 'Static' : undefined);\r\n// Since v-if and v-for are the two possible ways node structure can dynamically\r\n// change, once we consider v-if branches and each v-for fragment a block, we\r\n// can divide a template into nested blocks, and within each block the node\r\n// structure would be stable. This allows us to skip most children diffing\r\n// and only worry about the dynamic nodes (indicated by patch flags).\r\nconst blockStack = [];\r\nlet currentBlock = null;\r\n/**\r\n * Open a block.\r\n * This must be called before `createBlock`. It cannot be part of `createBlock`\r\n * because the children of the block are evaluated before `createBlock` itself\r\n * is called. The generated code typically looks like this:\r\n *\r\n * ```js\r\n * function render() {\r\n *   return (openBlock(),createBlock('div', null, [...]))\r\n * }\r\n * ```\r\n * disableTracking is true when creating a v-for fragment block, since a v-for\r\n * fragment always diffs its children.\r\n *\r\n * @private\r\n */\r\nfunction openBlock(disableTracking = false) {\r\n    blockStack.push((currentBlock = disableTracking ? null : []));\r\n}\r\nfunction closeBlock() {\r\n    blockStack.pop();\r\n    currentBlock = blockStack[blockStack.length - 1] || null;\r\n}\r\n// Whether we should be tracking dynamic child nodes inside a block.\r\n// Only tracks when this value is > 0\r\n// We are not using a simple boolean because this value may need to be\r\n// incremented/decremented by nested usage of v-once (see below)\r\nlet isBlockTreeEnabled = 1;\r\n/**\r\n * Block tracking sometimes needs to be disabled, for example during the\r\n * creation of a tree that needs to be cached by v-once. The compiler generates\r\n * code like this:\r\n *\r\n * ``` js\r\n * _cache[1] || (\r\n *   setBlockTracking(-1),\r\n *   _cache[1] = createVNode(...),\r\n *   setBlockTracking(1),\r\n *   _cache[1]\r\n * )\r\n * ```\r\n *\r\n * @private\r\n */\r\nfunction setBlockTracking(value) {\r\n    isBlockTreeEnabled += value;\r\n}\r\nfunction setupBlock(vnode) {\r\n    // save current block children on the block vnode\r\n    vnode.dynamicChildren =\r\n        isBlockTreeEnabled > 0 ? currentBlock || EMPTY_ARR : null;\r\n    // close block\r\n    closeBlock();\r\n    // a block is always going to be patched, so track it as a child of its\r\n    // parent block\r\n    if (isBlockTreeEnabled > 0 && currentBlock) {\r\n        currentBlock.push(vnode);\r\n    }\r\n    return vnode;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createElementBlock(type, props, children, patchFlag, dynamicProps, shapeFlag) {\r\n    return setupBlock(createBaseVNode(type, props, children, patchFlag, dynamicProps, shapeFlag, true /* isBlock */));\r\n}\r\n/**\r\n * Create a block root vnode. Takes the same exact arguments as `createVNode`.\r\n * A block root keeps track of dynamic nodes within the block in the\r\n * `dynamicChildren` array.\r\n *\r\n * @private\r\n */\r\nfunction createBlock(type, props, children, patchFlag, dynamicProps) {\r\n    return setupBlock(createVNode(type, props, children, patchFlag, dynamicProps, true /* isBlock: prevent a block from tracking itself */));\r\n}\r\nfunction isVNode(value) {\r\n    return value ? value.__v_isVNode === true : false;\r\n}\r\nfunction isSameVNodeType(n1, n2) {\r\n    if ((process.env.NODE_ENV !== 'production') &&\r\n        n2.shapeFlag & 6 /* COMPONENT */ &&\r\n        hmrDirtyComponents.has(n2.type)) {\r\n        // HMR only: if the component has been hot-updated, force a reload.\r\n        return false;\r\n    }\r\n    return n1.type === n2.type && n1.key === n2.key;\r\n}\r\nlet vnodeArgsTransformer;\r\n/**\r\n * Internal API for registering an arguments transform for createVNode\r\n * used for creating stubs in the test-utils\r\n * It is *internal* but needs to be exposed for test-utils to pick up proper\r\n * typings\r\n */\r\nfunction transformVNodeArgs(transformer) {\r\n    vnodeArgsTransformer = transformer;\r\n}\r\nconst createVNodeWithArgsTransform = (...args) => {\r\n    return _createVNode(...(vnodeArgsTransformer\r\n        ? vnodeArgsTransformer(args, currentRenderingInstance)\r\n        : args));\r\n};\r\nconst InternalObjectKey = `__vInternal`;\r\nconst normalizeKey = ({ key }) => key != null ? key : null;\r\nconst normalizeRef = ({ ref }) => {\r\n    return (ref != null\r\n        ? isString(ref) || isRef(ref) || isFunction$1(ref)\r\n            ? { i: currentRenderingInstance, r: ref }\r\n            : ref\r\n        : null);\r\n};\r\nfunction createBaseVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null, shapeFlag = type === Fragment ? 0 : 1 /* ELEMENT */, isBlockNode = false, needFullChildrenNormalization = false) {\r\n    const vnode = {\r\n        __v_isVNode: true,\r\n        __v_skip: true,\r\n        type,\r\n        props,\r\n        key: props && normalizeKey(props),\r\n        ref: props && normalizeRef(props),\r\n        scopeId: currentScopeId,\r\n        slotScopeIds: null,\r\n        children,\r\n        component: null,\r\n        suspense: null,\r\n        ssContent: null,\r\n        ssFallback: null,\r\n        dirs: null,\r\n        transition: null,\r\n        el: null,\r\n        anchor: null,\r\n        target: null,\r\n        targetAnchor: null,\r\n        staticCount: 0,\r\n        shapeFlag,\r\n        patchFlag,\r\n        dynamicProps,\r\n        dynamicChildren: null,\r\n        appContext: null\r\n    };\r\n    if (needFullChildrenNormalization) {\r\n        normalizeChildren(vnode, children);\r\n        // normalize suspense children\r\n        if (shapeFlag & 128 /* SUSPENSE */) {\r\n            type.normalize(vnode);\r\n        }\r\n    }\r\n    else if (children) {\r\n        // compiled element vnode - if children is passed, only possible types are\r\n        // string or Array.\r\n        vnode.shapeFlag |= isString(children)\r\n            ? 8 /* TEXT_CHILDREN */\r\n            : 16 /* ARRAY_CHILDREN */;\r\n    }\r\n    // validate key\r\n    if ((process.env.NODE_ENV !== 'production') && vnode.key !== vnode.key) {\r\n        warn(`VNode created with invalid key (NaN). VNode type:`, vnode.type);\r\n    }\r\n    // track vnode for block tree\r\n    if (isBlockTreeEnabled > 0 &&\r\n        // avoid a block node from tracking itself\r\n        !isBlockNode &&\r\n        // has current parent block\r\n        currentBlock &&\r\n        // presence of a patch flag indicates this node needs patching on updates.\r\n        // component nodes also should always be patched, because even if the\r\n        // component doesn't need to update, it needs to persist the instance on to\r\n        // the next vnode so that it can be properly unmounted later.\r\n        (vnode.patchFlag > 0 || shapeFlag & 6 /* COMPONENT */) &&\r\n        // the EVENTS flag is only for hydration and if it is the only flag, the\r\n        // vnode should not be considered dynamic due to handler caching.\r\n        vnode.patchFlag !== 32 /* HYDRATE_EVENTS */) {\r\n        currentBlock.push(vnode);\r\n    }\r\n    return vnode;\r\n}\r\nconst createVNode = ((process.env.NODE_ENV !== 'production') ? createVNodeWithArgsTransform : _createVNode);\r\nfunction _createVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null, isBlockNode = false) {\r\n    if (!type || type === NULL_DYNAMIC_COMPONENT) {\r\n        if ((process.env.NODE_ENV !== 'production') && !type) {\r\n            warn(`Invalid vnode type when creating vnode: ${type}.`);\r\n        }\r\n        type = Comment;\r\n    }\r\n    if (isVNode(type)) {\r\n        // createVNode receiving an existing vnode. This happens in cases like\r\n        // <component :is=\"vnode\"/>\r\n        // #2078 make sure to merge refs during the clone instead of overwriting it\r\n        const cloned = cloneVNode(type, props, true /* mergeRef: true */);\r\n        if (children) {\r\n            normalizeChildren(cloned, children);\r\n        }\r\n        return cloned;\r\n    }\r\n    // class component normalization.\r\n    if (isClassComponent(type)) {\r\n        type = type.__vccOpts;\r\n    }\r\n    // class & style normalization.\r\n    if (props) {\r\n        // for reactive or proxy objects, we need to clone it to enable mutation.\r\n        props = guardReactiveProps(props);\r\n        let { class: klass, style } = props;\r\n        if (klass && !isString(klass)) {\r\n            props.class = normalizeClass(klass);\r\n        }\r\n        if (isObject$1(style)) {\r\n            // reactive state objects need to be cloned since they are likely to be\r\n            // mutated\r\n            if (isProxy(style) && !isArray(style)) {\r\n                style = extend({}, style);\r\n            }\r\n            props.style = normalizeStyle(style);\r\n        }\r\n    }\r\n    // encode the vnode type information into a bitmap\r\n    const shapeFlag = isString(type)\r\n        ? 1 /* ELEMENT */\r\n        : isSuspense(type)\r\n            ? 128 /* SUSPENSE */\r\n            : isTeleport(type)\r\n                ? 64 /* TELEPORT */\r\n                : isObject$1(type)\r\n                    ? 4 /* STATEFUL_COMPONENT */\r\n                    : isFunction$1(type)\r\n                        ? 2 /* FUNCTIONAL_COMPONENT */\r\n                        : 0;\r\n    if ((process.env.NODE_ENV !== 'production') && shapeFlag & 4 /* STATEFUL_COMPONENT */ && isProxy(type)) {\r\n        type = toRaw(type);\r\n        warn(`Vue received a Component which was made a reactive object. This can ` +\r\n            `lead to unnecessary performance overhead, and should be avoided by ` +\r\n            `marking the component with \\`markRaw\\` or using \\`shallowRef\\` ` +\r\n            `instead of \\`ref\\`.`, `\\nComponent that was made reactive: `, type);\r\n    }\r\n    return createBaseVNode(type, props, children, patchFlag, dynamicProps, shapeFlag, isBlockNode, true);\r\n}\r\nfunction guardReactiveProps(props) {\r\n    if (!props)\r\n        return null;\r\n    return isProxy(props) || InternalObjectKey in props\r\n        ? extend({}, props)\r\n        : props;\r\n}\r\nfunction cloneVNode(vnode, extraProps, mergeRef = false) {\r\n    // This is intentionally NOT using spread or extend to avoid the runtime\r\n    // key enumeration cost.\r\n    const { props, ref, patchFlag, children } = vnode;\r\n    const mergedProps = extraProps ? mergeProps(props || {}, extraProps) : props;\r\n    const cloned = {\r\n        __v_isVNode: true,\r\n        __v_skip: true,\r\n        type: vnode.type,\r\n        props: mergedProps,\r\n        key: mergedProps && normalizeKey(mergedProps),\r\n        ref: extraProps && extraProps.ref\r\n            ? // #2078 in the case of <component :is=\"vnode\" ref=\"extra\"/>\r\n                // if the vnode itself already has a ref, cloneVNode will need to merge\r\n                // the refs so the single vnode can be set on multiple refs\r\n                mergeRef && ref\r\n                    ? isArray(ref)\r\n                        ? ref.concat(normalizeRef(extraProps))\r\n                        : [ref, normalizeRef(extraProps)]\r\n                    : normalizeRef(extraProps)\r\n            : ref,\r\n        scopeId: vnode.scopeId,\r\n        slotScopeIds: vnode.slotScopeIds,\r\n        children: (process.env.NODE_ENV !== 'production') && patchFlag === -1 /* HOISTED */ && isArray(children)\r\n            ? children.map(deepCloneVNode)\r\n            : children,\r\n        target: vnode.target,\r\n        targetAnchor: vnode.targetAnchor,\r\n        staticCount: vnode.staticCount,\r\n        shapeFlag: vnode.shapeFlag,\r\n        // if the vnode is cloned with extra props, we can no longer assume its\r\n        // existing patch flag to be reliable and need to add the FULL_PROPS flag.\r\n        // note: perserve flag for fragments since they use the flag for children\r\n        // fast paths only.\r\n        patchFlag: extraProps && vnode.type !== Fragment\r\n            ? patchFlag === -1 // hoisted node\r\n                ? 16 /* FULL_PROPS */\r\n                : patchFlag | 16 /* FULL_PROPS */\r\n            : patchFlag,\r\n        dynamicProps: vnode.dynamicProps,\r\n        dynamicChildren: vnode.dynamicChildren,\r\n        appContext: vnode.appContext,\r\n        dirs: vnode.dirs,\r\n        transition: vnode.transition,\r\n        // These should technically only be non-null on mounted VNodes. However,\r\n        // they *should* be copied for kept-alive vnodes. So we just always copy\r\n        // them since them being non-null during a mount doesn't affect the logic as\r\n        // they will simply be overwritten.\r\n        component: vnode.component,\r\n        suspense: vnode.suspense,\r\n        ssContent: vnode.ssContent && cloneVNode(vnode.ssContent),\r\n        ssFallback: vnode.ssFallback && cloneVNode(vnode.ssFallback),\r\n        el: vnode.el,\r\n        anchor: vnode.anchor\r\n    };\r\n    return cloned;\r\n}\r\n/**\r\n * Dev only, for HMR of hoisted vnodes reused in v-for\r\n * https://github.com/vitejs/vite/issues/2022\r\n */\r\nfunction deepCloneVNode(vnode) {\r\n    const cloned = cloneVNode(vnode);\r\n    if (isArray(vnode.children)) {\r\n        cloned.children = vnode.children.map(deepCloneVNode);\r\n    }\r\n    return cloned;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createTextVNode(text = ' ', flag = 0) {\r\n    return createVNode(Text, null, text, flag);\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createStaticVNode(content, numberOfNodes) {\r\n    // A static vnode can contain multiple stringified elements, and the number\r\n    // of elements is necessary for hydration.\r\n    const vnode = createVNode(Static, null, content);\r\n    vnode.staticCount = numberOfNodes;\r\n    return vnode;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createCommentVNode(text = '', \r\n// when used as the v-else branch, the comment node must be created as a\r\n// block to ensure correct updates.\r\nasBlock = false) {\r\n    return asBlock\r\n        ? (openBlock(), createBlock(Comment, null, text))\r\n        : createVNode(Comment, null, text);\r\n}\r\nfunction normalizeVNode(child) {\r\n    if (child == null || typeof child === 'boolean') {\r\n        // empty placeholder\r\n        return createVNode(Comment);\r\n    }\r\n    else if (isArray(child)) {\r\n        // fragment\r\n        return createVNode(Fragment, null, \r\n        // #3666, avoid reference pollution when reusing vnode\r\n        child.slice());\r\n    }\r\n    else if (typeof child === 'object') {\r\n        // already vnode, this should be the most common since compiled templates\r\n        // always produce all-vnode children arrays\r\n        return cloneIfMounted(child);\r\n    }\r\n    else {\r\n        // strings and numbers\r\n        return createVNode(Text, null, String(child));\r\n    }\r\n}\r\n// optimized normalization for template-compiled render fns\r\nfunction cloneIfMounted(child) {\r\n    return child.el === null || child.memo ? child : cloneVNode(child);\r\n}\r\nfunction normalizeChildren(vnode, children) {\r\n    let type = 0;\r\n    const { shapeFlag } = vnode;\r\n    if (children == null) {\r\n        children = null;\r\n    }\r\n    else if (isArray(children)) {\r\n        type = 16 /* ARRAY_CHILDREN */;\r\n    }\r\n    else if (typeof children === 'object') {\r\n        if (shapeFlag & (1 /* ELEMENT */ | 64 /* TELEPORT */)) {\r\n            // Normalize slot to plain children for plain element and Teleport\r\n            const slot = children.default;\r\n            if (slot) {\r\n                // _c marker is added by withCtx() indicating this is a compiled slot\r\n                slot._c && (slot._d = false);\r\n                normalizeChildren(vnode, slot());\r\n                slot._c && (slot._d = true);\r\n            }\r\n            return;\r\n        }\r\n        else {\r\n            type = 32 /* SLOTS_CHILDREN */;\r\n            const slotFlag = children._;\r\n            if (!slotFlag && !(InternalObjectKey in children)) {\r\n                children._ctx = currentRenderingInstance;\r\n            }\r\n            else if (slotFlag === 3 /* FORWARDED */ && currentRenderingInstance) {\r\n                // a child component receives forwarded slots from the parent.\r\n                // its slot type is determined by its parent's slot type.\r\n                if (currentRenderingInstance.slots._ === 1 /* STABLE */) {\r\n                    children._ = 1 /* STABLE */;\r\n                }\r\n                else {\r\n                    children._ = 2 /* DYNAMIC */;\r\n                    vnode.patchFlag |= 1024 /* DYNAMIC_SLOTS */;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else if (isFunction$1(children)) {\r\n        children = { default: children, _ctx: currentRenderingInstance };\r\n        type = 32 /* SLOTS_CHILDREN */;\r\n    }\r\n    else {\r\n        children = String(children);\r\n        // force teleport children to array so it can be moved around\r\n        if (shapeFlag & 64 /* TELEPORT */) {\r\n            type = 16 /* ARRAY_CHILDREN */;\r\n            children = [createTextVNode(children)];\r\n        }\r\n        else {\r\n            type = 8 /* TEXT_CHILDREN */;\r\n        }\r\n    }\r\n    vnode.children = children;\r\n    vnode.shapeFlag |= type;\r\n}\r\nfunction mergeProps(...args) {\r\n    const ret = {};\r\n    for (let i = 0; i < args.length; i++) {\r\n        const toMerge = args[i];\r\n        for (const key in toMerge) {\r\n            if (key === 'class') {\r\n                if (ret.class !== toMerge.class) {\r\n                    ret.class = normalizeClass([ret.class, toMerge.class]);\r\n                }\r\n            }\r\n            else if (key === 'style') {\r\n                ret.style = normalizeStyle([ret.style, toMerge.style]);\r\n            }\r\n            else if (isOn(key)) {\r\n                const existing = ret[key];\r\n                const incoming = toMerge[key];\r\n                if (existing !== incoming) {\r\n                    ret[key] = existing\r\n                        ? [].concat(existing, incoming)\r\n                        : incoming;\r\n                }\r\n            }\r\n            else if (key !== '') {\r\n                ret[key] = toMerge[key];\r\n            }\r\n        }\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * Actual implementation\r\n */\r\nfunction renderList(source, renderItem, cache, index) {\r\n    let ret;\r\n    const cached = (cache && cache[index]);\r\n    if (isArray(source) || isString(source)) {\r\n        ret = new Array(source.length);\r\n        for (let i = 0, l = source.length; i < l; i++) {\r\n            ret[i] = renderItem(source[i], i, undefined, cached && cached[i]);\r\n        }\r\n    }\r\n    else if (typeof source === 'number') {\r\n        if ((process.env.NODE_ENV !== 'production') && !Number.isInteger(source)) {\r\n            warn(`The v-for range expect an integer value but got ${source}.`);\r\n            return [];\r\n        }\r\n        ret = new Array(source);\r\n        for (let i = 0; i < source; i++) {\r\n            ret[i] = renderItem(i + 1, i, undefined, cached && cached[i]);\r\n        }\r\n    }\r\n    else if (isObject$1(source)) {\r\n        if (source[Symbol.iterator]) {\r\n            ret = Array.from(source, (item, i) => renderItem(item, i, undefined, cached && cached[i]));\r\n        }\r\n        else {\r\n            const keys = Object.keys(source);\r\n            ret = new Array(keys.length);\r\n            for (let i = 0, l = keys.length; i < l; i++) {\r\n                const key = keys[i];\r\n                ret[i] = renderItem(source[key], key, i, cached && cached[i]);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        ret = [];\r\n    }\r\n    if (cache) {\r\n        cache[index] = ret;\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * Compiler runtime helper for creating dynamic slots object\r\n * @private\r\n */\r\nfunction createSlots(slots, dynamicSlots) {\r\n    for (let i = 0; i < dynamicSlots.length; i++) {\r\n        const slot = dynamicSlots[i];\r\n        // array of dynamic slot generated by <template v-for=\"...\" #[...]>\r\n        if (isArray(slot)) {\r\n            for (let j = 0; j < slot.length; j++) {\r\n                slots[slot[j].name] = slot[j].fn;\r\n            }\r\n        }\r\n        else if (slot) {\r\n            // conditional single slot generated by <template v-if=\"...\" #foo>\r\n            slots[slot.name] = slot.fn;\r\n        }\r\n    }\r\n    return slots;\r\n}\n\n/**\r\n * Compiler runtime helper for rendering `<slot/>`\r\n * @private\r\n */\r\nfunction renderSlot(slots, name, props = {}, \r\n// this is not a user-facing function, so the fallback is always generated by\r\n// the compiler and guaranteed to be a function returning an array\r\nfallback, noSlotted) {\r\n    if (currentRenderingInstance.isCE) {\r\n        return createVNode('slot', name === 'default' ? null : { name }, fallback && fallback());\r\n    }\r\n    let slot = slots[name];\r\n    if ((process.env.NODE_ENV !== 'production') && slot && slot.length > 1) {\r\n        warn(`SSR-optimized slot function detected in a non-SSR-optimized render ` +\r\n            `function. You need to mark this component with $dynamic-slots in the ` +\r\n            `parent template.`);\r\n        slot = () => [];\r\n    }\r\n    // a compiled slot disables block tracking by default to avoid manual\r\n    // invocation interfering with template-based block tracking, but in\r\n    // `renderSlot` we can be sure that it's template-based so we can force\r\n    // enable it.\r\n    if (slot && slot._c) {\r\n        slot._d = false;\r\n    }\r\n    openBlock();\r\n    const validSlotContent = slot && ensureValidVNode(slot(props));\r\n    const rendered = createBlock(Fragment, { key: props.key || `_${name}` }, validSlotContent || (fallback ? fallback() : []), validSlotContent && slots._ === 1 /* STABLE */\r\n        ? 64 /* STABLE_FRAGMENT */\r\n        : -2 /* BAIL */);\r\n    if (!noSlotted && rendered.scopeId) {\r\n        rendered.slotScopeIds = [rendered.scopeId + '-s'];\r\n    }\r\n    if (slot && slot._c) {\r\n        slot._d = true;\r\n    }\r\n    return rendered;\r\n}\r\nfunction ensureValidVNode(vnodes) {\r\n    return vnodes.some(child => {\r\n        if (!isVNode(child))\r\n            return true;\r\n        if (child.type === Comment)\r\n            return false;\r\n        if (child.type === Fragment &&\r\n            !ensureValidVNode(child.children))\r\n            return false;\r\n        return true;\r\n    })\r\n        ? vnodes\r\n        : null;\r\n}\n\n/**\r\n * For prefixing keys in v-on=\"obj\" with \"on\"\r\n * @private\r\n */\r\nfunction toHandlers(obj) {\r\n    const ret = {};\r\n    if ((process.env.NODE_ENV !== 'production') && !isObject$1(obj)) {\r\n        warn(`v-on with no argument expects an object value.`);\r\n        return ret;\r\n    }\r\n    for (const key in obj) {\r\n        ret[toHandlerKey(key)] = obj[key];\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * #2437 In Vue 3, functional components do not have a public instance proxy but\r\n * they exist in the internal parent chain. For code that relies on traversing\r\n * public $parent chains, skip functional ones and go to the parent instead.\r\n */\r\nconst getPublicInstance = (i) => {\r\n    if (!i)\r\n        return null;\r\n    if (isStatefulComponent(i))\r\n        return getExposeProxy(i) || i.proxy;\r\n    return getPublicInstance(i.parent);\r\n};\r\nconst publicPropertiesMap = extend(Object.create(null), {\r\n    $: i => i,\r\n    $el: i => i.vnode.el,\r\n    $data: i => i.data,\r\n    $props: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.props) : i.props),\r\n    $attrs: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.attrs) : i.attrs),\r\n    $slots: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.slots) : i.slots),\r\n    $refs: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.refs) : i.refs),\r\n    $parent: i => getPublicInstance(i.parent),\r\n    $root: i => getPublicInstance(i.root),\r\n    $emit: i => i.emit,\r\n    $options: i => (__VUE_OPTIONS_API__ ? resolveMergedOptions(i) : i.type),\r\n    $forceUpdate: i => () => queueJob(i.update),\r\n    $nextTick: i => nextTick.bind(i.proxy),\r\n    $watch: i => (__VUE_OPTIONS_API__ ? instanceWatch.bind(i) : NOOP)\r\n});\r\nconst PublicInstanceProxyHandlers = {\r\n    get({ _: instance }, key) {\r\n        const { ctx, setupState, data, props, accessCache, type, appContext } = instance;\r\n        // for internal formatters to know that this is a Vue instance\r\n        if ((process.env.NODE_ENV !== 'production') && key === '__isVue') {\r\n            return true;\r\n        }\r\n        // prioritize <script setup> bindings during dev.\r\n        // this allows even properties that start with _ or $ to be used - so that\r\n        // it aligns with the production behavior where the render fn is inlined and\r\n        // indeed has access to all declared variables.\r\n        if ((process.env.NODE_ENV !== 'production') &&\r\n            setupState !== EMPTY_OBJ &&\r\n            setupState.__isScriptSetup &&\r\n            hasOwn(setupState, key)) {\r\n            return setupState[key];\r\n        }\r\n        // data / props / ctx\r\n        // This getter gets called for every property access on the render context\r\n        // during render and is a major hotspot. The most expensive part of this\r\n        // is the multiple hasOwn() calls. It's much faster to do a simple property\r\n        // access on a plain object, so we use an accessCache object (with null\r\n        // prototype) to memoize what access type a key corresponds to.\r\n        let normalizedProps;\r\n        if (key[0] !== '$') {\r\n            const n = accessCache[key];\r\n            if (n !== undefined) {\r\n                switch (n) {\r\n                    case 0 /* SETUP */:\r\n                        return setupState[key];\r\n                    case 1 /* DATA */:\r\n                        return data[key];\r\n                    case 3 /* CONTEXT */:\r\n                        return ctx[key];\r\n                    case 2 /* PROPS */:\r\n                        return props[key];\r\n                    // default: just fallthrough\r\n                }\r\n            }\r\n            else if (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) {\r\n                accessCache[key] = 0 /* SETUP */;\r\n                return setupState[key];\r\n            }\r\n            else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n                accessCache[key] = 1 /* DATA */;\r\n                return data[key];\r\n            }\r\n            else if (\r\n            // only cache other properties when instance has declared (thus stable)\r\n            // props\r\n            (normalizedProps = instance.propsOptions[0]) &&\r\n                hasOwn(normalizedProps, key)) {\r\n                accessCache[key] = 2 /* PROPS */;\r\n                return props[key];\r\n            }\r\n            else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\r\n                accessCache[key] = 3 /* CONTEXT */;\r\n                return ctx[key];\r\n            }\r\n            else if (!__VUE_OPTIONS_API__ || shouldCacheAccess) {\r\n                accessCache[key] = 4 /* OTHER */;\r\n            }\r\n        }\r\n        const publicGetter = publicPropertiesMap[key];\r\n        let cssModule, globalProperties;\r\n        // public $xxx properties\r\n        if (publicGetter) {\r\n            if (key === '$attrs') {\r\n                track(instance, \"get\" /* GET */, key);\r\n                (process.env.NODE_ENV !== 'production') && markAttrsAccessed();\r\n            }\r\n            return publicGetter(instance);\r\n        }\r\n        else if (\r\n        // css module (injected by vue-loader)\r\n        (cssModule = type.__cssModules) &&\r\n            (cssModule = cssModule[key])) {\r\n            return cssModule;\r\n        }\r\n        else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\r\n            // user may set custom properties to `this` that start with `$`\r\n            accessCache[key] = 3 /* CONTEXT */;\r\n            return ctx[key];\r\n        }\r\n        else if (\r\n        // global properties\r\n        ((globalProperties = appContext.config.globalProperties),\r\n            hasOwn(globalProperties, key))) {\r\n            {\r\n                return globalProperties[key];\r\n            }\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production') &&\r\n            currentRenderingInstance &&\r\n            (!isString(key) ||\r\n                // #1091 avoid internal isRef/isVNode checks on component instance leading\r\n                // to infinite warning loop\r\n                key.indexOf('__v') !== 0)) {\r\n            if (data !== EMPTY_OBJ &&\r\n                (key[0] === '$' || key[0] === '_') &&\r\n                hasOwn(data, key)) {\r\n                warn(`Property ${JSON.stringify(key)} must be accessed via $data because it starts with a reserved ` +\r\n                    `character (\"$\" or \"_\") and is not proxied on the render context.`);\r\n            }\r\n            else if (instance === currentRenderingInstance) {\r\n                warn(`Property ${JSON.stringify(key)} was accessed during render ` +\r\n                    `but is not defined on instance.`);\r\n            }\r\n        }\r\n    },\r\n    set({ _: instance }, key, value) {\r\n        const { data, setupState, ctx } = instance;\r\n        if (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) {\r\n            setupState[key] = value;\r\n        }\r\n        else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n            data[key] = value;\r\n        }\r\n        else if (hasOwn(instance.props, key)) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Attempting to mutate prop \"${key}\". Props are readonly.`, instance);\r\n            return false;\r\n        }\r\n        if (key[0] === '$' && key.slice(1) in instance) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Attempting to mutate public property \"${key}\". ` +\r\n                    `Properties starting with $ are reserved and readonly.`, instance);\r\n            return false;\r\n        }\r\n        else {\r\n            if ((process.env.NODE_ENV !== 'production') && key in instance.appContext.config.globalProperties) {\r\n                Object.defineProperty(ctx, key, {\r\n                    enumerable: true,\r\n                    configurable: true,\r\n                    value\r\n                });\r\n            }\r\n            else {\r\n                ctx[key] = value;\r\n            }\r\n        }\r\n        return true;\r\n    },\r\n    has({ _: { data, setupState, accessCache, ctx, appContext, propsOptions } }, key) {\r\n        let normalizedProps;\r\n        return (accessCache[key] !== undefined ||\r\n            (data !== EMPTY_OBJ && hasOwn(data, key)) ||\r\n            (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) ||\r\n            ((normalizedProps = propsOptions[0]) && hasOwn(normalizedProps, key)) ||\r\n            hasOwn(ctx, key) ||\r\n            hasOwn(publicPropertiesMap, key) ||\r\n            hasOwn(appContext.config.globalProperties, key));\r\n    }\r\n};\r\nif ((process.env.NODE_ENV !== 'production') && !false) {\r\n    PublicInstanceProxyHandlers.ownKeys = (target) => {\r\n        warn(`Avoid app logic that relies on enumerating keys on a component instance. ` +\r\n            `The keys will be empty in production mode to avoid performance overhead.`);\r\n        return Reflect.ownKeys(target);\r\n    };\r\n}\r\nconst RuntimeCompiledPublicInstanceProxyHandlers = /*#__PURE__*/ extend({}, PublicInstanceProxyHandlers, {\r\n    get(target, key) {\r\n        // fast path for unscopables when using `with` block\r\n        if (key === Symbol.unscopables) {\r\n            return;\r\n        }\r\n        return PublicInstanceProxyHandlers.get(target, key, target);\r\n    },\r\n    has(_, key) {\r\n        const has = key[0] !== '_' && !isGloballyWhitelisted(key);\r\n        if ((process.env.NODE_ENV !== 'production') && !has && PublicInstanceProxyHandlers.has(_, key)) {\r\n            warn(`Property ${JSON.stringify(key)} should not start with _ which is a reserved prefix for Vue internals.`);\r\n        }\r\n        return has;\r\n    }\r\n});\r\n// dev only\r\n// In dev mode, the proxy target exposes the same properties as seen on `this`\r\n// for easier console inspection. In prod mode it will be an empty object so\r\n// these properties definitions can be skipped.\r\nfunction createDevRenderContext(instance) {\r\n    const target = {};\r\n    // expose internal instance for proxy handlers\r\n    Object.defineProperty(target, `_`, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        get: () => instance\r\n    });\r\n    // expose public properties\r\n    Object.keys(publicPropertiesMap).forEach(key => {\r\n        Object.defineProperty(target, key, {\r\n            configurable: true,\r\n            enumerable: false,\r\n            get: () => publicPropertiesMap[key](instance),\r\n            // intercepted by the proxy so no need for implementation,\r\n            // but needed to prevent set errors\r\n            set: NOOP\r\n        });\r\n    });\r\n    return target;\r\n}\r\n// dev only\r\nfunction exposePropsOnRenderContext(instance) {\r\n    const { ctx, propsOptions: [propsOptions] } = instance;\r\n    if (propsOptions) {\r\n        Object.keys(propsOptions).forEach(key => {\r\n            Object.defineProperty(ctx, key, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get: () => instance.props[key],\r\n                set: NOOP\r\n            });\r\n        });\r\n    }\r\n}\r\n// dev only\r\nfunction exposeSetupStateOnRenderContext(instance) {\r\n    const { ctx, setupState } = instance;\r\n    Object.keys(toRaw(setupState)).forEach(key => {\r\n        if (!setupState.__isScriptSetup) {\r\n            if (key[0] === '$' || key[0] === '_') {\r\n                warn(`setup() return property ${JSON.stringify(key)} should not start with \"$\" or \"_\" ` +\r\n                    `which are reserved prefixes for Vue internals.`);\r\n                return;\r\n            }\r\n            Object.defineProperty(ctx, key, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get: () => setupState[key],\r\n                set: NOOP\r\n            });\r\n        }\r\n    });\r\n}\n\nconst emptyAppContext = createAppContext();\r\nlet uid$1 = 0;\r\nfunction createComponentInstance(vnode, parent, suspense) {\r\n    const type = vnode.type;\r\n    // inherit parent app context - or - if root, adopt from root vnode\r\n    const appContext = (parent ? parent.appContext : vnode.appContext) || emptyAppContext;\r\n    const instance = {\r\n        uid: uid$1++,\r\n        vnode,\r\n        type,\r\n        parent,\r\n        appContext,\r\n        root: null,\r\n        next: null,\r\n        subTree: null,\r\n        update: null,\r\n        scope: new EffectScope(true /* detached */),\r\n        render: null,\r\n        proxy: null,\r\n        exposed: null,\r\n        exposeProxy: null,\r\n        withProxy: null,\r\n        provides: parent ? parent.provides : Object.create(appContext.provides),\r\n        accessCache: null,\r\n        renderCache: [],\r\n        // local resovled assets\r\n        components: null,\r\n        directives: null,\r\n        // resolved props and emits options\r\n        propsOptions: normalizePropsOptions(type, appContext),\r\n        emitsOptions: normalizeEmitsOptions(type, appContext),\r\n        // emit\r\n        emit: null,\r\n        emitted: null,\r\n        // props default value\r\n        propsDefaults: EMPTY_OBJ,\r\n        // inheritAttrs\r\n        inheritAttrs: type.inheritAttrs,\r\n        // state\r\n        ctx: EMPTY_OBJ,\r\n        data: EMPTY_OBJ,\r\n        props: EMPTY_OBJ,\r\n        attrs: EMPTY_OBJ,\r\n        slots: EMPTY_OBJ,\r\n        refs: EMPTY_OBJ,\r\n        setupState: EMPTY_OBJ,\r\n        setupContext: null,\r\n        // suspense related\r\n        suspense,\r\n        suspenseId: suspense ? suspense.pendingId : 0,\r\n        asyncDep: null,\r\n        asyncResolved: false,\r\n        // lifecycle hooks\r\n        // not using enums here because it results in computed properties\r\n        isMounted: false,\r\n        isUnmounted: false,\r\n        isDeactivated: false,\r\n        bc: null,\r\n        c: null,\r\n        bm: null,\r\n        m: null,\r\n        bu: null,\r\n        u: null,\r\n        um: null,\r\n        bum: null,\r\n        da: null,\r\n        a: null,\r\n        rtg: null,\r\n        rtc: null,\r\n        ec: null,\r\n        sp: null\r\n    };\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        instance.ctx = createDevRenderContext(instance);\r\n    }\r\n    else {\r\n        instance.ctx = { _: instance };\r\n    }\r\n    instance.root = parent ? parent.root : instance;\r\n    instance.emit = emit.bind(null, instance);\r\n    // apply custom element special handling\r\n    if (vnode.ce) {\r\n        vnode.ce(instance);\r\n    }\r\n    return instance;\r\n}\r\nlet currentInstance = null;\r\nconst getCurrentInstance = () => currentInstance || currentRenderingInstance;\r\nconst setCurrentInstance = (instance) => {\r\n    currentInstance = instance;\r\n    instance.scope.on();\r\n};\r\nconst unsetCurrentInstance = () => {\r\n    currentInstance && currentInstance.scope.off();\r\n    currentInstance = null;\r\n};\r\nconst isBuiltInTag = /*#__PURE__*/ makeMap('slot,component');\r\nfunction validateComponentName(name, config) {\r\n    const appIsNativeTag = config.isNativeTag || NO;\r\n    if (isBuiltInTag(name) || appIsNativeTag(name)) {\r\n        warn('Do not use built-in or reserved HTML elements as component id: ' + name);\r\n    }\r\n}\r\nfunction isStatefulComponent(instance) {\r\n    return instance.vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */;\r\n}\r\nlet isInSSRComponentSetup = false;\r\nfunction setupComponent(instance, isSSR = false) {\r\n    isInSSRComponentSetup = isSSR;\r\n    const { props, children } = instance.vnode;\r\n    const isStateful = isStatefulComponent(instance);\r\n    initProps(instance, props, isStateful, isSSR);\r\n    initSlots(instance, children);\r\n    const setupResult = isStateful\r\n        ? setupStatefulComponent(instance, isSSR)\r\n        : undefined;\r\n    isInSSRComponentSetup = false;\r\n    return setupResult;\r\n}\r\nfunction setupStatefulComponent(instance, isSSR) {\r\n    const Component = instance.type;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        if (Component.name) {\r\n            validateComponentName(Component.name, instance.appContext.config);\r\n        }\r\n        if (Component.components) {\r\n            const names = Object.keys(Component.components);\r\n            for (let i = 0; i < names.length; i++) {\r\n                validateComponentName(names[i], instance.appContext.config);\r\n            }\r\n        }\r\n        if (Component.directives) {\r\n            const names = Object.keys(Component.directives);\r\n            for (let i = 0; i < names.length; i++) {\r\n                validateDirectiveName(names[i]);\r\n            }\r\n        }\r\n        if (Component.compilerOptions && isRuntimeOnly()) {\r\n            warn(`\"compilerOptions\" is only supported when using a build of Vue that ` +\r\n                `includes the runtime compiler. Since you are using a runtime-only ` +\r\n                `build, the options should be passed via your build tool config instead.`);\r\n        }\r\n    }\r\n    // 0. create render proxy property access cache\r\n    instance.accessCache = Object.create(null);\r\n    // 1. create public instance / render proxy\r\n    // also mark it raw so it's never observed\r\n    instance.proxy = markRaw(new Proxy(instance.ctx, PublicInstanceProxyHandlers));\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        exposePropsOnRenderContext(instance);\r\n    }\r\n    // 2. call setup()\r\n    const { setup } = Component;\r\n    if (setup) {\r\n        const setupContext = (instance.setupContext =\r\n            setup.length > 1 ? createSetupContext(instance) : null);\r\n        setCurrentInstance(instance);\r\n        pauseTracking();\r\n        const setupResult = callWithErrorHandling(setup, instance, 0 /* SETUP_FUNCTION */, [(process.env.NODE_ENV !== 'production') ? shallowReadonly(instance.props) : instance.props, setupContext]);\r\n        resetTracking();\r\n        unsetCurrentInstance();\r\n        if (isPromise$1(setupResult)) {\r\n            setupResult.then(unsetCurrentInstance, unsetCurrentInstance);\r\n            if (isSSR) {\r\n                // return the promise so server-renderer can wait on it\r\n                return setupResult\r\n                    .then((resolvedResult) => {\r\n                    handleSetupResult(instance, resolvedResult, isSSR);\r\n                })\r\n                    .catch(e => {\r\n                    handleError(e, instance, 0 /* SETUP_FUNCTION */);\r\n                });\r\n            }\r\n            else {\r\n                // async setup returned Promise.\r\n                // bail here and wait for re-entry.\r\n                instance.asyncDep = setupResult;\r\n            }\r\n        }\r\n        else {\r\n            handleSetupResult(instance, setupResult, isSSR);\r\n        }\r\n    }\r\n    else {\r\n        finishComponentSetup(instance, isSSR);\r\n    }\r\n}\r\nfunction handleSetupResult(instance, setupResult, isSSR) {\r\n    if (isFunction$1(setupResult)) {\r\n        // setup returned an inline render function\r\n        {\r\n            instance.render = setupResult;\r\n        }\r\n    }\r\n    else if (isObject$1(setupResult)) {\r\n        if ((process.env.NODE_ENV !== 'production') && isVNode(setupResult)) {\r\n            warn(`setup() should not return VNodes directly - ` +\r\n                `return a render function instead.`);\r\n        }\r\n        // setup returned bindings.\r\n        // assuming a render function compiled from template is present.\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            instance.devtoolsRawSetupState = setupResult;\r\n        }\r\n        instance.setupState = proxyRefs(setupResult);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            exposeSetupStateOnRenderContext(instance);\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production') && setupResult !== undefined) {\r\n        warn(`setup() should return an object. Received: ${setupResult === null ? 'null' : typeof setupResult}`);\r\n    }\r\n    finishComponentSetup(instance, isSSR);\r\n}\r\nlet compile;\r\nlet installWithProxy;\r\n/**\r\n * For runtime-dom to register the compiler.\r\n * Note the exported method uses any to avoid d.ts relying on the compiler types.\r\n */\r\nfunction registerRuntimeCompiler(_compile) {\r\n    compile = _compile;\r\n    installWithProxy = i => {\r\n        if (i.render._rc) {\r\n            i.withProxy = new Proxy(i.ctx, RuntimeCompiledPublicInstanceProxyHandlers);\r\n        }\r\n    };\r\n}\r\n// dev only\r\nconst isRuntimeOnly = () => !compile;\r\nfunction finishComponentSetup(instance, isSSR, skipOptions) {\r\n    const Component = instance.type;\r\n    // template / render function normalization\r\n    if (!instance.render) {\r\n        // could be set from setup()\r\n        if (compile && !Component.render) {\r\n            const template = Component.template;\r\n            if (template) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `compile`);\r\n                }\r\n                const { isCustomElement, compilerOptions } = instance.appContext.config;\r\n                const { delimiters, compilerOptions: componentCompilerOptions } = Component;\r\n                const finalCompilerOptions = extend(extend({\r\n                    isCustomElement,\r\n                    delimiters\r\n                }, compilerOptions), componentCompilerOptions);\r\n                Component.render = compile(template, finalCompilerOptions);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `compile`);\r\n                }\r\n            }\r\n        }\r\n        instance.render = (Component.render || NOOP);\r\n        // for runtime-compiled render functions using `with` blocks, the render\r\n        // proxy used needs a different `has` handler which is more performant and\r\n        // also only allows a whitelist of globals to fallthrough.\r\n        if (installWithProxy) {\r\n            installWithProxy(instance);\r\n        }\r\n    }\r\n    // support for 2.x options\r\n    if (__VUE_OPTIONS_API__ && !(false )) {\r\n        setCurrentInstance(instance);\r\n        pauseTracking();\r\n        applyOptions(instance);\r\n        resetTracking();\r\n        unsetCurrentInstance();\r\n    }\r\n    // warn missing template/render\r\n    // the runtime compilation of template in SSR is done by server-render\r\n    if ((process.env.NODE_ENV !== 'production') && !Component.render && instance.render === NOOP && !isSSR) {\r\n        /* istanbul ignore if */\r\n        if (!compile && Component.template) {\r\n            warn(`Component provided template option but ` +\r\n                `runtime compilation is not supported in this build of Vue.` +\r\n                (` Configure your bundler to alias \"vue\" to \"vue/dist/vue.esm-bundler.js\".`\r\n                    ) /* should not happen */);\r\n        }\r\n        else {\r\n            warn(`Component is missing template or render function.`);\r\n        }\r\n    }\r\n}\r\nfunction createAttrsProxy(instance) {\r\n    return new Proxy(instance.attrs, (process.env.NODE_ENV !== 'production')\r\n        ? {\r\n            get(target, key) {\r\n                markAttrsAccessed();\r\n                track(instance, \"get\" /* GET */, '$attrs');\r\n                return target[key];\r\n            },\r\n            set() {\r\n                warn(`setupContext.attrs is readonly.`);\r\n                return false;\r\n            },\r\n            deleteProperty() {\r\n                warn(`setupContext.attrs is readonly.`);\r\n                return false;\r\n            }\r\n        }\r\n        : {\r\n            get(target, key) {\r\n                track(instance, \"get\" /* GET */, '$attrs');\r\n                return target[key];\r\n            }\r\n        });\r\n}\r\nfunction createSetupContext(instance) {\r\n    const expose = exposed => {\r\n        if ((process.env.NODE_ENV !== 'production') && instance.exposed) {\r\n            warn(`expose() should be called only once per setup().`);\r\n        }\r\n        instance.exposed = exposed || {};\r\n    };\r\n    let attrs;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        // We use getters in dev in case libs like test-utils overwrite instance\r\n        // properties (overwrites should not be done in prod)\r\n        return Object.freeze({\r\n            get attrs() {\r\n                return attrs || (attrs = createAttrsProxy(instance));\r\n            },\r\n            get slots() {\r\n                return shallowReadonly(instance.slots);\r\n            },\r\n            get emit() {\r\n                return (event, ...args) => instance.emit(event, ...args);\r\n            },\r\n            expose\r\n        });\r\n    }\r\n    else {\r\n        return {\r\n            get attrs() {\r\n                return attrs || (attrs = createAttrsProxy(instance));\r\n            },\r\n            slots: instance.slots,\r\n            emit: instance.emit,\r\n            expose\r\n        };\r\n    }\r\n}\r\nfunction getExposeProxy(instance) {\r\n    if (instance.exposed) {\r\n        return (instance.exposeProxy ||\r\n            (instance.exposeProxy = new Proxy(proxyRefs(markRaw(instance.exposed)), {\r\n                get(target, key) {\r\n                    if (key in target) {\r\n                        return target[key];\r\n                    }\r\n                    else if (key in publicPropertiesMap) {\r\n                        return publicPropertiesMap[key](instance);\r\n                    }\r\n                }\r\n            })));\r\n    }\r\n}\r\nconst classifyRE = /(?:^|[-_])(\\w)/g;\r\nconst classify = (str) => str.replace(classifyRE, c => c.toUpperCase()).replace(/[-_]/g, '');\r\nfunction getComponentName(Component) {\r\n    return isFunction$1(Component)\r\n        ? Component.displayName || Component.name\r\n        : Component.name;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatComponentName(instance, Component, isRoot = false) {\r\n    let name = getComponentName(Component);\r\n    if (!name && Component.__file) {\r\n        const match = Component.__file.match(/([^/\\\\]+)\\.\\w+$/);\r\n        if (match) {\r\n            name = match[1];\r\n        }\r\n    }\r\n    if (!name && instance && instance.parent) {\r\n        // try to infer the name based on reverse resolution\r\n        const inferFromRegistry = (registry) => {\r\n            for (const key in registry) {\r\n                if (registry[key] === Component) {\r\n                    return key;\r\n                }\r\n            }\r\n        };\r\n        name =\r\n            inferFromRegistry(instance.components ||\r\n                instance.parent.type.components) || inferFromRegistry(instance.appContext.components);\r\n    }\r\n    return name ? classify(name) : isRoot ? `App` : `Anonymous`;\r\n}\r\nfunction isClassComponent(value) {\r\n    return isFunction$1(value) && '__vccOpts' in value;\r\n}\n\nconst stack = [];\r\nfunction pushWarningContext(vnode) {\r\n    stack.push(vnode);\r\n}\r\nfunction popWarningContext() {\r\n    stack.pop();\r\n}\r\nfunction warn(msg, ...args) {\r\n    // avoid props formatting or warn handler tracking deps that might be mutated\r\n    // during patch, leading to infinite recursion.\r\n    pauseTracking();\r\n    const instance = stack.length ? stack[stack.length - 1].component : null;\r\n    const appWarnHandler = instance && instance.appContext.config.warnHandler;\r\n    const trace = getComponentTrace();\r\n    if (appWarnHandler) {\r\n        callWithErrorHandling(appWarnHandler, instance, 11 /* APP_WARN_HANDLER */, [\r\n            msg + args.join(''),\r\n            instance && instance.proxy,\r\n            trace\r\n                .map(({ vnode }) => `at <${formatComponentName(instance, vnode.type)}>`)\r\n                .join('\\n'),\r\n            trace\r\n        ]);\r\n    }\r\n    else {\r\n        const warnArgs = [`[Vue warn]: ${msg}`, ...args];\r\n        /* istanbul ignore if */\r\n        if (trace.length &&\r\n            // avoid spamming console during tests\r\n            !false) {\r\n            warnArgs.push(`\\n`, ...formatTrace(trace));\r\n        }\r\n        console.warn(...warnArgs);\r\n    }\r\n    resetTracking();\r\n}\r\nfunction getComponentTrace() {\r\n    let currentVNode = stack[stack.length - 1];\r\n    if (!currentVNode) {\r\n        return [];\r\n    }\r\n    // we can't just use the stack because it will be incomplete during updates\r\n    // that did not start from the root. Re-construct the parent chain using\r\n    // instance parent pointers.\r\n    const normalizedStack = [];\r\n    while (currentVNode) {\r\n        const last = normalizedStack[0];\r\n        if (last && last.vnode === currentVNode) {\r\n            last.recurseCount++;\r\n        }\r\n        else {\r\n            normalizedStack.push({\r\n                vnode: currentVNode,\r\n                recurseCount: 0\r\n            });\r\n        }\r\n        const parentInstance = currentVNode.component && currentVNode.component.parent;\r\n        currentVNode = parentInstance && parentInstance.vnode;\r\n    }\r\n    return normalizedStack;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatTrace(trace) {\r\n    const logs = [];\r\n    trace.forEach((entry, i) => {\r\n        logs.push(...(i === 0 ? [] : [`\\n`]), ...formatTraceEntry(entry));\r\n    });\r\n    return logs;\r\n}\r\nfunction formatTraceEntry({ vnode, recurseCount }) {\r\n    const postfix = recurseCount > 0 ? `... (${recurseCount} recursive calls)` : ``;\r\n    const isRoot = vnode.component ? vnode.component.parent == null : false;\r\n    const open = ` at <${formatComponentName(vnode.component, vnode.type, isRoot)}`;\r\n    const close = `>` + postfix;\r\n    return vnode.props\r\n        ? [open, ...formatProps(vnode.props), close]\r\n        : [open + close];\r\n}\r\n/* istanbul ignore next */\r\nfunction formatProps(props) {\r\n    const res = [];\r\n    const keys = Object.keys(props);\r\n    keys.slice(0, 3).forEach(key => {\r\n        res.push(...formatProp(key, props[key]));\r\n    });\r\n    if (keys.length > 3) {\r\n        res.push(` ...`);\r\n    }\r\n    return res;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatProp(key, value, raw) {\r\n    if (isString(value)) {\r\n        value = JSON.stringify(value);\r\n        return raw ? value : [`${key}=${value}`];\r\n    }\r\n    else if (typeof value === 'number' ||\r\n        typeof value === 'boolean' ||\r\n        value == null) {\r\n        return raw ? value : [`${key}=${value}`];\r\n    }\r\n    else if (isRef(value)) {\r\n        value = formatProp(key, toRaw(value.value), true);\r\n        return raw ? value : [`${key}=Ref<`, value, `>`];\r\n    }\r\n    else if (isFunction$1(value)) {\r\n        return [`${key}=fn${value.name ? `<${value.name}>` : ``}`];\r\n    }\r\n    else {\r\n        value = toRaw(value);\r\n        return raw ? value : [`${key}=`, value];\r\n    }\r\n}\n\nconst ErrorTypeStrings = {\r\n    [\"sp\" /* SERVER_PREFETCH */]: 'serverPrefetch hook',\r\n    [\"bc\" /* BEFORE_CREATE */]: 'beforeCreate hook',\r\n    [\"c\" /* CREATED */]: 'created hook',\r\n    [\"bm\" /* BEFORE_MOUNT */]: 'beforeMount hook',\r\n    [\"m\" /* MOUNTED */]: 'mounted hook',\r\n    [\"bu\" /* BEFORE_UPDATE */]: 'beforeUpdate hook',\r\n    [\"u\" /* UPDATED */]: 'updated',\r\n    [\"bum\" /* BEFORE_UNMOUNT */]: 'beforeUnmount hook',\r\n    [\"um\" /* UNMOUNTED */]: 'unmounted hook',\r\n    [\"a\" /* ACTIVATED */]: 'activated hook',\r\n    [\"da\" /* DEACTIVATED */]: 'deactivated hook',\r\n    [\"ec\" /* ERROR_CAPTURED */]: 'errorCaptured hook',\r\n    [\"rtc\" /* RENDER_TRACKED */]: 'renderTracked hook',\r\n    [\"rtg\" /* RENDER_TRIGGERED */]: 'renderTriggered hook',\r\n    [0 /* SETUP_FUNCTION */]: 'setup function',\r\n    [1 /* RENDER_FUNCTION */]: 'render function',\r\n    [2 /* WATCH_GETTER */]: 'watcher getter',\r\n    [3 /* WATCH_CALLBACK */]: 'watcher callback',\r\n    [4 /* WATCH_CLEANUP */]: 'watcher cleanup function',\r\n    [5 /* NATIVE_EVENT_HANDLER */]: 'native event handler',\r\n    [6 /* COMPONENT_EVENT_HANDLER */]: 'component event handler',\r\n    [7 /* VNODE_HOOK */]: 'vnode hook',\r\n    [8 /* DIRECTIVE_HOOK */]: 'directive hook',\r\n    [9 /* TRANSITION_HOOK */]: 'transition hook',\r\n    [10 /* APP_ERROR_HANDLER */]: 'app errorHandler',\r\n    [11 /* APP_WARN_HANDLER */]: 'app warnHandler',\r\n    [12 /* FUNCTION_REF */]: 'ref function',\r\n    [13 /* ASYNC_COMPONENT_LOADER */]: 'async component loader',\r\n    [14 /* SCHEDULER */]: 'scheduler flush. This is likely a Vue internals bug. ' +\r\n        'Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/vue-next'\r\n};\r\nfunction callWithErrorHandling(fn, instance, type, args) {\r\n    let res;\r\n    try {\r\n        res = args ? fn(...args) : fn();\r\n    }\r\n    catch (err) {\r\n        handleError(err, instance, type);\r\n    }\r\n    return res;\r\n}\r\nfunction callWithAsyncErrorHandling(fn, instance, type, args) {\r\n    if (isFunction$1(fn)) {\r\n        const res = callWithErrorHandling(fn, instance, type, args);\r\n        if (res && isPromise$1(res)) {\r\n            res.catch(err => {\r\n                handleError(err, instance, type);\r\n            });\r\n        }\r\n        return res;\r\n    }\r\n    const values = [];\r\n    for (let i = 0; i < fn.length; i++) {\r\n        values.push(callWithAsyncErrorHandling(fn[i], instance, type, args));\r\n    }\r\n    return values;\r\n}\r\nfunction handleError(err, instance, type, throwInDev = true) {\r\n    const contextVNode = instance ? instance.vnode : null;\r\n    if (instance) {\r\n        let cur = instance.parent;\r\n        // the exposed instance is the render proxy to keep it consistent with 2.x\r\n        const exposedInstance = instance.proxy;\r\n        // in production the hook receives only the error code\r\n        const errorInfo = (process.env.NODE_ENV !== 'production') ? ErrorTypeStrings[type] : type;\r\n        while (cur) {\r\n            const errorCapturedHooks = cur.ec;\r\n            if (errorCapturedHooks) {\r\n                for (let i = 0; i < errorCapturedHooks.length; i++) {\r\n                    if (errorCapturedHooks[i](err, exposedInstance, errorInfo) === false) {\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            cur = cur.parent;\r\n        }\r\n        // app-level handling\r\n        const appErrorHandler = instance.appContext.config.errorHandler;\r\n        if (appErrorHandler) {\r\n            callWithErrorHandling(appErrorHandler, null, 10 /* APP_ERROR_HANDLER */, [err, exposedInstance, errorInfo]);\r\n            return;\r\n        }\r\n    }\r\n    logError(err, type, contextVNode, throwInDev);\r\n}\r\nfunction logError(err, type, contextVNode, throwInDev = true) {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const info = ErrorTypeStrings[type];\r\n        if (contextVNode) {\r\n            pushWarningContext(contextVNode);\r\n        }\r\n        warn(`Unhandled error${info ? ` during execution of ${info}` : ``}`);\r\n        if (contextVNode) {\r\n            popWarningContext();\r\n        }\r\n        // crash in dev by default so it's more noticeable\r\n        if (throwInDev) {\r\n            throw err;\r\n        }\r\n        else {\r\n            console.error(err);\r\n        }\r\n    }\r\n    else {\r\n        // recover in prod to reduce the impact on end-user\r\n        console.error(err);\r\n    }\r\n}\n\nlet isFlushing = false;\r\nlet isFlushPending = false;\r\nconst queue = [];\r\nlet flushIndex = 0;\r\nconst pendingPreFlushCbs = [];\r\nlet activePreFlushCbs = null;\r\nlet preFlushIndex = 0;\r\nconst pendingPostFlushCbs = [];\r\nlet activePostFlushCbs = null;\r\nlet postFlushIndex = 0;\r\nconst resolvedPromise = Promise.resolve();\r\nlet currentFlushPromise = null;\r\nlet currentPreFlushParentJob = null;\r\nconst RECURSION_LIMIT = 100;\r\nfunction nextTick(fn) {\r\n    const p = currentFlushPromise || resolvedPromise;\r\n    return fn ? p.then(this ? fn.bind(this) : fn) : p;\r\n}\r\n// #2768\r\n// Use binary-search to find a suitable position in the queue,\r\n// so that the queue maintains the increasing order of job's id,\r\n// which can prevent the job from being skipped and also can avoid repeated patching.\r\nfunction findInsertionIndex(id) {\r\n    // the start index should be `flushIndex + 1`\r\n    let start = flushIndex + 1;\r\n    let end = queue.length;\r\n    while (start < end) {\r\n        const middle = (start + end) >>> 1;\r\n        const middleJobId = getId(queue[middle]);\r\n        middleJobId < id ? (start = middle + 1) : (end = middle);\r\n    }\r\n    return start;\r\n}\r\nfunction queueJob(job) {\r\n    // the dedupe search uses the startIndex argument of Array.includes()\r\n    // by default the search index includes the current job that is being run\r\n    // so it cannot recursively trigger itself again.\r\n    // if the job is a watch() callback, the search will start with a +1 index to\r\n    // allow it recursively trigger itself - it is the user's responsibility to\r\n    // ensure it doesn't end up in an infinite loop.\r\n    if ((!queue.length ||\r\n        !queue.includes(job, isFlushing && job.allowRecurse ? flushIndex + 1 : flushIndex)) &&\r\n        job !== currentPreFlushParentJob) {\r\n        if (job.id == null) {\r\n            queue.push(job);\r\n        }\r\n        else {\r\n            queue.splice(findInsertionIndex(job.id), 0, job);\r\n        }\r\n        queueFlush();\r\n    }\r\n}\r\nfunction queueFlush() {\r\n    if (!isFlushing && !isFlushPending) {\r\n        isFlushPending = true;\r\n        currentFlushPromise = resolvedPromise.then(flushJobs);\r\n    }\r\n}\r\nfunction invalidateJob(job) {\r\n    const i = queue.indexOf(job);\r\n    if (i > flushIndex) {\r\n        queue.splice(i, 1);\r\n    }\r\n}\r\nfunction queueCb(cb, activeQueue, pendingQueue, index) {\r\n    if (!isArray(cb)) {\r\n        if (!activeQueue ||\r\n            !activeQueue.includes(cb, cb.allowRecurse ? index + 1 : index)) {\r\n            pendingQueue.push(cb);\r\n        }\r\n    }\r\n    else {\r\n        // if cb is an array, it is a component lifecycle hook which can only be\r\n        // triggered by a job, which is already deduped in the main queue, so\r\n        // we can skip duplicate check here to improve perf\r\n        pendingQueue.push(...cb);\r\n    }\r\n    queueFlush();\r\n}\r\nfunction queuePreFlushCb(cb) {\r\n    queueCb(cb, activePreFlushCbs, pendingPreFlushCbs, preFlushIndex);\r\n}\r\nfunction queuePostFlushCb(cb) {\r\n    queueCb(cb, activePostFlushCbs, pendingPostFlushCbs, postFlushIndex);\r\n}\r\nfunction flushPreFlushCbs(seen, parentJob = null) {\r\n    if (pendingPreFlushCbs.length) {\r\n        currentPreFlushParentJob = parentJob;\r\n        activePreFlushCbs = [...new Set(pendingPreFlushCbs)];\r\n        pendingPreFlushCbs.length = 0;\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            seen = seen || new Map();\r\n        }\r\n        for (preFlushIndex = 0; preFlushIndex < activePreFlushCbs.length; preFlushIndex++) {\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                checkRecursiveUpdates(seen, activePreFlushCbs[preFlushIndex])) {\r\n                continue;\r\n            }\r\n            activePreFlushCbs[preFlushIndex]();\r\n        }\r\n        activePreFlushCbs = null;\r\n        preFlushIndex = 0;\r\n        currentPreFlushParentJob = null;\r\n        // recursively flush until it drains\r\n        flushPreFlushCbs(seen, parentJob);\r\n    }\r\n}\r\nfunction flushPostFlushCbs(seen) {\r\n    if (pendingPostFlushCbs.length) {\r\n        const deduped = [...new Set(pendingPostFlushCbs)];\r\n        pendingPostFlushCbs.length = 0;\r\n        // #1947 already has active queue, nested flushPostFlushCbs call\r\n        if (activePostFlushCbs) {\r\n            activePostFlushCbs.push(...deduped);\r\n            return;\r\n        }\r\n        activePostFlushCbs = deduped;\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            seen = seen || new Map();\r\n        }\r\n        activePostFlushCbs.sort((a, b) => getId(a) - getId(b));\r\n        for (postFlushIndex = 0; postFlushIndex < activePostFlushCbs.length; postFlushIndex++) {\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                checkRecursiveUpdates(seen, activePostFlushCbs[postFlushIndex])) {\r\n                continue;\r\n            }\r\n            activePostFlushCbs[postFlushIndex]();\r\n        }\r\n        activePostFlushCbs = null;\r\n        postFlushIndex = 0;\r\n    }\r\n}\r\nconst getId = (job) => job.id == null ? Infinity : job.id;\r\nfunction flushJobs(seen) {\r\n    isFlushPending = false;\r\n    isFlushing = true;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        seen = seen || new Map();\r\n    }\r\n    flushPreFlushCbs(seen);\r\n    // Sort queue before flush.\r\n    // This ensures that:\r\n    // 1. Components are updated from parent to child. (because parent is always\r\n    //    created before the child so its render effect will have smaller\r\n    //    priority number)\r\n    // 2. If a component is unmounted during a parent component's update,\r\n    //    its update can be skipped.\r\n    queue.sort((a, b) => getId(a) - getId(b));\r\n    // conditional usage of checkRecursiveUpdate must be determined out of\r\n    // try ... catch block since Rollup by default de-optimizes treeshaking\r\n    // inside try-catch. This can leave all warning code unshaked. Although\r\n    // they would get eventually shaken by a minifier like terser, some minifiers\r\n    // would fail to do that (e.g. https://github.com/evanw/esbuild/issues/1610)\r\n    const check = (process.env.NODE_ENV !== 'production')\r\n        ? (job) => checkRecursiveUpdates(seen, job)\r\n        : NOOP;\r\n    try {\r\n        for (flushIndex = 0; flushIndex < queue.length; flushIndex++) {\r\n            const job = queue[flushIndex];\r\n            if (job && job.active !== false) {\r\n                if ((process.env.NODE_ENV !== 'production') && check(job)) {\r\n                    continue;\r\n                }\r\n                // console.log(`running:`, job.id)\r\n                callWithErrorHandling(job, null, 14 /* SCHEDULER */);\r\n            }\r\n        }\r\n    }\r\n    finally {\r\n        flushIndex = 0;\r\n        queue.length = 0;\r\n        flushPostFlushCbs(seen);\r\n        isFlushing = false;\r\n        currentFlushPromise = null;\r\n        // some postFlushCb queued jobs!\r\n        // keep flushing until it drains.\r\n        if (queue.length ||\r\n            pendingPreFlushCbs.length ||\r\n            pendingPostFlushCbs.length) {\r\n            flushJobs(seen);\r\n        }\r\n    }\r\n}\r\nfunction checkRecursiveUpdates(seen, fn) {\r\n    if (!seen.has(fn)) {\r\n        seen.set(fn, 1);\r\n    }\r\n    else {\r\n        const count = seen.get(fn);\r\n        if (count > RECURSION_LIMIT) {\r\n            const instance = fn.ownerInstance;\r\n            const componentName = instance && getComponentName(instance.type);\r\n            warn(`Maximum recursive updates exceeded${componentName ? ` in component <${componentName}>` : ``}. ` +\r\n                `This means you have a reactive effect that is mutating its own ` +\r\n                `dependencies and thus recursively triggering itself. Possible sources ` +\r\n                `include component template, render function, updated hook or ` +\r\n                `watcher source function.`);\r\n            return true;\r\n        }\r\n        else {\r\n            seen.set(fn, count + 1);\r\n        }\r\n    }\r\n}\n\n// Simple effect.\r\nfunction watchEffect(effect, options) {\r\n    return doWatch(effect, null, options);\r\n}\r\nfunction watchPostEffect(effect, options) {\r\n    return doWatch(effect, null, ((process.env.NODE_ENV !== 'production')\r\n        ? Object.assign(options || {}, { flush: 'post' })\r\n        : { flush: 'post' }));\r\n}\r\nfunction watchSyncEffect(effect, options) {\r\n    return doWatch(effect, null, ((process.env.NODE_ENV !== 'production')\r\n        ? Object.assign(options || {}, { flush: 'sync' })\r\n        : { flush: 'sync' }));\r\n}\r\n// initial value for watchers to trigger on undefined initial values\r\nconst INITIAL_WATCHER_VALUE = {};\r\n// implementation\r\nfunction watch(source, cb, options) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isFunction$1(cb)) {\r\n        warn(`\\`watch(fn, options?)\\` signature has been moved to a separate API. ` +\r\n            `Use \\`watchEffect(fn, options?)\\` instead. \\`watch\\` now only ` +\r\n            `supports \\`watch(source, cb, options?) signature.`);\r\n    }\r\n    return doWatch(source, cb, options);\r\n}\r\nfunction doWatch(source, cb, { immediate, deep, flush, onTrack, onTrigger } = EMPTY_OBJ) {\r\n    if ((process.env.NODE_ENV !== 'production') && !cb) {\r\n        if (immediate !== undefined) {\r\n            warn(`watch() \"immediate\" option is only respected when using the ` +\r\n                `watch(source, callback, options?) signature.`);\r\n        }\r\n        if (deep !== undefined) {\r\n            warn(`watch() \"deep\" option is only respected when using the ` +\r\n                `watch(source, callback, options?) signature.`);\r\n        }\r\n    }\r\n    const warnInvalidSource = (s) => {\r\n        warn(`Invalid watch source: `, s, `A watch source can only be a getter/effect function, a ref, ` +\r\n            `a reactive object, or an array of these types.`);\r\n    };\r\n    const instance = currentInstance;\r\n    let getter;\r\n    let forceTrigger = false;\r\n    let isMultiSource = false;\r\n    if (isRef(source)) {\r\n        getter = () => source.value;\r\n        forceTrigger = !!source._shallow;\r\n    }\r\n    else if (isReactive(source)) {\r\n        getter = () => source;\r\n        deep = true;\r\n    }\r\n    else if (isArray(source)) {\r\n        isMultiSource = true;\r\n        forceTrigger = source.some(isReactive);\r\n        getter = () => source.map(s => {\r\n            if (isRef(s)) {\r\n                return s.value;\r\n            }\r\n            else if (isReactive(s)) {\r\n                return traverse(s);\r\n            }\r\n            else if (isFunction$1(s)) {\r\n                return callWithErrorHandling(s, instance, 2 /* WATCH_GETTER */);\r\n            }\r\n            else {\r\n                (process.env.NODE_ENV !== 'production') && warnInvalidSource(s);\r\n            }\r\n        });\r\n    }\r\n    else if (isFunction$1(source)) {\r\n        if (cb) {\r\n            // getter with cb\r\n            getter = () => callWithErrorHandling(source, instance, 2 /* WATCH_GETTER */);\r\n        }\r\n        else {\r\n            // no cb -> simple effect\r\n            getter = () => {\r\n                if (instance && instance.isUnmounted) {\r\n                    return;\r\n                }\r\n                if (cleanup) {\r\n                    cleanup();\r\n                }\r\n                return callWithAsyncErrorHandling(source, instance, 3 /* WATCH_CALLBACK */, [onInvalidate]);\r\n            };\r\n        }\r\n    }\r\n    else {\r\n        getter = NOOP;\r\n        (process.env.NODE_ENV !== 'production') && warnInvalidSource(source);\r\n    }\r\n    if (cb && deep) {\r\n        const baseGetter = getter;\r\n        getter = () => traverse(baseGetter());\r\n    }\r\n    let cleanup;\r\n    let onInvalidate = (fn) => {\r\n        cleanup = effect.onStop = () => {\r\n            callWithErrorHandling(fn, instance, 4 /* WATCH_CLEANUP */);\r\n        };\r\n    };\r\n    let oldValue = isMultiSource ? [] : INITIAL_WATCHER_VALUE;\r\n    const job = () => {\r\n        if (!effect.active) {\r\n            return;\r\n        }\r\n        if (cb) {\r\n            // watch(source, cb)\r\n            const newValue = effect.run();\r\n            if (deep ||\r\n                forceTrigger ||\r\n                (isMultiSource\r\n                    ? newValue.some((v, i) => hasChanged(v, oldValue[i]))\r\n                    : hasChanged(newValue, oldValue)) ||\r\n                (false  )) {\r\n                // cleanup before running cb again\r\n                if (cleanup) {\r\n                    cleanup();\r\n                }\r\n                callWithAsyncErrorHandling(cb, instance, 3 /* WATCH_CALLBACK */, [\r\n                    newValue,\r\n                    // pass undefined as the old value when it's changed for the first time\r\n                    oldValue === INITIAL_WATCHER_VALUE ? undefined : oldValue,\r\n                    onInvalidate\r\n                ]);\r\n                oldValue = newValue;\r\n            }\r\n        }\r\n        else {\r\n            // watchEffect\r\n            effect.run();\r\n        }\r\n    };\r\n    // important: mark the job as a watcher callback so that scheduler knows\r\n    // it is allowed to self-trigger (#1727)\r\n    job.allowRecurse = !!cb;\r\n    let scheduler;\r\n    if (flush === 'sync') {\r\n        scheduler = job; // the scheduler function gets called directly\r\n    }\r\n    else if (flush === 'post') {\r\n        scheduler = () => queuePostRenderEffect(job, instance && instance.suspense);\r\n    }\r\n    else {\r\n        // default: 'pre'\r\n        scheduler = () => {\r\n            if (!instance || instance.isMounted) {\r\n                queuePreFlushCb(job);\r\n            }\r\n            else {\r\n                // with 'pre' option, the first call must happen before\r\n                // the component is mounted so it is called synchronously.\r\n                job();\r\n            }\r\n        };\r\n    }\r\n    const effect = new ReactiveEffect(getter, scheduler);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        effect.onTrack = onTrack;\r\n        effect.onTrigger = onTrigger;\r\n    }\r\n    // initial run\r\n    if (cb) {\r\n        if (immediate) {\r\n            job();\r\n        }\r\n        else {\r\n            oldValue = effect.run();\r\n        }\r\n    }\r\n    else if (flush === 'post') {\r\n        queuePostRenderEffect(effect.run.bind(effect), instance && instance.suspense);\r\n    }\r\n    else {\r\n        effect.run();\r\n    }\r\n    return () => {\r\n        effect.stop();\r\n        if (instance && instance.scope) {\r\n            remove(instance.scope.effects, effect);\r\n        }\r\n    };\r\n}\r\n// this.$watch\r\nfunction instanceWatch(source, value, options) {\r\n    const publicThis = this.proxy;\r\n    const getter = isString(source)\r\n        ? source.includes('.')\r\n            ? createPathGetter(publicThis, source)\r\n            : () => publicThis[source]\r\n        : source.bind(publicThis, publicThis);\r\n    let cb;\r\n    if (isFunction$1(value)) {\r\n        cb = value;\r\n    }\r\n    else {\r\n        cb = value.handler;\r\n        options = value;\r\n    }\r\n    const cur = currentInstance;\r\n    setCurrentInstance(this);\r\n    const res = doWatch(getter, cb.bind(publicThis), options);\r\n    if (cur) {\r\n        setCurrentInstance(cur);\r\n    }\r\n    else {\r\n        unsetCurrentInstance();\r\n    }\r\n    return res;\r\n}\r\nfunction createPathGetter(ctx, path) {\r\n    const segments = path.split('.');\r\n    return () => {\r\n        let cur = ctx;\r\n        for (let i = 0; i < segments.length && cur; i++) {\r\n            cur = cur[segments[i]];\r\n        }\r\n        return cur;\r\n    };\r\n}\r\nfunction traverse(value, seen) {\r\n    if (!isObject$1(value) || value[\"__v_skip\" /* SKIP */]) {\r\n        return value;\r\n    }\r\n    seen = seen || new Set();\r\n    if (seen.has(value)) {\r\n        return value;\r\n    }\r\n    seen.add(value);\r\n    if (isRef(value)) {\r\n        traverse(value.value, seen);\r\n    }\r\n    else if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            traverse(value[i], seen);\r\n        }\r\n    }\r\n    else if (isSet(value) || isMap(value)) {\r\n        value.forEach((v) => {\r\n            traverse(v, seen);\r\n        });\r\n    }\r\n    else if (isPlainObject(value)) {\r\n        for (const key in value) {\r\n            traverse(value[key], seen);\r\n        }\r\n    }\r\n    return value;\r\n}\n\n(process.env.NODE_ENV !== 'production')\r\n    ? Object.freeze({})\r\n    : {};\r\n(process.env.NODE_ENV !== 'production') ? Object.freeze([]) : [];\r\nconst isFunction = (val) => typeof val === 'function';\r\nconst isObject = (val) => val !== null && typeof val === 'object';\r\nconst isPromise = (val) => {\r\n    return isObject(val) && isFunction(val.then) && isFunction(val.catch);\r\n};\n\n// dev only\r\nconst warnRuntimeUsage = (method) => warn(`${method}() is a compiler-hint helper that is only usable inside ` +\r\n    `<script setup> of a single file component. Its arguments should be ` +\r\n    `compiled away and passing it at runtime has no effect.`);\r\n// implementation\r\nfunction defineProps() {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        warnRuntimeUsage(`defineProps`);\r\n    }\r\n    return null;\r\n}\r\n// implementation\r\nfunction defineEmits() {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        warnRuntimeUsage(`defineEmits`);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Vue `<script setup>` compiler macro for declaring a component's exposed\r\n * instance properties when it is accessed by a parent component via template\r\n * refs.\r\n *\r\n * `<script setup>` components are closed by default - i.e. varaibles inside\r\n * the `<script setup>` scope is not exposed to parent unless explicitly exposed\r\n * via `defineExpose`.\r\n *\r\n * This is only usable inside `<script setup>`, is compiled away in the\r\n * output and should **not** be actually called at runtime.\r\n */\r\nfunction defineExpose(exposed) {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        warnRuntimeUsage(`defineExpose`);\r\n    }\r\n}\r\n/**\r\n * Vue `<script setup>` compiler macro for providing props default values when\r\n * using type-based `defineProps` declaration.\r\n *\r\n * Example usage:\r\n * ```ts\r\n * withDefaults(defineProps<{\r\n *   size?: number\r\n *   labels?: string[]\r\n * }>(), {\r\n *   size: 3,\r\n *   labels: () => ['default label']\r\n * })\r\n * ```\r\n *\r\n * This is only usable inside `<script setup>`, is compiled away in the output\r\n * and should **not** be actually called at runtime.\r\n */\r\nfunction withDefaults(props, defaults) {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        warnRuntimeUsage(`withDefaults`);\r\n    }\r\n    return null;\r\n}\r\nfunction useSlots() {\r\n    return getContext().slots;\r\n}\r\nfunction useAttrs() {\r\n    return getContext().attrs;\r\n}\r\nfunction getContext() {\r\n    const i = getCurrentInstance();\r\n    if ((process.env.NODE_ENV !== 'production') && !i) {\r\n        warn(`useContext() called without active instance.`);\r\n    }\r\n    return i.setupContext || (i.setupContext = createSetupContext(i));\r\n}\r\n/**\r\n * Runtime helper for merging default declarations. Imported by compiled code\r\n * only.\r\n * @internal\r\n */\r\nfunction mergeDefaults(\r\n// the base props is compiler-generated and guaranteed to be in this shape.\r\nprops, defaults) {\r\n    for (const key in defaults) {\r\n        const val = props[key];\r\n        if (val) {\r\n            val.default = defaults[key];\r\n        }\r\n        else if (val === null) {\r\n            props[key] = { default: defaults[key] };\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`props default key \"${key}\" has no corresponding declaration.`);\r\n        }\r\n    }\r\n    return props;\r\n}\r\n/**\r\n * `<script setup>` helper for persisting the current instance context over\r\n * async/await flows.\r\n *\r\n * `@vue/compiler-sfc` converts the following:\r\n *\r\n * ```ts\r\n * const x = await foo()\r\n * ```\r\n *\r\n * into:\r\n *\r\n * ```ts\r\n * let __temp, __restore\r\n * const x = (([__temp, __restore] = withAsyncContext(() => foo())),__temp=await __temp,__restore(),__temp)\r\n * ```\r\n * @internal\r\n */\r\nfunction withAsyncContext(getAwaitable) {\r\n    const ctx = getCurrentInstance();\r\n    if ((process.env.NODE_ENV !== 'production') && !ctx) {\r\n        warn(`withAsyncContext called without active current instance. ` +\r\n            `This is likely a bug.`);\r\n    }\r\n    let awaitable = getAwaitable();\r\n    unsetCurrentInstance();\r\n    if (isPromise(awaitable)) {\r\n        awaitable = awaitable.catch(e => {\r\n            setCurrentInstance(ctx);\r\n            throw e;\r\n        });\r\n    }\r\n    return [awaitable, () => setCurrentInstance(ctx)];\r\n}\n\n// Actual implementation\r\nfunction h(type, propsOrChildren, children) {\r\n    const l = arguments.length;\r\n    if (l === 2) {\r\n        if (isObject$1(propsOrChildren) && !isArray(propsOrChildren)) {\r\n            // single vnode without props\r\n            if (isVNode(propsOrChildren)) {\r\n                return createVNode(type, null, [propsOrChildren]);\r\n            }\r\n            // props without children\r\n            return createVNode(type, propsOrChildren);\r\n        }\r\n        else {\r\n            // omit props\r\n            return createVNode(type, null, propsOrChildren);\r\n        }\r\n    }\r\n    else {\r\n        if (l > 3) {\r\n            children = Array.prototype.slice.call(arguments, 2);\r\n        }\r\n        else if (l === 3 && isVNode(children)) {\r\n            children = [children];\r\n        }\r\n        return createVNode(type, propsOrChildren, children);\r\n    }\r\n}\n\nconst ssrContextKey = Symbol((process.env.NODE_ENV !== 'production') ? `ssrContext` : ``);\r\nconst useSSRContext = () => {\r\n    {\r\n        const ctx = inject(ssrContextKey);\r\n        if (!ctx) {\r\n            warn(`Server rendering context not provided. Make sure to only call ` +\r\n                `useSSRContext() conditionally in the server build.`);\r\n        }\r\n        return ctx;\r\n    }\r\n};\n\nfunction initCustomFormatter() {\r\n    /* eslint-disable no-restricted-globals */\r\n    if (!(process.env.NODE_ENV !== 'production') || typeof window === 'undefined') {\r\n        return;\r\n    }\r\n    const vueStyle = { style: 'color:#3ba776' };\r\n    const numberStyle = { style: 'color:#0b1bc9' };\r\n    const stringStyle = { style: 'color:#b62e24' };\r\n    const keywordStyle = { style: 'color:#9d288c' };\r\n    // custom formatter for Chrome\r\n    // https://www.mattzeunert.com/2016/02/19/custom-chrome-devtools-object-formatters.html\r\n    const formatter = {\r\n        header(obj) {\r\n            // TODO also format ComponentPublicInstance & ctx.slots/attrs in setup\r\n            if (!isObject$1(obj)) {\r\n                return null;\r\n            }\r\n            if (obj.__isVue) {\r\n                return ['div', vueStyle, `VueInstance`];\r\n            }\r\n            else if (isRef(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, genRefFlag(obj)],\r\n                    '<',\r\n                    formatValue(obj.value),\r\n                    `>`\r\n                ];\r\n            }\r\n            else if (isReactive(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, 'Reactive'],\r\n                    '<',\r\n                    formatValue(obj),\r\n                    `>${isReadonly(obj) ? ` (readonly)` : ``}`\r\n                ];\r\n            }\r\n            else if (isReadonly(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, 'Readonly'],\r\n                    '<',\r\n                    formatValue(obj),\r\n                    '>'\r\n                ];\r\n            }\r\n            return null;\r\n        },\r\n        hasBody(obj) {\r\n            return obj && obj.__isVue;\r\n        },\r\n        body(obj) {\r\n            if (obj && obj.__isVue) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ...formatInstance(obj.$)\r\n                ];\r\n            }\r\n        }\r\n    };\r\n    function formatInstance(instance) {\r\n        const blocks = [];\r\n        if (instance.type.props && instance.props) {\r\n            blocks.push(createInstanceBlock('props', toRaw(instance.props)));\r\n        }\r\n        if (instance.setupState !== EMPTY_OBJ) {\r\n            blocks.push(createInstanceBlock('setup', instance.setupState));\r\n        }\r\n        if (instance.data !== EMPTY_OBJ) {\r\n            blocks.push(createInstanceBlock('data', toRaw(instance.data)));\r\n        }\r\n        const computed = extractKeys(instance, 'computed');\r\n        if (computed) {\r\n            blocks.push(createInstanceBlock('computed', computed));\r\n        }\r\n        const injected = extractKeys(instance, 'inject');\r\n        if (injected) {\r\n            blocks.push(createInstanceBlock('injected', injected));\r\n        }\r\n        blocks.push([\r\n            'div',\r\n            {},\r\n            [\r\n                'span',\r\n                {\r\n                    style: keywordStyle.style + ';opacity:0.66'\r\n                },\r\n                '$ (internal): '\r\n            ],\r\n            ['object', { object: instance }]\r\n        ]);\r\n        return blocks;\r\n    }\r\n    function createInstanceBlock(type, target) {\r\n        target = extend({}, target);\r\n        if (!Object.keys(target).length) {\r\n            return ['span', {}];\r\n        }\r\n        return [\r\n            'div',\r\n            { style: 'line-height:1.25em;margin-bottom:0.6em' },\r\n            [\r\n                'div',\r\n                {\r\n                    style: 'color:#476582'\r\n                },\r\n                type\r\n            ],\r\n            [\r\n                'div',\r\n                {\r\n                    style: 'padding-left:1.25em'\r\n                },\r\n                ...Object.keys(target).map(key => {\r\n                    return [\r\n                        'div',\r\n                        {},\r\n                        ['span', keywordStyle, key + ': '],\r\n                        formatValue(target[key], false)\r\n                    ];\r\n                })\r\n            ]\r\n        ];\r\n    }\r\n    function formatValue(v, asRaw = true) {\r\n        if (typeof v === 'number') {\r\n            return ['span', numberStyle, v];\r\n        }\r\n        else if (typeof v === 'string') {\r\n            return ['span', stringStyle, JSON.stringify(v)];\r\n        }\r\n        else if (typeof v === 'boolean') {\r\n            return ['span', keywordStyle, v];\r\n        }\r\n        else if (isObject$1(v)) {\r\n            return ['object', { object: asRaw ? toRaw(v) : v }];\r\n        }\r\n        else {\r\n            return ['span', stringStyle, String(v)];\r\n        }\r\n    }\r\n    function extractKeys(instance, type) {\r\n        const Comp = instance.type;\r\n        if (isFunction$1(Comp)) {\r\n            return;\r\n        }\r\n        const extracted = {};\r\n        for (const key in instance.ctx) {\r\n            if (isKeyOfType(Comp, key, type)) {\r\n                extracted[key] = instance.ctx[key];\r\n            }\r\n        }\r\n        return extracted;\r\n    }\r\n    function isKeyOfType(Comp, key, type) {\r\n        const opts = Comp[type];\r\n        if ((isArray(opts) && opts.includes(key)) ||\r\n            (isObject$1(opts) && key in opts)) {\r\n            return true;\r\n        }\r\n        if (Comp.extends && isKeyOfType(Comp.extends, key, type)) {\r\n            return true;\r\n        }\r\n        if (Comp.mixins && Comp.mixins.some(m => isKeyOfType(m, key, type))) {\r\n            return true;\r\n        }\r\n    }\r\n    function genRefFlag(v) {\r\n        if (v._shallow) {\r\n            return `ShallowRef`;\r\n        }\r\n        if (v.effect) {\r\n            return `ComputedRef`;\r\n        }\r\n        return `Ref`;\r\n    }\r\n    if (window.devtoolsFormatters) {\r\n        window.devtoolsFormatters.push(formatter);\r\n    }\r\n    else {\r\n        window.devtoolsFormatters = [formatter];\r\n    }\r\n}\n\nfunction withMemo(memo, render, cache, index) {\r\n    const cached = cache[index];\r\n    if (cached && isMemoSame(cached, memo)) {\r\n        return cached;\r\n    }\r\n    const ret = render();\r\n    // shallow clone\r\n    ret.memo = memo.slice();\r\n    return (cache[index] = ret);\r\n}\r\nfunction isMemoSame(cached, memo) {\r\n    const prev = cached.memo;\r\n    if (prev.length != memo.length) {\r\n        return false;\r\n    }\r\n    for (let i = 0; i < prev.length; i++) {\r\n        if (prev[i] !== memo[i]) {\r\n            return false;\r\n        }\r\n    }\r\n    // make sure to let parent block track it when returning cached\r\n    if (isBlockTreeEnabled > 0 && currentBlock) {\r\n        currentBlock.push(cached);\r\n    }\r\n    return true;\r\n}\n\n// Core API ------------------------------------------------------------------\r\nconst version = \"3.2.13\";\r\nconst _ssrUtils = {\r\n    createComponentInstance,\r\n    setupComponent,\r\n    renderComponentRoot,\r\n    setCurrentRenderingInstance,\r\n    isVNode,\r\n    normalizeVNode\r\n};\r\n/**\r\n * SSR utils for \\@vue/server-renderer. Only exposed in cjs builds.\r\n * @internal\r\n */\r\nconst ssrUtils = (_ssrUtils );\r\n/**\r\n * @internal only exposed in compat builds\r\n */\r\nconst resolveFilter = null;\r\n/**\r\n * @internal only exposed in compat builds.\r\n */\r\nconst compatUtils = (null);\n\nexport { BaseTransition, Comment, Fragment, KeepAlive, Static, Suspense, Teleport, Text, callWithAsyncErrorHandling, callWithErrorHandling, cloneVNode, compatUtils, createBlock, createCommentVNode, createElementBlock, createBaseVNode as createElementVNode, createHydrationRenderer, createRenderer, createSlots, createStaticVNode, createTextVNode, createVNode, defineAsyncComponent, defineComponent, defineEmits, defineExpose, defineProps, devtools, getCurrentInstance, getTransitionRawChildren, guardReactiveProps, h, handleError, initCustomFormatter, inject, isMemoSame, isRuntimeOnly, isVNode, mergeDefaults, mergeProps, nextTick, onActivated, onBeforeMount, onBeforeUnmount, onBeforeUpdate, onDeactivated, onErrorCaptured, onMounted, onRenderTracked, onRenderTriggered, onServerPrefetch, onUnmounted, onUpdated, openBlock, popScopeId, provide, pushScopeId, queuePostFlushCb, registerRuntimeCompiler, renderList, renderSlot, resolveComponent, resolveDirective, resolveDynamicComponent, resolveFilter, resolveTransitionHooks, setBlockTracking, setDevtoolsHook, setTransitionHooks, ssrContextKey, ssrUtils, toHandlers, transformVNodeArgs, useAttrs, useSSRContext, useSlots, useTransitionState, version, warn, watch, watchEffect, watchPostEffect, watchSyncEffect, withAsyncContext, withCtx, withDefaults, withDirectives, withMemo, withScopeId };\n","import { camelize, warn, callWithAsyncErrorHandling, defineComponent, nextTick, createVNode, getCurrentInstance, watchPostEffect, onMounted, onUnmounted, Fragment, Static, h, BaseTransition, useTransitionState, onUpdated, toRaw, getTransitionRawChildren, setTransitionHooks, resolveTransitionHooks, createRenderer, isRuntimeOnly, createHydrationRenderer } from '@vue/runtime-core';\nexport * from '@vue/runtime-core';\nimport { isString, isArray, hyphenate, capitalize, isSpecialBooleanAttr, includeBooleanAttr, isOn, isModelListener, isFunction, toNumber, camelize as camelize$1, extend, EMPTY_OBJ, isObject, invokeArrayFns, looseIndexOf, isSet, looseEqual, isHTMLTag, isSVGTag } from '@vue/shared';\n\nconst svgNS = 'http://www.w3.org/2000/svg';\r\nconst doc = (typeof document !== 'undefined' ? document : null);\r\nconst staticTemplateCache = new Map();\r\nconst nodeOps = {\r\n    insert: (child, parent, anchor) => {\r\n        parent.insertBefore(child, anchor || null);\r\n    },\r\n    remove: child => {\r\n        const parent = child.parentNode;\r\n        if (parent) {\r\n            parent.removeChild(child);\r\n        }\r\n    },\r\n    createElement: (tag, isSVG, is, props) => {\r\n        const el = isSVG\r\n            ? doc.createElementNS(svgNS, tag)\r\n            : doc.createElement(tag, is ? { is } : undefined);\r\n        if (tag === 'select' && props && props.multiple != null) {\r\n            el.setAttribute('multiple', props.multiple);\r\n        }\r\n        return el;\r\n    },\r\n    createText: text => doc.createTextNode(text),\r\n    createComment: text => doc.createComment(text),\r\n    setText: (node, text) => {\r\n        node.nodeValue = text;\r\n    },\r\n    setElementText: (el, text) => {\r\n        el.textContent = text;\r\n    },\r\n    parentNode: node => node.parentNode,\r\n    nextSibling: node => node.nextSibling,\r\n    querySelector: selector => doc.querySelector(selector),\r\n    setScopeId(el, id) {\r\n        el.setAttribute(id, '');\r\n    },\r\n    cloneNode(el) {\r\n        const cloned = el.cloneNode(true);\r\n        // #3072\r\n        // - in `patchDOMProp`, we store the actual value in the `el._value` property.\r\n        // - normally, elements using `:value` bindings will not be hoisted, but if\r\n        //   the bound value is a constant, e.g. `:value=\"true\"` - they do get\r\n        //   hoisted.\r\n        // - in production, hoisted nodes are cloned when subsequent inserts, but\r\n        //   cloneNode() does not copy the custom property we attached.\r\n        // - This may need to account for other custom DOM properties we attach to\r\n        //   elements in addition to `_value` in the future.\r\n        if (`_value` in el) {\r\n            cloned._value = el._value;\r\n        }\r\n        return cloned;\r\n    },\r\n    // __UNSAFE__\r\n    // Reason: innerHTML.\r\n    // Static content here can only come from compiled templates.\r\n    // As long as the user only uses trusted templates, this is safe.\r\n    insertStaticContent(content, parent, anchor, isSVG) {\r\n        // <parent> before | first ... last | anchor </parent>\r\n        const before = anchor ? anchor.previousSibling : parent.lastChild;\r\n        let template = staticTemplateCache.get(content);\r\n        if (!template) {\r\n            const t = doc.createElement('template');\r\n            t.innerHTML = isSVG ? `<svg>${content}</svg>` : content;\r\n            template = t.content;\r\n            if (isSVG) {\r\n                // remove outer svg wrapper\r\n                const wrapper = template.firstChild;\r\n                while (wrapper.firstChild) {\r\n                    template.appendChild(wrapper.firstChild);\r\n                }\r\n                template.removeChild(wrapper);\r\n            }\r\n            staticTemplateCache.set(content, template);\r\n        }\r\n        parent.insertBefore(template.cloneNode(true), anchor);\r\n        return [\r\n            // first\r\n            before ? before.nextSibling : parent.firstChild,\r\n            // last\r\n            anchor ? anchor.previousSibling : parent.lastChild\r\n        ];\r\n    }\r\n};\n\n// compiler should normalize class + :class bindings on the same element\r\n// into a single binding ['staticClass', dynamic]\r\nfunction patchClass(el, value, isSVG) {\r\n    // directly setting className should be faster than setAttribute in theory\r\n    // if this is an element during a transition, take the temporary transition\r\n    // classes into account.\r\n    const transitionClasses = el._vtc;\r\n    if (transitionClasses) {\r\n        value = (value ? [value, ...transitionClasses] : [...transitionClasses]).join(' ');\r\n    }\r\n    if (value == null) {\r\n        el.removeAttribute('class');\r\n    }\r\n    else if (isSVG) {\r\n        el.setAttribute('class', value);\r\n    }\r\n    else {\r\n        el.className = value;\r\n    }\r\n}\n\nfunction patchStyle(el, prev, next) {\r\n    const style = el.style;\r\n    const currentDisplay = style.display;\r\n    if (!next) {\r\n        el.removeAttribute('style');\r\n    }\r\n    else if (isString(next)) {\r\n        if (prev !== next) {\r\n            style.cssText = next;\r\n        }\r\n    }\r\n    else {\r\n        for (const key in next) {\r\n            setStyle(style, key, next[key]);\r\n        }\r\n        if (prev && !isString(prev)) {\r\n            for (const key in prev) {\r\n                if (next[key] == null) {\r\n                    setStyle(style, key, '');\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // indicates that the `display` of the element is controlled by `v-show`,\r\n    // so we always keep the current `display` value regardless of the `style` value,\r\n    // thus handing over control to `v-show`.\r\n    if ('_vod' in el) {\r\n        style.display = currentDisplay;\r\n    }\r\n}\r\nconst importantRE = /\\s*!important$/;\r\nfunction setStyle(style, name, val) {\r\n    if (isArray(val)) {\r\n        val.forEach(v => setStyle(style, name, v));\r\n    }\r\n    else {\r\n        if (name.startsWith('--')) {\r\n            // custom property definition\r\n            style.setProperty(name, val);\r\n        }\r\n        else {\r\n            const prefixed = autoPrefix(style, name);\r\n            if (importantRE.test(val)) {\r\n                // !important\r\n                style.setProperty(hyphenate(prefixed), val.replace(importantRE, ''), 'important');\r\n            }\r\n            else {\r\n                style[prefixed] = val;\r\n            }\r\n        }\r\n    }\r\n}\r\nconst prefixes = ['Webkit', 'Moz', 'ms'];\r\nconst prefixCache = {};\r\nfunction autoPrefix(style, rawName) {\r\n    const cached = prefixCache[rawName];\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    let name = camelize(rawName);\r\n    if (name !== 'filter' && name in style) {\r\n        return (prefixCache[rawName] = name);\r\n    }\r\n    name = capitalize(name);\r\n    for (let i = 0; i < prefixes.length; i++) {\r\n        const prefixed = prefixes[i] + name;\r\n        if (prefixed in style) {\r\n            return (prefixCache[rawName] = prefixed);\r\n        }\r\n    }\r\n    return rawName;\r\n}\n\nconst xlinkNS = 'http://www.w3.org/1999/xlink';\r\nfunction patchAttr(el, key, value, isSVG, instance) {\r\n    if (isSVG && key.startsWith('xlink:')) {\r\n        if (value == null) {\r\n            el.removeAttributeNS(xlinkNS, key.slice(6, key.length));\r\n        }\r\n        else {\r\n            el.setAttributeNS(xlinkNS, key, value);\r\n        }\r\n    }\r\n    else {\r\n        // note we are only checking boolean attributes that don't have a\r\n        // corresponding dom prop of the same name here.\r\n        const isBoolean = isSpecialBooleanAttr(key);\r\n        if (value == null || (isBoolean && !includeBooleanAttr(value))) {\r\n            el.removeAttribute(key);\r\n        }\r\n        else {\r\n            el.setAttribute(key, isBoolean ? '' : value);\r\n        }\r\n    }\r\n}\n\n// __UNSAFE__\r\n// functions. The user is responsible for using them with only trusted content.\r\nfunction patchDOMProp(el, key, value, \r\n// the following args are passed only due to potential innerHTML/textContent\r\n// overriding existing VNodes, in which case the old tree must be properly\r\n// unmounted.\r\nprevChildren, parentComponent, parentSuspense, unmountChildren) {\r\n    if (key === 'innerHTML' || key === 'textContent') {\r\n        if (prevChildren) {\r\n            unmountChildren(prevChildren, parentComponent, parentSuspense);\r\n        }\r\n        el[key] = value == null ? '' : value;\r\n        return;\r\n    }\r\n    if (key === 'value' && el.tagName !== 'PROGRESS') {\r\n        // store value as _value as well since\r\n        // non-string values will be stringified.\r\n        el._value = value;\r\n        const newValue = value == null ? '' : value;\r\n        if (el.value !== newValue) {\r\n            el.value = newValue;\r\n        }\r\n        if (value == null) {\r\n            el.removeAttribute(key);\r\n        }\r\n        return;\r\n    }\r\n    if (value === '' || value == null) {\r\n        const type = typeof el[key];\r\n        if (type === 'boolean') {\r\n            // e.g. <select multiple> compiles to { multiple: '' }\r\n            el[key] = includeBooleanAttr(value);\r\n            return;\r\n        }\r\n        else if (value == null && type === 'string') {\r\n            // e.g. <div :id=\"null\">\r\n            el[key] = '';\r\n            el.removeAttribute(key);\r\n            return;\r\n        }\r\n        else if (type === 'number') {\r\n            // e.g. <img :width=\"null\">\r\n            // the value of some IDL attr must be greater than 0, e.g. input.size = 0 -> error\r\n            try {\r\n                el[key] = 0;\r\n            }\r\n            catch (_a) { }\r\n            el.removeAttribute(key);\r\n            return;\r\n        }\r\n    }\r\n    // some properties perform value validation and throw\r\n    try {\r\n        el[key] = value;\r\n    }\r\n    catch (e) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`Failed setting prop \"${key}\" on <${el.tagName.toLowerCase()}>: ` +\r\n                `value ${value} is invalid.`, e);\r\n        }\r\n    }\r\n}\n\n// Async edge case fix requires storing an event listener's attach timestamp.\r\nlet _getNow = Date.now;\r\nlet skipTimestampCheck = false;\r\nif (typeof window !== 'undefined') {\r\n    // Determine what event timestamp the browser is using. Annoyingly, the\r\n    // timestamp can either be hi-res (relative to page load) or low-res\r\n    // (relative to UNIX epoch), so in order to compare time we have to use the\r\n    // same timestamp type when saving the flush timestamp.\r\n    if (_getNow() > document.createEvent('Event').timeStamp) {\r\n        // if the low-res timestamp which is bigger than the event timestamp\r\n        // (which is evaluated AFTER) it means the event is using a hi-res timestamp,\r\n        // and we need to use the hi-res version for event listeners as well.\r\n        _getNow = () => performance.now();\r\n    }\r\n    // #3485: Firefox <= 53 has incorrect Event.timeStamp implementation\r\n    // and does not fire microtasks in between event propagation, so safe to exclude.\r\n    const ffMatch = navigator.userAgent.match(/firefox\\/(\\d+)/i);\r\n    skipTimestampCheck = !!(ffMatch && Number(ffMatch[1]) <= 53);\r\n}\r\n// To avoid the overhead of repeatedly calling performance.now(), we cache\r\n// and use the same timestamp for all event listeners attached in the same tick.\r\nlet cachedNow = 0;\r\nconst p = Promise.resolve();\r\nconst reset = () => {\r\n    cachedNow = 0;\r\n};\r\nconst getNow = () => cachedNow || (p.then(reset), (cachedNow = _getNow()));\r\nfunction addEventListener(el, event, handler, options) {\r\n    el.addEventListener(event, handler, options);\r\n}\r\nfunction removeEventListener(el, event, handler, options) {\r\n    el.removeEventListener(event, handler, options);\r\n}\r\nfunction patchEvent(el, rawName, prevValue, nextValue, instance = null) {\r\n    // vei = vue event invokers\r\n    const invokers = el._vei || (el._vei = {});\r\n    const existingInvoker = invokers[rawName];\r\n    if (nextValue && existingInvoker) {\r\n        // patch\r\n        existingInvoker.value = nextValue;\r\n    }\r\n    else {\r\n        const [name, options] = parseName(rawName);\r\n        if (nextValue) {\r\n            // add\r\n            const invoker = (invokers[rawName] = createInvoker(nextValue, instance));\r\n            addEventListener(el, name, invoker, options);\r\n        }\r\n        else if (existingInvoker) {\r\n            // remove\r\n            removeEventListener(el, name, existingInvoker, options);\r\n            invokers[rawName] = undefined;\r\n        }\r\n    }\r\n}\r\nconst optionsModifierRE = /(?:Once|Passive|Capture)$/;\r\nfunction parseName(name) {\r\n    let options;\r\n    if (optionsModifierRE.test(name)) {\r\n        options = {};\r\n        let m;\r\n        while ((m = name.match(optionsModifierRE))) {\r\n            name = name.slice(0, name.length - m[0].length);\r\n            options[m[0].toLowerCase()] = true;\r\n        }\r\n    }\r\n    return [hyphenate(name.slice(2)), options];\r\n}\r\nfunction createInvoker(initialValue, instance) {\r\n    const invoker = (e) => {\r\n        // async edge case #6566: inner click event triggers patch, event handler\r\n        // attached to outer element during patch, and triggered again. This\r\n        // happens because browsers fire microtask ticks between event propagation.\r\n        // the solution is simple: we save the timestamp when a handler is attached,\r\n        // and the handler would only fire if the event passed to it was fired\r\n        // AFTER it was attached.\r\n        const timeStamp = e.timeStamp || _getNow();\r\n        if (skipTimestampCheck || timeStamp >= invoker.attached - 1) {\r\n            callWithAsyncErrorHandling(patchStopImmediatePropagation(e, invoker.value), instance, 5 /* NATIVE_EVENT_HANDLER */, [e]);\r\n        }\r\n    };\r\n    invoker.value = initialValue;\r\n    invoker.attached = getNow();\r\n    return invoker;\r\n}\r\nfunction patchStopImmediatePropagation(e, value) {\r\n    if (isArray(value)) {\r\n        const originalStop = e.stopImmediatePropagation;\r\n        e.stopImmediatePropagation = () => {\r\n            originalStop.call(e);\r\n            e._stopped = true;\r\n        };\r\n        return value.map(fn => (e) => !e._stopped && fn(e));\r\n    }\r\n    else {\r\n        return value;\r\n    }\r\n}\n\nconst nativeOnRE = /^on[a-z]/;\r\nconst patchProp = (el, key, prevValue, nextValue, isSVG = false, prevChildren, parentComponent, parentSuspense, unmountChildren) => {\r\n    if (key === 'class') {\r\n        patchClass(el, nextValue, isSVG);\r\n    }\r\n    else if (key === 'style') {\r\n        patchStyle(el, prevValue, nextValue);\r\n    }\r\n    else if (isOn(key)) {\r\n        // ignore v-model listeners\r\n        if (!isModelListener(key)) {\r\n            patchEvent(el, key, prevValue, nextValue, parentComponent);\r\n        }\r\n    }\r\n    else if (key[0] === '.'\r\n        ? ((key = key.slice(1)), true)\r\n        : key[0] === '^'\r\n            ? ((key = key.slice(1)), false)\r\n            : shouldSetAsProp(el, key, nextValue, isSVG)) {\r\n        patchDOMProp(el, key, nextValue, prevChildren, parentComponent, parentSuspense, unmountChildren);\r\n    }\r\n    else {\r\n        // special case for <input v-model type=\"checkbox\"> with\r\n        // :true-value & :false-value\r\n        // store value as dom properties since non-string values will be\r\n        // stringified.\r\n        if (key === 'true-value') {\r\n            el._trueValue = nextValue;\r\n        }\r\n        else if (key === 'false-value') {\r\n            el._falseValue = nextValue;\r\n        }\r\n        patchAttr(el, key, nextValue, isSVG);\r\n    }\r\n};\r\nfunction shouldSetAsProp(el, key, value, isSVG) {\r\n    if (isSVG) {\r\n        // most keys must be set as attribute on svg elements to work\r\n        // ...except innerHTML & textContent\r\n        if (key === 'innerHTML' || key === 'textContent') {\r\n            return true;\r\n        }\r\n        // or native onclick with function values\r\n        if (key in el && nativeOnRE.test(key) && isFunction(value)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    // spellcheck and draggable are numerated attrs, however their\r\n    // corresponding DOM properties are actually booleans - this leads to\r\n    // setting it with a string \"false\" value leading it to be coerced to\r\n    // `true`, so we need to always treat them as attributes.\r\n    // Note that `contentEditable` doesn't have this problem: its DOM\r\n    // property is also enumerated string values.\r\n    if (key === 'spellcheck' || key === 'draggable') {\r\n        return false;\r\n    }\r\n    // #1787, #2840 form property on form elements is readonly and must be set as\r\n    // attribute.\r\n    if (key === 'form') {\r\n        return false;\r\n    }\r\n    // #1526 <input list> must be set as attribute\r\n    if (key === 'list' && el.tagName === 'INPUT') {\r\n        return false;\r\n    }\r\n    // #2766 <textarea type> must be set as attribute\r\n    if (key === 'type' && el.tagName === 'TEXTAREA') {\r\n        return false;\r\n    }\r\n    // native onclick with string value, must be set as attribute\r\n    if (nativeOnRE.test(key) && isString(value)) {\r\n        return false;\r\n    }\r\n    return key in el;\r\n}\n\nfunction defineCustomElement(options, hydate) {\r\n    const Comp = defineComponent(options);\r\n    class VueCustomElement extends VueElement {\r\n        constructor(initialProps) {\r\n            super(Comp, initialProps, hydate);\r\n        }\r\n    }\r\n    VueCustomElement.def = Comp;\r\n    return VueCustomElement;\r\n}\r\nconst defineSSRCustomElement = ((options) => {\r\n    // @ts-ignore\r\n    return defineCustomElement(options, hydrate);\r\n});\r\nconst BaseClass = (typeof HTMLElement !== 'undefined' ? HTMLElement : class {\r\n});\r\nclass VueElement extends BaseClass {\r\n    constructor(_def, _props = {}, hydrate) {\r\n        super();\r\n        this._def = _def;\r\n        this._props = _props;\r\n        /**\r\n         * @internal\r\n         */\r\n        this._instance = null;\r\n        this._connected = false;\r\n        this._resolved = false;\r\n        this._numberProps = null;\r\n        if (this.shadowRoot && hydrate) {\r\n            hydrate(this._createVNode(), this.shadowRoot);\r\n        }\r\n        else {\r\n            if ((process.env.NODE_ENV !== 'production') && this.shadowRoot) {\r\n                warn(`Custom element has pre-rendered declarative shadow root but is not ` +\r\n                    `defined as hydratable. Use \\`defineSSRCustomElement\\`.`);\r\n            }\r\n            this.attachShadow({ mode: 'open' });\r\n        }\r\n        // set initial attrs\r\n        for (let i = 0; i < this.attributes.length; i++) {\r\n            this._setAttr(this.attributes[i].name);\r\n        }\r\n        // watch future attr changes\r\n        new MutationObserver(mutations => {\r\n            for (const m of mutations) {\r\n                this._setAttr(m.attributeName);\r\n            }\r\n        }).observe(this, { attributes: true });\r\n    }\r\n    connectedCallback() {\r\n        this._connected = true;\r\n        if (!this._instance) {\r\n            this._resolveDef();\r\n            this._update();\r\n        }\r\n    }\r\n    disconnectedCallback() {\r\n        this._connected = false;\r\n        nextTick(() => {\r\n            if (!this._connected) {\r\n                render(null, this.shadowRoot);\r\n                this._instance = null;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * resolve inner component definition (handle possible async component)\r\n     */\r\n    _resolveDef() {\r\n        if (this._resolved) {\r\n            return;\r\n        }\r\n        const resolve = (def) => {\r\n            this._resolved = true;\r\n            const { props, styles } = def;\r\n            const hasOptions = !isArray(props);\r\n            const rawKeys = props ? (hasOptions ? Object.keys(props) : props) : [];\r\n            // cast Number-type props set before resolve\r\n            let numberProps;\r\n            if (hasOptions) {\r\n                for (const key in this._props) {\r\n                    const opt = props[key];\r\n                    if (opt === Number || (opt && opt.type === Number)) {\r\n                        this._props[key] = toNumber(this._props[key]);\r\n                        (numberProps || (numberProps = Object.create(null)))[key] = true;\r\n                    }\r\n                }\r\n            }\r\n            if (numberProps) {\r\n                this._numberProps = numberProps;\r\n                this._update();\r\n            }\r\n            // check if there are props set pre-upgrade or connect\r\n            for (const key of Object.keys(this)) {\r\n                if (key[0] !== '_') {\r\n                    this._setProp(key, this[key]);\r\n                }\r\n            }\r\n            // defining getter/setters on prototype\r\n            for (const key of rawKeys.map(camelize$1)) {\r\n                Object.defineProperty(this, key, {\r\n                    get() {\r\n                        return this._getProp(key);\r\n                    },\r\n                    set(val) {\r\n                        this._setProp(key, val);\r\n                    }\r\n                });\r\n            }\r\n            this._applyStyles(styles);\r\n        };\r\n        const asyncDef = this._def.__asyncLoader;\r\n        if (asyncDef) {\r\n            asyncDef().then(resolve);\r\n        }\r\n        else {\r\n            resolve(this._def);\r\n        }\r\n    }\r\n    _setAttr(key) {\r\n        let value = this.getAttribute(key);\r\n        if (this._numberProps && this._numberProps[key]) {\r\n            value = toNumber(value);\r\n        }\r\n        this._setProp(camelize$1(key), value, false);\r\n    }\r\n    /**\r\n     * @internal\r\n     */\r\n    _getProp(key) {\r\n        return this._props[key];\r\n    }\r\n    /**\r\n     * @internal\r\n     */\r\n    _setProp(key, val, shouldReflect = true) {\r\n        if (val !== this._props[key]) {\r\n            this._props[key] = val;\r\n            if (this._instance) {\r\n                this._update();\r\n            }\r\n            // reflect\r\n            if (shouldReflect) {\r\n                if (val === true) {\r\n                    this.setAttribute(hyphenate(key), '');\r\n                }\r\n                else if (typeof val === 'string' || typeof val === 'number') {\r\n                    this.setAttribute(hyphenate(key), val + '');\r\n                }\r\n                else if (!val) {\r\n                    this.removeAttribute(hyphenate(key));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _update() {\r\n        render(this._createVNode(), this.shadowRoot);\r\n    }\r\n    _createVNode() {\r\n        const vnode = createVNode(this._def, extend({}, this._props));\r\n        if (!this._instance) {\r\n            vnode.ce = instance => {\r\n                this._instance = instance;\r\n                instance.isCE = true;\r\n                // HMR\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    instance.ceReload = newStyles => {\r\n                        // alawys reset styles\r\n                        if (this._styles) {\r\n                            this._styles.forEach(s => this.shadowRoot.removeChild(s));\r\n                            this._styles.length = 0;\r\n                        }\r\n                        this._applyStyles(newStyles);\r\n                        // if this is an async component, ceReload is called from the inner\r\n                        // component so no need to reload the async wrapper\r\n                        if (!this._def.__asyncLoader) {\r\n                            // reload\r\n                            this._instance = null;\r\n                            this._update();\r\n                        }\r\n                    };\r\n                }\r\n                // intercept emit\r\n                instance.emit = (event, ...args) => {\r\n                    this.dispatchEvent(new CustomEvent(event, {\r\n                        detail: args\r\n                    }));\r\n                };\r\n                // locate nearest Vue custom element parent for provide/inject\r\n                let parent = this;\r\n                while ((parent =\r\n                    parent && (parent.parentNode || parent.host))) {\r\n                    if (parent instanceof VueElement) {\r\n                        instance.parent = parent._instance;\r\n                        break;\r\n                    }\r\n                }\r\n            };\r\n        }\r\n        return vnode;\r\n    }\r\n    _applyStyles(styles) {\r\n        if (styles) {\r\n            styles.forEach(css => {\r\n                const s = document.createElement('style');\r\n                s.textContent = css;\r\n                this.shadowRoot.appendChild(s);\r\n                // record for HMR\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    (this._styles || (this._styles = [])).push(s);\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\n\nfunction useCssModule(name = '$style') {\r\n    /* istanbul ignore else */\r\n    {\r\n        const instance = getCurrentInstance();\r\n        if (!instance) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`useCssModule must be called inside setup()`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        const modules = instance.type.__cssModules;\r\n        if (!modules) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`Current instance does not have CSS modules injected.`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        const mod = modules[name];\r\n        if (!mod) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Current instance does not have CSS module named \"${name}\".`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        return mod;\r\n    }\r\n}\n\n/**\r\n * Runtime helper for SFC's CSS variable injection feature.\r\n * @private\r\n */\r\nfunction useCssVars(getter) {\r\n    const instance = getCurrentInstance();\r\n    /* istanbul ignore next */\r\n    if (!instance) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`useCssVars is called without current active component instance.`);\r\n        return;\r\n    }\r\n    const setVars = () => setVarsOnVNode(instance.subTree, getter(instance.proxy));\r\n    watchPostEffect(setVars);\r\n    onMounted(() => {\r\n        const ob = new MutationObserver(setVars);\r\n        ob.observe(instance.subTree.el.parentNode, { childList: true });\r\n        onUnmounted(() => ob.disconnect());\r\n    });\r\n}\r\nfunction setVarsOnVNode(vnode, vars) {\r\n    if (vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n        const suspense = vnode.suspense;\r\n        vnode = suspense.activeBranch;\r\n        if (suspense.pendingBranch && !suspense.isHydrating) {\r\n            suspense.effects.push(() => {\r\n                setVarsOnVNode(suspense.activeBranch, vars);\r\n            });\r\n        }\r\n    }\r\n    // drill down HOCs until it's a non-component vnode\r\n    while (vnode.component) {\r\n        vnode = vnode.component.subTree;\r\n    }\r\n    if (vnode.shapeFlag & 1 /* ELEMENT */ && vnode.el) {\r\n        setVarsOnNode(vnode.el, vars);\r\n    }\r\n    else if (vnode.type === Fragment) {\r\n        vnode.children.forEach(c => setVarsOnVNode(c, vars));\r\n    }\r\n    else if (vnode.type === Static) {\r\n        let { el, anchor } = vnode;\r\n        while (el) {\r\n            setVarsOnNode(el, vars);\r\n            if (el === anchor)\r\n                break;\r\n            el = el.nextSibling;\r\n        }\r\n    }\r\n}\r\nfunction setVarsOnNode(el, vars) {\r\n    if (el.nodeType === 1) {\r\n        const style = el.style;\r\n        for (const key in vars) {\r\n            style.setProperty(`--${key}`, vars[key]);\r\n        }\r\n    }\r\n}\n\nconst TRANSITION = 'transition';\r\nconst ANIMATION = 'animation';\r\n// DOM Transition is a higher-order-component based on the platform-agnostic\r\n// base Transition component, with DOM-specific logic.\r\nconst Transition = (props, { slots }) => h(BaseTransition, resolveTransitionProps(props), slots);\r\nTransition.displayName = 'Transition';\r\nconst DOMTransitionPropsValidators = {\r\n    name: String,\r\n    type: String,\r\n    css: {\r\n        type: Boolean,\r\n        default: true\r\n    },\r\n    duration: [String, Number, Object],\r\n    enterFromClass: String,\r\n    enterActiveClass: String,\r\n    enterToClass: String,\r\n    appearFromClass: String,\r\n    appearActiveClass: String,\r\n    appearToClass: String,\r\n    leaveFromClass: String,\r\n    leaveActiveClass: String,\r\n    leaveToClass: String\r\n};\r\nconst TransitionPropsValidators = (Transition.props =\r\n    /*#__PURE__*/ extend({}, BaseTransition.props, DOMTransitionPropsValidators));\r\n/**\r\n * #3227 Incoming hooks may be merged into arrays when wrapping Transition\r\n * with custom HOCs.\r\n */\r\nconst callHook = (hook, args = []) => {\r\n    if (isArray(hook)) {\r\n        hook.forEach(h => h(...args));\r\n    }\r\n    else if (hook) {\r\n        hook(...args);\r\n    }\r\n};\r\n/**\r\n * Check if a hook expects a callback (2nd arg), which means the user\r\n * intends to explicitly control the end of the transition.\r\n */\r\nconst hasExplicitCallback = (hook) => {\r\n    return hook\r\n        ? isArray(hook)\r\n            ? hook.some(h => h.length > 1)\r\n            : hook.length > 1\r\n        : false;\r\n};\r\nfunction resolveTransitionProps(rawProps) {\r\n    const baseProps = {};\r\n    for (const key in rawProps) {\r\n        if (!(key in DOMTransitionPropsValidators)) {\r\n            baseProps[key] = rawProps[key];\r\n        }\r\n    }\r\n    if (rawProps.css === false) {\r\n        return baseProps;\r\n    }\r\n    const { name = 'v', type, duration, enterFromClass = `${name}-enter-from`, enterActiveClass = `${name}-enter-active`, enterToClass = `${name}-enter-to`, appearFromClass = enterFromClass, appearActiveClass = enterActiveClass, appearToClass = enterToClass, leaveFromClass = `${name}-leave-from`, leaveActiveClass = `${name}-leave-active`, leaveToClass = `${name}-leave-to` } = rawProps;\r\n    const durations = normalizeDuration(duration);\r\n    const enterDuration = durations && durations[0];\r\n    const leaveDuration = durations && durations[1];\r\n    const { onBeforeEnter, onEnter, onEnterCancelled, onLeave, onLeaveCancelled, onBeforeAppear = onBeforeEnter, onAppear = onEnter, onAppearCancelled = onEnterCancelled } = baseProps;\r\n    const finishEnter = (el, isAppear, done) => {\r\n        removeTransitionClass(el, isAppear ? appearToClass : enterToClass);\r\n        removeTransitionClass(el, isAppear ? appearActiveClass : enterActiveClass);\r\n        done && done();\r\n    };\r\n    const finishLeave = (el, done) => {\r\n        removeTransitionClass(el, leaveToClass);\r\n        removeTransitionClass(el, leaveActiveClass);\r\n        done && done();\r\n    };\r\n    const makeEnterHook = (isAppear) => {\r\n        return (el, done) => {\r\n            const hook = isAppear ? onAppear : onEnter;\r\n            const resolve = () => finishEnter(el, isAppear, done);\r\n            callHook(hook, [el, resolve]);\r\n            nextFrame(() => {\r\n                removeTransitionClass(el, isAppear ? appearFromClass : enterFromClass);\r\n                addTransitionClass(el, isAppear ? appearToClass : enterToClass);\r\n                if (!hasExplicitCallback(hook)) {\r\n                    whenTransitionEnds(el, type, enterDuration, resolve);\r\n                }\r\n            });\r\n        };\r\n    };\r\n    return extend(baseProps, {\r\n        onBeforeEnter(el) {\r\n            callHook(onBeforeEnter, [el]);\r\n            addTransitionClass(el, enterFromClass);\r\n            addTransitionClass(el, enterActiveClass);\r\n        },\r\n        onBeforeAppear(el) {\r\n            callHook(onBeforeAppear, [el]);\r\n            addTransitionClass(el, appearFromClass);\r\n            addTransitionClass(el, appearActiveClass);\r\n        },\r\n        onEnter: makeEnterHook(false),\r\n        onAppear: makeEnterHook(true),\r\n        onLeave(el, done) {\r\n            const resolve = () => finishLeave(el, done);\r\n            addTransitionClass(el, leaveFromClass);\r\n            // force reflow so *-leave-from classes immediately take effect (#2593)\r\n            forceReflow();\r\n            addTransitionClass(el, leaveActiveClass);\r\n            nextFrame(() => {\r\n                removeTransitionClass(el, leaveFromClass);\r\n                addTransitionClass(el, leaveToClass);\r\n                if (!hasExplicitCallback(onLeave)) {\r\n                    whenTransitionEnds(el, type, leaveDuration, resolve);\r\n                }\r\n            });\r\n            callHook(onLeave, [el, resolve]);\r\n        },\r\n        onEnterCancelled(el) {\r\n            finishEnter(el, false);\r\n            callHook(onEnterCancelled, [el]);\r\n        },\r\n        onAppearCancelled(el) {\r\n            finishEnter(el, true);\r\n            callHook(onAppearCancelled, [el]);\r\n        },\r\n        onLeaveCancelled(el) {\r\n            finishLeave(el);\r\n            callHook(onLeaveCancelled, [el]);\r\n        }\r\n    });\r\n}\r\nfunction normalizeDuration(duration) {\r\n    if (duration == null) {\r\n        return null;\r\n    }\r\n    else if (isObject(duration)) {\r\n        return [NumberOf(duration.enter), NumberOf(duration.leave)];\r\n    }\r\n    else {\r\n        const n = NumberOf(duration);\r\n        return [n, n];\r\n    }\r\n}\r\nfunction NumberOf(val) {\r\n    const res = toNumber(val);\r\n    if ((process.env.NODE_ENV !== 'production'))\r\n        validateDuration(res);\r\n    return res;\r\n}\r\nfunction validateDuration(val) {\r\n    if (typeof val !== 'number') {\r\n        warn(`<transition> explicit duration is not a valid number - ` +\r\n            `got ${JSON.stringify(val)}.`);\r\n    }\r\n    else if (isNaN(val)) {\r\n        warn(`<transition> explicit duration is NaN - ` +\r\n            'the duration expression might be incorrect.');\r\n    }\r\n}\r\nfunction addTransitionClass(el, cls) {\r\n    cls.split(/\\s+/).forEach(c => c && el.classList.add(c));\r\n    (el._vtc ||\r\n        (el._vtc = new Set())).add(cls);\r\n}\r\nfunction removeTransitionClass(el, cls) {\r\n    cls.split(/\\s+/).forEach(c => c && el.classList.remove(c));\r\n    const { _vtc } = el;\r\n    if (_vtc) {\r\n        _vtc.delete(cls);\r\n        if (!_vtc.size) {\r\n            el._vtc = undefined;\r\n        }\r\n    }\r\n}\r\nfunction nextFrame(cb) {\r\n    requestAnimationFrame(() => {\r\n        requestAnimationFrame(cb);\r\n    });\r\n}\r\nlet endId = 0;\r\nfunction whenTransitionEnds(el, expectedType, explicitTimeout, resolve) {\r\n    const id = (el._endId = ++endId);\r\n    const resolveIfNotStale = () => {\r\n        if (id === el._endId) {\r\n            resolve();\r\n        }\r\n    };\r\n    if (explicitTimeout) {\r\n        return setTimeout(resolveIfNotStale, explicitTimeout);\r\n    }\r\n    const { type, timeout, propCount } = getTransitionInfo(el, expectedType);\r\n    if (!type) {\r\n        return resolve();\r\n    }\r\n    const endEvent = type + 'end';\r\n    let ended = 0;\r\n    const end = () => {\r\n        el.removeEventListener(endEvent, onEnd);\r\n        resolveIfNotStale();\r\n    };\r\n    const onEnd = (e) => {\r\n        if (e.target === el && ++ended >= propCount) {\r\n            end();\r\n        }\r\n    };\r\n    setTimeout(() => {\r\n        if (ended < propCount) {\r\n            end();\r\n        }\r\n    }, timeout + 1);\r\n    el.addEventListener(endEvent, onEnd);\r\n}\r\nfunction getTransitionInfo(el, expectedType) {\r\n    const styles = window.getComputedStyle(el);\r\n    // JSDOM may return undefined for transition properties\r\n    const getStyleProperties = (key) => (styles[key] || '').split(', ');\r\n    const transitionDelays = getStyleProperties(TRANSITION + 'Delay');\r\n    const transitionDurations = getStyleProperties(TRANSITION + 'Duration');\r\n    const transitionTimeout = getTimeout(transitionDelays, transitionDurations);\r\n    const animationDelays = getStyleProperties(ANIMATION + 'Delay');\r\n    const animationDurations = getStyleProperties(ANIMATION + 'Duration');\r\n    const animationTimeout = getTimeout(animationDelays, animationDurations);\r\n    let type = null;\r\n    let timeout = 0;\r\n    let propCount = 0;\r\n    /* istanbul ignore if */\r\n    if (expectedType === TRANSITION) {\r\n        if (transitionTimeout > 0) {\r\n            type = TRANSITION;\r\n            timeout = transitionTimeout;\r\n            propCount = transitionDurations.length;\r\n        }\r\n    }\r\n    else if (expectedType === ANIMATION) {\r\n        if (animationTimeout > 0) {\r\n            type = ANIMATION;\r\n            timeout = animationTimeout;\r\n            propCount = animationDurations.length;\r\n        }\r\n    }\r\n    else {\r\n        timeout = Math.max(transitionTimeout, animationTimeout);\r\n        type =\r\n            timeout > 0\r\n                ? transitionTimeout > animationTimeout\r\n                    ? TRANSITION\r\n                    : ANIMATION\r\n                : null;\r\n        propCount = type\r\n            ? type === TRANSITION\r\n                ? transitionDurations.length\r\n                : animationDurations.length\r\n            : 0;\r\n    }\r\n    const hasTransform = type === TRANSITION &&\r\n        /\\b(transform|all)(,|$)/.test(styles[TRANSITION + 'Property']);\r\n    return {\r\n        type,\r\n        timeout,\r\n        propCount,\r\n        hasTransform\r\n    };\r\n}\r\nfunction getTimeout(delays, durations) {\r\n    while (delays.length < durations.length) {\r\n        delays = delays.concat(delays);\r\n    }\r\n    return Math.max(...durations.map((d, i) => toMs(d) + toMs(delays[i])));\r\n}\r\n// Old versions of Chromium (below 61.0.3163.100) formats floating pointer\r\n// numbers in a locale-dependent way, using a comma instead of a dot.\r\n// If comma is not replaced with a dot, the input will be rounded down\r\n// (i.e. acting as a floor function) causing unexpected behaviors\r\nfunction toMs(s) {\r\n    return Number(s.slice(0, -1).replace(',', '.')) * 1000;\r\n}\r\n// synchronously force layout to put elements into a certain state\r\nfunction forceReflow() {\r\n    return document.body.offsetHeight;\r\n}\n\nconst positionMap = new WeakMap();\r\nconst newPositionMap = new WeakMap();\r\nconst TransitionGroupImpl = {\r\n    name: 'TransitionGroup',\r\n    props: /*#__PURE__*/ extend({}, TransitionPropsValidators, {\r\n        tag: String,\r\n        moveClass: String\r\n    }),\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        const state = useTransitionState();\r\n        let prevChildren;\r\n        let children;\r\n        onUpdated(() => {\r\n            // children is guaranteed to exist after initial render\r\n            if (!prevChildren.length) {\r\n                return;\r\n            }\r\n            const moveClass = props.moveClass || `${props.name || 'v'}-move`;\r\n            if (!hasCSSTransform(prevChildren[0].el, instance.vnode.el, moveClass)) {\r\n                return;\r\n            }\r\n            // we divide the work into three loops to avoid mixing DOM reads and writes\r\n            // in each iteration - which helps prevent layout thrashing.\r\n            prevChildren.forEach(callPendingCbs);\r\n            prevChildren.forEach(recordPosition);\r\n            const movedChildren = prevChildren.filter(applyTranslation);\r\n            // force reflow to put everything in position\r\n            forceReflow();\r\n            movedChildren.forEach(c => {\r\n                const el = c.el;\r\n                const style = el.style;\r\n                addTransitionClass(el, moveClass);\r\n                style.transform = style.webkitTransform = style.transitionDuration = '';\r\n                const cb = (el._moveCb = (e) => {\r\n                    if (e && e.target !== el) {\r\n                        return;\r\n                    }\r\n                    if (!e || /transform$/.test(e.propertyName)) {\r\n                        el.removeEventListener('transitionend', cb);\r\n                        el._moveCb = null;\r\n                        removeTransitionClass(el, moveClass);\r\n                    }\r\n                });\r\n                el.addEventListener('transitionend', cb);\r\n            });\r\n        });\r\n        return () => {\r\n            const rawProps = toRaw(props);\r\n            const cssTransitionProps = resolveTransitionProps(rawProps);\r\n            let tag = rawProps.tag || Fragment;\r\n            prevChildren = children;\r\n            children = slots.default ? getTransitionRawChildren(slots.default()) : [];\r\n            for (let i = 0; i < children.length; i++) {\r\n                const child = children[i];\r\n                if (child.key != null) {\r\n                    setTransitionHooks(child, resolveTransitionHooks(child, cssTransitionProps, state, instance));\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`<TransitionGroup> children must be keyed.`);\r\n                }\r\n            }\r\n            if (prevChildren) {\r\n                for (let i = 0; i < prevChildren.length; i++) {\r\n                    const child = prevChildren[i];\r\n                    setTransitionHooks(child, resolveTransitionHooks(child, cssTransitionProps, state, instance));\r\n                    positionMap.set(child, child.el.getBoundingClientRect());\r\n                }\r\n            }\r\n            return createVNode(tag, null, children);\r\n        };\r\n    }\r\n};\r\nconst TransitionGroup = TransitionGroupImpl;\r\nfunction callPendingCbs(c) {\r\n    const el = c.el;\r\n    if (el._moveCb) {\r\n        el._moveCb();\r\n    }\r\n    if (el._enterCb) {\r\n        el._enterCb();\r\n    }\r\n}\r\nfunction recordPosition(c) {\r\n    newPositionMap.set(c, c.el.getBoundingClientRect());\r\n}\r\nfunction applyTranslation(c) {\r\n    const oldPos = positionMap.get(c);\r\n    const newPos = newPositionMap.get(c);\r\n    const dx = oldPos.left - newPos.left;\r\n    const dy = oldPos.top - newPos.top;\r\n    if (dx || dy) {\r\n        const s = c.el.style;\r\n        s.transform = s.webkitTransform = `translate(${dx}px,${dy}px)`;\r\n        s.transitionDuration = '0s';\r\n        return c;\r\n    }\r\n}\r\nfunction hasCSSTransform(el, root, moveClass) {\r\n    // Detect whether an element with the move class applied has\r\n    // CSS transitions. Since the element may be inside an entering\r\n    // transition at this very moment, we make a clone of it and remove\r\n    // all other transition classes applied to ensure only the move class\r\n    // is applied.\r\n    const clone = el.cloneNode();\r\n    if (el._vtc) {\r\n        el._vtc.forEach(cls => {\r\n            cls.split(/\\s+/).forEach(c => c && clone.classList.remove(c));\r\n        });\r\n    }\r\n    moveClass.split(/\\s+/).forEach(c => c && clone.classList.add(c));\r\n    clone.style.display = 'none';\r\n    const container = (root.nodeType === 1 ? root : root.parentNode);\r\n    container.appendChild(clone);\r\n    const { hasTransform } = getTransitionInfo(clone);\r\n    container.removeChild(clone);\r\n    return hasTransform;\r\n}\n\nconst getModelAssigner = (vnode) => {\r\n    const fn = vnode.props['onUpdate:modelValue'];\r\n    return isArray(fn) ? value => invokeArrayFns(fn, value) : fn;\r\n};\r\nfunction onCompositionStart(e) {\r\n    e.target.composing = true;\r\n}\r\nfunction onCompositionEnd(e) {\r\n    const target = e.target;\r\n    if (target.composing) {\r\n        target.composing = false;\r\n        trigger(target, 'input');\r\n    }\r\n}\r\nfunction trigger(el, type) {\r\n    const e = document.createEvent('HTMLEvents');\r\n    e.initEvent(type, true, true);\r\n    el.dispatchEvent(e);\r\n}\r\n// We are exporting the v-model runtime directly as vnode hooks so that it can\r\n// be tree-shaken in case v-model is never used.\r\nconst vModelText = {\r\n    created(el, { modifiers: { lazy, trim, number } }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        const castToNumber = number || (vnode.props && vnode.props.type === 'number');\r\n        addEventListener(el, lazy ? 'change' : 'input', e => {\r\n            if (e.target.composing)\r\n                return;\r\n            let domValue = el.value;\r\n            if (trim) {\r\n                domValue = domValue.trim();\r\n            }\r\n            else if (castToNumber) {\r\n                domValue = toNumber(domValue);\r\n            }\r\n            el._assign(domValue);\r\n        });\r\n        if (trim) {\r\n            addEventListener(el, 'change', () => {\r\n                el.value = el.value.trim();\r\n            });\r\n        }\r\n        if (!lazy) {\r\n            addEventListener(el, 'compositionstart', onCompositionStart);\r\n            addEventListener(el, 'compositionend', onCompositionEnd);\r\n            // Safari < 10.2 & UIWebView doesn't fire compositionend when\r\n            // switching focus before confirming composition choice\r\n            // this also fixes the issue where some browsers e.g. iOS Chrome\r\n            // fires \"change\" instead of \"input\" on autocomplete.\r\n            addEventListener(el, 'change', onCompositionEnd);\r\n        }\r\n    },\r\n    // set value on mounted so it's after min/max for type=\"range\"\r\n    mounted(el, { value }) {\r\n        el.value = value == null ? '' : value;\r\n    },\r\n    beforeUpdate(el, { value, modifiers: { lazy, trim, number } }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        // avoid clearing unresolved text. #2302\r\n        if (el.composing)\r\n            return;\r\n        if (document.activeElement === el) {\r\n            if (lazy) {\r\n                return;\r\n            }\r\n            if (trim && el.value.trim() === value) {\r\n                return;\r\n            }\r\n            if ((number || el.type === 'number') && toNumber(el.value) === value) {\r\n                return;\r\n            }\r\n        }\r\n        const newValue = value == null ? '' : value;\r\n        if (el.value !== newValue) {\r\n            el.value = newValue;\r\n        }\r\n    }\r\n};\r\nconst vModelCheckbox = {\r\n    // #4096 array checkboxes need to be deep traversed\r\n    deep: true,\r\n    created(el, _, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        addEventListener(el, 'change', () => {\r\n            const modelValue = el._modelValue;\r\n            const elementValue = getValue(el);\r\n            const checked = el.checked;\r\n            const assign = el._assign;\r\n            if (isArray(modelValue)) {\r\n                const index = looseIndexOf(modelValue, elementValue);\r\n                const found = index !== -1;\r\n                if (checked && !found) {\r\n                    assign(modelValue.concat(elementValue));\r\n                }\r\n                else if (!checked && found) {\r\n                    const filtered = [...modelValue];\r\n                    filtered.splice(index, 1);\r\n                    assign(filtered);\r\n                }\r\n            }\r\n            else if (isSet(modelValue)) {\r\n                const cloned = new Set(modelValue);\r\n                if (checked) {\r\n                    cloned.add(elementValue);\r\n                }\r\n                else {\r\n                    cloned.delete(elementValue);\r\n                }\r\n                assign(cloned);\r\n            }\r\n            else {\r\n                assign(getCheckboxValue(el, checked));\r\n            }\r\n        });\r\n    },\r\n    // set initial checked on mount to wait for true-value/false-value\r\n    mounted: setChecked,\r\n    beforeUpdate(el, binding, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        setChecked(el, binding, vnode);\r\n    }\r\n};\r\nfunction setChecked(el, { value, oldValue }, vnode) {\r\n    el._modelValue = value;\r\n    if (isArray(value)) {\r\n        el.checked = looseIndexOf(value, vnode.props.value) > -1;\r\n    }\r\n    else if (isSet(value)) {\r\n        el.checked = value.has(vnode.props.value);\r\n    }\r\n    else if (value !== oldValue) {\r\n        el.checked = looseEqual(value, getCheckboxValue(el, true));\r\n    }\r\n}\r\nconst vModelRadio = {\r\n    created(el, { value }, vnode) {\r\n        el.checked = looseEqual(value, vnode.props.value);\r\n        el._assign = getModelAssigner(vnode);\r\n        addEventListener(el, 'change', () => {\r\n            el._assign(getValue(el));\r\n        });\r\n    },\r\n    beforeUpdate(el, { value, oldValue }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        if (value !== oldValue) {\r\n            el.checked = looseEqual(value, vnode.props.value);\r\n        }\r\n    }\r\n};\r\nconst vModelSelect = {\r\n    // <select multiple> value need to be deep traversed\r\n    deep: true,\r\n    created(el, { value, modifiers: { number } }, vnode) {\r\n        const isSetModel = isSet(value);\r\n        addEventListener(el, 'change', () => {\r\n            const selectedVal = Array.prototype.filter\r\n                .call(el.options, (o) => o.selected)\r\n                .map((o) => number ? toNumber(getValue(o)) : getValue(o));\r\n            el._assign(el.multiple\r\n                ? isSetModel\r\n                    ? new Set(selectedVal)\r\n                    : selectedVal\r\n                : selectedVal[0]);\r\n        });\r\n        el._assign = getModelAssigner(vnode);\r\n    },\r\n    // set value in mounted & updated because <select> relies on its children\r\n    // <option>s.\r\n    mounted(el, { value }) {\r\n        setSelected(el, value);\r\n    },\r\n    beforeUpdate(el, _binding, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n    },\r\n    updated(el, { value }) {\r\n        setSelected(el, value);\r\n    }\r\n};\r\nfunction setSelected(el, value) {\r\n    const isMultiple = el.multiple;\r\n    if (isMultiple && !isArray(value) && !isSet(value)) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`<select multiple v-model> expects an Array or Set value for its binding, ` +\r\n                `but got ${Object.prototype.toString.call(value).slice(8, -1)}.`);\r\n        return;\r\n    }\r\n    for (let i = 0, l = el.options.length; i < l; i++) {\r\n        const option = el.options[i];\r\n        const optionValue = getValue(option);\r\n        if (isMultiple) {\r\n            if (isArray(value)) {\r\n                option.selected = looseIndexOf(value, optionValue) > -1;\r\n            }\r\n            else {\r\n                option.selected = value.has(optionValue);\r\n            }\r\n        }\r\n        else {\r\n            if (looseEqual(getValue(option), value)) {\r\n                if (el.selectedIndex !== i)\r\n                    el.selectedIndex = i;\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    if (!isMultiple && el.selectedIndex !== -1) {\r\n        el.selectedIndex = -1;\r\n    }\r\n}\r\n// retrieve raw value set via :value bindings\r\nfunction getValue(el) {\r\n    return '_value' in el ? el._value : el.value;\r\n}\r\n// retrieve raw value for true-value and false-value set via :true-value or :false-value bindings\r\nfunction getCheckboxValue(el, checked) {\r\n    const key = checked ? '_trueValue' : '_falseValue';\r\n    return key in el ? el[key] : checked;\r\n}\r\nconst vModelDynamic = {\r\n    created(el, binding, vnode) {\r\n        callModelHook(el, binding, vnode, null, 'created');\r\n    },\r\n    mounted(el, binding, vnode) {\r\n        callModelHook(el, binding, vnode, null, 'mounted');\r\n    },\r\n    beforeUpdate(el, binding, vnode, prevVNode) {\r\n        callModelHook(el, binding, vnode, prevVNode, 'beforeUpdate');\r\n    },\r\n    updated(el, binding, vnode, prevVNode) {\r\n        callModelHook(el, binding, vnode, prevVNode, 'updated');\r\n    }\r\n};\r\nfunction callModelHook(el, binding, vnode, prevVNode, hook) {\r\n    let modelToUse;\r\n    switch (el.tagName) {\r\n        case 'SELECT':\r\n            modelToUse = vModelSelect;\r\n            break;\r\n        case 'TEXTAREA':\r\n            modelToUse = vModelText;\r\n            break;\r\n        default:\r\n            switch (vnode.props && vnode.props.type) {\r\n                case 'checkbox':\r\n                    modelToUse = vModelCheckbox;\r\n                    break;\r\n                case 'radio':\r\n                    modelToUse = vModelRadio;\r\n                    break;\r\n                default:\r\n                    modelToUse = vModelText;\r\n            }\r\n    }\r\n    const fn = modelToUse[hook];\r\n    fn && fn(el, binding, vnode, prevVNode);\r\n}\n\nconst systemModifiers = ['ctrl', 'shift', 'alt', 'meta'];\r\nconst modifierGuards = {\r\n    stop: e => e.stopPropagation(),\r\n    prevent: e => e.preventDefault(),\r\n    self: e => e.target !== e.currentTarget,\r\n    ctrl: e => !e.ctrlKey,\r\n    shift: e => !e.shiftKey,\r\n    alt: e => !e.altKey,\r\n    meta: e => !e.metaKey,\r\n    left: e => 'button' in e && e.button !== 0,\r\n    middle: e => 'button' in e && e.button !== 1,\r\n    right: e => 'button' in e && e.button !== 2,\r\n    exact: (e, modifiers) => systemModifiers.some(m => e[`${m}Key`] && !modifiers.includes(m))\r\n};\r\n/**\r\n * @private\r\n */\r\nconst withModifiers = (fn, modifiers) => {\r\n    return (event, ...args) => {\r\n        for (let i = 0; i < modifiers.length; i++) {\r\n            const guard = modifierGuards[modifiers[i]];\r\n            if (guard && guard(event, modifiers))\r\n                return;\r\n        }\r\n        return fn(event, ...args);\r\n    };\r\n};\r\n// Kept for 2.x compat.\r\n// Note: IE11 compat for `spacebar` and `del` is removed for now.\r\nconst keyNames = {\r\n    esc: 'escape',\r\n    space: ' ',\r\n    up: 'arrow-up',\r\n    left: 'arrow-left',\r\n    right: 'arrow-right',\r\n    down: 'arrow-down',\r\n    delete: 'backspace'\r\n};\r\n/**\r\n * @private\r\n */\r\nconst withKeys = (fn, modifiers) => {\r\n    return (event) => {\r\n        if (!('key' in event)) {\r\n            return;\r\n        }\r\n        const eventKey = hyphenate(event.key);\r\n        if (modifiers.some(k => k === eventKey || keyNames[k] === eventKey)) {\r\n            return fn(event);\r\n        }\r\n    };\r\n};\n\nconst vShow = {\r\n    beforeMount(el, { value }, { transition }) {\r\n        el._vod = el.style.display === 'none' ? '' : el.style.display;\r\n        if (transition && value) {\r\n            transition.beforeEnter(el);\r\n        }\r\n        else {\r\n            setDisplay(el, value);\r\n        }\r\n    },\r\n    mounted(el, { value }, { transition }) {\r\n        if (transition && value) {\r\n            transition.enter(el);\r\n        }\r\n    },\r\n    updated(el, { value, oldValue }, { transition }) {\r\n        if (!value === !oldValue)\r\n            return;\r\n        if (transition) {\r\n            if (value) {\r\n                transition.beforeEnter(el);\r\n                setDisplay(el, true);\r\n                transition.enter(el);\r\n            }\r\n            else {\r\n                transition.leave(el, () => {\r\n                    setDisplay(el, false);\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            setDisplay(el, value);\r\n        }\r\n    },\r\n    beforeUnmount(el, { value }) {\r\n        setDisplay(el, value);\r\n    }\r\n};\r\nfunction setDisplay(el, value) {\r\n    el.style.display = value ? el._vod : 'none';\r\n}\n\nconst rendererOptions = extend({ patchProp }, nodeOps);\r\n// lazy create the renderer - this makes core renderer logic tree-shakable\r\n// in case the user only imports reactivity utilities from Vue.\r\nlet renderer;\r\nlet enabledHydration = false;\r\nfunction ensureRenderer() {\r\n    return (renderer ||\r\n        (renderer = createRenderer(rendererOptions)));\r\n}\r\nfunction ensureHydrationRenderer() {\r\n    renderer = enabledHydration\r\n        ? renderer\r\n        : createHydrationRenderer(rendererOptions);\r\n    enabledHydration = true;\r\n    return renderer;\r\n}\r\n// use explicit type casts here to avoid import() calls in rolled-up d.ts\r\nconst render = ((...args) => {\r\n    ensureRenderer().render(...args);\r\n});\r\nconst hydrate = ((...args) => {\r\n    ensureHydrationRenderer().hydrate(...args);\r\n});\r\nconst createApp = ((...args) => {\r\n    const app = ensureRenderer().createApp(...args);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        injectNativeTagCheck(app);\r\n        injectCompilerOptionsCheck(app);\r\n    }\r\n    const { mount } = app;\r\n    app.mount = (containerOrSelector) => {\r\n        const container = normalizeContainer(containerOrSelector);\r\n        if (!container)\r\n            return;\r\n        const component = app._component;\r\n        if (!isFunction(component) && !component.render && !component.template) {\r\n            // __UNSAFE__\r\n            // Reason: potential execution of JS expressions in in-DOM template.\r\n            // The user must make sure the in-DOM template is trusted. If it's\r\n            // rendered by the server, the template should not contain any user data.\r\n            component.template = container.innerHTML;\r\n        }\r\n        // clear content before mounting\r\n        container.innerHTML = '';\r\n        const proxy = mount(container, false, container instanceof SVGElement);\r\n        if (container instanceof Element) {\r\n            container.removeAttribute('v-cloak');\r\n            container.setAttribute('data-v-app', '');\r\n        }\r\n        return proxy;\r\n    };\r\n    return app;\r\n});\r\nconst createSSRApp = ((...args) => {\r\n    const app = ensureHydrationRenderer().createApp(...args);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        injectNativeTagCheck(app);\r\n        injectCompilerOptionsCheck(app);\r\n    }\r\n    const { mount } = app;\r\n    app.mount = (containerOrSelector) => {\r\n        const container = normalizeContainer(containerOrSelector);\r\n        if (container) {\r\n            return mount(container, true, container instanceof SVGElement);\r\n        }\r\n    };\r\n    return app;\r\n});\r\nfunction injectNativeTagCheck(app) {\r\n    // Inject `isNativeTag`\r\n    // this is used for component name validation (dev only)\r\n    Object.defineProperty(app.config, 'isNativeTag', {\r\n        value: (tag) => isHTMLTag(tag) || isSVGTag(tag),\r\n        writable: false\r\n    });\r\n}\r\n// dev only\r\nfunction injectCompilerOptionsCheck(app) {\r\n    if (isRuntimeOnly()) {\r\n        const isCustomElement = app.config.isCustomElement;\r\n        Object.defineProperty(app.config, 'isCustomElement', {\r\n            get() {\r\n                return isCustomElement;\r\n            },\r\n            set() {\r\n                warn(`The \\`isCustomElement\\` config option is deprecated. Use ` +\r\n                    `\\`compilerOptions.isCustomElement\\` instead.`);\r\n            }\r\n        });\r\n        const compilerOptions = app.config.compilerOptions;\r\n        const msg = `The \\`compilerOptions\\` config option is only respected when using ` +\r\n            `a build of Vue.js that includes the runtime compiler (aka \"full build\"). ` +\r\n            `Since you are using the runtime-only build, \\`compilerOptions\\` ` +\r\n            `must be passed to \\`@vue/compiler-dom\\` in the build setup instead.\\n` +\r\n            `- For vue-loader: pass it via vue-loader's \\`compilerOptions\\` loader option.\\n` +\r\n            `- For vue-cli: see https://cli.vuejs.org/guide/webpack.html#modifying-options-of-a-loader\\n` +\r\n            `- For vite: pass it via @vitejs/plugin-vue options. See https://github.com/vitejs/vite/tree/main/packages/plugin-vue#example-for-passing-options-to-vuecompiler-dom`;\r\n        Object.defineProperty(app.config, 'compilerOptions', {\r\n            get() {\r\n                warn(msg);\r\n                return compilerOptions;\r\n            },\r\n            set() {\r\n                warn(msg);\r\n            }\r\n        });\r\n    }\r\n}\r\nfunction normalizeContainer(container) {\r\n    if (isString(container)) {\r\n        const res = document.querySelector(container);\r\n        if ((process.env.NODE_ENV !== 'production') && !res) {\r\n            warn(`Failed to mount app: mount target selector \"${container}\" returned null.`);\r\n        }\r\n        return res;\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') &&\r\n        window.ShadowRoot &&\r\n        container instanceof window.ShadowRoot &&\r\n        container.mode === 'closed') {\r\n        warn(`mounting on a ShadowRoot with \\`{mode: \"closed\"}\\` may lead to unpredictable bugs`);\r\n    }\r\n    return container;\r\n}\n\nexport { Transition, TransitionGroup, VueElement, createApp, createSSRApp, defineCustomElement, defineSSRCustomElement, hydrate, render, useCssModule, useCssVars, vModelCheckbox, vModelDynamic, vModelRadio, vModelSelect, vModelText, vShow, withKeys, withModifiers };\n","import { isString, hyphenate, babelParserDefaultPlugins, extend, isObject, NO, isArray, makeMap, isSymbol, NOOP, EMPTY_OBJ, capitalize, camelize as camelize$1, PatchFlagNames, slotFlagsText, isOn, isReservedProp, toHandlerKey } from '@vue/shared';\nexport { generateCodeFrame } from '@vue/shared';\nimport { parseExpression } from '@babel/parser';\n\nfunction defaultOnError(error) {\r\n    throw error;\r\n}\r\nfunction defaultOnWarn(msg) {\r\n    (process.env.NODE_ENV !== 'production') && console.warn(`[Vue warn] ${msg.message}`);\r\n}\r\nfunction createCompilerError(code, loc, messages, additionalMessage) {\r\n    const msg = (process.env.NODE_ENV !== 'production') || !true\r\n        ? (messages || errorMessages)[code] + (additionalMessage || ``)\r\n        : code;\r\n    const error = new SyntaxError(String(msg));\r\n    error.code = code;\r\n    error.loc = loc;\r\n    return error;\r\n}\r\nconst errorMessages = {\r\n    // parse errors\r\n    [0 /* ABRUPT_CLOSING_OF_EMPTY_COMMENT */]: 'Illegal comment.',\r\n    [1 /* CDATA_IN_HTML_CONTENT */]: 'CDATA section is allowed only in XML context.',\r\n    [2 /* DUPLICATE_ATTRIBUTE */]: 'Duplicate attribute.',\r\n    [3 /* END_TAG_WITH_ATTRIBUTES */]: 'End tag cannot have attributes.',\r\n    [4 /* END_TAG_WITH_TRAILING_SOLIDUS */]: \"Illegal '/' in tags.\",\r\n    [5 /* EOF_BEFORE_TAG_NAME */]: 'Unexpected EOF in tag.',\r\n    [6 /* EOF_IN_CDATA */]: 'Unexpected EOF in CDATA section.',\r\n    [7 /* EOF_IN_COMMENT */]: 'Unexpected EOF in comment.',\r\n    [8 /* EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT */]: 'Unexpected EOF in script.',\r\n    [9 /* EOF_IN_TAG */]: 'Unexpected EOF in tag.',\r\n    [10 /* INCORRECTLY_CLOSED_COMMENT */]: 'Incorrectly closed comment.',\r\n    [11 /* INCORRECTLY_OPENED_COMMENT */]: 'Incorrectly opened comment.',\r\n    [12 /* INVALID_FIRST_CHARACTER_OF_TAG_NAME */]: \"Illegal tag name. Use '&lt;' to print '<'.\",\r\n    [13 /* MISSING_ATTRIBUTE_VALUE */]: 'Attribute value was expected.',\r\n    [14 /* MISSING_END_TAG_NAME */]: 'End tag name was expected.',\r\n    [15 /* MISSING_WHITESPACE_BETWEEN_ATTRIBUTES */]: 'Whitespace was expected.',\r\n    [16 /* NESTED_COMMENT */]: \"Unexpected '<!--' in comment.\",\r\n    [17 /* UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME */]: 'Attribute name cannot contain U+0022 (\"), U+0027 (\\'), and U+003C (<).',\r\n    [18 /* UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE */]: 'Unquoted attribute value cannot contain U+0022 (\"), U+0027 (\\'), U+003C (<), U+003D (=), and U+0060 (`).',\r\n    [19 /* UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME */]: \"Attribute name cannot start with '='.\",\r\n    [21 /* UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME */]: \"'<?' is allowed only in XML context.\",\r\n    [20 /* UNEXPECTED_NULL_CHARACTER */]: `Unexpected null character.`,\r\n    [22 /* UNEXPECTED_SOLIDUS_IN_TAG */]: \"Illegal '/' in tags.\",\r\n    // Vue-specific parse errors\r\n    [23 /* X_INVALID_END_TAG */]: 'Invalid end tag.',\r\n    [24 /* X_MISSING_END_TAG */]: 'Element is missing end tag.',\r\n    [25 /* X_MISSING_INTERPOLATION_END */]: 'Interpolation end sign was not found.',\r\n    [27 /* X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END */]: 'End bracket for dynamic directive argument was not found. ' +\r\n        'Note that dynamic directive argument cannot contain spaces.',\r\n    [26 /* X_MISSING_DIRECTIVE_NAME */]: 'Legal directive name was expected.',\r\n    // transform errors\r\n    [28 /* X_V_IF_NO_EXPRESSION */]: `v-if/v-else-if is missing expression.`,\r\n    [29 /* X_V_IF_SAME_KEY */]: `v-if/else branches must use unique keys.`,\r\n    [30 /* X_V_ELSE_NO_ADJACENT_IF */]: `v-else/v-else-if has no adjacent v-if or v-else-if.`,\r\n    [31 /* X_V_FOR_NO_EXPRESSION */]: `v-for is missing expression.`,\r\n    [32 /* X_V_FOR_MALFORMED_EXPRESSION */]: `v-for has invalid expression.`,\r\n    [33 /* X_V_FOR_TEMPLATE_KEY_PLACEMENT */]: `<template v-for> key should be placed on the <template> tag.`,\r\n    [34 /* X_V_BIND_NO_EXPRESSION */]: `v-bind is missing expression.`,\r\n    [35 /* X_V_ON_NO_EXPRESSION */]: `v-on is missing expression.`,\r\n    [36 /* X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET */]: `Unexpected custom directive on <slot> outlet.`,\r\n    [37 /* X_V_SLOT_MIXED_SLOT_USAGE */]: `Mixed v-slot usage on both the component and nested <template>.` +\r\n        `When there are multiple named slots, all slots should use <template> ` +\r\n        `syntax to avoid scope ambiguity.`,\r\n    [38 /* X_V_SLOT_DUPLICATE_SLOT_NAMES */]: `Duplicate slot names found. `,\r\n    [39 /* X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN */]: `Extraneous children found when component already has explicitly named ` +\r\n        `default slot. These children will be ignored.`,\r\n    [40 /* X_V_SLOT_MISPLACED */]: `v-slot can only be used on components or <template> tags.`,\r\n    [41 /* X_V_MODEL_NO_EXPRESSION */]: `v-model is missing expression.`,\r\n    [42 /* X_V_MODEL_MALFORMED_EXPRESSION */]: `v-model value must be a valid JavaScript member expression.`,\r\n    [43 /* X_V_MODEL_ON_SCOPE_VARIABLE */]: `v-model cannot be used on v-for or v-slot scope variables because they are not writable.`,\r\n    [44 /* X_INVALID_EXPRESSION */]: `Error parsing JavaScript expression: `,\r\n    [45 /* X_KEEP_ALIVE_INVALID_CHILDREN */]: `<KeepAlive> expects exactly one child component.`,\r\n    // generic errors\r\n    [46 /* X_PREFIX_ID_NOT_SUPPORTED */]: `\"prefixIdentifiers\" option is not supported in this build of compiler.`,\r\n    [47 /* X_MODULE_MODE_NOT_SUPPORTED */]: `ES module mode is not supported in this build of compiler.`,\r\n    [48 /* X_CACHE_HANDLER_NOT_SUPPORTED */]: `\"cacheHandlers\" option is only supported when the \"prefixIdentifiers\" option is enabled.`,\r\n    [49 /* X_SCOPE_ID_NOT_SUPPORTED */]: `\"scopeId\" option is only supported in module mode.`,\r\n    // just to fullfill types\r\n    [50 /* __EXTEND_POINT__ */]: ``\r\n};\n\nconst FRAGMENT = Symbol((process.env.NODE_ENV !== 'production') ? `Fragment` : ``);\r\nconst TELEPORT = Symbol((process.env.NODE_ENV !== 'production') ? `Teleport` : ``);\r\nconst SUSPENSE = Symbol((process.env.NODE_ENV !== 'production') ? `Suspense` : ``);\r\nconst KEEP_ALIVE = Symbol((process.env.NODE_ENV !== 'production') ? `KeepAlive` : ``);\r\nconst BASE_TRANSITION = Symbol((process.env.NODE_ENV !== 'production') ? `BaseTransition` : ``);\r\nconst OPEN_BLOCK = Symbol((process.env.NODE_ENV !== 'production') ? `openBlock` : ``);\r\nconst CREATE_BLOCK = Symbol((process.env.NODE_ENV !== 'production') ? `createBlock` : ``);\r\nconst CREATE_ELEMENT_BLOCK = Symbol((process.env.NODE_ENV !== 'production') ? `createElementBlock` : ``);\r\nconst CREATE_VNODE = Symbol((process.env.NODE_ENV !== 'production') ? `createVNode` : ``);\r\nconst CREATE_ELEMENT_VNODE = Symbol((process.env.NODE_ENV !== 'production') ? `createElementVNode` : ``);\r\nconst CREATE_COMMENT = Symbol((process.env.NODE_ENV !== 'production') ? `createCommentVNode` : ``);\r\nconst CREATE_TEXT = Symbol((process.env.NODE_ENV !== 'production') ? `createTextVNode` : ``);\r\nconst CREATE_STATIC = Symbol((process.env.NODE_ENV !== 'production') ? `createStaticVNode` : ``);\r\nconst RESOLVE_COMPONENT = Symbol((process.env.NODE_ENV !== 'production') ? `resolveComponent` : ``);\r\nconst RESOLVE_DYNAMIC_COMPONENT = Symbol((process.env.NODE_ENV !== 'production') ? `resolveDynamicComponent` : ``);\r\nconst RESOLVE_DIRECTIVE = Symbol((process.env.NODE_ENV !== 'production') ? `resolveDirective` : ``);\r\nconst RESOLVE_FILTER = Symbol((process.env.NODE_ENV !== 'production') ? `resolveFilter` : ``);\r\nconst WITH_DIRECTIVES = Symbol((process.env.NODE_ENV !== 'production') ? `withDirectives` : ``);\r\nconst RENDER_LIST = Symbol((process.env.NODE_ENV !== 'production') ? `renderList` : ``);\r\nconst RENDER_SLOT = Symbol((process.env.NODE_ENV !== 'production') ? `renderSlot` : ``);\r\nconst CREATE_SLOTS = Symbol((process.env.NODE_ENV !== 'production') ? `createSlots` : ``);\r\nconst TO_DISPLAY_STRING = Symbol((process.env.NODE_ENV !== 'production') ? `toDisplayString` : ``);\r\nconst MERGE_PROPS = Symbol((process.env.NODE_ENV !== 'production') ? `mergeProps` : ``);\r\nconst NORMALIZE_CLASS = Symbol((process.env.NODE_ENV !== 'production') ? `normalizeClass` : ``);\r\nconst NORMALIZE_STYLE = Symbol((process.env.NODE_ENV !== 'production') ? `normalizeStyle` : ``);\r\nconst NORMALIZE_PROPS = Symbol((process.env.NODE_ENV !== 'production') ? `normalizeProps` : ``);\r\nconst GUARD_REACTIVE_PROPS = Symbol((process.env.NODE_ENV !== 'production') ? `guardReactiveProps` : ``);\r\nconst TO_HANDLERS = Symbol((process.env.NODE_ENV !== 'production') ? `toHandlers` : ``);\r\nconst CAMELIZE = Symbol((process.env.NODE_ENV !== 'production') ? `camelize` : ``);\r\nconst CAPITALIZE = Symbol((process.env.NODE_ENV !== 'production') ? `capitalize` : ``);\r\nconst TO_HANDLER_KEY = Symbol((process.env.NODE_ENV !== 'production') ? `toHandlerKey` : ``);\r\nconst SET_BLOCK_TRACKING = Symbol((process.env.NODE_ENV !== 'production') ? `setBlockTracking` : ``);\r\nconst PUSH_SCOPE_ID = Symbol((process.env.NODE_ENV !== 'production') ? `pushScopeId` : ``);\r\nconst POP_SCOPE_ID = Symbol((process.env.NODE_ENV !== 'production') ? `popScopeId` : ``);\r\nconst WITH_CTX = Symbol((process.env.NODE_ENV !== 'production') ? `withCtx` : ``);\r\nconst UNREF = Symbol((process.env.NODE_ENV !== 'production') ? `unref` : ``);\r\nconst IS_REF = Symbol((process.env.NODE_ENV !== 'production') ? `isRef` : ``);\r\nconst WITH_MEMO = Symbol((process.env.NODE_ENV !== 'production') ? `withMemo` : ``);\r\nconst IS_MEMO_SAME = Symbol((process.env.NODE_ENV !== 'production') ? `isMemoSame` : ``);\r\n// Name mapping for runtime helpers that need to be imported from 'vue' in\r\n// generated code. Make sure these are correctly exported in the runtime!\r\n// Using `any` here because TS doesn't allow symbols as index type.\r\nconst helperNameMap = {\r\n    [FRAGMENT]: `Fragment`,\r\n    [TELEPORT]: `Teleport`,\r\n    [SUSPENSE]: `Suspense`,\r\n    [KEEP_ALIVE]: `KeepAlive`,\r\n    [BASE_TRANSITION]: `BaseTransition`,\r\n    [OPEN_BLOCK]: `openBlock`,\r\n    [CREATE_BLOCK]: `createBlock`,\r\n    [CREATE_ELEMENT_BLOCK]: `createElementBlock`,\r\n    [CREATE_VNODE]: `createVNode`,\r\n    [CREATE_ELEMENT_VNODE]: `createElementVNode`,\r\n    [CREATE_COMMENT]: `createCommentVNode`,\r\n    [CREATE_TEXT]: `createTextVNode`,\r\n    [CREATE_STATIC]: `createStaticVNode`,\r\n    [RESOLVE_COMPONENT]: `resolveComponent`,\r\n    [RESOLVE_DYNAMIC_COMPONENT]: `resolveDynamicComponent`,\r\n    [RESOLVE_DIRECTIVE]: `resolveDirective`,\r\n    [RESOLVE_FILTER]: `resolveFilter`,\r\n    [WITH_DIRECTIVES]: `withDirectives`,\r\n    [RENDER_LIST]: `renderList`,\r\n    [RENDER_SLOT]: `renderSlot`,\r\n    [CREATE_SLOTS]: `createSlots`,\r\n    [TO_DISPLAY_STRING]: `toDisplayString`,\r\n    [MERGE_PROPS]: `mergeProps`,\r\n    [NORMALIZE_CLASS]: `normalizeClass`,\r\n    [NORMALIZE_STYLE]: `normalizeStyle`,\r\n    [NORMALIZE_PROPS]: `normalizeProps`,\r\n    [GUARD_REACTIVE_PROPS]: `guardReactiveProps`,\r\n    [TO_HANDLERS]: `toHandlers`,\r\n    [CAMELIZE]: `camelize`,\r\n    [CAPITALIZE]: `capitalize`,\r\n    [TO_HANDLER_KEY]: `toHandlerKey`,\r\n    [SET_BLOCK_TRACKING]: `setBlockTracking`,\r\n    [PUSH_SCOPE_ID]: `pushScopeId`,\r\n    [POP_SCOPE_ID]: `popScopeId`,\r\n    [WITH_CTX]: `withCtx`,\r\n    [UNREF]: `unref`,\r\n    [IS_REF]: `isRef`,\r\n    [WITH_MEMO]: `withMemo`,\r\n    [IS_MEMO_SAME]: `isMemoSame`\r\n};\r\nfunction registerRuntimeHelpers(helpers) {\r\n    Object.getOwnPropertySymbols(helpers).forEach(s => {\r\n        helperNameMap[s] = helpers[s];\r\n    });\r\n}\n\n// AST Utilities ---------------------------------------------------------------\r\n// Some expressions, e.g. sequence and conditional expressions, are never\r\n// associated with template nodes, so their source locations are just a stub.\r\n// Container types like CompoundExpression also don't need a real location.\r\nconst locStub = {\r\n    source: '',\r\n    start: { line: 1, column: 1, offset: 0 },\r\n    end: { line: 1, column: 1, offset: 0 }\r\n};\r\nfunction createRoot(children, loc = locStub) {\r\n    return {\r\n        type: 0 /* ROOT */,\r\n        children,\r\n        helpers: [],\r\n        components: [],\r\n        directives: [],\r\n        hoists: [],\r\n        imports: [],\r\n        cached: 0,\r\n        temps: 0,\r\n        codegenNode: undefined,\r\n        loc\r\n    };\r\n}\r\nfunction createVNodeCall(context, tag, props, children, patchFlag, dynamicProps, directives, isBlock = false, disableTracking = false, isComponent = false, loc = locStub) {\r\n    if (context) {\r\n        if (isBlock) {\r\n            context.helper(OPEN_BLOCK);\r\n            context.helper(getVNodeBlockHelper(context.inSSR, isComponent));\r\n        }\r\n        else {\r\n            context.helper(getVNodeHelper(context.inSSR, isComponent));\r\n        }\r\n        if (directives) {\r\n            context.helper(WITH_DIRECTIVES);\r\n        }\r\n    }\r\n    return {\r\n        type: 13 /* VNODE_CALL */,\r\n        tag,\r\n        props,\r\n        children,\r\n        patchFlag,\r\n        dynamicProps,\r\n        directives,\r\n        isBlock,\r\n        disableTracking,\r\n        isComponent,\r\n        loc\r\n    };\r\n}\r\nfunction createArrayExpression(elements, loc = locStub) {\r\n    return {\r\n        type: 17 /* JS_ARRAY_EXPRESSION */,\r\n        loc,\r\n        elements\r\n    };\r\n}\r\nfunction createObjectExpression(properties, loc = locStub) {\r\n    return {\r\n        type: 15 /* JS_OBJECT_EXPRESSION */,\r\n        loc,\r\n        properties\r\n    };\r\n}\r\nfunction createObjectProperty(key, value) {\r\n    return {\r\n        type: 16 /* JS_PROPERTY */,\r\n        loc: locStub,\r\n        key: isString(key) ? createSimpleExpression(key, true) : key,\r\n        value\r\n    };\r\n}\r\nfunction createSimpleExpression(content, isStatic = false, loc = locStub, constType = 0 /* NOT_CONSTANT */) {\r\n    return {\r\n        type: 4 /* SIMPLE_EXPRESSION */,\r\n        loc,\r\n        content,\r\n        isStatic,\r\n        constType: isStatic ? 3 /* CAN_STRINGIFY */ : constType\r\n    };\r\n}\r\nfunction createInterpolation(content, loc) {\r\n    return {\r\n        type: 5 /* INTERPOLATION */,\r\n        loc,\r\n        content: isString(content)\r\n            ? createSimpleExpression(content, false, loc)\r\n            : content\r\n    };\r\n}\r\nfunction createCompoundExpression(children, loc = locStub) {\r\n    return {\r\n        type: 8 /* COMPOUND_EXPRESSION */,\r\n        loc,\r\n        children\r\n    };\r\n}\r\nfunction createCallExpression(callee, args = [], loc = locStub) {\r\n    return {\r\n        type: 14 /* JS_CALL_EXPRESSION */,\r\n        loc,\r\n        callee,\r\n        arguments: args\r\n    };\r\n}\r\nfunction createFunctionExpression(params, returns = undefined, newline = false, isSlot = false, loc = locStub) {\r\n    return {\r\n        type: 18 /* JS_FUNCTION_EXPRESSION */,\r\n        params,\r\n        returns,\r\n        newline,\r\n        isSlot,\r\n        loc\r\n    };\r\n}\r\nfunction createConditionalExpression(test, consequent, alternate, newline = true) {\r\n    return {\r\n        type: 19 /* JS_CONDITIONAL_EXPRESSION */,\r\n        test,\r\n        consequent,\r\n        alternate,\r\n        newline,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createCacheExpression(index, value, isVNode = false) {\r\n    return {\r\n        type: 20 /* JS_CACHE_EXPRESSION */,\r\n        index,\r\n        value,\r\n        isVNode,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createBlockStatement(body) {\r\n    return {\r\n        type: 21 /* JS_BLOCK_STATEMENT */,\r\n        body,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createTemplateLiteral(elements) {\r\n    return {\r\n        type: 22 /* JS_TEMPLATE_LITERAL */,\r\n        elements,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createIfStatement(test, consequent, alternate) {\r\n    return {\r\n        type: 23 /* JS_IF_STATEMENT */,\r\n        test,\r\n        consequent,\r\n        alternate,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createAssignmentExpression(left, right) {\r\n    return {\r\n        type: 24 /* JS_ASSIGNMENT_EXPRESSION */,\r\n        left,\r\n        right,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createSequenceExpression(expressions) {\r\n    return {\r\n        type: 25 /* JS_SEQUENCE_EXPRESSION */,\r\n        expressions,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createReturnStatement(returns) {\r\n    return {\r\n        type: 26 /* JS_RETURN_STATEMENT */,\r\n        returns,\r\n        loc: locStub\r\n    };\r\n}\n\nconst isStaticExp = (p) => p.type === 4 /* SIMPLE_EXPRESSION */ && p.isStatic;\r\nconst isBuiltInType = (tag, expected) => tag === expected || tag === hyphenate(expected);\r\nfunction isCoreComponent(tag) {\r\n    if (isBuiltInType(tag, 'Teleport')) {\r\n        return TELEPORT;\r\n    }\r\n    else if (isBuiltInType(tag, 'Suspense')) {\r\n        return SUSPENSE;\r\n    }\r\n    else if (isBuiltInType(tag, 'KeepAlive')) {\r\n        return KEEP_ALIVE;\r\n    }\r\n    else if (isBuiltInType(tag, 'BaseTransition')) {\r\n        return BASE_TRANSITION;\r\n    }\r\n}\r\nconst nonIdentifierRE = /^\\d|[^\\$\\w]/;\r\nconst isSimpleIdentifier = (name) => !nonIdentifierRE.test(name);\r\nconst validFirstIdentCharRE = /[A-Za-z_$\\xA0-\\uFFFF]/;\r\nconst validIdentCharRE = /[\\.\\?\\w$\\xA0-\\uFFFF]/;\r\nconst whitespaceRE = /\\s+[.[]\\s*|\\s*[.[]\\s+/g;\r\n/**\r\n * Simple lexer to check if an expression is a member expression. This is\r\n * lax and only checks validity at the root level (i.e. does not validate exps\r\n * inside square brackets), but it's ok since these are only used on template\r\n * expressions and false positives are invalid expressions in the first place.\r\n */\r\nconst isMemberExpressionBrowser = (path) => {\r\n    // remove whitespaces around . or [ first\r\n    path = path.trim().replace(whitespaceRE, s => s.trim());\r\n    let state = 0 /* inMemberExp */;\r\n    let stateStack = [];\r\n    let currentOpenBracketCount = 0;\r\n    let currentOpenParensCount = 0;\r\n    let currentStringType = null;\r\n    for (let i = 0; i < path.length; i++) {\r\n        const char = path.charAt(i);\r\n        switch (state) {\r\n            case 0 /* inMemberExp */:\r\n                if (char === '[') {\r\n                    stateStack.push(state);\r\n                    state = 1 /* inBrackets */;\r\n                    currentOpenBracketCount++;\r\n                }\r\n                else if (char === '(') {\r\n                    stateStack.push(state);\r\n                    state = 2 /* inParens */;\r\n                    currentOpenParensCount++;\r\n                }\r\n                else if (!(i === 0 ? validFirstIdentCharRE : validIdentCharRE).test(char)) {\r\n                    return false;\r\n                }\r\n                break;\r\n            case 1 /* inBrackets */:\r\n                if (char === `'` || char === `\"` || char === '`') {\r\n                    stateStack.push(state);\r\n                    state = 3 /* inString */;\r\n                    currentStringType = char;\r\n                }\r\n                else if (char === `[`) {\r\n                    currentOpenBracketCount++;\r\n                }\r\n                else if (char === `]`) {\r\n                    if (!--currentOpenBracketCount) {\r\n                        state = stateStack.pop();\r\n                    }\r\n                }\r\n                break;\r\n            case 2 /* inParens */:\r\n                if (char === `'` || char === `\"` || char === '`') {\r\n                    stateStack.push(state);\r\n                    state = 3 /* inString */;\r\n                    currentStringType = char;\r\n                }\r\n                else if (char === `(`) {\r\n                    currentOpenParensCount++;\r\n                }\r\n                else if (char === `)`) {\r\n                    // if the exp ends as a call then it should not be considered valid\r\n                    if (i === path.length - 1) {\r\n                        return false;\r\n                    }\r\n                    if (!--currentOpenParensCount) {\r\n                        state = stateStack.pop();\r\n                    }\r\n                }\r\n                break;\r\n            case 3 /* inString */:\r\n                if (char === currentStringType) {\r\n                    state = stateStack.pop();\r\n                    currentStringType = null;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    return !currentOpenBracketCount && !currentOpenParensCount;\r\n};\r\nconst isMemberExpressionNode = (path, context) => {\r\n    path = path.trim();\r\n    if (!validFirstIdentCharRE.test(path[0])) {\r\n        return false;\r\n    }\r\n    try {\r\n        let ret = parseExpression(path, {\r\n            plugins: [...context.expressionPlugins, ...babelParserDefaultPlugins]\r\n        });\r\n        if (ret.type === 'TSAsExpression' || ret.type === 'TSTypeAssertion') {\r\n            ret = ret.expression;\r\n        }\r\n        return (ret.type === 'MemberExpression' ||\r\n            ret.type === 'OptionalMemberExpression' ||\r\n            ret.type === 'Identifier');\r\n    }\r\n    catch (e) {\r\n        return false;\r\n    }\r\n};\r\nconst isMemberExpression = isMemberExpressionBrowser\r\n    ;\r\nfunction getInnerRange(loc, offset, length) {\r\n    const source = loc.source.substr(offset, length);\r\n    const newLoc = {\r\n        source,\r\n        start: advancePositionWithClone(loc.start, loc.source, offset),\r\n        end: loc.end\r\n    };\r\n    if (length != null) {\r\n        newLoc.end = advancePositionWithClone(loc.start, loc.source, offset + length);\r\n    }\r\n    return newLoc;\r\n}\r\nfunction advancePositionWithClone(pos, source, numberOfCharacters = source.length) {\r\n    return advancePositionWithMutation(extend({}, pos), source, numberOfCharacters);\r\n}\r\n// advance by mutation without cloning (for performance reasons), since this\r\n// gets called a lot in the parser\r\nfunction advancePositionWithMutation(pos, source, numberOfCharacters = source.length) {\r\n    let linesCount = 0;\r\n    let lastNewLinePos = -1;\r\n    for (let i = 0; i < numberOfCharacters; i++) {\r\n        if (source.charCodeAt(i) === 10 /* newline char code */) {\r\n            linesCount++;\r\n            lastNewLinePos = i;\r\n        }\r\n    }\r\n    pos.offset += numberOfCharacters;\r\n    pos.line += linesCount;\r\n    pos.column =\r\n        lastNewLinePos === -1\r\n            ? pos.column + numberOfCharacters\r\n            : numberOfCharacters - lastNewLinePos;\r\n    return pos;\r\n}\r\nfunction assert(condition, msg) {\r\n    /* istanbul ignore if */\r\n    if (!condition) {\r\n        throw new Error(msg || `unexpected compiler condition`);\r\n    }\r\n}\r\nfunction findDir(node, name, allowEmpty = false) {\r\n    for (let i = 0; i < node.props.length; i++) {\r\n        const p = node.props[i];\r\n        if (p.type === 7 /* DIRECTIVE */ &&\r\n            (allowEmpty || p.exp) &&\r\n            (isString(name) ? p.name === name : name.test(p.name))) {\r\n            return p;\r\n        }\r\n    }\r\n}\r\nfunction findProp(node, name, dynamicOnly = false, allowEmpty = false) {\r\n    for (let i = 0; i < node.props.length; i++) {\r\n        const p = node.props[i];\r\n        if (p.type === 6 /* ATTRIBUTE */) {\r\n            if (dynamicOnly)\r\n                continue;\r\n            if (p.name === name && (p.value || allowEmpty)) {\r\n                return p;\r\n            }\r\n        }\r\n        else if (p.name === 'bind' &&\r\n            (p.exp || allowEmpty) &&\r\n            isBindKey(p.arg, name)) {\r\n            return p;\r\n        }\r\n    }\r\n}\r\nfunction isBindKey(arg, name) {\r\n    return !!(arg && isStaticExp(arg) && arg.content === name);\r\n}\r\nfunction hasDynamicKeyVBind(node) {\r\n    return node.props.some(p => p.type === 7 /* DIRECTIVE */ &&\r\n        p.name === 'bind' &&\r\n        (!p.arg || // v-bind=\"obj\"\r\n            p.arg.type !== 4 /* SIMPLE_EXPRESSION */ || // v-bind:[_ctx.foo]\r\n            !p.arg.isStatic) // v-bind:[foo]\r\n    );\r\n}\r\nfunction isText(node) {\r\n    return node.type === 5 /* INTERPOLATION */ || node.type === 2 /* TEXT */;\r\n}\r\nfunction isVSlot(p) {\r\n    return p.type === 7 /* DIRECTIVE */ && p.name === 'slot';\r\n}\r\nfunction isTemplateNode(node) {\r\n    return (node.type === 1 /* ELEMENT */ && node.tagType === 3 /* TEMPLATE */);\r\n}\r\nfunction isSlotOutlet(node) {\r\n    return node.type === 1 /* ELEMENT */ && node.tagType === 2 /* SLOT */;\r\n}\r\nfunction getVNodeHelper(ssr, isComponent) {\r\n    return ssr || isComponent ? CREATE_VNODE : CREATE_ELEMENT_VNODE;\r\n}\r\nfunction getVNodeBlockHelper(ssr, isComponent) {\r\n    return ssr || isComponent ? CREATE_BLOCK : CREATE_ELEMENT_BLOCK;\r\n}\r\nconst propsHelperSet = new Set([NORMALIZE_PROPS, GUARD_REACTIVE_PROPS]);\r\nfunction getUnnormalizedProps(props, callPath = []) {\r\n    if (props &&\r\n        !isString(props) &&\r\n        props.type === 14 /* JS_CALL_EXPRESSION */) {\r\n        const callee = props.callee;\r\n        if (!isString(callee) && propsHelperSet.has(callee)) {\r\n            return getUnnormalizedProps(props.arguments[0], callPath.concat(props));\r\n        }\r\n    }\r\n    return [props, callPath];\r\n}\r\nfunction injectProp(node, prop, context) {\r\n    let propsWithInjection;\r\n    const originalProps = node.type === 13 /* VNODE_CALL */ ? node.props : node.arguments[2];\r\n    /**\r\n     * 1. mergeProps(...)\r\n     * 2. toHandlers(...)\r\n     * 3. normalizeProps(...)\r\n     * 4. normalizeProps(guardReactiveProps(...))\r\n     *\r\n     * we need to get the real props before normalization\r\n     */\r\n    let props = originalProps;\r\n    let callPath = [];\r\n    let parentCall;\r\n    if (props &&\r\n        !isString(props) &&\r\n        props.type === 14 /* JS_CALL_EXPRESSION */) {\r\n        const ret = getUnnormalizedProps(props);\r\n        props = ret[0];\r\n        callPath = ret[1];\r\n        parentCall = callPath[callPath.length - 1];\r\n    }\r\n    if (props == null || isString(props)) {\r\n        propsWithInjection = createObjectExpression([prop]);\r\n    }\r\n    else if (props.type === 14 /* JS_CALL_EXPRESSION */) {\r\n        // merged props... add ours\r\n        // only inject key to object literal if it's the first argument so that\r\n        // if doesn't override user provided keys\r\n        const first = props.arguments[0];\r\n        if (!isString(first) && first.type === 15 /* JS_OBJECT_EXPRESSION */) {\r\n            first.properties.unshift(prop);\r\n        }\r\n        else {\r\n            if (props.callee === TO_HANDLERS) {\r\n                // #2366\r\n                propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [\r\n                    createObjectExpression([prop]),\r\n                    props\r\n                ]);\r\n            }\r\n            else {\r\n                props.arguments.unshift(createObjectExpression([prop]));\r\n            }\r\n        }\r\n        !propsWithInjection && (propsWithInjection = props);\r\n    }\r\n    else if (props.type === 15 /* JS_OBJECT_EXPRESSION */) {\r\n        let alreadyExists = false;\r\n        // check existing key to avoid overriding user provided keys\r\n        if (prop.key.type === 4 /* SIMPLE_EXPRESSION */) {\r\n            const propKeyName = prop.key.content;\r\n            alreadyExists = props.properties.some(p => p.key.type === 4 /* SIMPLE_EXPRESSION */ &&\r\n                p.key.content === propKeyName);\r\n        }\r\n        if (!alreadyExists) {\r\n            props.properties.unshift(prop);\r\n        }\r\n        propsWithInjection = props;\r\n    }\r\n    else {\r\n        // single v-bind with expression, return a merged replacement\r\n        propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [\r\n            createObjectExpression([prop]),\r\n            props\r\n        ]);\r\n        // in the case of nested helper call, e.g. `normalizeProps(guardReactiveProps(props))`,\r\n        // it will be rewritten as `normalizeProps(mergeProps({ key: 0 }, props))`,\r\n        // the `guardReactiveProps` will no longer be needed\r\n        if (parentCall && parentCall.callee === GUARD_REACTIVE_PROPS) {\r\n            parentCall = callPath[callPath.length - 2];\r\n        }\r\n    }\r\n    if (node.type === 13 /* VNODE_CALL */) {\r\n        if (parentCall) {\r\n            parentCall.arguments[0] = propsWithInjection;\r\n        }\r\n        else {\r\n            node.props = propsWithInjection;\r\n        }\r\n    }\r\n    else {\r\n        if (parentCall) {\r\n            parentCall.arguments[0] = propsWithInjection;\r\n        }\r\n        else {\r\n            node.arguments[2] = propsWithInjection;\r\n        }\r\n    }\r\n}\r\nfunction toValidAssetId(name, type) {\r\n    // see issue#4422, we need adding identifier on validAssetId if variable `name` has specific character\r\n    return `_${type}_${name.replace(/[^\\w]/g, (searchValue, replaceValue) => {\r\n        return searchValue === '-' ? '_' : name.charCodeAt(replaceValue).toString();\r\n    })}`;\r\n}\r\n// Check if a node contains expressions that reference current context scope ids\r\nfunction hasScopeRef(node, ids) {\r\n    if (!node || Object.keys(ids).length === 0) {\r\n        return false;\r\n    }\r\n    switch (node.type) {\r\n        case 1 /* ELEMENT */:\r\n            for (let i = 0; i < node.props.length; i++) {\r\n                const p = node.props[i];\r\n                if (p.type === 7 /* DIRECTIVE */ &&\r\n                    (hasScopeRef(p.arg, ids) || hasScopeRef(p.exp, ids))) {\r\n                    return true;\r\n                }\r\n            }\r\n            return node.children.some(c => hasScopeRef(c, ids));\r\n        case 11 /* FOR */:\r\n            if (hasScopeRef(node.source, ids)) {\r\n                return true;\r\n            }\r\n            return node.children.some(c => hasScopeRef(c, ids));\r\n        case 9 /* IF */:\r\n            return node.branches.some(b => hasScopeRef(b, ids));\r\n        case 10 /* IF_BRANCH */:\r\n            if (hasScopeRef(node.condition, ids)) {\r\n                return true;\r\n            }\r\n            return node.children.some(c => hasScopeRef(c, ids));\r\n        case 4 /* SIMPLE_EXPRESSION */:\r\n            return (!node.isStatic &&\r\n                isSimpleIdentifier(node.content) &&\r\n                !!ids[node.content]);\r\n        case 8 /* COMPOUND_EXPRESSION */:\r\n            return node.children.some(c => isObject(c) && hasScopeRef(c, ids));\r\n        case 5 /* INTERPOLATION */:\r\n        case 12 /* TEXT_CALL */:\r\n            return hasScopeRef(node.content, ids);\r\n        case 2 /* TEXT */:\r\n        case 3 /* COMMENT */:\r\n            return false;\r\n        default:\r\n            if ((process.env.NODE_ENV !== 'production')) ;\r\n            return false;\r\n    }\r\n}\r\nfunction getMemoedVNodeCall(node) {\r\n    if (node.type === 14 /* JS_CALL_EXPRESSION */ && node.callee === WITH_MEMO) {\r\n        return node.arguments[1].returns;\r\n    }\r\n    else {\r\n        return node;\r\n    }\r\n}\r\nfunction makeBlock(node, { helper, removeHelper, inSSR }) {\r\n    if (!node.isBlock) {\r\n        node.isBlock = true;\r\n        removeHelper(getVNodeHelper(inSSR, node.isComponent));\r\n        helper(OPEN_BLOCK);\r\n        helper(getVNodeBlockHelper(inSSR, node.isComponent));\r\n    }\r\n}\n\nconst deprecationData = {\r\n    [\"COMPILER_IS_ON_ELEMENT\" /* COMPILER_IS_ON_ELEMENT */]: {\r\n        message: `Platform-native elements with \"is\" prop will no longer be ` +\r\n            `treated as components in Vue 3 unless the \"is\" value is explicitly ` +\r\n            `prefixed with \"vue:\".`,\r\n        link: `https://v3.vuejs.org/guide/migration/custom-elements-interop.html`\r\n    },\r\n    [\"COMPILER_V_BIND_SYNC\" /* COMPILER_V_BIND_SYNC */]: {\r\n        message: key => `.sync modifier for v-bind has been removed. Use v-model with ` +\r\n            `argument instead. \\`v-bind:${key}.sync\\` should be changed to ` +\r\n            `\\`v-model:${key}\\`.`,\r\n        link: `https://v3.vuejs.org/guide/migration/v-model.html`\r\n    },\r\n    [\"COMPILER_V_BIND_PROP\" /* COMPILER_V_BIND_PROP */]: {\r\n        message: `.prop modifier for v-bind has been removed and no longer necessary. ` +\r\n            `Vue 3 will automatically set a binding as DOM property when appropriate.`\r\n    },\r\n    [\"COMPILER_V_BIND_OBJECT_ORDER\" /* COMPILER_V_BIND_OBJECT_ORDER */]: {\r\n        message: `v-bind=\"obj\" usage is now order sensitive and behaves like JavaScript ` +\r\n            `object spread: it will now overwrite an existing non-mergeable attribute ` +\r\n            `that appears before v-bind in the case of conflict. ` +\r\n            `To retain 2.x behavior, move v-bind to make it the first attribute. ` +\r\n            `You can also suppress this warning if the usage is intended.`,\r\n        link: `https://v3.vuejs.org/guide/migration/v-bind.html`\r\n    },\r\n    [\"COMPILER_V_ON_NATIVE\" /* COMPILER_V_ON_NATIVE */]: {\r\n        message: `.native modifier for v-on has been removed as is no longer necessary.`,\r\n        link: `https://v3.vuejs.org/guide/migration/v-on-native-modifier-removed.html`\r\n    },\r\n    [\"COMPILER_V_IF_V_FOR_PRECEDENCE\" /* COMPILER_V_IF_V_FOR_PRECEDENCE */]: {\r\n        message: `v-if / v-for precedence when used on the same element has changed ` +\r\n            `in Vue 3: v-if now takes higher precedence and will no longer have ` +\r\n            `access to v-for scope variables. It is best to avoid the ambiguity ` +\r\n            `with <template> tags or use a computed property that filters v-for ` +\r\n            `data source.`,\r\n        link: `https://v3.vuejs.org/guide/migration/v-if-v-for.html`\r\n    },\r\n    [\"COMPILER_V_FOR_REF\" /* COMPILER_V_FOR_REF */]: {\r\n        message: `Ref usage on v-for no longer creates array ref values in Vue 3. ` +\r\n            `Consider using function refs or refactor to avoid ref usage altogether.`,\r\n        link: `https://v3.vuejs.org/guide/migration/array-refs.html`\r\n    },\r\n    [\"COMPILER_NATIVE_TEMPLATE\" /* COMPILER_NATIVE_TEMPLATE */]: {\r\n        message: `<template> with no special directives will render as a native template ` +\r\n            `element instead of its inner content in Vue 3.`\r\n    },\r\n    [\"COMPILER_INLINE_TEMPLATE\" /* COMPILER_INLINE_TEMPLATE */]: {\r\n        message: `\"inline-template\" has been removed in Vue 3.`,\r\n        link: `https://v3.vuejs.org/guide/migration/inline-template-attribute.html`\r\n    },\r\n    [\"COMPILER_FILTER\" /* COMPILER_FILTERS */]: {\r\n        message: `filters have been removed in Vue 3. ` +\r\n            `The \"|\" symbol will be treated as native JavaScript bitwise OR operator. ` +\r\n            `Use method calls or computed properties instead.`,\r\n        link: `https://v3.vuejs.org/guide/migration/filters.html`\r\n    }\r\n};\r\nfunction getCompatValue(key, context) {\r\n    const config = context.options\r\n        ? context.options.compatConfig\r\n        : context.compatConfig;\r\n    const value = config && config[key];\r\n    if (key === 'MODE') {\r\n        return value || 3; // compiler defaults to v3 behavior\r\n    }\r\n    else {\r\n        return value;\r\n    }\r\n}\r\nfunction isCompatEnabled(key, context) {\r\n    const mode = getCompatValue('MODE', context);\r\n    const value = getCompatValue(key, context);\r\n    // in v3 mode, only enable if explicitly set to true\r\n    // otherwise enable for any non-false value\r\n    return mode === 3 ? value === true : value !== false;\r\n}\r\nfunction checkCompatEnabled(key, context, loc, ...args) {\r\n    const enabled = isCompatEnabled(key, context);\r\n    if ((process.env.NODE_ENV !== 'production') && enabled) {\r\n        warnDeprecation(key, context, loc, ...args);\r\n    }\r\n    return enabled;\r\n}\r\nfunction warnDeprecation(key, context, loc, ...args) {\r\n    const val = getCompatValue(key, context);\r\n    if (val === 'suppress-warning') {\r\n        return;\r\n    }\r\n    const { message, link } = deprecationData[key];\r\n    const msg = `(deprecation ${key}) ${typeof message === 'function' ? message(...args) : message}${link ? `\\n  Details: ${link}` : ``}`;\r\n    const err = new SyntaxError(msg);\r\n    err.code = key;\r\n    if (loc)\r\n        err.loc = loc;\r\n    context.onWarn(err);\r\n}\n\n// The default decoder only provides escapes for characters reserved as part of\r\n// the template syntax, and is only used if the custom renderer did not provide\r\n// a platform-specific decoder.\r\nconst decodeRE = /&(gt|lt|amp|apos|quot);/g;\r\nconst decodeMap = {\r\n    gt: '>',\r\n    lt: '<',\r\n    amp: '&',\r\n    apos: \"'\",\r\n    quot: '\"'\r\n};\r\nconst defaultParserOptions = {\r\n    delimiters: [`{{`, `}}`],\r\n    getNamespace: () => 0 /* HTML */,\r\n    getTextMode: () => 0 /* DATA */,\r\n    isVoidTag: NO,\r\n    isPreTag: NO,\r\n    isCustomElement: NO,\r\n    decodeEntities: (rawText) => rawText.replace(decodeRE, (_, p1) => decodeMap[p1]),\r\n    onError: defaultOnError,\r\n    onWarn: defaultOnWarn,\r\n    comments: (process.env.NODE_ENV !== 'production')\r\n};\r\nfunction baseParse(content, options = {}) {\r\n    const context = createParserContext(content, options);\r\n    const start = getCursor(context);\r\n    return createRoot(parseChildren(context, 0 /* DATA */, []), getSelection(context, start));\r\n}\r\nfunction createParserContext(content, rawOptions) {\r\n    const options = extend({}, defaultParserOptions);\r\n    let key;\r\n    for (key in rawOptions) {\r\n        // @ts-ignore\r\n        options[key] =\r\n            rawOptions[key] === undefined\r\n                ? defaultParserOptions[key]\r\n                : rawOptions[key];\r\n    }\r\n    return {\r\n        options,\r\n        column: 1,\r\n        line: 1,\r\n        offset: 0,\r\n        originalSource: content,\r\n        source: content,\r\n        inPre: false,\r\n        inVPre: false,\r\n        onWarn: options.onWarn\r\n    };\r\n}\r\nfunction parseChildren(context, mode, ancestors) {\r\n    const parent = last(ancestors);\r\n    const ns = parent ? parent.ns : 0 /* HTML */;\r\n    const nodes = [];\r\n    while (!isEnd(context, mode, ancestors)) {\r\n        const s = context.source;\r\n        let node = undefined;\r\n        if (mode === 0 /* DATA */ || mode === 1 /* RCDATA */) {\r\n            if (!context.inVPre && startsWith(s, context.options.delimiters[0])) {\r\n                // '{{'\r\n                node = parseInterpolation(context, mode);\r\n            }\r\n            else if (mode === 0 /* DATA */ && s[0] === '<') {\r\n                // https://html.spec.whatwg.org/multipage/parsing.html#tag-open-state\r\n                if (s.length === 1) {\r\n                    emitError(context, 5 /* EOF_BEFORE_TAG_NAME */, 1);\r\n                }\r\n                else if (s[1] === '!') {\r\n                    // https://html.spec.whatwg.org/multipage/parsing.html#markup-declaration-open-state\r\n                    if (startsWith(s, '<!--')) {\r\n                        node = parseComment(context);\r\n                    }\r\n                    else if (startsWith(s, '<!DOCTYPE')) {\r\n                        // Ignore DOCTYPE by a limitation.\r\n                        node = parseBogusComment(context);\r\n                    }\r\n                    else if (startsWith(s, '<![CDATA[')) {\r\n                        if (ns !== 0 /* HTML */) {\r\n                            node = parseCDATA(context, ancestors);\r\n                        }\r\n                        else {\r\n                            emitError(context, 1 /* CDATA_IN_HTML_CONTENT */);\r\n                            node = parseBogusComment(context);\r\n                        }\r\n                    }\r\n                    else {\r\n                        emitError(context, 11 /* INCORRECTLY_OPENED_COMMENT */);\r\n                        node = parseBogusComment(context);\r\n                    }\r\n                }\r\n                else if (s[1] === '/') {\r\n                    // https://html.spec.whatwg.org/multipage/parsing.html#end-tag-open-state\r\n                    if (s.length === 2) {\r\n                        emitError(context, 5 /* EOF_BEFORE_TAG_NAME */, 2);\r\n                    }\r\n                    else if (s[2] === '>') {\r\n                        emitError(context, 14 /* MISSING_END_TAG_NAME */, 2);\r\n                        advanceBy(context, 3);\r\n                        continue;\r\n                    }\r\n                    else if (/[a-z]/i.test(s[2])) {\r\n                        emitError(context, 23 /* X_INVALID_END_TAG */);\r\n                        parseTag(context, 1 /* End */, parent);\r\n                        continue;\r\n                    }\r\n                    else {\r\n                        emitError(context, 12 /* INVALID_FIRST_CHARACTER_OF_TAG_NAME */, 2);\r\n                        node = parseBogusComment(context);\r\n                    }\r\n                }\r\n                else if (/[a-z]/i.test(s[1])) {\r\n                    node = parseElement(context, ancestors);\r\n                    // 2.x <template> with no directive compat\r\n                    if (isCompatEnabled(\"COMPILER_NATIVE_TEMPLATE\" /* COMPILER_NATIVE_TEMPLATE */, context) &&\r\n                        node &&\r\n                        node.tag === 'template' &&\r\n                        !node.props.some(p => p.type === 7 /* DIRECTIVE */ &&\r\n                            isSpecialTemplateDirective(p.name))) {\r\n                        (process.env.NODE_ENV !== 'production') &&\r\n                            warnDeprecation(\"COMPILER_NATIVE_TEMPLATE\" /* COMPILER_NATIVE_TEMPLATE */, context, node.loc);\r\n                        node = node.children;\r\n                    }\r\n                }\r\n                else if (s[1] === '?') {\r\n                    emitError(context, 21 /* UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME */, 1);\r\n                    node = parseBogusComment(context);\r\n                }\r\n                else {\r\n                    emitError(context, 12 /* INVALID_FIRST_CHARACTER_OF_TAG_NAME */, 1);\r\n                }\r\n            }\r\n        }\r\n        if (!node) {\r\n            node = parseText(context, mode);\r\n        }\r\n        if (isArray(node)) {\r\n            for (let i = 0; i < node.length; i++) {\r\n                pushNode(nodes, node[i]);\r\n            }\r\n        }\r\n        else {\r\n            pushNode(nodes, node);\r\n        }\r\n    }\r\n    // Whitespace handling strategy like v2\r\n    let removedWhitespace = false;\r\n    if (mode !== 2 /* RAWTEXT */ && mode !== 1 /* RCDATA */) {\r\n        const shouldCondense = context.options.whitespace !== 'preserve';\r\n        for (let i = 0; i < nodes.length; i++) {\r\n            const node = nodes[i];\r\n            if (!context.inPre && node.type === 2 /* TEXT */) {\r\n                if (!/[^\\t\\r\\n\\f ]/.test(node.content)) {\r\n                    const prev = nodes[i - 1];\r\n                    const next = nodes[i + 1];\r\n                    // Remove if:\r\n                    // - the whitespace is the first or last node, or:\r\n                    // - (condense mode) the whitespace is adjacent to a comment, or:\r\n                    // - (condense mode) the whitespace is between two elements AND contains newline\r\n                    if (!prev ||\r\n                        !next ||\r\n                        (shouldCondense &&\r\n                            (prev.type === 3 /* COMMENT */ ||\r\n                                next.type === 3 /* COMMENT */ ||\r\n                                (prev.type === 1 /* ELEMENT */ &&\r\n                                    next.type === 1 /* ELEMENT */ &&\r\n                                    /[\\r\\n]/.test(node.content))))) {\r\n                        removedWhitespace = true;\r\n                        nodes[i] = null;\r\n                    }\r\n                    else {\r\n                        // Otherwise, the whitespace is condensed into a single space\r\n                        node.content = ' ';\r\n                    }\r\n                }\r\n                else if (shouldCondense) {\r\n                    // in condense mode, consecutive whitespaces in text are condensed\r\n                    // down to a single space.\r\n                    node.content = node.content.replace(/[\\t\\r\\n\\f ]+/g, ' ');\r\n                }\r\n            }\r\n            // Remove comment nodes if desired by configuration.\r\n            else if (node.type === 3 /* COMMENT */ && !context.options.comments) {\r\n                removedWhitespace = true;\r\n                nodes[i] = null;\r\n            }\r\n        }\r\n        if (context.inPre && parent && context.options.isPreTag(parent.tag)) {\r\n            // remove leading newline per html spec\r\n            // https://html.spec.whatwg.org/multipage/grouping-content.html#the-pre-element\r\n            const first = nodes[0];\r\n            if (first && first.type === 2 /* TEXT */) {\r\n                first.content = first.content.replace(/^\\r?\\n/, '');\r\n            }\r\n        }\r\n    }\r\n    return removedWhitespace ? nodes.filter(Boolean) : nodes;\r\n}\r\nfunction pushNode(nodes, node) {\r\n    if (node.type === 2 /* TEXT */) {\r\n        const prev = last(nodes);\r\n        // Merge if both this and the previous node are text and those are\r\n        // consecutive. This happens for cases like \"a < b\".\r\n        if (prev &&\r\n            prev.type === 2 /* TEXT */ &&\r\n            prev.loc.end.offset === node.loc.start.offset) {\r\n            prev.content += node.content;\r\n            prev.loc.end = node.loc.end;\r\n            prev.loc.source += node.loc.source;\r\n            return;\r\n        }\r\n    }\r\n    nodes.push(node);\r\n}\r\nfunction parseCDATA(context, ancestors) {\r\n    advanceBy(context, 9);\r\n    const nodes = parseChildren(context, 3 /* CDATA */, ancestors);\r\n    if (context.source.length === 0) {\r\n        emitError(context, 6 /* EOF_IN_CDATA */);\r\n    }\r\n    else {\r\n        advanceBy(context, 3);\r\n    }\r\n    return nodes;\r\n}\r\nfunction parseComment(context) {\r\n    const start = getCursor(context);\r\n    let content;\r\n    // Regular comment.\r\n    const match = /--(\\!)?>/.exec(context.source);\r\n    if (!match) {\r\n        content = context.source.slice(4);\r\n        advanceBy(context, context.source.length);\r\n        emitError(context, 7 /* EOF_IN_COMMENT */);\r\n    }\r\n    else {\r\n        if (match.index <= 3) {\r\n            emitError(context, 0 /* ABRUPT_CLOSING_OF_EMPTY_COMMENT */);\r\n        }\r\n        if (match[1]) {\r\n            emitError(context, 10 /* INCORRECTLY_CLOSED_COMMENT */);\r\n        }\r\n        content = context.source.slice(4, match.index);\r\n        // Advancing with reporting nested comments.\r\n        const s = context.source.slice(0, match.index);\r\n        let prevIndex = 1, nestedIndex = 0;\r\n        while ((nestedIndex = s.indexOf('<!--', prevIndex)) !== -1) {\r\n            advanceBy(context, nestedIndex - prevIndex + 1);\r\n            if (nestedIndex + 4 < s.length) {\r\n                emitError(context, 16 /* NESTED_COMMENT */);\r\n            }\r\n            prevIndex = nestedIndex + 1;\r\n        }\r\n        advanceBy(context, match.index + match[0].length - prevIndex + 1);\r\n    }\r\n    return {\r\n        type: 3 /* COMMENT */,\r\n        content,\r\n        loc: getSelection(context, start)\r\n    };\r\n}\r\nfunction parseBogusComment(context) {\r\n    const start = getCursor(context);\r\n    const contentStart = context.source[1] === '?' ? 1 : 2;\r\n    let content;\r\n    const closeIndex = context.source.indexOf('>');\r\n    if (closeIndex === -1) {\r\n        content = context.source.slice(contentStart);\r\n        advanceBy(context, context.source.length);\r\n    }\r\n    else {\r\n        content = context.source.slice(contentStart, closeIndex);\r\n        advanceBy(context, closeIndex + 1);\r\n    }\r\n    return {\r\n        type: 3 /* COMMENT */,\r\n        content,\r\n        loc: getSelection(context, start)\r\n    };\r\n}\r\nfunction parseElement(context, ancestors) {\r\n    // Start tag.\r\n    const wasInPre = context.inPre;\r\n    const wasInVPre = context.inVPre;\r\n    const parent = last(ancestors);\r\n    const element = parseTag(context, 0 /* Start */, parent);\r\n    const isPreBoundary = context.inPre && !wasInPre;\r\n    const isVPreBoundary = context.inVPre && !wasInVPre;\r\n    if (element.isSelfClosing || context.options.isVoidTag(element.tag)) {\r\n        // #4030 self-closing <pre> tag\r\n        if (isPreBoundary) {\r\n            context.inPre = false;\r\n        }\r\n        if (isVPreBoundary) {\r\n            context.inVPre = false;\r\n        }\r\n        return element;\r\n    }\r\n    // Children.\r\n    ancestors.push(element);\r\n    const mode = context.options.getTextMode(element, parent);\r\n    const children = parseChildren(context, mode, ancestors);\r\n    ancestors.pop();\r\n    // 2.x inline-template compat\r\n    {\r\n        const inlineTemplateProp = element.props.find(p => p.type === 6 /* ATTRIBUTE */ && p.name === 'inline-template');\r\n        if (inlineTemplateProp &&\r\n            checkCompatEnabled(\"COMPILER_INLINE_TEMPLATE\" /* COMPILER_INLINE_TEMPLATE */, context, inlineTemplateProp.loc)) {\r\n            const loc = getSelection(context, element.loc.end);\r\n            inlineTemplateProp.value = {\r\n                type: 2 /* TEXT */,\r\n                content: loc.source,\r\n                loc\r\n            };\r\n        }\r\n    }\r\n    element.children = children;\r\n    // End tag.\r\n    if (startsWithEndTagOpen(context.source, element.tag)) {\r\n        parseTag(context, 1 /* End */, parent);\r\n    }\r\n    else {\r\n        emitError(context, 24 /* X_MISSING_END_TAG */, 0, element.loc.start);\r\n        if (context.source.length === 0 && element.tag.toLowerCase() === 'script') {\r\n            const first = children[0];\r\n            if (first && startsWith(first.loc.source, '<!--')) {\r\n                emitError(context, 8 /* EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT */);\r\n            }\r\n        }\r\n    }\r\n    element.loc = getSelection(context, element.loc.start);\r\n    if (isPreBoundary) {\r\n        context.inPre = false;\r\n    }\r\n    if (isVPreBoundary) {\r\n        context.inVPre = false;\r\n    }\r\n    return element;\r\n}\r\nconst isSpecialTemplateDirective = /*#__PURE__*/ makeMap(`if,else,else-if,for,slot`);\r\nfunction parseTag(context, type, parent) {\r\n    // Tag open.\r\n    const start = getCursor(context);\r\n    const match = /^<\\/?([a-z][^\\t\\r\\n\\f />]*)/i.exec(context.source);\r\n    const tag = match[1];\r\n    const ns = context.options.getNamespace(tag, parent);\r\n    advanceBy(context, match[0].length);\r\n    advanceSpaces(context);\r\n    // save current state in case we need to re-parse attributes with v-pre\r\n    const cursor = getCursor(context);\r\n    const currentSource = context.source;\r\n    // check <pre> tag\r\n    if (context.options.isPreTag(tag)) {\r\n        context.inPre = true;\r\n    }\r\n    // Attributes.\r\n    let props = parseAttributes(context, type);\r\n    // check v-pre\r\n    if (type === 0 /* Start */ &&\r\n        !context.inVPre &&\r\n        props.some(p => p.type === 7 /* DIRECTIVE */ && p.name === 'pre')) {\r\n        context.inVPre = true;\r\n        // reset context\r\n        extend(context, cursor);\r\n        context.source = currentSource;\r\n        // re-parse attrs and filter out v-pre itself\r\n        props = parseAttributes(context, type).filter(p => p.name !== 'v-pre');\r\n    }\r\n    // Tag close.\r\n    let isSelfClosing = false;\r\n    if (context.source.length === 0) {\r\n        emitError(context, 9 /* EOF_IN_TAG */);\r\n    }\r\n    else {\r\n        isSelfClosing = startsWith(context.source, '/>');\r\n        if (type === 1 /* End */ && isSelfClosing) {\r\n            emitError(context, 4 /* END_TAG_WITH_TRAILING_SOLIDUS */);\r\n        }\r\n        advanceBy(context, isSelfClosing ? 2 : 1);\r\n    }\r\n    if (type === 1 /* End */) {\r\n        return;\r\n    }\r\n    // 2.x deprecation checks\r\n    if ((process.env.NODE_ENV !== 'production') &&\r\n        isCompatEnabled(\"COMPILER_V_IF_V_FOR_PRECEDENCE\" /* COMPILER_V_IF_V_FOR_PRECEDENCE */, context)) {\r\n        let hasIf = false;\r\n        let hasFor = false;\r\n        for (let i = 0; i < props.length; i++) {\r\n            const p = props[i];\r\n            if (p.type === 7 /* DIRECTIVE */) {\r\n                if (p.name === 'if') {\r\n                    hasIf = true;\r\n                }\r\n                else if (p.name === 'for') {\r\n                    hasFor = true;\r\n                }\r\n            }\r\n            if (hasIf && hasFor) {\r\n                warnDeprecation(\"COMPILER_V_IF_V_FOR_PRECEDENCE\" /* COMPILER_V_IF_V_FOR_PRECEDENCE */, context, getSelection(context, start));\r\n            }\r\n        }\r\n    }\r\n    let tagType = 0 /* ELEMENT */;\r\n    if (!context.inVPre) {\r\n        if (tag === 'slot') {\r\n            tagType = 2 /* SLOT */;\r\n        }\r\n        else if (tag === 'template') {\r\n            if (props.some(p => p.type === 7 /* DIRECTIVE */ && isSpecialTemplateDirective(p.name))) {\r\n                tagType = 3 /* TEMPLATE */;\r\n            }\r\n        }\r\n        else if (isComponent(tag, props, context)) {\r\n            tagType = 1 /* COMPONENT */;\r\n        }\r\n    }\r\n    return {\r\n        type: 1 /* ELEMENT */,\r\n        ns,\r\n        tag,\r\n        tagType,\r\n        props,\r\n        isSelfClosing,\r\n        children: [],\r\n        loc: getSelection(context, start),\r\n        codegenNode: undefined // to be created during transform phase\r\n    };\r\n}\r\nfunction isComponent(tag, props, context) {\r\n    const options = context.options;\r\n    if (options.isCustomElement(tag)) {\r\n        return false;\r\n    }\r\n    if (tag === 'component' ||\r\n        /^[A-Z]/.test(tag) ||\r\n        isCoreComponent(tag) ||\r\n        (options.isBuiltInComponent && options.isBuiltInComponent(tag)) ||\r\n        (options.isNativeTag && !options.isNativeTag(tag))) {\r\n        return true;\r\n    }\r\n    // at this point the tag should be a native tag, but check for potential \"is\"\r\n    // casting\r\n    for (let i = 0; i < props.length; i++) {\r\n        const p = props[i];\r\n        if (p.type === 6 /* ATTRIBUTE */) {\r\n            if (p.name === 'is' && p.value) {\r\n                if (p.value.content.startsWith('vue:')) {\r\n                    return true;\r\n                }\r\n                else if (checkCompatEnabled(\"COMPILER_IS_ON_ELEMENT\" /* COMPILER_IS_ON_ELEMENT */, context, p.loc)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            // directive\r\n            // v-is (TODO Deprecate)\r\n            if (p.name === 'is') {\r\n                return true;\r\n            }\r\n            else if (\r\n            // :is on plain element - only treat as component in compat mode\r\n            p.name === 'bind' &&\r\n                isBindKey(p.arg, 'is') &&\r\n                true &&\r\n                checkCompatEnabled(\"COMPILER_IS_ON_ELEMENT\" /* COMPILER_IS_ON_ELEMENT */, context, p.loc)) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction parseAttributes(context, type) {\r\n    const props = [];\r\n    const attributeNames = new Set();\r\n    while (context.source.length > 0 &&\r\n        !startsWith(context.source, '>') &&\r\n        !startsWith(context.source, '/>')) {\r\n        if (startsWith(context.source, '/')) {\r\n            emitError(context, 22 /* UNEXPECTED_SOLIDUS_IN_TAG */);\r\n            advanceBy(context, 1);\r\n            advanceSpaces(context);\r\n            continue;\r\n        }\r\n        if (type === 1 /* End */) {\r\n            emitError(context, 3 /* END_TAG_WITH_ATTRIBUTES */);\r\n        }\r\n        const attr = parseAttribute(context, attributeNames);\r\n        // Trim whitespace between class\r\n        // https://github.com/vuejs/vue-next/issues/4251\r\n        if (attr.type === 6 /* ATTRIBUTE */ &&\r\n            attr.value &&\r\n            attr.name === 'class') {\r\n            attr.value.content = attr.value.content.replace(/\\s+/g, ' ').trim();\r\n        }\r\n        if (type === 0 /* Start */) {\r\n            props.push(attr);\r\n        }\r\n        if (/^[^\\t\\r\\n\\f />]/.test(context.source)) {\r\n            emitError(context, 15 /* MISSING_WHITESPACE_BETWEEN_ATTRIBUTES */);\r\n        }\r\n        advanceSpaces(context);\r\n    }\r\n    return props;\r\n}\r\nfunction parseAttribute(context, nameSet) {\r\n    // Name.\r\n    const start = getCursor(context);\r\n    const match = /^[^\\t\\r\\n\\f />][^\\t\\r\\n\\f />=]*/.exec(context.source);\r\n    const name = match[0];\r\n    if (nameSet.has(name)) {\r\n        emitError(context, 2 /* DUPLICATE_ATTRIBUTE */);\r\n    }\r\n    nameSet.add(name);\r\n    if (name[0] === '=') {\r\n        emitError(context, 19 /* UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME */);\r\n    }\r\n    {\r\n        const pattern = /[\"'<]/g;\r\n        let m;\r\n        while ((m = pattern.exec(name))) {\r\n            emitError(context, 17 /* UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME */, m.index);\r\n        }\r\n    }\r\n    advanceBy(context, name.length);\r\n    // Value\r\n    let value = undefined;\r\n    if (/^[\\t\\r\\n\\f ]*=/.test(context.source)) {\r\n        advanceSpaces(context);\r\n        advanceBy(context, 1);\r\n        advanceSpaces(context);\r\n        value = parseAttributeValue(context);\r\n        if (!value) {\r\n            emitError(context, 13 /* MISSING_ATTRIBUTE_VALUE */);\r\n        }\r\n    }\r\n    const loc = getSelection(context, start);\r\n    if (!context.inVPre && /^(v-[A-Za-z0-9-]|:|\\.|@|#)/.test(name)) {\r\n        const match = /(?:^v-([a-z0-9-]+))?(?:(?::|^\\.|^@|^#)(\\[[^\\]]+\\]|[^\\.]+))?(.+)?$/i.exec(name);\r\n        let isPropShorthand = startsWith(name, '.');\r\n        let dirName = match[1] ||\r\n            (isPropShorthand || startsWith(name, ':')\r\n                ? 'bind'\r\n                : startsWith(name, '@')\r\n                    ? 'on'\r\n                    : 'slot');\r\n        let arg;\r\n        if (match[2]) {\r\n            const isSlot = dirName === 'slot';\r\n            const startOffset = name.lastIndexOf(match[2]);\r\n            const loc = getSelection(context, getNewPosition(context, start, startOffset), getNewPosition(context, start, startOffset + match[2].length + ((isSlot && match[3]) || '').length));\r\n            let content = match[2];\r\n            let isStatic = true;\r\n            if (content.startsWith('[')) {\r\n                isStatic = false;\r\n                if (!content.endsWith(']')) {\r\n                    emitError(context, 27 /* X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END */);\r\n                    content = content.substr(1);\r\n                }\r\n                else {\r\n                    content = content.substr(1, content.length - 2);\r\n                }\r\n            }\r\n            else if (isSlot) {\r\n                // #1241 special case for v-slot: vuetify relies extensively on slot\r\n                // names containing dots. v-slot doesn't have any modifiers and Vue 2.x\r\n                // supports such usage so we are keeping it consistent with 2.x.\r\n                content += match[3] || '';\r\n            }\r\n            arg = {\r\n                type: 4 /* SIMPLE_EXPRESSION */,\r\n                content,\r\n                isStatic,\r\n                constType: isStatic\r\n                    ? 3 /* CAN_STRINGIFY */\r\n                    : 0 /* NOT_CONSTANT */,\r\n                loc\r\n            };\r\n        }\r\n        if (value && value.isQuoted) {\r\n            const valueLoc = value.loc;\r\n            valueLoc.start.offset++;\r\n            valueLoc.start.column++;\r\n            valueLoc.end = advancePositionWithClone(valueLoc.start, value.content);\r\n            valueLoc.source = valueLoc.source.slice(1, -1);\r\n        }\r\n        const modifiers = match[3] ? match[3].substr(1).split('.') : [];\r\n        if (isPropShorthand)\r\n            modifiers.push('prop');\r\n        // 2.x compat v-bind:foo.sync -> v-model:foo\r\n        if (dirName === 'bind' && arg) {\r\n            if (modifiers.includes('sync') &&\r\n                checkCompatEnabled(\"COMPILER_V_BIND_SYNC\" /* COMPILER_V_BIND_SYNC */, context, loc, arg.loc.source)) {\r\n                dirName = 'model';\r\n                modifiers.splice(modifiers.indexOf('sync'), 1);\r\n            }\r\n            if ((process.env.NODE_ENV !== 'production') && modifiers.includes('prop')) {\r\n                checkCompatEnabled(\"COMPILER_V_BIND_PROP\" /* COMPILER_V_BIND_PROP */, context, loc);\r\n            }\r\n        }\r\n        return {\r\n            type: 7 /* DIRECTIVE */,\r\n            name: dirName,\r\n            exp: value && {\r\n                type: 4 /* SIMPLE_EXPRESSION */,\r\n                content: value.content,\r\n                isStatic: false,\r\n                // Treat as non-constant by default. This can be potentially set to\r\n                // other values by `transformExpression` to make it eligible for hoisting.\r\n                constType: 0 /* NOT_CONSTANT */,\r\n                loc: value.loc\r\n            },\r\n            arg,\r\n            modifiers,\r\n            loc\r\n        };\r\n    }\r\n    // missing directive name or illegal directive name\r\n    if (!context.inVPre && startsWith(name, 'v-')) {\r\n        emitError(context, 26 /* X_MISSING_DIRECTIVE_NAME */);\r\n    }\r\n    return {\r\n        type: 6 /* ATTRIBUTE */,\r\n        name,\r\n        value: value && {\r\n            type: 2 /* TEXT */,\r\n            content: value.content,\r\n            loc: value.loc\r\n        },\r\n        loc\r\n    };\r\n}\r\nfunction parseAttributeValue(context) {\r\n    const start = getCursor(context);\r\n    let content;\r\n    const quote = context.source[0];\r\n    const isQuoted = quote === `\"` || quote === `'`;\r\n    if (isQuoted) {\r\n        // Quoted value.\r\n        advanceBy(context, 1);\r\n        const endIndex = context.source.indexOf(quote);\r\n        if (endIndex === -1) {\r\n            content = parseTextData(context, context.source.length, 4 /* ATTRIBUTE_VALUE */);\r\n        }\r\n        else {\r\n            content = parseTextData(context, endIndex, 4 /* ATTRIBUTE_VALUE */);\r\n            advanceBy(context, 1);\r\n        }\r\n    }\r\n    else {\r\n        // Unquoted\r\n        const match = /^[^\\t\\r\\n\\f >]+/.exec(context.source);\r\n        if (!match) {\r\n            return undefined;\r\n        }\r\n        const unexpectedChars = /[\"'<=`]/g;\r\n        let m;\r\n        while ((m = unexpectedChars.exec(match[0]))) {\r\n            emitError(context, 18 /* UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE */, m.index);\r\n        }\r\n        content = parseTextData(context, match[0].length, 4 /* ATTRIBUTE_VALUE */);\r\n    }\r\n    return { content, isQuoted, loc: getSelection(context, start) };\r\n}\r\nfunction parseInterpolation(context, mode) {\r\n    const [open, close] = context.options.delimiters;\r\n    const closeIndex = context.source.indexOf(close, open.length);\r\n    if (closeIndex === -1) {\r\n        emitError(context, 25 /* X_MISSING_INTERPOLATION_END */);\r\n        return undefined;\r\n    }\r\n    const start = getCursor(context);\r\n    advanceBy(context, open.length);\r\n    const innerStart = getCursor(context);\r\n    const innerEnd = getCursor(context);\r\n    const rawContentLength = closeIndex - open.length;\r\n    const rawContent = context.source.slice(0, rawContentLength);\r\n    const preTrimContent = parseTextData(context, rawContentLength, mode);\r\n    const content = preTrimContent.trim();\r\n    const startOffset = preTrimContent.indexOf(content);\r\n    if (startOffset > 0) {\r\n        advancePositionWithMutation(innerStart, rawContent, startOffset);\r\n    }\r\n    const endOffset = rawContentLength - (preTrimContent.length - content.length - startOffset);\r\n    advancePositionWithMutation(innerEnd, rawContent, endOffset);\r\n    advanceBy(context, close.length);\r\n    return {\r\n        type: 5 /* INTERPOLATION */,\r\n        content: {\r\n            type: 4 /* SIMPLE_EXPRESSION */,\r\n            isStatic: false,\r\n            // Set `isConstant` to false by default and will decide in transformExpression\r\n            constType: 0 /* NOT_CONSTANT */,\r\n            content,\r\n            loc: getSelection(context, innerStart, innerEnd)\r\n        },\r\n        loc: getSelection(context, start)\r\n    };\r\n}\r\nfunction parseText(context, mode) {\r\n    const endTokens = mode === 3 /* CDATA */ ? [']]>'] : ['<', context.options.delimiters[0]];\r\n    let endIndex = context.source.length;\r\n    for (let i = 0; i < endTokens.length; i++) {\r\n        const index = context.source.indexOf(endTokens[i], 1);\r\n        if (index !== -1 && endIndex > index) {\r\n            endIndex = index;\r\n        }\r\n    }\r\n    const start = getCursor(context);\r\n    const content = parseTextData(context, endIndex, mode);\r\n    return {\r\n        type: 2 /* TEXT */,\r\n        content,\r\n        loc: getSelection(context, start)\r\n    };\r\n}\r\n/**\r\n * Get text data with a given length from the current location.\r\n * This translates HTML entities in the text data.\r\n */\r\nfunction parseTextData(context, length, mode) {\r\n    const rawText = context.source.slice(0, length);\r\n    advanceBy(context, length);\r\n    if (mode === 2 /* RAWTEXT */ ||\r\n        mode === 3 /* CDATA */ ||\r\n        rawText.indexOf('&') === -1) {\r\n        return rawText;\r\n    }\r\n    else {\r\n        // DATA or RCDATA containing \"&\"\". Entity decoding required.\r\n        return context.options.decodeEntities(rawText, mode === 4 /* ATTRIBUTE_VALUE */);\r\n    }\r\n}\r\nfunction getCursor(context) {\r\n    const { column, line, offset } = context;\r\n    return { column, line, offset };\r\n}\r\nfunction getSelection(context, start, end) {\r\n    end = end || getCursor(context);\r\n    return {\r\n        start,\r\n        end,\r\n        source: context.originalSource.slice(start.offset, end.offset)\r\n    };\r\n}\r\nfunction last(xs) {\r\n    return xs[xs.length - 1];\r\n}\r\nfunction startsWith(source, searchString) {\r\n    return source.startsWith(searchString);\r\n}\r\nfunction advanceBy(context, numberOfCharacters) {\r\n    const { source } = context;\r\n    advancePositionWithMutation(context, source, numberOfCharacters);\r\n    context.source = source.slice(numberOfCharacters);\r\n}\r\nfunction advanceSpaces(context) {\r\n    const match = /^[\\t\\r\\n\\f ]+/.exec(context.source);\r\n    if (match) {\r\n        advanceBy(context, match[0].length);\r\n    }\r\n}\r\nfunction getNewPosition(context, start, numberOfCharacters) {\r\n    return advancePositionWithClone(start, context.originalSource.slice(start.offset, numberOfCharacters), numberOfCharacters);\r\n}\r\nfunction emitError(context, code, offset, loc = getCursor(context)) {\r\n    if (offset) {\r\n        loc.offset += offset;\r\n        loc.column += offset;\r\n    }\r\n    context.options.onError(createCompilerError(code, {\r\n        start: loc,\r\n        end: loc,\r\n        source: ''\r\n    }));\r\n}\r\nfunction isEnd(context, mode, ancestors) {\r\n    const s = context.source;\r\n    switch (mode) {\r\n        case 0 /* DATA */:\r\n            if (startsWith(s, '</')) {\r\n                // TODO: probably bad performance\r\n                for (let i = ancestors.length - 1; i >= 0; --i) {\r\n                    if (startsWithEndTagOpen(s, ancestors[i].tag)) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            break;\r\n        case 1 /* RCDATA */:\r\n        case 2 /* RAWTEXT */: {\r\n            const parent = last(ancestors);\r\n            if (parent && startsWithEndTagOpen(s, parent.tag)) {\r\n                return true;\r\n            }\r\n            break;\r\n        }\r\n        case 3 /* CDATA */:\r\n            if (startsWith(s, ']]>')) {\r\n                return true;\r\n            }\r\n            break;\r\n    }\r\n    return !s;\r\n}\r\nfunction startsWithEndTagOpen(source, tag) {\r\n    return (startsWith(source, '</') &&\r\n        source.substr(2, tag.length).toLowerCase() === tag.toLowerCase() &&\r\n        /[\\t\\r\\n\\f />]/.test(source[2 + tag.length] || '>'));\r\n}\n\nfunction hoistStatic(root, context) {\r\n    walk(root, context, \r\n    // Root node is unfortunately non-hoistable due to potential parent\r\n    // fallthrough attributes.\r\n    isSingleElementRoot(root, root.children[0]));\r\n}\r\nfunction isSingleElementRoot(root, child) {\r\n    const { children } = root;\r\n    return (children.length === 1 &&\r\n        child.type === 1 /* ELEMENT */ &&\r\n        !isSlotOutlet(child));\r\n}\r\nfunction walk(node, context, doNotHoistNode = false) {\r\n    // Some transforms, e.g. transformAssetUrls from @vue/compiler-sfc, replaces\r\n    // static bindings with expressions. These expressions are guaranteed to be\r\n    // constant so they are still eligible for hoisting, but they are only\r\n    // available at runtime and therefore cannot be evaluated ahead of time.\r\n    // This is only a concern for pre-stringification (via transformHoist by\r\n    // @vue/compiler-dom), but doing it here allows us to perform only one full\r\n    // walk of the AST and allow `stringifyStatic` to stop walking as soon as its\r\n    // stringification threshold is met.\r\n    let canStringify = true;\r\n    const { children } = node;\r\n    const originalCount = children.length;\r\n    let hoistedCount = 0;\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        // only plain elements & text calls are eligible for hoisting.\r\n        if (child.type === 1 /* ELEMENT */ &&\r\n            child.tagType === 0 /* ELEMENT */) {\r\n            const constantType = doNotHoistNode\r\n                ? 0 /* NOT_CONSTANT */\r\n                : getConstantType(child, context);\r\n            if (constantType > 0 /* NOT_CONSTANT */) {\r\n                if (constantType < 3 /* CAN_STRINGIFY */) {\r\n                    canStringify = false;\r\n                }\r\n                if (constantType >= 2 /* CAN_HOIST */) {\r\n                    child.codegenNode.patchFlag =\r\n                        -1 /* HOISTED */ + ((process.env.NODE_ENV !== 'production') ? ` /* HOISTED */` : ``);\r\n                    child.codegenNode = context.hoist(child.codegenNode);\r\n                    hoistedCount++;\r\n                    continue;\r\n                }\r\n            }\r\n            else {\r\n                // node may contain dynamic children, but its props may be eligible for\r\n                // hoisting.\r\n                const codegenNode = child.codegenNode;\r\n                if (codegenNode.type === 13 /* VNODE_CALL */) {\r\n                    const flag = getPatchFlag(codegenNode);\r\n                    if ((!flag ||\r\n                        flag === 512 /* NEED_PATCH */ ||\r\n                        flag === 1 /* TEXT */) &&\r\n                        getGeneratedPropsConstantType(child, context) >=\r\n                            2 /* CAN_HOIST */) {\r\n                        const props = getNodeProps(child);\r\n                        if (props) {\r\n                            codegenNode.props = context.hoist(props);\r\n                        }\r\n                    }\r\n                    if (codegenNode.dynamicProps) {\r\n                        codegenNode.dynamicProps = context.hoist(codegenNode.dynamicProps);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if (child.type === 12 /* TEXT_CALL */) {\r\n            const contentType = getConstantType(child.content, context);\r\n            if (contentType > 0) {\r\n                if (contentType < 3 /* CAN_STRINGIFY */) {\r\n                    canStringify = false;\r\n                }\r\n                if (contentType >= 2 /* CAN_HOIST */) {\r\n                    child.codegenNode = context.hoist(child.codegenNode);\r\n                    hoistedCount++;\r\n                }\r\n            }\r\n        }\r\n        // walk further\r\n        if (child.type === 1 /* ELEMENT */) {\r\n            const isComponent = child.tagType === 1 /* COMPONENT */;\r\n            if (isComponent) {\r\n                context.scopes.vSlot++;\r\n            }\r\n            walk(child, context);\r\n            if (isComponent) {\r\n                context.scopes.vSlot--;\r\n            }\r\n        }\r\n        else if (child.type === 11 /* FOR */) {\r\n            // Do not hoist v-for single child because it has to be a block\r\n            walk(child, context, child.children.length === 1);\r\n        }\r\n        else if (child.type === 9 /* IF */) {\r\n            for (let i = 0; i < child.branches.length; i++) {\r\n                // Do not hoist v-if single child because it has to be a block\r\n                walk(child.branches[i], context, child.branches[i].children.length === 1);\r\n            }\r\n        }\r\n    }\r\n    if (canStringify && hoistedCount && context.transformHoist) {\r\n        context.transformHoist(children, context, node);\r\n    }\r\n    // all children were hoisted - the entire children array is hoistable.\r\n    if (hoistedCount &&\r\n        hoistedCount === originalCount &&\r\n        node.type === 1 /* ELEMENT */ &&\r\n        node.tagType === 0 /* ELEMENT */ &&\r\n        node.codegenNode &&\r\n        node.codegenNode.type === 13 /* VNODE_CALL */ &&\r\n        isArray(node.codegenNode.children)) {\r\n        node.codegenNode.children = context.hoist(createArrayExpression(node.codegenNode.children));\r\n    }\r\n}\r\nfunction getConstantType(node, context) {\r\n    const { constantCache } = context;\r\n    switch (node.type) {\r\n        case 1 /* ELEMENT */:\r\n            if (node.tagType !== 0 /* ELEMENT */) {\r\n                return 0 /* NOT_CONSTANT */;\r\n            }\r\n            const cached = constantCache.get(node);\r\n            if (cached !== undefined) {\r\n                return cached;\r\n            }\r\n            const codegenNode = node.codegenNode;\r\n            if (codegenNode.type !== 13 /* VNODE_CALL */) {\r\n                return 0 /* NOT_CONSTANT */;\r\n            }\r\n            const flag = getPatchFlag(codegenNode);\r\n            if (!flag) {\r\n                let returnType = 3 /* CAN_STRINGIFY */;\r\n                // Element itself has no patch flag. However we still need to check:\r\n                // 1. Even for a node with no patch flag, it is possible for it to contain\r\n                // non-hoistable expressions that refers to scope variables, e.g. compiler\r\n                // injected keys or cached event handlers. Therefore we need to always\r\n                // check the codegenNode's props to be sure.\r\n                const generatedPropsType = getGeneratedPropsConstantType(node, context);\r\n                if (generatedPropsType === 0 /* NOT_CONSTANT */) {\r\n                    constantCache.set(node, 0 /* NOT_CONSTANT */);\r\n                    return 0 /* NOT_CONSTANT */;\r\n                }\r\n                if (generatedPropsType < returnType) {\r\n                    returnType = generatedPropsType;\r\n                }\r\n                // 2. its children.\r\n                for (let i = 0; i < node.children.length; i++) {\r\n                    const childType = getConstantType(node.children[i], context);\r\n                    if (childType === 0 /* NOT_CONSTANT */) {\r\n                        constantCache.set(node, 0 /* NOT_CONSTANT */);\r\n                        return 0 /* NOT_CONSTANT */;\r\n                    }\r\n                    if (childType < returnType) {\r\n                        returnType = childType;\r\n                    }\r\n                }\r\n                // 3. if the type is not already CAN_SKIP_PATCH which is the lowest non-0\r\n                // type, check if any of the props can cause the type to be lowered\r\n                // we can skip can_patch because it's guaranteed by the absence of a\r\n                // patchFlag.\r\n                if (returnType > 1 /* CAN_SKIP_PATCH */) {\r\n                    for (let i = 0; i < node.props.length; i++) {\r\n                        const p = node.props[i];\r\n                        if (p.type === 7 /* DIRECTIVE */ && p.name === 'bind' && p.exp) {\r\n                            const expType = getConstantType(p.exp, context);\r\n                            if (expType === 0 /* NOT_CONSTANT */) {\r\n                                constantCache.set(node, 0 /* NOT_CONSTANT */);\r\n                                return 0 /* NOT_CONSTANT */;\r\n                            }\r\n                            if (expType < returnType) {\r\n                                returnType = expType;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                // only svg/foreignObject could be block here, however if they are\r\n                // static then they don't need to be blocks since there will be no\r\n                // nested updates.\r\n                if (codegenNode.isBlock) {\r\n                    context.removeHelper(OPEN_BLOCK);\r\n                    context.removeHelper(getVNodeBlockHelper(context.inSSR, codegenNode.isComponent));\r\n                    codegenNode.isBlock = false;\r\n                    context.helper(getVNodeHelper(context.inSSR, codegenNode.isComponent));\r\n                }\r\n                constantCache.set(node, returnType);\r\n                return returnType;\r\n            }\r\n            else {\r\n                constantCache.set(node, 0 /* NOT_CONSTANT */);\r\n                return 0 /* NOT_CONSTANT */;\r\n            }\r\n        case 2 /* TEXT */:\r\n        case 3 /* COMMENT */:\r\n            return 3 /* CAN_STRINGIFY */;\r\n        case 9 /* IF */:\r\n        case 11 /* FOR */:\r\n        case 10 /* IF_BRANCH */:\r\n            return 0 /* NOT_CONSTANT */;\r\n        case 5 /* INTERPOLATION */:\r\n        case 12 /* TEXT_CALL */:\r\n            return getConstantType(node.content, context);\r\n        case 4 /* SIMPLE_EXPRESSION */:\r\n            return node.constType;\r\n        case 8 /* COMPOUND_EXPRESSION */:\r\n            let returnType = 3 /* CAN_STRINGIFY */;\r\n            for (let i = 0; i < node.children.length; i++) {\r\n                const child = node.children[i];\r\n                if (isString(child) || isSymbol(child)) {\r\n                    continue;\r\n                }\r\n                const childType = getConstantType(child, context);\r\n                if (childType === 0 /* NOT_CONSTANT */) {\r\n                    return 0 /* NOT_CONSTANT */;\r\n                }\r\n                else if (childType < returnType) {\r\n                    returnType = childType;\r\n                }\r\n            }\r\n            return returnType;\r\n        default:\r\n            if ((process.env.NODE_ENV !== 'production')) ;\r\n            return 0 /* NOT_CONSTANT */;\r\n    }\r\n}\r\nconst allowHoistedHelperSet = new Set([\r\n    NORMALIZE_CLASS,\r\n    NORMALIZE_STYLE,\r\n    NORMALIZE_PROPS,\r\n    GUARD_REACTIVE_PROPS\r\n]);\r\nfunction getConstantTypeOfHelperCall(value, context) {\r\n    if (value.type === 14 /* JS_CALL_EXPRESSION */ &&\r\n        !isString(value.callee) &&\r\n        allowHoistedHelperSet.has(value.callee)) {\r\n        const arg = value.arguments[0];\r\n        if (arg.type === 4 /* SIMPLE_EXPRESSION */) {\r\n            return getConstantType(arg, context);\r\n        }\r\n        else if (arg.type === 14 /* JS_CALL_EXPRESSION */) {\r\n            // in the case of nested helper call, e.g. `normalizeProps(guardReactiveProps(exp))`\r\n            return getConstantTypeOfHelperCall(arg, context);\r\n        }\r\n    }\r\n    return 0 /* NOT_CONSTANT */;\r\n}\r\nfunction getGeneratedPropsConstantType(node, context) {\r\n    let returnType = 3 /* CAN_STRINGIFY */;\r\n    const props = getNodeProps(node);\r\n    if (props && props.type === 15 /* JS_OBJECT_EXPRESSION */) {\r\n        const { properties } = props;\r\n        for (let i = 0; i < properties.length; i++) {\r\n            const { key, value } = properties[i];\r\n            const keyType = getConstantType(key, context);\r\n            if (keyType === 0 /* NOT_CONSTANT */) {\r\n                return keyType;\r\n            }\r\n            if (keyType < returnType) {\r\n                returnType = keyType;\r\n            }\r\n            let valueType;\r\n            if (value.type === 4 /* SIMPLE_EXPRESSION */) {\r\n                valueType = getConstantType(value, context);\r\n            }\r\n            else if (value.type === 14 /* JS_CALL_EXPRESSION */) {\r\n                // some helper calls can be hoisted,\r\n                // such as the `normalizeProps` generated by the compiler for pre-normalize class,\r\n                // in this case we need to respect the ConstantType of the helper's argments\r\n                valueType = getConstantTypeOfHelperCall(value, context);\r\n            }\r\n            else {\r\n                valueType = 0 /* NOT_CONSTANT */;\r\n            }\r\n            if (valueType === 0 /* NOT_CONSTANT */) {\r\n                return valueType;\r\n            }\r\n            if (valueType < returnType) {\r\n                returnType = valueType;\r\n            }\r\n        }\r\n    }\r\n    return returnType;\r\n}\r\nfunction getNodeProps(node) {\r\n    const codegenNode = node.codegenNode;\r\n    if (codegenNode.type === 13 /* VNODE_CALL */) {\r\n        return codegenNode.props;\r\n    }\r\n}\r\nfunction getPatchFlag(node) {\r\n    const flag = node.patchFlag;\r\n    return flag ? parseInt(flag, 10) : undefined;\r\n}\n\nfunction createTransformContext(root, { filename = '', prefixIdentifiers = false, hoistStatic = false, cacheHandlers = false, nodeTransforms = [], directiveTransforms = {}, transformHoist = null, isBuiltInComponent = NOOP, isCustomElement = NOOP, expressionPlugins = [], scopeId = null, slotted = true, ssr = false, inSSR = false, ssrCssVars = ``, bindingMetadata = EMPTY_OBJ, inline = false, isTS = false, onError = defaultOnError, onWarn = defaultOnWarn, compatConfig }) {\r\n    const nameMatch = filename.replace(/\\?.*$/, '').match(/([^/\\\\]+)\\.\\w+$/);\r\n    const context = {\r\n        // options\r\n        selfName: nameMatch && capitalize(camelize$1(nameMatch[1])),\r\n        prefixIdentifiers,\r\n        hoistStatic,\r\n        cacheHandlers,\r\n        nodeTransforms,\r\n        directiveTransforms,\r\n        transformHoist,\r\n        isBuiltInComponent,\r\n        isCustomElement,\r\n        expressionPlugins,\r\n        scopeId,\r\n        slotted,\r\n        ssr,\r\n        inSSR,\r\n        ssrCssVars,\r\n        bindingMetadata,\r\n        inline,\r\n        isTS,\r\n        onError,\r\n        onWarn,\r\n        compatConfig,\r\n        // state\r\n        root,\r\n        helpers: new Map(),\r\n        components: new Set(),\r\n        directives: new Set(),\r\n        hoists: [],\r\n        imports: [],\r\n        constantCache: new Map(),\r\n        temps: 0,\r\n        cached: 0,\r\n        identifiers: Object.create(null),\r\n        scopes: {\r\n            vFor: 0,\r\n            vSlot: 0,\r\n            vPre: 0,\r\n            vOnce: 0\r\n        },\r\n        parent: null,\r\n        currentNode: root,\r\n        childIndex: 0,\r\n        inVOnce: false,\r\n        // methods\r\n        helper(name) {\r\n            const count = context.helpers.get(name) || 0;\r\n            context.helpers.set(name, count + 1);\r\n            return name;\r\n        },\r\n        removeHelper(name) {\r\n            const count = context.helpers.get(name);\r\n            if (count) {\r\n                const currentCount = count - 1;\r\n                if (!currentCount) {\r\n                    context.helpers.delete(name);\r\n                }\r\n                else {\r\n                    context.helpers.set(name, currentCount);\r\n                }\r\n            }\r\n        },\r\n        helperString(name) {\r\n            return `_${helperNameMap[context.helper(name)]}`;\r\n        },\r\n        replaceNode(node) {\r\n            /* istanbul ignore if */\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (!context.currentNode) {\r\n                    throw new Error(`Node being replaced is already removed.`);\r\n                }\r\n                if (!context.parent) {\r\n                    throw new Error(`Cannot replace root node.`);\r\n                }\r\n            }\r\n            context.parent.children[context.childIndex] = context.currentNode = node;\r\n        },\r\n        removeNode(node) {\r\n            if ((process.env.NODE_ENV !== 'production') && !context.parent) {\r\n                throw new Error(`Cannot remove root node.`);\r\n            }\r\n            const list = context.parent.children;\r\n            const removalIndex = node\r\n                ? list.indexOf(node)\r\n                : context.currentNode\r\n                    ? context.childIndex\r\n                    : -1;\r\n            /* istanbul ignore if */\r\n            if ((process.env.NODE_ENV !== 'production') && removalIndex < 0) {\r\n                throw new Error(`node being removed is not a child of current parent`);\r\n            }\r\n            if (!node || node === context.currentNode) {\r\n                // current node removed\r\n                context.currentNode = null;\r\n                context.onNodeRemoved();\r\n            }\r\n            else {\r\n                // sibling node removed\r\n                if (context.childIndex > removalIndex) {\r\n                    context.childIndex--;\r\n                    context.onNodeRemoved();\r\n                }\r\n            }\r\n            context.parent.children.splice(removalIndex, 1);\r\n        },\r\n        onNodeRemoved: () => { },\r\n        addIdentifiers(exp) {\r\n        },\r\n        removeIdentifiers(exp) {\r\n        },\r\n        hoist(exp) {\r\n            if (isString(exp))\r\n                exp = createSimpleExpression(exp);\r\n            context.hoists.push(exp);\r\n            const identifier = createSimpleExpression(`_hoisted_${context.hoists.length}`, false, exp.loc, 2 /* CAN_HOIST */);\r\n            identifier.hoisted = exp;\r\n            return identifier;\r\n        },\r\n        cache(exp, isVNode = false) {\r\n            return createCacheExpression(context.cached++, exp, isVNode);\r\n        }\r\n    };\r\n    {\r\n        context.filters = new Set();\r\n    }\r\n    return context;\r\n}\r\nfunction transform(root, options) {\r\n    const context = createTransformContext(root, options);\r\n    traverseNode(root, context);\r\n    if (options.hoistStatic) {\r\n        hoistStatic(root, context);\r\n    }\r\n    if (!options.ssr) {\r\n        createRootCodegen(root, context);\r\n    }\r\n    // finalize meta information\r\n    root.helpers = [...context.helpers.keys()];\r\n    root.components = [...context.components];\r\n    root.directives = [...context.directives];\r\n    root.imports = context.imports;\r\n    root.hoists = context.hoists;\r\n    root.temps = context.temps;\r\n    root.cached = context.cached;\r\n    {\r\n        root.filters = [...context.filters];\r\n    }\r\n}\r\nfunction createRootCodegen(root, context) {\r\n    const { helper } = context;\r\n    const { children } = root;\r\n    if (children.length === 1) {\r\n        const child = children[0];\r\n        // if the single child is an element, turn it into a block.\r\n        if (isSingleElementRoot(root, child) && child.codegenNode) {\r\n            // single element root is never hoisted so codegenNode will never be\r\n            // SimpleExpressionNode\r\n            const codegenNode = child.codegenNode;\r\n            if (codegenNode.type === 13 /* VNODE_CALL */) {\r\n                makeBlock(codegenNode, context);\r\n            }\r\n            root.codegenNode = codegenNode;\r\n        }\r\n        else {\r\n            // - single <slot/>, IfNode, ForNode: already blocks.\r\n            // - single text node: always patched.\r\n            // root codegen falls through via genNode()\r\n            root.codegenNode = child;\r\n        }\r\n    }\r\n    else if (children.length > 1) {\r\n        // root has multiple nodes - return a fragment block.\r\n        let patchFlag = 64 /* STABLE_FRAGMENT */;\r\n        let patchFlagText = PatchFlagNames[64 /* STABLE_FRAGMENT */];\r\n        // check if the fragment actually contains a single valid child with\r\n        // the rest being comments\r\n        if ((process.env.NODE_ENV !== 'production') &&\r\n            children.filter(c => c.type !== 3 /* COMMENT */).length === 1) {\r\n            patchFlag |= 2048 /* DEV_ROOT_FRAGMENT */;\r\n            patchFlagText += `, ${PatchFlagNames[2048 /* DEV_ROOT_FRAGMENT */]}`;\r\n        }\r\n        root.codegenNode = createVNodeCall(context, helper(FRAGMENT), undefined, root.children, patchFlag + ((process.env.NODE_ENV !== 'production') ? ` /* ${patchFlagText} */` : ``), undefined, undefined, true, undefined, false /* isComponent */);\r\n    }\r\n    else ;\r\n}\r\nfunction traverseChildren(parent, context) {\r\n    let i = 0;\r\n    const nodeRemoved = () => {\r\n        i--;\r\n    };\r\n    for (; i < parent.children.length; i++) {\r\n        const child = parent.children[i];\r\n        if (isString(child))\r\n            continue;\r\n        context.parent = parent;\r\n        context.childIndex = i;\r\n        context.onNodeRemoved = nodeRemoved;\r\n        traverseNode(child, context);\r\n    }\r\n}\r\nfunction traverseNode(node, context) {\r\n    context.currentNode = node;\r\n    // apply transform plugins\r\n    const { nodeTransforms } = context;\r\n    const exitFns = [];\r\n    for (let i = 0; i < nodeTransforms.length; i++) {\r\n        const onExit = nodeTransforms[i](node, context);\r\n        if (onExit) {\r\n            if (isArray(onExit)) {\r\n                exitFns.push(...onExit);\r\n            }\r\n            else {\r\n                exitFns.push(onExit);\r\n            }\r\n        }\r\n        if (!context.currentNode) {\r\n            // node was removed\r\n            return;\r\n        }\r\n        else {\r\n            // node may have been replaced\r\n            node = context.currentNode;\r\n        }\r\n    }\r\n    switch (node.type) {\r\n        case 3 /* COMMENT */:\r\n            if (!context.ssr) {\r\n                // inject import for the Comment symbol, which is needed for creating\r\n                // comment nodes with `createVNode`\r\n                context.helper(CREATE_COMMENT);\r\n            }\r\n            break;\r\n        case 5 /* INTERPOLATION */:\r\n            // no need to traverse, but we need to inject toString helper\r\n            if (!context.ssr) {\r\n                context.helper(TO_DISPLAY_STRING);\r\n            }\r\n            break;\r\n        // for container types, further traverse downwards\r\n        case 9 /* IF */:\r\n            for (let i = 0; i < node.branches.length; i++) {\r\n                traverseNode(node.branches[i], context);\r\n            }\r\n            break;\r\n        case 10 /* IF_BRANCH */:\r\n        case 11 /* FOR */:\r\n        case 1 /* ELEMENT */:\r\n        case 0 /* ROOT */:\r\n            traverseChildren(node, context);\r\n            break;\r\n    }\r\n    // exit transforms\r\n    context.currentNode = node;\r\n    let i = exitFns.length;\r\n    while (i--) {\r\n        exitFns[i]();\r\n    }\r\n}\r\nfunction createStructuralDirectiveTransform(name, fn) {\r\n    const matches = isString(name)\r\n        ? (n) => n === name\r\n        : (n) => name.test(n);\r\n    return (node, context) => {\r\n        if (node.type === 1 /* ELEMENT */) {\r\n            const { props } = node;\r\n            // structural directive transforms are not concerned with slots\r\n            // as they are handled separately in vSlot.ts\r\n            if (node.tagType === 3 /* TEMPLATE */ && props.some(isVSlot)) {\r\n                return;\r\n            }\r\n            const exitFns = [];\r\n            for (let i = 0; i < props.length; i++) {\r\n                const prop = props[i];\r\n                if (prop.type === 7 /* DIRECTIVE */ && matches(prop.name)) {\r\n                    // structural directives are removed to avoid infinite recursion\r\n                    // also we remove them *before* applying so that it can further\r\n                    // traverse itself in case it moves the node around\r\n                    props.splice(i, 1);\r\n                    i--;\r\n                    const onExit = fn(node, prop, context);\r\n                    if (onExit)\r\n                        exitFns.push(onExit);\r\n                }\r\n            }\r\n            return exitFns;\r\n        }\r\n    };\r\n}\n\nconst PURE_ANNOTATION = `/*#__PURE__*/`;\r\nfunction createCodegenContext(ast, { mode = 'function', prefixIdentifiers = mode === 'module', sourceMap = false, filename = `template.vue.html`, scopeId = null, optimizeImports = false, runtimeGlobalName = `Vue`, runtimeModuleName = `vue`, ssr = false, isTS = false, inSSR = false }) {\r\n    const context = {\r\n        mode,\r\n        prefixIdentifiers,\r\n        sourceMap,\r\n        filename,\r\n        scopeId,\r\n        optimizeImports,\r\n        runtimeGlobalName,\r\n        runtimeModuleName,\r\n        ssr,\r\n        isTS,\r\n        inSSR,\r\n        source: ast.loc.source,\r\n        code: ``,\r\n        column: 1,\r\n        line: 1,\r\n        offset: 0,\r\n        indentLevel: 0,\r\n        pure: false,\r\n        map: undefined,\r\n        helper(key) {\r\n            return `_${helperNameMap[key]}`;\r\n        },\r\n        push(code, node) {\r\n            context.code += code;\r\n        },\r\n        indent() {\r\n            newline(++context.indentLevel);\r\n        },\r\n        deindent(withoutNewLine = false) {\r\n            if (withoutNewLine) {\r\n                --context.indentLevel;\r\n            }\r\n            else {\r\n                newline(--context.indentLevel);\r\n            }\r\n        },\r\n        newline() {\r\n            newline(context.indentLevel);\r\n        }\r\n    };\r\n    function newline(n) {\r\n        context.push('\\n' + `  `.repeat(n));\r\n    }\r\n    return context;\r\n}\r\nfunction generate(ast, options = {}) {\r\n    const context = createCodegenContext(ast, options);\r\n    if (options.onContextCreated)\r\n        options.onContextCreated(context);\r\n    const { mode, push, prefixIdentifiers, indent, deindent, newline, scopeId, ssr } = context;\r\n    const hasHelpers = ast.helpers.length > 0;\r\n    const useWithBlock = !prefixIdentifiers && mode !== 'module';\r\n    // preambles\r\n    // in setup() inline mode, the preamble is generated in a sub context\r\n    // and returned separately.\r\n    const preambleContext = context;\r\n    {\r\n        genFunctionPreamble(ast, preambleContext);\r\n    }\r\n    // enter render function\r\n    const functionName = ssr ? `ssrRender` : `render`;\r\n    const args = ssr ? ['_ctx', '_push', '_parent', '_attrs'] : ['_ctx', '_cache'];\r\n    const signature = args.join(', ');\r\n    {\r\n        push(`function ${functionName}(${signature}) {`);\r\n    }\r\n    indent();\r\n    if (useWithBlock) {\r\n        push(`with (_ctx) {`);\r\n        indent();\r\n        // function mode const declarations should be inside with block\r\n        // also they should be renamed to avoid collision with user properties\r\n        if (hasHelpers) {\r\n            push(`const { ${ast.helpers\r\n                .map(s => `${helperNameMap[s]}: _${helperNameMap[s]}`)\r\n                .join(', ')} } = _Vue`);\r\n            push(`\\n`);\r\n            newline();\r\n        }\r\n    }\r\n    // generate asset resolution statements\r\n    if (ast.components.length) {\r\n        genAssets(ast.components, 'component', context);\r\n        if (ast.directives.length || ast.temps > 0) {\r\n            newline();\r\n        }\r\n    }\r\n    if (ast.directives.length) {\r\n        genAssets(ast.directives, 'directive', context);\r\n        if (ast.temps > 0) {\r\n            newline();\r\n        }\r\n    }\r\n    if (ast.filters && ast.filters.length) {\r\n        newline();\r\n        genAssets(ast.filters, 'filter', context);\r\n        newline();\r\n    }\r\n    if (ast.temps > 0) {\r\n        push(`let `);\r\n        for (let i = 0; i < ast.temps; i++) {\r\n            push(`${i > 0 ? `, ` : ``}_temp${i}`);\r\n        }\r\n    }\r\n    if (ast.components.length || ast.directives.length || ast.temps) {\r\n        push(`\\n`);\r\n        newline();\r\n    }\r\n    // generate the VNode tree expression\r\n    if (!ssr) {\r\n        push(`return `);\r\n    }\r\n    if (ast.codegenNode) {\r\n        genNode(ast.codegenNode, context);\r\n    }\r\n    else {\r\n        push(`null`);\r\n    }\r\n    if (useWithBlock) {\r\n        deindent();\r\n        push(`}`);\r\n    }\r\n    deindent();\r\n    push(`}`);\r\n    return {\r\n        ast,\r\n        code: context.code,\r\n        preamble: ``,\r\n        // SourceMapGenerator does have toJSON() method but it's not in the types\r\n        map: context.map ? context.map.toJSON() : undefined\r\n    };\r\n}\r\nfunction genFunctionPreamble(ast, context) {\r\n    const { ssr, prefixIdentifiers, push, newline, runtimeModuleName, runtimeGlobalName } = context;\r\n    const VueBinding = runtimeGlobalName;\r\n    const aliasHelper = (s) => `${helperNameMap[s]}: _${helperNameMap[s]}`;\r\n    // Generate const declaration for helpers\r\n    // In prefix mode, we place the const declaration at top so it's done\r\n    // only once; But if we not prefixing, we place the declaration inside the\r\n    // with block so it doesn't incur the `in` check cost for every helper access.\r\n    if (ast.helpers.length > 0) {\r\n        {\r\n            // \"with\" mode.\r\n            // save Vue in a separate variable to avoid collision\r\n            push(`const _Vue = ${VueBinding}\\n`);\r\n            // in \"with\" mode, helpers are declared inside the with block to avoid\r\n            // has check cost, but hoists are lifted out of the function - we need\r\n            // to provide the helper here.\r\n            if (ast.hoists.length) {\r\n                const staticHelpers = [\r\n                    CREATE_VNODE,\r\n                    CREATE_ELEMENT_VNODE,\r\n                    CREATE_COMMENT,\r\n                    CREATE_TEXT,\r\n                    CREATE_STATIC\r\n                ]\r\n                    .filter(helper => ast.helpers.includes(helper))\r\n                    .map(aliasHelper)\r\n                    .join(', ');\r\n                push(`const { ${staticHelpers} } = _Vue\\n`);\r\n            }\r\n        }\r\n    }\r\n    genHoists(ast.hoists, context);\r\n    newline();\r\n    push(`return `);\r\n}\r\nfunction genAssets(assets, type, { helper, push, newline, isTS }) {\r\n    const resolver = helper(type === 'filter'\r\n        ? RESOLVE_FILTER\r\n        : type === 'component'\r\n            ? RESOLVE_COMPONENT\r\n            : RESOLVE_DIRECTIVE);\r\n    for (let i = 0; i < assets.length; i++) {\r\n        let id = assets[i];\r\n        // potential component implicit self-reference inferred from SFC filename\r\n        const maybeSelfReference = id.endsWith('__self');\r\n        if (maybeSelfReference) {\r\n            id = id.slice(0, -6);\r\n        }\r\n        push(`const ${toValidAssetId(id, type)} = ${resolver}(${JSON.stringify(id)}${maybeSelfReference ? `, true` : ``})${isTS ? `!` : ``}`);\r\n        if (i < assets.length - 1) {\r\n            newline();\r\n        }\r\n    }\r\n}\r\nfunction genHoists(hoists, context) {\r\n    if (!hoists.length) {\r\n        return;\r\n    }\r\n    context.pure = true;\r\n    const { push, newline, helper, scopeId, mode } = context;\r\n    newline();\r\n    for (let i = 0; i < hoists.length; i++) {\r\n        const exp = hoists[i];\r\n        if (exp) {\r\n            push(`const _hoisted_${i + 1} = ${``}`);\r\n            genNode(exp, context);\r\n            newline();\r\n        }\r\n    }\r\n    context.pure = false;\r\n}\r\nfunction isText$1(n) {\r\n    return (isString(n) ||\r\n        n.type === 4 /* SIMPLE_EXPRESSION */ ||\r\n        n.type === 2 /* TEXT */ ||\r\n        n.type === 5 /* INTERPOLATION */ ||\r\n        n.type === 8 /* COMPOUND_EXPRESSION */);\r\n}\r\nfunction genNodeListAsArray(nodes, context) {\r\n    const multilines = nodes.length > 3 ||\r\n        (((process.env.NODE_ENV !== 'production')) && nodes.some(n => isArray(n) || !isText$1(n)));\r\n    context.push(`[`);\r\n    multilines && context.indent();\r\n    genNodeList(nodes, context, multilines);\r\n    multilines && context.deindent();\r\n    context.push(`]`);\r\n}\r\nfunction genNodeList(nodes, context, multilines = false, comma = true) {\r\n    const { push, newline } = context;\r\n    for (let i = 0; i < nodes.length; i++) {\r\n        const node = nodes[i];\r\n        if (isString(node)) {\r\n            push(node);\r\n        }\r\n        else if (isArray(node)) {\r\n            genNodeListAsArray(node, context);\r\n        }\r\n        else {\r\n            genNode(node, context);\r\n        }\r\n        if (i < nodes.length - 1) {\r\n            if (multilines) {\r\n                comma && push(',');\r\n                newline();\r\n            }\r\n            else {\r\n                comma && push(', ');\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction genNode(node, context) {\r\n    if (isString(node)) {\r\n        context.push(node);\r\n        return;\r\n    }\r\n    if (isSymbol(node)) {\r\n        context.push(context.helper(node));\r\n        return;\r\n    }\r\n    switch (node.type) {\r\n        case 1 /* ELEMENT */:\r\n        case 9 /* IF */:\r\n        case 11 /* FOR */:\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                assert(node.codegenNode != null, `Codegen node is missing for element/if/for node. ` +\r\n                    `Apply appropriate transforms first.`);\r\n            genNode(node.codegenNode, context);\r\n            break;\r\n        case 2 /* TEXT */:\r\n            genText(node, context);\r\n            break;\r\n        case 4 /* SIMPLE_EXPRESSION */:\r\n            genExpression(node, context);\r\n            break;\r\n        case 5 /* INTERPOLATION */:\r\n            genInterpolation(node, context);\r\n            break;\r\n        case 12 /* TEXT_CALL */:\r\n            genNode(node.codegenNode, context);\r\n            break;\r\n        case 8 /* COMPOUND_EXPRESSION */:\r\n            genCompoundExpression(node, context);\r\n            break;\r\n        case 3 /* COMMENT */:\r\n            genComment(node, context);\r\n            break;\r\n        case 13 /* VNODE_CALL */:\r\n            genVNodeCall(node, context);\r\n            break;\r\n        case 14 /* JS_CALL_EXPRESSION */:\r\n            genCallExpression(node, context);\r\n            break;\r\n        case 15 /* JS_OBJECT_EXPRESSION */:\r\n            genObjectExpression(node, context);\r\n            break;\r\n        case 17 /* JS_ARRAY_EXPRESSION */:\r\n            genArrayExpression(node, context);\r\n            break;\r\n        case 18 /* JS_FUNCTION_EXPRESSION */:\r\n            genFunctionExpression(node, context);\r\n            break;\r\n        case 19 /* JS_CONDITIONAL_EXPRESSION */:\r\n            genConditionalExpression(node, context);\r\n            break;\r\n        case 20 /* JS_CACHE_EXPRESSION */:\r\n            genCacheExpression(node, context);\r\n            break;\r\n        case 21 /* JS_BLOCK_STATEMENT */:\r\n            genNodeList(node.body, context, true, false);\r\n            break;\r\n        // SSR only types\r\n        case 22 /* JS_TEMPLATE_LITERAL */:\r\n            break;\r\n        case 23 /* JS_IF_STATEMENT */:\r\n            break;\r\n        case 24 /* JS_ASSIGNMENT_EXPRESSION */:\r\n            break;\r\n        case 25 /* JS_SEQUENCE_EXPRESSION */:\r\n            break;\r\n        case 26 /* JS_RETURN_STATEMENT */:\r\n            break;\r\n        /* istanbul ignore next */\r\n        case 10 /* IF_BRANCH */:\r\n            // noop\r\n            break;\r\n        default:\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                assert(false, `unhandled codegen node type: ${node.type}`);\r\n                // make sure we exhaust all possible types\r\n                const exhaustiveCheck = node;\r\n                return exhaustiveCheck;\r\n            }\r\n    }\r\n}\r\nfunction genText(node, context) {\r\n    context.push(JSON.stringify(node.content), node);\r\n}\r\nfunction genExpression(node, context) {\r\n    const { content, isStatic } = node;\r\n    context.push(isStatic ? JSON.stringify(content) : content, node);\r\n}\r\nfunction genInterpolation(node, context) {\r\n    const { push, helper, pure } = context;\r\n    if (pure)\r\n        push(PURE_ANNOTATION);\r\n    push(`${helper(TO_DISPLAY_STRING)}(`);\r\n    genNode(node.content, context);\r\n    push(`)`);\r\n}\r\nfunction genCompoundExpression(node, context) {\r\n    for (let i = 0; i < node.children.length; i++) {\r\n        const child = node.children[i];\r\n        if (isString(child)) {\r\n            context.push(child);\r\n        }\r\n        else {\r\n            genNode(child, context);\r\n        }\r\n    }\r\n}\r\nfunction genExpressionAsPropertyKey(node, context) {\r\n    const { push } = context;\r\n    if (node.type === 8 /* COMPOUND_EXPRESSION */) {\r\n        push(`[`);\r\n        genCompoundExpression(node, context);\r\n        push(`]`);\r\n    }\r\n    else if (node.isStatic) {\r\n        // only quote keys if necessary\r\n        const text = isSimpleIdentifier(node.content)\r\n            ? node.content\r\n            : JSON.stringify(node.content);\r\n        push(text, node);\r\n    }\r\n    else {\r\n        push(`[${node.content}]`, node);\r\n    }\r\n}\r\nfunction genComment(node, context) {\r\n    const { push, helper, pure } = context;\r\n    if (pure) {\r\n        push(PURE_ANNOTATION);\r\n    }\r\n    push(`${helper(CREATE_COMMENT)}(${JSON.stringify(node.content)})`, node);\r\n}\r\nfunction genVNodeCall(node, context) {\r\n    const { push, helper, pure } = context;\r\n    const { tag, props, children, patchFlag, dynamicProps, directives, isBlock, disableTracking, isComponent } = node;\r\n    if (directives) {\r\n        push(helper(WITH_DIRECTIVES) + `(`);\r\n    }\r\n    if (isBlock) {\r\n        push(`(${helper(OPEN_BLOCK)}(${disableTracking ? `true` : ``}), `);\r\n    }\r\n    if (pure) {\r\n        push(PURE_ANNOTATION);\r\n    }\r\n    const callHelper = isBlock\r\n        ? getVNodeBlockHelper(context.inSSR, isComponent)\r\n        : getVNodeHelper(context.inSSR, isComponent);\r\n    push(helper(callHelper) + `(`, node);\r\n    genNodeList(genNullableArgs([tag, props, children, patchFlag, dynamicProps]), context);\r\n    push(`)`);\r\n    if (isBlock) {\r\n        push(`)`);\r\n    }\r\n    if (directives) {\r\n        push(`, `);\r\n        genNode(directives, context);\r\n        push(`)`);\r\n    }\r\n}\r\nfunction genNullableArgs(args) {\r\n    let i = args.length;\r\n    while (i--) {\r\n        if (args[i] != null)\r\n            break;\r\n    }\r\n    return args.slice(0, i + 1).map(arg => arg || `null`);\r\n}\r\n// JavaScript\r\nfunction genCallExpression(node, context) {\r\n    const { push, helper, pure } = context;\r\n    const callee = isString(node.callee) ? node.callee : helper(node.callee);\r\n    if (pure) {\r\n        push(PURE_ANNOTATION);\r\n    }\r\n    push(callee + `(`, node);\r\n    genNodeList(node.arguments, context);\r\n    push(`)`);\r\n}\r\nfunction genObjectExpression(node, context) {\r\n    const { push, indent, deindent, newline } = context;\r\n    const { properties } = node;\r\n    if (!properties.length) {\r\n        push(`{}`, node);\r\n        return;\r\n    }\r\n    const multilines = properties.length > 1 ||\r\n        (((process.env.NODE_ENV !== 'production')) &&\r\n            properties.some(p => p.value.type !== 4 /* SIMPLE_EXPRESSION */));\r\n    push(multilines ? `{` : `{ `);\r\n    multilines && indent();\r\n    for (let i = 0; i < properties.length; i++) {\r\n        const { key, value } = properties[i];\r\n        // key\r\n        genExpressionAsPropertyKey(key, context);\r\n        push(`: `);\r\n        // value\r\n        genNode(value, context);\r\n        if (i < properties.length - 1) {\r\n            // will only reach this if it's multilines\r\n            push(`,`);\r\n            newline();\r\n        }\r\n    }\r\n    multilines && deindent();\r\n    push(multilines ? `}` : ` }`);\r\n}\r\nfunction genArrayExpression(node, context) {\r\n    genNodeListAsArray(node.elements, context);\r\n}\r\nfunction genFunctionExpression(node, context) {\r\n    const { push, indent, deindent } = context;\r\n    const { params, returns, body, newline, isSlot } = node;\r\n    if (isSlot) {\r\n        // wrap slot functions with owner context\r\n        push(`_${helperNameMap[WITH_CTX]}(`);\r\n    }\r\n    push(`(`, node);\r\n    if (isArray(params)) {\r\n        genNodeList(params, context);\r\n    }\r\n    else if (params) {\r\n        genNode(params, context);\r\n    }\r\n    push(`) => `);\r\n    if (newline || body) {\r\n        push(`{`);\r\n        indent();\r\n    }\r\n    if (returns) {\r\n        if (newline) {\r\n            push(`return `);\r\n        }\r\n        if (isArray(returns)) {\r\n            genNodeListAsArray(returns, context);\r\n        }\r\n        else {\r\n            genNode(returns, context);\r\n        }\r\n    }\r\n    else if (body) {\r\n        genNode(body, context);\r\n    }\r\n    if (newline || body) {\r\n        deindent();\r\n        push(`}`);\r\n    }\r\n    if (isSlot) {\r\n        if (node.isNonScopedSlot) {\r\n            push(`, undefined, true`);\r\n        }\r\n        push(`)`);\r\n    }\r\n}\r\nfunction genConditionalExpression(node, context) {\r\n    const { test, consequent, alternate, newline: needNewline } = node;\r\n    const { push, indent, deindent, newline } = context;\r\n    if (test.type === 4 /* SIMPLE_EXPRESSION */) {\r\n        const needsParens = !isSimpleIdentifier(test.content);\r\n        needsParens && push(`(`);\r\n        genExpression(test, context);\r\n        needsParens && push(`)`);\r\n    }\r\n    else {\r\n        push(`(`);\r\n        genNode(test, context);\r\n        push(`)`);\r\n    }\r\n    needNewline && indent();\r\n    context.indentLevel++;\r\n    needNewline || push(` `);\r\n    push(`? `);\r\n    genNode(consequent, context);\r\n    context.indentLevel--;\r\n    needNewline && newline();\r\n    needNewline || push(` `);\r\n    push(`: `);\r\n    const isNested = alternate.type === 19 /* JS_CONDITIONAL_EXPRESSION */;\r\n    if (!isNested) {\r\n        context.indentLevel++;\r\n    }\r\n    genNode(alternate, context);\r\n    if (!isNested) {\r\n        context.indentLevel--;\r\n    }\r\n    needNewline && deindent(true /* without newline */);\r\n}\r\nfunction genCacheExpression(node, context) {\r\n    const { push, helper, indent, deindent, newline } = context;\r\n    push(`_cache[${node.index}] || (`);\r\n    if (node.isVNode) {\r\n        indent();\r\n        push(`${helper(SET_BLOCK_TRACKING)}(-1),`);\r\n        newline();\r\n    }\r\n    push(`_cache[${node.index}] = `);\r\n    genNode(node.value, context);\r\n    if (node.isVNode) {\r\n        push(`,`);\r\n        newline();\r\n        push(`${helper(SET_BLOCK_TRACKING)}(1),`);\r\n        newline();\r\n        push(`_cache[${node.index}]`);\r\n        deindent();\r\n    }\r\n    push(`)`);\r\n}\n\nfunction walkIdentifiers(root, onIdentifier, includeAll = false, parentStack = [], knownIds = Object.create(null)) {\r\n    {\r\n        return;\r\n    }\r\n}\r\nfunction isReferencedIdentifier(id, parent, parentStack) {\r\n    {\r\n        return false;\r\n    }\r\n}\r\nfunction isInDestructureAssignment(parent, parentStack) {\r\n    if (parent &&\r\n        (parent.type === 'ObjectProperty' || parent.type === 'ArrayPattern')) {\r\n        let i = parentStack.length;\r\n        while (i--) {\r\n            const p = parentStack[i];\r\n            if (p.type === 'AssignmentExpression') {\r\n                return true;\r\n            }\r\n            else if (p.type !== 'ObjectProperty' && !p.type.endsWith('Pattern')) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction walkFunctionParams(node, onIdent) {\r\n    for (const p of node.params) {\r\n        for (const id of extractIdentifiers(p)) {\r\n            onIdent(id);\r\n        }\r\n    }\r\n}\r\nfunction walkBlockDeclarations(block, onIdent) {\r\n    for (const stmt of block.body) {\r\n        if (stmt.type === 'VariableDeclaration') {\r\n            if (stmt.declare)\r\n                continue;\r\n            for (const decl of stmt.declarations) {\r\n                for (const id of extractIdentifiers(decl.id)) {\r\n                    onIdent(id);\r\n                }\r\n            }\r\n        }\r\n        else if (stmt.type === 'FunctionDeclaration' ||\r\n            stmt.type === 'ClassDeclaration') {\r\n            if (stmt.declare || !stmt.id)\r\n                continue;\r\n            onIdent(stmt.id);\r\n        }\r\n    }\r\n}\r\nfunction extractIdentifiers(param, nodes = []) {\r\n    switch (param.type) {\r\n        case 'Identifier':\r\n            nodes.push(param);\r\n            break;\r\n        case 'MemberExpression':\r\n            let object = param;\r\n            while (object.type === 'MemberExpression') {\r\n                object = object.object;\r\n            }\r\n            nodes.push(object);\r\n            break;\r\n        case 'ObjectPattern':\r\n            for (const prop of param.properties) {\r\n                if (prop.type === 'RestElement') {\r\n                    extractIdentifiers(prop.argument, nodes);\r\n                }\r\n                else {\r\n                    extractIdentifiers(prop.value, nodes);\r\n                }\r\n            }\r\n            break;\r\n        case 'ArrayPattern':\r\n            param.elements.forEach(element => {\r\n                if (element)\r\n                    extractIdentifiers(element, nodes);\r\n            });\r\n            break;\r\n        case 'RestElement':\r\n            extractIdentifiers(param.argument, nodes);\r\n            break;\r\n        case 'AssignmentPattern':\r\n            extractIdentifiers(param.left, nodes);\r\n            break;\r\n    }\r\n    return nodes;\r\n}\r\nconst isFunctionType = (node) => {\r\n    return /Function(?:Expression|Declaration)$|Method$/.test(node.type);\r\n};\r\nconst isStaticProperty = (node) => node &&\r\n    (node.type === 'ObjectProperty' || node.type === 'ObjectMethod') &&\r\n    !node.computed;\r\nconst isStaticPropertyKey = (node, parent) => isStaticProperty(parent) && parent.key === node;\n\n// these keywords should not appear inside expressions, but operators like\r\n// typeof, instanceof and in are allowed\r\nconst prohibitedKeywordRE = new RegExp('\\\\b' +\r\n    ('do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +\r\n        'super,throw,while,yield,delete,export,import,return,switch,default,' +\r\n        'extends,finally,continue,debugger,function,arguments,typeof,void')\r\n        .split(',')\r\n        .join('\\\\b|\\\\b') +\r\n    '\\\\b');\r\n// strip strings in expressions\r\nconst stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\r\n/**\r\n * Validate a non-prefixed expression.\r\n * This is only called when using the in-browser runtime compiler since it\r\n * doesn't prefix expressions.\r\n */\r\nfunction validateBrowserExpression(node, context, asParams = false, asRawStatements = false) {\r\n    const exp = node.content;\r\n    // empty expressions are validated per-directive since some directives\r\n    // do allow empty expressions.\r\n    if (!exp.trim()) {\r\n        return;\r\n    }\r\n    try {\r\n        new Function(asRawStatements\r\n            ? ` ${exp} `\r\n            : `return ${asParams ? `(${exp}) => {}` : `(${exp})`}`);\r\n    }\r\n    catch (e) {\r\n        let message = e.message;\r\n        const keywordMatch = exp\r\n            .replace(stripStringRE, '')\r\n            .match(prohibitedKeywordRE);\r\n        if (keywordMatch) {\r\n            message = `avoid using JavaScript keyword as property name: \"${keywordMatch[0]}\"`;\r\n        }\r\n        context.onError(createCompilerError(44 /* X_INVALID_EXPRESSION */, node.loc, undefined, message));\r\n    }\r\n}\n\nconst transformExpression = (node, context) => {\r\n    if (node.type === 5 /* INTERPOLATION */) {\r\n        node.content = processExpression(node.content, context);\r\n    }\r\n    else if (node.type === 1 /* ELEMENT */) {\r\n        // handle directives on element\r\n        for (let i = 0; i < node.props.length; i++) {\r\n            const dir = node.props[i];\r\n            // do not process for v-on & v-for since they are special handled\r\n            if (dir.type === 7 /* DIRECTIVE */ && dir.name !== 'for') {\r\n                const exp = dir.exp;\r\n                const arg = dir.arg;\r\n                // do not process exp if this is v-on:arg - we need special handling\r\n                // for wrapping inline statements.\r\n                if (exp &&\r\n                    exp.type === 4 /* SIMPLE_EXPRESSION */ &&\r\n                    !(dir.name === 'on' && arg)) {\r\n                    dir.exp = processExpression(exp, context, \r\n                    // slot args must be processed as function params\r\n                    dir.name === 'slot');\r\n                }\r\n                if (arg && arg.type === 4 /* SIMPLE_EXPRESSION */ && !arg.isStatic) {\r\n                    dir.arg = processExpression(arg, context);\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n// Important: since this function uses Node.js only dependencies, it should\r\n// always be used with a leading !true check so that it can be\r\n// tree-shaken from the browser build.\r\nfunction processExpression(node, context, \r\n// some expressions like v-slot props & v-for aliases should be parsed as\r\n// function params\r\nasParams = false, \r\n// v-on handler values may contain multiple statements\r\nasRawStatements = false, localVars = Object.create(context.identifiers)) {\r\n    {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            // simple in-browser validation (same logic in 2.x)\r\n            validateBrowserExpression(node, context, asParams, asRawStatements);\r\n        }\r\n        return node;\r\n    }\r\n}\n\nconst transformIf = createStructuralDirectiveTransform(/^(if|else|else-if)$/, (node, dir, context) => {\r\n    return processIf(node, dir, context, (ifNode, branch, isRoot) => {\r\n        // #1587: We need to dynamically increment the key based on the current\r\n        // node's sibling nodes, since chained v-if/else branches are\r\n        // rendered at the same depth\r\n        const siblings = context.parent.children;\r\n        let i = siblings.indexOf(ifNode);\r\n        let key = 0;\r\n        while (i-- >= 0) {\r\n            const sibling = siblings[i];\r\n            if (sibling && sibling.type === 9 /* IF */) {\r\n                key += sibling.branches.length;\r\n            }\r\n        }\r\n        // Exit callback. Complete the codegenNode when all children have been\r\n        // transformed.\r\n        return () => {\r\n            if (isRoot) {\r\n                ifNode.codegenNode = createCodegenNodeForBranch(branch, key, context);\r\n            }\r\n            else {\r\n                // attach this branch's codegen node to the v-if root.\r\n                const parentCondition = getParentCondition(ifNode.codegenNode);\r\n                parentCondition.alternate = createCodegenNodeForBranch(branch, key + ifNode.branches.length - 1, context);\r\n            }\r\n        };\r\n    });\r\n});\r\n// target-agnostic transform used for both Client and SSR\r\nfunction processIf(node, dir, context, processCodegen) {\r\n    if (dir.name !== 'else' &&\r\n        (!dir.exp || !dir.exp.content.trim())) {\r\n        const loc = dir.exp ? dir.exp.loc : node.loc;\r\n        context.onError(createCompilerError(28 /* X_V_IF_NO_EXPRESSION */, dir.loc));\r\n        dir.exp = createSimpleExpression(`true`, false, loc);\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && true && dir.exp) {\r\n        validateBrowserExpression(dir.exp, context);\r\n    }\r\n    if (dir.name === 'if') {\r\n        const branch = createIfBranch(node, dir);\r\n        const ifNode = {\r\n            type: 9 /* IF */,\r\n            loc: node.loc,\r\n            branches: [branch]\r\n        };\r\n        context.replaceNode(ifNode);\r\n        if (processCodegen) {\r\n            return processCodegen(ifNode, branch, true);\r\n        }\r\n    }\r\n    else {\r\n        // locate the adjacent v-if\r\n        const siblings = context.parent.children;\r\n        const comments = [];\r\n        let i = siblings.indexOf(node);\r\n        while (i-- >= -1) {\r\n            const sibling = siblings[i];\r\n            if ((process.env.NODE_ENV !== 'production') && sibling && sibling.type === 3 /* COMMENT */) {\r\n                context.removeNode(sibling);\r\n                comments.unshift(sibling);\r\n                continue;\r\n            }\r\n            if (sibling &&\r\n                sibling.type === 2 /* TEXT */ &&\r\n                !sibling.content.trim().length) {\r\n                context.removeNode(sibling);\r\n                continue;\r\n            }\r\n            if (sibling && sibling.type === 9 /* IF */) {\r\n                // Check if v-else was followed by v-else-if\r\n                if (dir.name === 'else-if' &&\r\n                    sibling.branches[sibling.branches.length - 1].condition === undefined) {\r\n                    context.onError(createCompilerError(30 /* X_V_ELSE_NO_ADJACENT_IF */, node.loc));\r\n                }\r\n                // move the node to the if node's branches\r\n                context.removeNode();\r\n                const branch = createIfBranch(node, dir);\r\n                if ((process.env.NODE_ENV !== 'production') &&\r\n                    comments.length &&\r\n                    // #3619 ignore comments if the v-if is direct child of <transition>\r\n                    !(context.parent &&\r\n                        context.parent.type === 1 /* ELEMENT */ &&\r\n                        isBuiltInType(context.parent.tag, 'transition'))) {\r\n                    branch.children = [...comments, ...branch.children];\r\n                }\r\n                // check if user is forcing same key on different branches\r\n                if ((process.env.NODE_ENV !== 'production') || !true) {\r\n                    const key = branch.userKey;\r\n                    if (key) {\r\n                        sibling.branches.forEach(({ userKey }) => {\r\n                            if (isSameKey(userKey, key)) {\r\n                                context.onError(createCompilerError(29 /* X_V_IF_SAME_KEY */, branch.userKey.loc));\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                sibling.branches.push(branch);\r\n                const onExit = processCodegen && processCodegen(sibling, branch, false);\r\n                // since the branch was removed, it will not be traversed.\r\n                // make sure to traverse here.\r\n                traverseNode(branch, context);\r\n                // call on exit\r\n                if (onExit)\r\n                    onExit();\r\n                // make sure to reset currentNode after traversal to indicate this\r\n                // node has been removed.\r\n                context.currentNode = null;\r\n            }\r\n            else {\r\n                context.onError(createCompilerError(30 /* X_V_ELSE_NO_ADJACENT_IF */, node.loc));\r\n            }\r\n            break;\r\n        }\r\n    }\r\n}\r\nfunction createIfBranch(node, dir) {\r\n    return {\r\n        type: 10 /* IF_BRANCH */,\r\n        loc: node.loc,\r\n        condition: dir.name === 'else' ? undefined : dir.exp,\r\n        children: node.tagType === 3 /* TEMPLATE */ && !findDir(node, 'for')\r\n            ? node.children\r\n            : [node],\r\n        userKey: findProp(node, `key`)\r\n    };\r\n}\r\nfunction createCodegenNodeForBranch(branch, keyIndex, context) {\r\n    if (branch.condition) {\r\n        return createConditionalExpression(branch.condition, createChildrenCodegenNode(branch, keyIndex, context), \r\n        // make sure to pass in asBlock: true so that the comment node call\r\n        // closes the current block.\r\n        createCallExpression(context.helper(CREATE_COMMENT), [\r\n            (process.env.NODE_ENV !== 'production') ? '\"v-if\"' : '\"\"',\r\n            'true'\r\n        ]));\r\n    }\r\n    else {\r\n        return createChildrenCodegenNode(branch, keyIndex, context);\r\n    }\r\n}\r\nfunction createChildrenCodegenNode(branch, keyIndex, context) {\r\n    const { helper } = context;\r\n    const keyProperty = createObjectProperty(`key`, createSimpleExpression(`${keyIndex}`, false, locStub, 2 /* CAN_HOIST */));\r\n    const { children } = branch;\r\n    const firstChild = children[0];\r\n    const needFragmentWrapper = children.length !== 1 || firstChild.type !== 1 /* ELEMENT */;\r\n    if (needFragmentWrapper) {\r\n        if (children.length === 1 && firstChild.type === 11 /* FOR */) {\r\n            // optimize away nested fragments when child is a ForNode\r\n            const vnodeCall = firstChild.codegenNode;\r\n            injectProp(vnodeCall, keyProperty, context);\r\n            return vnodeCall;\r\n        }\r\n        else {\r\n            let patchFlag = 64 /* STABLE_FRAGMENT */;\r\n            let patchFlagText = PatchFlagNames[64 /* STABLE_FRAGMENT */];\r\n            // check if the fragment actually contains a single valid child with\r\n            // the rest being comments\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                children.filter(c => c.type !== 3 /* COMMENT */).length === 1) {\r\n                patchFlag |= 2048 /* DEV_ROOT_FRAGMENT */;\r\n                patchFlagText += `, ${PatchFlagNames[2048 /* DEV_ROOT_FRAGMENT */]}`;\r\n            }\r\n            return createVNodeCall(context, helper(FRAGMENT), createObjectExpression([keyProperty]), children, patchFlag + ((process.env.NODE_ENV !== 'production') ? ` /* ${patchFlagText} */` : ``), undefined, undefined, true, false, false /* isComponent */, branch.loc);\r\n        }\r\n    }\r\n    else {\r\n        const ret = firstChild.codegenNode;\r\n        const vnodeCall = getMemoedVNodeCall(ret);\r\n        // Change createVNode to createBlock.\r\n        if (vnodeCall.type === 13 /* VNODE_CALL */) {\r\n            makeBlock(vnodeCall, context);\r\n        }\r\n        // inject branch key\r\n        injectProp(vnodeCall, keyProperty, context);\r\n        return ret;\r\n    }\r\n}\r\nfunction isSameKey(a, b) {\r\n    if (!a || a.type !== b.type) {\r\n        return false;\r\n    }\r\n    if (a.type === 6 /* ATTRIBUTE */) {\r\n        if (a.value.content !== b.value.content) {\r\n            return false;\r\n        }\r\n    }\r\n    else {\r\n        // directive\r\n        const exp = a.exp;\r\n        const branchExp = b.exp;\r\n        if (exp.type !== branchExp.type) {\r\n            return false;\r\n        }\r\n        if (exp.type !== 4 /* SIMPLE_EXPRESSION */ ||\r\n            exp.isStatic !== branchExp.isStatic ||\r\n            exp.content !== branchExp.content) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction getParentCondition(node) {\r\n    while (true) {\r\n        if (node.type === 19 /* JS_CONDITIONAL_EXPRESSION */) {\r\n            if (node.alternate.type === 19 /* JS_CONDITIONAL_EXPRESSION */) {\r\n                node = node.alternate;\r\n            }\r\n            else {\r\n                return node;\r\n            }\r\n        }\r\n        else if (node.type === 20 /* JS_CACHE_EXPRESSION */) {\r\n            node = node.value;\r\n        }\r\n    }\r\n}\n\nconst transformFor = createStructuralDirectiveTransform('for', (node, dir, context) => {\r\n    const { helper, removeHelper } = context;\r\n    return processFor(node, dir, context, forNode => {\r\n        // create the loop render function expression now, and add the\r\n        // iterator on exit after all children have been traversed\r\n        const renderExp = createCallExpression(helper(RENDER_LIST), [\r\n            forNode.source\r\n        ]);\r\n        const memo = findDir(node, 'memo');\r\n        const keyProp = findProp(node, `key`);\r\n        const keyExp = keyProp &&\r\n            (keyProp.type === 6 /* ATTRIBUTE */\r\n                ? createSimpleExpression(keyProp.value.content, true)\r\n                : keyProp.exp);\r\n        const keyProperty = keyProp ? createObjectProperty(`key`, keyExp) : null;\r\n        const isStableFragment = forNode.source.type === 4 /* SIMPLE_EXPRESSION */ &&\r\n            forNode.source.constType > 0 /* NOT_CONSTANT */;\r\n        const fragmentFlag = isStableFragment\r\n            ? 64 /* STABLE_FRAGMENT */\r\n            : keyProp\r\n                ? 128 /* KEYED_FRAGMENT */\r\n                : 256 /* UNKEYED_FRAGMENT */;\r\n        forNode.codegenNode = createVNodeCall(context, helper(FRAGMENT), undefined, renderExp, fragmentFlag +\r\n            ((process.env.NODE_ENV !== 'production') ? ` /* ${PatchFlagNames[fragmentFlag]} */` : ``), undefined, undefined, true /* isBlock */, !isStableFragment /* disableTracking */, false /* isComponent */, node.loc);\r\n        return () => {\r\n            // finish the codegen now that all children have been traversed\r\n            let childBlock;\r\n            const isTemplate = isTemplateNode(node);\r\n            const { children } = forNode;\r\n            // check <template v-for> key placement\r\n            if (((process.env.NODE_ENV !== 'production') || !true) && isTemplate) {\r\n                node.children.some(c => {\r\n                    if (c.type === 1 /* ELEMENT */) {\r\n                        const key = findProp(c, 'key');\r\n                        if (key) {\r\n                            context.onError(createCompilerError(33 /* X_V_FOR_TEMPLATE_KEY_PLACEMENT */, key.loc));\r\n                            return true;\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            const needFragmentWrapper = children.length !== 1 || children[0].type !== 1 /* ELEMENT */;\r\n            const slotOutlet = isSlotOutlet(node)\r\n                ? node\r\n                : isTemplate &&\r\n                    node.children.length === 1 &&\r\n                    isSlotOutlet(node.children[0])\r\n                    ? node.children[0] // api-extractor somehow fails to infer this\r\n                    : null;\r\n            if (slotOutlet) {\r\n                // <slot v-for=\"...\"> or <template v-for=\"...\"><slot/></template>\r\n                childBlock = slotOutlet.codegenNode;\r\n                if (isTemplate && keyProperty) {\r\n                    // <template v-for=\"...\" :key=\"...\"><slot/></template>\r\n                    // we need to inject the key to the renderSlot() call.\r\n                    // the props for renderSlot is passed as the 3rd argument.\r\n                    injectProp(childBlock, keyProperty, context);\r\n                }\r\n            }\r\n            else if (needFragmentWrapper) {\r\n                // <template v-for=\"...\"> with text or multi-elements\r\n                // should generate a fragment block for each loop\r\n                childBlock = createVNodeCall(context, helper(FRAGMENT), keyProperty ? createObjectExpression([keyProperty]) : undefined, node.children, 64 /* STABLE_FRAGMENT */ +\r\n                    ((process.env.NODE_ENV !== 'production')\r\n                        ? ` /* ${PatchFlagNames[64 /* STABLE_FRAGMENT */]} */`\r\n                        : ``), undefined, undefined, true, undefined, false /* isComponent */);\r\n            }\r\n            else {\r\n                // Normal element v-for. Directly use the child's codegenNode\r\n                // but mark it as a block.\r\n                childBlock = children[0]\r\n                    .codegenNode;\r\n                if (isTemplate && keyProperty) {\r\n                    injectProp(childBlock, keyProperty, context);\r\n                }\r\n                if (childBlock.isBlock !== !isStableFragment) {\r\n                    if (childBlock.isBlock) {\r\n                        // switch from block to vnode\r\n                        removeHelper(OPEN_BLOCK);\r\n                        removeHelper(getVNodeBlockHelper(context.inSSR, childBlock.isComponent));\r\n                    }\r\n                    else {\r\n                        // switch from vnode to block\r\n                        removeHelper(getVNodeHelper(context.inSSR, childBlock.isComponent));\r\n                    }\r\n                }\r\n                childBlock.isBlock = !isStableFragment;\r\n                if (childBlock.isBlock) {\r\n                    helper(OPEN_BLOCK);\r\n                    helper(getVNodeBlockHelper(context.inSSR, childBlock.isComponent));\r\n                }\r\n                else {\r\n                    helper(getVNodeHelper(context.inSSR, childBlock.isComponent));\r\n                }\r\n            }\r\n            if (memo) {\r\n                const loop = createFunctionExpression(createForLoopParams(forNode.parseResult, [\r\n                    createSimpleExpression(`_cached`)\r\n                ]));\r\n                loop.body = createBlockStatement([\r\n                    createCompoundExpression([`const _memo = (`, memo.exp, `)`]),\r\n                    createCompoundExpression([\r\n                        `if (_cached`,\r\n                        ...(keyExp ? [` && _cached.key === `, keyExp] : []),\r\n                        ` && ${context.helperString(IS_MEMO_SAME)}(_cached, _memo)) return _cached`\r\n                    ]),\r\n                    createCompoundExpression([`const _item = `, childBlock]),\r\n                    createSimpleExpression(`_item.memo = _memo`),\r\n                    createSimpleExpression(`return _item`)\r\n                ]);\r\n                renderExp.arguments.push(loop, createSimpleExpression(`_cache`), createSimpleExpression(String(context.cached++)));\r\n            }\r\n            else {\r\n                renderExp.arguments.push(createFunctionExpression(createForLoopParams(forNode.parseResult), childBlock, true /* force newline */));\r\n            }\r\n        };\r\n    });\r\n});\r\n// target-agnostic transform used for both Client and SSR\r\nfunction processFor(node, dir, context, processCodegen) {\r\n    if (!dir.exp) {\r\n        context.onError(createCompilerError(31 /* X_V_FOR_NO_EXPRESSION */, dir.loc));\r\n        return;\r\n    }\r\n    const parseResult = parseForExpression(\r\n    // can only be simple expression because vFor transform is applied\r\n    // before expression transform.\r\n    dir.exp, context);\r\n    if (!parseResult) {\r\n        context.onError(createCompilerError(32 /* X_V_FOR_MALFORMED_EXPRESSION */, dir.loc));\r\n        return;\r\n    }\r\n    const { addIdentifiers, removeIdentifiers, scopes } = context;\r\n    const { source, value, key, index } = parseResult;\r\n    const forNode = {\r\n        type: 11 /* FOR */,\r\n        loc: dir.loc,\r\n        source,\r\n        valueAlias: value,\r\n        keyAlias: key,\r\n        objectIndexAlias: index,\r\n        parseResult,\r\n        children: isTemplateNode(node) ? node.children : [node]\r\n    };\r\n    context.replaceNode(forNode);\r\n    // bookkeeping\r\n    scopes.vFor++;\r\n    const onExit = processCodegen && processCodegen(forNode);\r\n    return () => {\r\n        scopes.vFor--;\r\n        if (onExit)\r\n            onExit();\r\n    };\r\n}\r\nconst forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/;\r\n// This regex doesn't cover the case if key or index aliases have destructuring,\r\n// but those do not make sense in the first place, so this works in practice.\r\nconst forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/;\r\nconst stripParensRE = /^\\(|\\)$/g;\r\nfunction parseForExpression(input, context) {\r\n    const loc = input.loc;\r\n    const exp = input.content;\r\n    const inMatch = exp.match(forAliasRE);\r\n    if (!inMatch)\r\n        return;\r\n    const [, LHS, RHS] = inMatch;\r\n    const result = {\r\n        source: createAliasExpression(loc, RHS.trim(), exp.indexOf(RHS, LHS.length)),\r\n        value: undefined,\r\n        key: undefined,\r\n        index: undefined\r\n    };\r\n    if ((process.env.NODE_ENV !== 'production') && true) {\r\n        validateBrowserExpression(result.source, context);\r\n    }\r\n    let valueContent = LHS.trim().replace(stripParensRE, '').trim();\r\n    const trimmedOffset = LHS.indexOf(valueContent);\r\n    const iteratorMatch = valueContent.match(forIteratorRE);\r\n    if (iteratorMatch) {\r\n        valueContent = valueContent.replace(forIteratorRE, '').trim();\r\n        const keyContent = iteratorMatch[1].trim();\r\n        let keyOffset;\r\n        if (keyContent) {\r\n            keyOffset = exp.indexOf(keyContent, trimmedOffset + valueContent.length);\r\n            result.key = createAliasExpression(loc, keyContent, keyOffset);\r\n            if ((process.env.NODE_ENV !== 'production') && true) {\r\n                validateBrowserExpression(result.key, context, true);\r\n            }\r\n        }\r\n        if (iteratorMatch[2]) {\r\n            const indexContent = iteratorMatch[2].trim();\r\n            if (indexContent) {\r\n                result.index = createAliasExpression(loc, indexContent, exp.indexOf(indexContent, result.key\r\n                    ? keyOffset + keyContent.length\r\n                    : trimmedOffset + valueContent.length));\r\n                if ((process.env.NODE_ENV !== 'production') && true) {\r\n                    validateBrowserExpression(result.index, context, true);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (valueContent) {\r\n        result.value = createAliasExpression(loc, valueContent, trimmedOffset);\r\n        if ((process.env.NODE_ENV !== 'production') && true) {\r\n            validateBrowserExpression(result.value, context, true);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction createAliasExpression(range, content, offset) {\r\n    return createSimpleExpression(content, false, getInnerRange(range, offset, content.length));\r\n}\r\nfunction createForLoopParams({ value, key, index }, memoArgs = []) {\r\n    return createParamsList([value, key, index, ...memoArgs]);\r\n}\r\nfunction createParamsList(args) {\r\n    let i = args.length;\r\n    while (i--) {\r\n        if (args[i])\r\n            break;\r\n    }\r\n    return args\r\n        .slice(0, i + 1)\r\n        .map((arg, i) => arg || createSimpleExpression(`_`.repeat(i + 1), false));\r\n}\n\nconst defaultFallback = createSimpleExpression(`undefined`, false);\r\n// A NodeTransform that:\r\n// 1. Tracks scope identifiers for scoped slots so that they don't get prefixed\r\n//    by transformExpression. This is only applied in non-browser builds with\r\n//    { prefixIdentifiers: true }.\r\n// 2. Track v-slot depths so that we know a slot is inside another slot.\r\n//    Note the exit callback is executed before buildSlots() on the same node,\r\n//    so only nested slots see positive numbers.\r\nconst trackSlotScopes = (node, context) => {\r\n    if (node.type === 1 /* ELEMENT */ &&\r\n        (node.tagType === 1 /* COMPONENT */ ||\r\n            node.tagType === 3 /* TEMPLATE */)) {\r\n        // We are only checking non-empty v-slot here\r\n        // since we only care about slots that introduce scope variables.\r\n        const vSlot = findDir(node, 'slot');\r\n        if (vSlot) {\r\n            vSlot.exp;\r\n            context.scopes.vSlot++;\r\n            return () => {\r\n                context.scopes.vSlot--;\r\n            };\r\n        }\r\n    }\r\n};\r\n// A NodeTransform that tracks scope identifiers for scoped slots with v-for.\r\n// This transform is only applied in non-browser builds with { prefixIdentifiers: true }\r\nconst trackVForSlotScopes = (node, context) => {\r\n    let vFor;\r\n    if (isTemplateNode(node) &&\r\n        node.props.some(isVSlot) &&\r\n        (vFor = findDir(node, 'for'))) {\r\n        const result = (vFor.parseResult = parseForExpression(vFor.exp, context));\r\n        if (result) {\r\n            const { value, key, index } = result;\r\n            const { addIdentifiers, removeIdentifiers } = context;\r\n            value && addIdentifiers(value);\r\n            key && addIdentifiers(key);\r\n            index && addIdentifiers(index);\r\n            return () => {\r\n                value && removeIdentifiers(value);\r\n                key && removeIdentifiers(key);\r\n                index && removeIdentifiers(index);\r\n            };\r\n        }\r\n    }\r\n};\r\nconst buildClientSlotFn = (props, children, loc) => createFunctionExpression(props, children, false /* newline */, true /* isSlot */, children.length ? children[0].loc : loc);\r\n// Instead of being a DirectiveTransform, v-slot processing is called during\r\n// transformElement to build the slots object for a component.\r\nfunction buildSlots(node, context, buildSlotFn = buildClientSlotFn) {\r\n    context.helper(WITH_CTX);\r\n    const { children, loc } = node;\r\n    const slotsProperties = [];\r\n    const dynamicSlots = [];\r\n    // If the slot is inside a v-for or another v-slot, force it to be dynamic\r\n    // since it likely uses a scope variable.\r\n    let hasDynamicSlots = context.scopes.vSlot > 0 || context.scopes.vFor > 0;\r\n    // 1. Check for slot with slotProps on component itself.\r\n    //    <Comp v-slot=\"{ prop }\"/>\r\n    const onComponentSlot = findDir(node, 'slot', true);\r\n    if (onComponentSlot) {\r\n        const { arg, exp } = onComponentSlot;\r\n        if (arg && !isStaticExp(arg)) {\r\n            hasDynamicSlots = true;\r\n        }\r\n        slotsProperties.push(createObjectProperty(arg || createSimpleExpression('default', true), buildSlotFn(exp, children, loc)));\r\n    }\r\n    // 2. Iterate through children and check for template slots\r\n    //    <template v-slot:foo=\"{ prop }\">\r\n    let hasTemplateSlots = false;\r\n    let hasNamedDefaultSlot = false;\r\n    const implicitDefaultChildren = [];\r\n    const seenSlotNames = new Set();\r\n    for (let i = 0; i < children.length; i++) {\r\n        const slotElement = children[i];\r\n        let slotDir;\r\n        if (!isTemplateNode(slotElement) ||\r\n            !(slotDir = findDir(slotElement, 'slot', true))) {\r\n            // not a <template v-slot>, skip.\r\n            if (slotElement.type !== 3 /* COMMENT */) {\r\n                implicitDefaultChildren.push(slotElement);\r\n            }\r\n            continue;\r\n        }\r\n        if (onComponentSlot) {\r\n            // already has on-component slot - this is incorrect usage.\r\n            context.onError(createCompilerError(37 /* X_V_SLOT_MIXED_SLOT_USAGE */, slotDir.loc));\r\n            break;\r\n        }\r\n        hasTemplateSlots = true;\r\n        const { children: slotChildren, loc: slotLoc } = slotElement;\r\n        const { arg: slotName = createSimpleExpression(`default`, true), exp: slotProps, loc: dirLoc } = slotDir;\r\n        // check if name is dynamic.\r\n        let staticSlotName;\r\n        if (isStaticExp(slotName)) {\r\n            staticSlotName = slotName ? slotName.content : `default`;\r\n        }\r\n        else {\r\n            hasDynamicSlots = true;\r\n        }\r\n        const slotFunction = buildSlotFn(slotProps, slotChildren, slotLoc);\r\n        // check if this slot is conditional (v-if/v-for)\r\n        let vIf;\r\n        let vElse;\r\n        let vFor;\r\n        if ((vIf = findDir(slotElement, 'if'))) {\r\n            hasDynamicSlots = true;\r\n            dynamicSlots.push(createConditionalExpression(vIf.exp, buildDynamicSlot(slotName, slotFunction), defaultFallback));\r\n        }\r\n        else if ((vElse = findDir(slotElement, /^else(-if)?$/, true /* allowEmpty */))) {\r\n            // find adjacent v-if\r\n            let j = i;\r\n            let prev;\r\n            while (j--) {\r\n                prev = children[j];\r\n                if (prev.type !== 3 /* COMMENT */) {\r\n                    break;\r\n                }\r\n            }\r\n            if (prev && isTemplateNode(prev) && findDir(prev, 'if')) {\r\n                // remove node\r\n                children.splice(i, 1);\r\n                i--;\r\n                // attach this slot to previous conditional\r\n                let conditional = dynamicSlots[dynamicSlots.length - 1];\r\n                while (conditional.alternate.type === 19 /* JS_CONDITIONAL_EXPRESSION */) {\r\n                    conditional = conditional.alternate;\r\n                }\r\n                conditional.alternate = vElse.exp\r\n                    ? createConditionalExpression(vElse.exp, buildDynamicSlot(slotName, slotFunction), defaultFallback)\r\n                    : buildDynamicSlot(slotName, slotFunction);\r\n            }\r\n            else {\r\n                context.onError(createCompilerError(30 /* X_V_ELSE_NO_ADJACENT_IF */, vElse.loc));\r\n            }\r\n        }\r\n        else if ((vFor = findDir(slotElement, 'for'))) {\r\n            hasDynamicSlots = true;\r\n            const parseResult = vFor.parseResult ||\r\n                parseForExpression(vFor.exp, context);\r\n            if (parseResult) {\r\n                // Render the dynamic slots as an array and add it to the createSlot()\r\n                // args. The runtime knows how to handle it appropriately.\r\n                dynamicSlots.push(createCallExpression(context.helper(RENDER_LIST), [\r\n                    parseResult.source,\r\n                    createFunctionExpression(createForLoopParams(parseResult), buildDynamicSlot(slotName, slotFunction), true /* force newline */)\r\n                ]));\r\n            }\r\n            else {\r\n                context.onError(createCompilerError(32 /* X_V_FOR_MALFORMED_EXPRESSION */, vFor.loc));\r\n            }\r\n        }\r\n        else {\r\n            // check duplicate static names\r\n            if (staticSlotName) {\r\n                if (seenSlotNames.has(staticSlotName)) {\r\n                    context.onError(createCompilerError(38 /* X_V_SLOT_DUPLICATE_SLOT_NAMES */, dirLoc));\r\n                    continue;\r\n                }\r\n                seenSlotNames.add(staticSlotName);\r\n                if (staticSlotName === 'default') {\r\n                    hasNamedDefaultSlot = true;\r\n                }\r\n            }\r\n            slotsProperties.push(createObjectProperty(slotName, slotFunction));\r\n        }\r\n    }\r\n    if (!onComponentSlot) {\r\n        const buildDefaultSlotProperty = (props, children) => {\r\n            const fn = buildSlotFn(props, children, loc);\r\n            if (context.compatConfig) {\r\n                fn.isNonScopedSlot = true;\r\n            }\r\n            return createObjectProperty(`default`, fn);\r\n        };\r\n        if (!hasTemplateSlots) {\r\n            // implicit default slot (on component)\r\n            slotsProperties.push(buildDefaultSlotProperty(undefined, children));\r\n        }\r\n        else if (implicitDefaultChildren.length &&\r\n            // #3766\r\n            // with whitespace: 'preserve', whitespaces between slots will end up in\r\n            // implicitDefaultChildren. Ignore if all implicit children are whitespaces.\r\n            implicitDefaultChildren.some(node => isNonWhitespaceContent(node))) {\r\n            // implicit default slot (mixed with named slots)\r\n            if (hasNamedDefaultSlot) {\r\n                context.onError(createCompilerError(39 /* X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN */, implicitDefaultChildren[0].loc));\r\n            }\r\n            else {\r\n                slotsProperties.push(buildDefaultSlotProperty(undefined, implicitDefaultChildren));\r\n            }\r\n        }\r\n    }\r\n    const slotFlag = hasDynamicSlots\r\n        ? 2 /* DYNAMIC */\r\n        : hasForwardedSlots(node.children)\r\n            ? 3 /* FORWARDED */\r\n            : 1 /* STABLE */;\r\n    let slots = createObjectExpression(slotsProperties.concat(createObjectProperty(`_`, \r\n    // 2 = compiled but dynamic = can skip normalization, but must run diff\r\n    // 1 = compiled and static = can skip normalization AND diff as optimized\r\n    createSimpleExpression(slotFlag + ((process.env.NODE_ENV !== 'production') ? ` /* ${slotFlagsText[slotFlag]} */` : ``), false))), loc);\r\n    if (dynamicSlots.length) {\r\n        slots = createCallExpression(context.helper(CREATE_SLOTS), [\r\n            slots,\r\n            createArrayExpression(dynamicSlots)\r\n        ]);\r\n    }\r\n    return {\r\n        slots,\r\n        hasDynamicSlots\r\n    };\r\n}\r\nfunction buildDynamicSlot(name, fn) {\r\n    return createObjectExpression([\r\n        createObjectProperty(`name`, name),\r\n        createObjectProperty(`fn`, fn)\r\n    ]);\r\n}\r\nfunction hasForwardedSlots(children) {\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        switch (child.type) {\r\n            case 1 /* ELEMENT */:\r\n                if (child.tagType === 2 /* SLOT */ ||\r\n                    hasForwardedSlots(child.children)) {\r\n                    return true;\r\n                }\r\n                break;\r\n            case 9 /* IF */:\r\n                if (hasForwardedSlots(child.branches))\r\n                    return true;\r\n                break;\r\n            case 10 /* IF_BRANCH */:\r\n            case 11 /* FOR */:\r\n                if (hasForwardedSlots(child.children))\r\n                    return true;\r\n                break;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction isNonWhitespaceContent(node) {\r\n    if (node.type !== 2 /* TEXT */ && node.type !== 12 /* TEXT_CALL */)\r\n        return true;\r\n    return node.type === 2 /* TEXT */\r\n        ? !!node.content.trim()\r\n        : isNonWhitespaceContent(node.content);\r\n}\n\n// some directive transforms (e.g. v-model) may return a symbol for runtime\r\n// import, which should be used instead of a resolveDirective call.\r\nconst directiveImportMap = new WeakMap();\r\n// generate a JavaScript AST for this element's codegen\r\nconst transformElement = (node, context) => {\r\n    // perform the work on exit, after all child expressions have been\r\n    // processed and merged.\r\n    return function postTransformElement() {\r\n        node = context.currentNode;\r\n        if (!(node.type === 1 /* ELEMENT */ &&\r\n            (node.tagType === 0 /* ELEMENT */ ||\r\n                node.tagType === 1 /* COMPONENT */))) {\r\n            return;\r\n        }\r\n        const { tag, props } = node;\r\n        const isComponent = node.tagType === 1 /* COMPONENT */;\r\n        // The goal of the transform is to create a codegenNode implementing the\r\n        // VNodeCall interface.\r\n        let vnodeTag = isComponent\r\n            ? resolveComponentType(node, context)\r\n            : `\"${tag}\"`;\r\n        const isDynamicComponent = isObject(vnodeTag) && vnodeTag.callee === RESOLVE_DYNAMIC_COMPONENT;\r\n        let vnodeProps;\r\n        let vnodeChildren;\r\n        let vnodePatchFlag;\r\n        let patchFlag = 0;\r\n        let vnodeDynamicProps;\r\n        let dynamicPropNames;\r\n        let vnodeDirectives;\r\n        let shouldUseBlock = \r\n        // dynamic component may resolve to plain elements\r\n        isDynamicComponent ||\r\n            vnodeTag === TELEPORT ||\r\n            vnodeTag === SUSPENSE ||\r\n            (!isComponent &&\r\n                // <svg> and <foreignObject> must be forced into blocks so that block\r\n                // updates inside get proper isSVG flag at runtime. (#639, #643)\r\n                // This is technically web-specific, but splitting the logic out of core\r\n                // leads to too much unnecessary complexity.\r\n                (tag === 'svg' ||\r\n                    tag === 'foreignObject' ||\r\n                    // #938: elements with dynamic keys should be forced into blocks\r\n                    findProp(node, 'key', true)));\r\n        // props\r\n        if (props.length > 0) {\r\n            const propsBuildResult = buildProps(node, context);\r\n            vnodeProps = propsBuildResult.props;\r\n            patchFlag = propsBuildResult.patchFlag;\r\n            dynamicPropNames = propsBuildResult.dynamicPropNames;\r\n            const directives = propsBuildResult.directives;\r\n            vnodeDirectives =\r\n                directives && directives.length\r\n                    ? createArrayExpression(directives.map(dir => buildDirectiveArgs(dir, context)))\r\n                    : undefined;\r\n        }\r\n        // children\r\n        if (node.children.length > 0) {\r\n            if (vnodeTag === KEEP_ALIVE) {\r\n                // Although a built-in component, we compile KeepAlive with raw children\r\n                // instead of slot functions so that it can be used inside Transition\r\n                // or other Transition-wrapping HOCs.\r\n                // To ensure correct updates with block optimizations, we need to:\r\n                // 1. Force keep-alive into a block. This avoids its children being\r\n                //    collected by a parent block.\r\n                shouldUseBlock = true;\r\n                // 2. Force keep-alive to always be updated, since it uses raw children.\r\n                patchFlag |= 1024 /* DYNAMIC_SLOTS */;\r\n                if ((process.env.NODE_ENV !== 'production') && node.children.length > 1) {\r\n                    context.onError(createCompilerError(45 /* X_KEEP_ALIVE_INVALID_CHILDREN */, {\r\n                        start: node.children[0].loc.start,\r\n                        end: node.children[node.children.length - 1].loc.end,\r\n                        source: ''\r\n                    }));\r\n                }\r\n            }\r\n            const shouldBuildAsSlots = isComponent &&\r\n                // Teleport is not a real component and has dedicated runtime handling\r\n                vnodeTag !== TELEPORT &&\r\n                // explained above.\r\n                vnodeTag !== KEEP_ALIVE;\r\n            if (shouldBuildAsSlots) {\r\n                const { slots, hasDynamicSlots } = buildSlots(node, context);\r\n                vnodeChildren = slots;\r\n                if (hasDynamicSlots) {\r\n                    patchFlag |= 1024 /* DYNAMIC_SLOTS */;\r\n                }\r\n            }\r\n            else if (node.children.length === 1 && vnodeTag !== TELEPORT) {\r\n                const child = node.children[0];\r\n                const type = child.type;\r\n                // check for dynamic text children\r\n                const hasDynamicTextChild = type === 5 /* INTERPOLATION */ ||\r\n                    type === 8 /* COMPOUND_EXPRESSION */;\r\n                if (hasDynamicTextChild &&\r\n                    getConstantType(child, context) === 0 /* NOT_CONSTANT */) {\r\n                    patchFlag |= 1 /* TEXT */;\r\n                }\r\n                // pass directly if the only child is a text node\r\n                // (plain / interpolation / expression)\r\n                if (hasDynamicTextChild || type === 2 /* TEXT */) {\r\n                    vnodeChildren = child;\r\n                }\r\n                else {\r\n                    vnodeChildren = node.children;\r\n                }\r\n            }\r\n            else {\r\n                vnodeChildren = node.children;\r\n            }\r\n        }\r\n        // patchFlag & dynamicPropNames\r\n        if (patchFlag !== 0) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (patchFlag < 0) {\r\n                    // special flags (negative and mutually exclusive)\r\n                    vnodePatchFlag = patchFlag + ` /* ${PatchFlagNames[patchFlag]} */`;\r\n                }\r\n                else {\r\n                    // bitwise flags\r\n                    const flagNames = Object.keys(PatchFlagNames)\r\n                        .map(Number)\r\n                        .filter(n => n > 0 && patchFlag & n)\r\n                        .map(n => PatchFlagNames[n])\r\n                        .join(`, `);\r\n                    vnodePatchFlag = patchFlag + ` /* ${flagNames} */`;\r\n                }\r\n            }\r\n            else {\r\n                vnodePatchFlag = String(patchFlag);\r\n            }\r\n            if (dynamicPropNames && dynamicPropNames.length) {\r\n                vnodeDynamicProps = stringifyDynamicPropNames(dynamicPropNames);\r\n            }\r\n        }\r\n        node.codegenNode = createVNodeCall(context, vnodeTag, vnodeProps, vnodeChildren, vnodePatchFlag, vnodeDynamicProps, vnodeDirectives, !!shouldUseBlock, false /* disableTracking */, isComponent, node.loc);\r\n    };\r\n};\r\nfunction resolveComponentType(node, context, ssr = false) {\r\n    let { tag } = node;\r\n    // 1. dynamic component\r\n    const isExplicitDynamic = isComponentTag(tag);\r\n    const isProp = findProp(node, 'is');\r\n    if (isProp) {\r\n        if (isExplicitDynamic ||\r\n            (isCompatEnabled(\"COMPILER_IS_ON_ELEMENT\" /* COMPILER_IS_ON_ELEMENT */, context))) {\r\n            const exp = isProp.type === 6 /* ATTRIBUTE */\r\n                ? isProp.value && createSimpleExpression(isProp.value.content, true)\r\n                : isProp.exp;\r\n            if (exp) {\r\n                return createCallExpression(context.helper(RESOLVE_DYNAMIC_COMPONENT), [\r\n                    exp\r\n                ]);\r\n            }\r\n        }\r\n        else if (isProp.type === 6 /* ATTRIBUTE */ &&\r\n            isProp.value.content.startsWith('vue:')) {\r\n            // <button is=\"vue:xxx\">\r\n            // if not <component>, only is value that starts with \"vue:\" will be\r\n            // treated as component by the parse phase and reach here, unless it's\r\n            // compat mode where all is values are considered components\r\n            tag = isProp.value.content.slice(4);\r\n        }\r\n    }\r\n    // 1.5 v-is (TODO: Deprecate)\r\n    const isDir = !isExplicitDynamic && findDir(node, 'is');\r\n    if (isDir && isDir.exp) {\r\n        return createCallExpression(context.helper(RESOLVE_DYNAMIC_COMPONENT), [\r\n            isDir.exp\r\n        ]);\r\n    }\r\n    // 2. built-in components (Teleport, Transition, KeepAlive, Suspense...)\r\n    const builtIn = isCoreComponent(tag) || context.isBuiltInComponent(tag);\r\n    if (builtIn) {\r\n        // built-ins are simply fallthroughs / have special handling during ssr\r\n        // so we don't need to import their runtime equivalents\r\n        if (!ssr)\r\n            context.helper(builtIn);\r\n        return builtIn;\r\n    }\r\n    // 5. user component (resolve)\r\n    context.helper(RESOLVE_COMPONENT);\r\n    context.components.add(tag);\r\n    return toValidAssetId(tag, `component`);\r\n}\r\nfunction buildProps(node, context, props = node.props, ssr = false) {\r\n    const { tag, loc: elementLoc } = node;\r\n    const isComponent = node.tagType === 1 /* COMPONENT */;\r\n    let properties = [];\r\n    const mergeArgs = [];\r\n    const runtimeDirectives = [];\r\n    // patchFlag analysis\r\n    let patchFlag = 0;\r\n    let hasRef = false;\r\n    let hasClassBinding = false;\r\n    let hasStyleBinding = false;\r\n    let hasHydrationEventBinding = false;\r\n    let hasDynamicKeys = false;\r\n    let hasVnodeHook = false;\r\n    const dynamicPropNames = [];\r\n    const analyzePatchFlag = ({ key, value }) => {\r\n        if (isStaticExp(key)) {\r\n            const name = key.content;\r\n            const isEventHandler = isOn(name);\r\n            if (!isComponent &&\r\n                isEventHandler &&\r\n                // omit the flag for click handlers because hydration gives click\r\n                // dedicated fast path.\r\n                name.toLowerCase() !== 'onclick' &&\r\n                // omit v-model handlers\r\n                name !== 'onUpdate:modelValue' &&\r\n                // omit onVnodeXXX hooks\r\n                !isReservedProp(name)) {\r\n                hasHydrationEventBinding = true;\r\n            }\r\n            if (isEventHandler && isReservedProp(name)) {\r\n                hasVnodeHook = true;\r\n            }\r\n            if (value.type === 20 /* JS_CACHE_EXPRESSION */ ||\r\n                ((value.type === 4 /* SIMPLE_EXPRESSION */ ||\r\n                    value.type === 8 /* COMPOUND_EXPRESSION */) &&\r\n                    getConstantType(value, context) > 0)) {\r\n                // skip if the prop is a cached handler or has constant value\r\n                return;\r\n            }\r\n            if (name === 'ref') {\r\n                hasRef = true;\r\n            }\r\n            else if (name === 'class') {\r\n                hasClassBinding = true;\r\n            }\r\n            else if (name === 'style') {\r\n                hasStyleBinding = true;\r\n            }\r\n            else if (name !== 'key' && !dynamicPropNames.includes(name)) {\r\n                dynamicPropNames.push(name);\r\n            }\r\n            // treat the dynamic class and style binding of the component as dynamic props\r\n            if (isComponent &&\r\n                (name === 'class' || name === 'style') &&\r\n                !dynamicPropNames.includes(name)) {\r\n                dynamicPropNames.push(name);\r\n            }\r\n        }\r\n        else {\r\n            hasDynamicKeys = true;\r\n        }\r\n    };\r\n    for (let i = 0; i < props.length; i++) {\r\n        // static attribute\r\n        const prop = props[i];\r\n        if (prop.type === 6 /* ATTRIBUTE */) {\r\n            const { loc, name, value } = prop;\r\n            let valueNode = createSimpleExpression(value ? value.content : '', true, value ? value.loc : loc);\r\n            if (name === 'ref') {\r\n                hasRef = true;\r\n            }\r\n            // skip is on <component>, or is=\"vue:xxx\"\r\n            if (name === 'is' &&\r\n                (isComponentTag(tag) ||\r\n                    (value && value.content.startsWith('vue:')) ||\r\n                    (isCompatEnabled(\"COMPILER_IS_ON_ELEMENT\" /* COMPILER_IS_ON_ELEMENT */, context)))) {\r\n                continue;\r\n            }\r\n            properties.push(createObjectProperty(createSimpleExpression(name, true, getInnerRange(loc, 0, name.length)), valueNode));\r\n        }\r\n        else {\r\n            // directives\r\n            const { name, arg, exp, loc } = prop;\r\n            const isVBind = name === 'bind';\r\n            const isVOn = name === 'on';\r\n            // skip v-slot - it is handled by its dedicated transform.\r\n            if (name === 'slot') {\r\n                if (!isComponent) {\r\n                    context.onError(createCompilerError(40 /* X_V_SLOT_MISPLACED */, loc));\r\n                }\r\n                continue;\r\n            }\r\n            // skip v-once/v-memo - they are handled by dedicated transforms.\r\n            if (name === 'once' || name === 'memo') {\r\n                continue;\r\n            }\r\n            // skip v-is and :is on <component>\r\n            if (name === 'is' ||\r\n                (isVBind &&\r\n                    isBindKey(arg, 'is') &&\r\n                    (isComponentTag(tag) ||\r\n                        (isCompatEnabled(\"COMPILER_IS_ON_ELEMENT\" /* COMPILER_IS_ON_ELEMENT */, context))))) {\r\n                continue;\r\n            }\r\n            // skip v-on in SSR compilation\r\n            if (isVOn && ssr) {\r\n                continue;\r\n            }\r\n            // special case for v-bind and v-on with no argument\r\n            if (!arg && (isVBind || isVOn)) {\r\n                hasDynamicKeys = true;\r\n                if (exp) {\r\n                    if (properties.length) {\r\n                        mergeArgs.push(createObjectExpression(dedupeProperties(properties), elementLoc));\r\n                        properties = [];\r\n                    }\r\n                    if (isVBind) {\r\n                        {\r\n                            // 2.x v-bind object order compat\r\n                            if ((process.env.NODE_ENV !== 'production')) {\r\n                                const hasOverridableKeys = mergeArgs.some(arg => {\r\n                                    if (arg.type === 15 /* JS_OBJECT_EXPRESSION */) {\r\n                                        return arg.properties.some(({ key }) => {\r\n                                            if (key.type !== 4 /* SIMPLE_EXPRESSION */ ||\r\n                                                !key.isStatic) {\r\n                                                return true;\r\n                                            }\r\n                                            return (key.content !== 'class' &&\r\n                                                key.content !== 'style' &&\r\n                                                !isOn(key.content));\r\n                                        });\r\n                                    }\r\n                                    else {\r\n                                        // dynamic expression\r\n                                        return true;\r\n                                    }\r\n                                });\r\n                                if (hasOverridableKeys) {\r\n                                    checkCompatEnabled(\"COMPILER_V_BIND_OBJECT_ORDER\" /* COMPILER_V_BIND_OBJECT_ORDER */, context, loc);\r\n                                }\r\n                            }\r\n                            if (isCompatEnabled(\"COMPILER_V_BIND_OBJECT_ORDER\" /* COMPILER_V_BIND_OBJECT_ORDER */, context)) {\r\n                                mergeArgs.unshift(exp);\r\n                                continue;\r\n                            }\r\n                        }\r\n                        mergeArgs.push(exp);\r\n                    }\r\n                    else {\r\n                        // v-on=\"obj\" -> toHandlers(obj)\r\n                        mergeArgs.push({\r\n                            type: 14 /* JS_CALL_EXPRESSION */,\r\n                            loc,\r\n                            callee: context.helper(TO_HANDLERS),\r\n                            arguments: [exp]\r\n                        });\r\n                    }\r\n                }\r\n                else {\r\n                    context.onError(createCompilerError(isVBind\r\n                        ? 34 /* X_V_BIND_NO_EXPRESSION */\r\n                        : 35 /* X_V_ON_NO_EXPRESSION */, loc));\r\n                }\r\n                continue;\r\n            }\r\n            const directiveTransform = context.directiveTransforms[name];\r\n            if (directiveTransform) {\r\n                // has built-in directive transform.\r\n                const { props, needRuntime } = directiveTransform(prop, node, context);\r\n                !ssr && props.forEach(analyzePatchFlag);\r\n                properties.push(...props);\r\n                if (needRuntime) {\r\n                    runtimeDirectives.push(prop);\r\n                    if (isSymbol(needRuntime)) {\r\n                        directiveImportMap.set(prop, needRuntime);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // no built-in transform, this is a user custom directive.\r\n                runtimeDirectives.push(prop);\r\n            }\r\n        }\r\n        if (prop.type === 6 /* ATTRIBUTE */ &&\r\n            prop.name === 'ref' &&\r\n            context.scopes.vFor > 0 &&\r\n            checkCompatEnabled(\"COMPILER_V_FOR_REF\" /* COMPILER_V_FOR_REF */, context, prop.loc)) {\r\n            properties.push(createObjectProperty(createSimpleExpression('refInFor', true), createSimpleExpression('true', false)));\r\n        }\r\n    }\r\n    let propsExpression = undefined;\r\n    // has v-bind=\"object\" or v-on=\"object\", wrap with mergeProps\r\n    if (mergeArgs.length) {\r\n        if (properties.length) {\r\n            mergeArgs.push(createObjectExpression(dedupeProperties(properties), elementLoc));\r\n        }\r\n        if (mergeArgs.length > 1) {\r\n            propsExpression = createCallExpression(context.helper(MERGE_PROPS), mergeArgs, elementLoc);\r\n        }\r\n        else {\r\n            // single v-bind with nothing else - no need for a mergeProps call\r\n            propsExpression = mergeArgs[0];\r\n        }\r\n    }\r\n    else if (properties.length) {\r\n        propsExpression = createObjectExpression(dedupeProperties(properties), elementLoc);\r\n    }\r\n    // patchFlag analysis\r\n    if (hasDynamicKeys) {\r\n        patchFlag |= 16 /* FULL_PROPS */;\r\n    }\r\n    else {\r\n        if (hasClassBinding && !isComponent) {\r\n            patchFlag |= 2 /* CLASS */;\r\n        }\r\n        if (hasStyleBinding && !isComponent) {\r\n            patchFlag |= 4 /* STYLE */;\r\n        }\r\n        if (dynamicPropNames.length) {\r\n            patchFlag |= 8 /* PROPS */;\r\n        }\r\n        if (hasHydrationEventBinding) {\r\n            patchFlag |= 32 /* HYDRATE_EVENTS */;\r\n        }\r\n    }\r\n    if ((patchFlag === 0 || patchFlag === 32 /* HYDRATE_EVENTS */) &&\r\n        (hasRef || hasVnodeHook || runtimeDirectives.length > 0)) {\r\n        patchFlag |= 512 /* NEED_PATCH */;\r\n    }\r\n    // pre-normalize props, SSR is skipped for now\r\n    if (!context.inSSR && propsExpression) {\r\n        switch (propsExpression.type) {\r\n            case 15 /* JS_OBJECT_EXPRESSION */:\r\n                // means that there is no v-bind,\r\n                // but still need to deal with dynamic key binding\r\n                let classKeyIndex = -1;\r\n                let styleKeyIndex = -1;\r\n                let hasDynamicKey = false;\r\n                for (let i = 0; i < propsExpression.properties.length; i++) {\r\n                    const key = propsExpression.properties[i].key;\r\n                    if (isStaticExp(key)) {\r\n                        if (key.content === 'class') {\r\n                            classKeyIndex = i;\r\n                        }\r\n                        else if (key.content === 'style') {\r\n                            styleKeyIndex = i;\r\n                        }\r\n                    }\r\n                    else if (!key.isHandlerKey) {\r\n                        hasDynamicKey = true;\r\n                    }\r\n                }\r\n                const classProp = propsExpression.properties[classKeyIndex];\r\n                const styleProp = propsExpression.properties[styleKeyIndex];\r\n                // no dynamic key\r\n                if (!hasDynamicKey) {\r\n                    if (classProp && !isStaticExp(classProp.value)) {\r\n                        classProp.value = createCallExpression(context.helper(NORMALIZE_CLASS), [classProp.value]);\r\n                    }\r\n                    if (styleProp &&\r\n                        !isStaticExp(styleProp.value) &&\r\n                        // the static style is compiled into an object,\r\n                        // so use `hasStyleBinding` to ensure that it is a dynamic style binding\r\n                        (hasStyleBinding ||\r\n                            // v-bind:style and style both exist,\r\n                            // v-bind:style with static literal object\r\n                            styleProp.value.type === 17 /* JS_ARRAY_EXPRESSION */)) {\r\n                        styleProp.value = createCallExpression(context.helper(NORMALIZE_STYLE), [styleProp.value]);\r\n                    }\r\n                }\r\n                else {\r\n                    // dynamic key binding, wrap with `normalizeProps`\r\n                    propsExpression = createCallExpression(context.helper(NORMALIZE_PROPS), [propsExpression]);\r\n                }\r\n                break;\r\n            case 14 /* JS_CALL_EXPRESSION */:\r\n                // mergeProps call, do nothing\r\n                break;\r\n            default:\r\n                // single v-bind\r\n                propsExpression = createCallExpression(context.helper(NORMALIZE_PROPS), [\r\n                    createCallExpression(context.helper(GUARD_REACTIVE_PROPS), [\r\n                        propsExpression\r\n                    ])\r\n                ]);\r\n                break;\r\n        }\r\n    }\r\n    return {\r\n        props: propsExpression,\r\n        directives: runtimeDirectives,\r\n        patchFlag,\r\n        dynamicPropNames\r\n    };\r\n}\r\n// Dedupe props in an object literal.\r\n// Literal duplicated attributes would have been warned during the parse phase,\r\n// however, it's possible to encounter duplicated `onXXX` handlers with different\r\n// modifiers. We also need to merge static and dynamic class / style attributes.\r\n// - onXXX handlers / style: merge into array\r\n// - class: merge into single expression with concatenation\r\nfunction dedupeProperties(properties) {\r\n    const knownProps = new Map();\r\n    const deduped = [];\r\n    for (let i = 0; i < properties.length; i++) {\r\n        const prop = properties[i];\r\n        // dynamic keys are always allowed\r\n        if (prop.key.type === 8 /* COMPOUND_EXPRESSION */ || !prop.key.isStatic) {\r\n            deduped.push(prop);\r\n            continue;\r\n        }\r\n        const name = prop.key.content;\r\n        const existing = knownProps.get(name);\r\n        if (existing) {\r\n            if (name === 'style' || name === 'class' || isOn(name)) {\r\n                mergeAsArray(existing, prop);\r\n            }\r\n            // unexpected duplicate, should have emitted error during parse\r\n        }\r\n        else {\r\n            knownProps.set(name, prop);\r\n            deduped.push(prop);\r\n        }\r\n    }\r\n    return deduped;\r\n}\r\nfunction mergeAsArray(existing, incoming) {\r\n    if (existing.value.type === 17 /* JS_ARRAY_EXPRESSION */) {\r\n        existing.value.elements.push(incoming.value);\r\n    }\r\n    else {\r\n        existing.value = createArrayExpression([existing.value, incoming.value], existing.loc);\r\n    }\r\n}\r\nfunction buildDirectiveArgs(dir, context) {\r\n    const dirArgs = [];\r\n    const runtime = directiveImportMap.get(dir);\r\n    if (runtime) {\r\n        // built-in directive with runtime\r\n        dirArgs.push(context.helperString(runtime));\r\n    }\r\n    else {\r\n        {\r\n            // inject statement for resolving directive\r\n            context.helper(RESOLVE_DIRECTIVE);\r\n            context.directives.add(dir.name);\r\n            dirArgs.push(toValidAssetId(dir.name, `directive`));\r\n        }\r\n    }\r\n    const { loc } = dir;\r\n    if (dir.exp)\r\n        dirArgs.push(dir.exp);\r\n    if (dir.arg) {\r\n        if (!dir.exp) {\r\n            dirArgs.push(`void 0`);\r\n        }\r\n        dirArgs.push(dir.arg);\r\n    }\r\n    if (Object.keys(dir.modifiers).length) {\r\n        if (!dir.arg) {\r\n            if (!dir.exp) {\r\n                dirArgs.push(`void 0`);\r\n            }\r\n            dirArgs.push(`void 0`);\r\n        }\r\n        const trueExpression = createSimpleExpression(`true`, false, loc);\r\n        dirArgs.push(createObjectExpression(dir.modifiers.map(modifier => createObjectProperty(modifier, trueExpression)), loc));\r\n    }\r\n    return createArrayExpression(dirArgs, dir.loc);\r\n}\r\nfunction stringifyDynamicPropNames(props) {\r\n    let propsNamesString = `[`;\r\n    for (let i = 0, l = props.length; i < l; i++) {\r\n        propsNamesString += JSON.stringify(props[i]);\r\n        if (i < l - 1)\r\n            propsNamesString += ', ';\r\n    }\r\n    return propsNamesString + `]`;\r\n}\r\nfunction isComponentTag(tag) {\r\n    return tag[0].toLowerCase() + tag.slice(1) === 'component';\r\n}\n\n(process.env.NODE_ENV !== 'production')\r\n    ? Object.freeze({})\r\n    : {};\r\n(process.env.NODE_ENV !== 'production') ? Object.freeze([]) : [];\r\nconst cacheStringFunction = (fn) => {\r\n    const cache = Object.create(null);\r\n    return ((str) => {\r\n        const hit = cache[str];\r\n        return hit || (cache[str] = fn(str));\r\n    });\r\n};\r\nconst camelizeRE = /-(\\w)/g;\r\n/**\r\n * @private\r\n */\r\nconst camelize = cacheStringFunction((str) => {\r\n    return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''));\r\n});\n\nconst transformSlotOutlet = (node, context) => {\r\n    if (isSlotOutlet(node)) {\r\n        const { children, loc } = node;\r\n        const { slotName, slotProps } = processSlotOutlet(node, context);\r\n        const slotArgs = [\r\n            context.prefixIdentifiers ? `_ctx.$slots` : `$slots`,\r\n            slotName,\r\n            '{}',\r\n            'undefined',\r\n            'true'\r\n        ];\r\n        let expectedLen = 2;\r\n        if (slotProps) {\r\n            slotArgs[2] = slotProps;\r\n            expectedLen = 3;\r\n        }\r\n        if (children.length) {\r\n            slotArgs[3] = createFunctionExpression([], children, false, false, loc);\r\n            expectedLen = 4;\r\n        }\r\n        if (context.scopeId && !context.slotted) {\r\n            expectedLen = 5;\r\n        }\r\n        slotArgs.splice(expectedLen); // remove unused arguments\r\n        node.codegenNode = createCallExpression(context.helper(RENDER_SLOT), slotArgs, loc);\r\n    }\r\n};\r\nfunction processSlotOutlet(node, context) {\r\n    let slotName = `\"default\"`;\r\n    let slotProps = undefined;\r\n    const nonNameProps = [];\r\n    for (let i = 0; i < node.props.length; i++) {\r\n        const p = node.props[i];\r\n        if (p.type === 6 /* ATTRIBUTE */) {\r\n            if (p.value) {\r\n                if (p.name === 'name') {\r\n                    slotName = JSON.stringify(p.value.content);\r\n                }\r\n                else {\r\n                    p.name = camelize(p.name);\r\n                    nonNameProps.push(p);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (p.name === 'bind' && isBindKey(p.arg, 'name')) {\r\n                if (p.exp)\r\n                    slotName = p.exp;\r\n            }\r\n            else {\r\n                if (p.name === 'bind' && p.arg && isStaticExp(p.arg)) {\r\n                    p.arg.content = camelize(p.arg.content);\r\n                }\r\n                nonNameProps.push(p);\r\n            }\r\n        }\r\n    }\r\n    if (nonNameProps.length > 0) {\r\n        const { props, directives } = buildProps(node, context, nonNameProps);\r\n        slotProps = props;\r\n        if (directives.length) {\r\n            context.onError(createCompilerError(36 /* X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET */, directives[0].loc));\r\n        }\r\n    }\r\n    return {\r\n        slotName,\r\n        slotProps\r\n    };\r\n}\n\nconst fnExpRE = /^\\s*([\\w$_]+|(async\\s*)?\\([^)]*?\\))\\s*=>|^\\s*(async\\s+)?function(?:\\s+[\\w$]+)?\\s*\\(/;\r\nconst transformOn = (dir, node, context, augmentor) => {\r\n    const { loc, modifiers, arg } = dir;\r\n    if (!dir.exp && !modifiers.length) {\r\n        context.onError(createCompilerError(35 /* X_V_ON_NO_EXPRESSION */, loc));\r\n    }\r\n    let eventName;\r\n    if (arg.type === 4 /* SIMPLE_EXPRESSION */) {\r\n        if (arg.isStatic) {\r\n            const rawName = arg.content;\r\n            // for all event listeners, auto convert it to camelCase. See issue #2249\r\n            eventName = createSimpleExpression(toHandlerKey(camelize$1(rawName)), true, arg.loc);\r\n        }\r\n        else {\r\n            // #2388\r\n            eventName = createCompoundExpression([\r\n                `${context.helperString(TO_HANDLER_KEY)}(`,\r\n                arg,\r\n                `)`\r\n            ]);\r\n        }\r\n    }\r\n    else {\r\n        // already a compound expression.\r\n        eventName = arg;\r\n        eventName.children.unshift(`${context.helperString(TO_HANDLER_KEY)}(`);\r\n        eventName.children.push(`)`);\r\n    }\r\n    // handler processing\r\n    let exp = dir.exp;\r\n    if (exp && !exp.content.trim()) {\r\n        exp = undefined;\r\n    }\r\n    let shouldCache = context.cacheHandlers && !exp && !context.inVOnce;\r\n    if (exp) {\r\n        const isMemberExp = isMemberExpression(exp.content);\r\n        const isInlineStatement = !(isMemberExp || fnExpRE.test(exp.content));\r\n        const hasMultipleStatements = exp.content.includes(`;`);\r\n        if ((process.env.NODE_ENV !== 'production') && true) {\r\n            validateBrowserExpression(exp, context, false, hasMultipleStatements);\r\n        }\r\n        if (isInlineStatement || (shouldCache && isMemberExp)) {\r\n            // wrap inline statement in a function expression\r\n            exp = createCompoundExpression([\r\n                `${isInlineStatement\r\n                    ? `$event`\r\n                    : `${``}(...args)`} => ${hasMultipleStatements ? `{` : `(`}`,\r\n                exp,\r\n                hasMultipleStatements ? `}` : `)`\r\n            ]);\r\n        }\r\n    }\r\n    let ret = {\r\n        props: [\r\n            createObjectProperty(eventName, exp || createSimpleExpression(`() => {}`, false, loc))\r\n        ]\r\n    };\r\n    // apply extended compiler augmentor\r\n    if (augmentor) {\r\n        ret = augmentor(ret);\r\n    }\r\n    if (shouldCache) {\r\n        // cache handlers so that it's always the same handler being passed down.\r\n        // this avoids unnecessary re-renders when users use inline handlers on\r\n        // components.\r\n        ret.props[0].value = context.cache(ret.props[0].value);\r\n    }\r\n    // mark the key as handler for props normalization check\r\n    ret.props.forEach(p => (p.key.isHandlerKey = true));\r\n    return ret;\r\n};\n\n// v-bind without arg is handled directly in ./transformElements.ts due to it affecting\r\n// codegen for the entire props object. This transform here is only for v-bind\r\n// *with* args.\r\nconst transformBind = (dir, _node, context) => {\r\n    const { exp, modifiers, loc } = dir;\r\n    const arg = dir.arg;\r\n    if (arg.type !== 4 /* SIMPLE_EXPRESSION */) {\r\n        arg.children.unshift(`(`);\r\n        arg.children.push(`) || \"\"`);\r\n    }\r\n    else if (!arg.isStatic) {\r\n        arg.content = `${arg.content} || \"\"`;\r\n    }\r\n    // .sync is replaced by v-model:arg\r\n    if (modifiers.includes('camel')) {\r\n        if (arg.type === 4 /* SIMPLE_EXPRESSION */) {\r\n            if (arg.isStatic) {\r\n                arg.content = camelize$1(arg.content);\r\n            }\r\n            else {\r\n                arg.content = `${context.helperString(CAMELIZE)}(${arg.content})`;\r\n            }\r\n        }\r\n        else {\r\n            arg.children.unshift(`${context.helperString(CAMELIZE)}(`);\r\n            arg.children.push(`)`);\r\n        }\r\n    }\r\n    if (!context.inSSR) {\r\n        if (modifiers.includes('prop')) {\r\n            injectPrefix(arg, '.');\r\n        }\r\n        if (modifiers.includes('attr')) {\r\n            injectPrefix(arg, '^');\r\n        }\r\n    }\r\n    if (!exp ||\r\n        (exp.type === 4 /* SIMPLE_EXPRESSION */ && !exp.content.trim())) {\r\n        context.onError(createCompilerError(34 /* X_V_BIND_NO_EXPRESSION */, loc));\r\n        return {\r\n            props: [createObjectProperty(arg, createSimpleExpression('', true, loc))]\r\n        };\r\n    }\r\n    return {\r\n        props: [createObjectProperty(arg, exp)]\r\n    };\r\n};\r\nconst injectPrefix = (arg, prefix) => {\r\n    if (arg.type === 4 /* SIMPLE_EXPRESSION */) {\r\n        if (arg.isStatic) {\r\n            arg.content = prefix + arg.content;\r\n        }\r\n        else {\r\n            arg.content = `\\`${prefix}\\${${arg.content}}\\``;\r\n        }\r\n    }\r\n    else {\r\n        arg.children.unshift(`'${prefix}' + (`);\r\n        arg.children.push(`)`);\r\n    }\r\n};\n\n// Merge adjacent text nodes and expressions into a single expression\r\n// e.g. <div>abc {{ d }} {{ e }}</div> should have a single expression node as child.\r\nconst transformText = (node, context) => {\r\n    if (node.type === 0 /* ROOT */ ||\r\n        node.type === 1 /* ELEMENT */ ||\r\n        node.type === 11 /* FOR */ ||\r\n        node.type === 10 /* IF_BRANCH */) {\r\n        // perform the transform on node exit so that all expressions have already\r\n        // been processed.\r\n        return () => {\r\n            const children = node.children;\r\n            let currentContainer = undefined;\r\n            let hasText = false;\r\n            for (let i = 0; i < children.length; i++) {\r\n                const child = children[i];\r\n                if (isText(child)) {\r\n                    hasText = true;\r\n                    for (let j = i + 1; j < children.length; j++) {\r\n                        const next = children[j];\r\n                        if (isText(next)) {\r\n                            if (!currentContainer) {\r\n                                currentContainer = children[i] = {\r\n                                    type: 8 /* COMPOUND_EXPRESSION */,\r\n                                    loc: child.loc,\r\n                                    children: [child]\r\n                                };\r\n                            }\r\n                            // merge adjacent text node into current\r\n                            currentContainer.children.push(` + `, next);\r\n                            children.splice(j, 1);\r\n                            j--;\r\n                        }\r\n                        else {\r\n                            currentContainer = undefined;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (!hasText ||\r\n                // if this is a plain element with a single text child, leave it\r\n                // as-is since the runtime has dedicated fast path for this by directly\r\n                // setting textContent of the element.\r\n                // for component root it's always normalized anyway.\r\n                (children.length === 1 &&\r\n                    (node.type === 0 /* ROOT */ ||\r\n                        (node.type === 1 /* ELEMENT */ &&\r\n                            node.tagType === 0 /* ELEMENT */ &&\r\n                            // #3756\r\n                            // custom directives can potentially add DOM elements arbitrarily,\r\n                            // we need to avoid setting textContent of the element at runtime\r\n                            // to avoid accidentally overwriting the DOM elements added\r\n                            // by the user through custom directives.\r\n                            !node.props.find(p => p.type === 7 /* DIRECTIVE */ &&\r\n                                !context.directiveTransforms[p.name]) &&\r\n                            // in compat mode, <template> tags with no special directives\r\n                            // will be rendered as a fragment so its children must be\r\n                            // converted into vnodes.\r\n                            !(node.tag === 'template'))))) {\r\n                return;\r\n            }\r\n            // pre-convert text nodes into createTextVNode(text) calls to avoid\r\n            // runtime normalization.\r\n            for (let i = 0; i < children.length; i++) {\r\n                const child = children[i];\r\n                if (isText(child) || child.type === 8 /* COMPOUND_EXPRESSION */) {\r\n                    const callArgs = [];\r\n                    // createTextVNode defaults to single whitespace, so if it is a\r\n                    // single space the code could be an empty call to save bytes.\r\n                    if (child.type !== 2 /* TEXT */ || child.content !== ' ') {\r\n                        callArgs.push(child);\r\n                    }\r\n                    // mark dynamic text with flag so it gets patched inside a block\r\n                    if (!context.ssr &&\r\n                        getConstantType(child, context) === 0 /* NOT_CONSTANT */) {\r\n                        callArgs.push(1 /* TEXT */ +\r\n                            ((process.env.NODE_ENV !== 'production') ? ` /* ${PatchFlagNames[1 /* TEXT */]} */` : ``));\r\n                    }\r\n                    children[i] = {\r\n                        type: 12 /* TEXT_CALL */,\r\n                        content: child,\r\n                        loc: child.loc,\r\n                        codegenNode: createCallExpression(context.helper(CREATE_TEXT), callArgs)\r\n                    };\r\n                }\r\n            }\r\n        };\r\n    }\r\n};\n\nconst seen = new WeakSet();\r\nconst transformOnce = (node, context) => {\r\n    if (node.type === 1 /* ELEMENT */ && findDir(node, 'once', true)) {\r\n        if (seen.has(node) || context.inVOnce) {\r\n            return;\r\n        }\r\n        seen.add(node);\r\n        context.inVOnce = true;\r\n        context.helper(SET_BLOCK_TRACKING);\r\n        return () => {\r\n            context.inVOnce = false;\r\n            const cur = context.currentNode;\r\n            if (cur.codegenNode) {\r\n                cur.codegenNode = context.cache(cur.codegenNode, true /* isVNode */);\r\n            }\r\n        };\r\n    }\r\n};\n\nconst transformModel = (dir, node, context) => {\r\n    const { exp, arg } = dir;\r\n    if (!exp) {\r\n        context.onError(createCompilerError(41 /* X_V_MODEL_NO_EXPRESSION */, dir.loc));\r\n        return createTransformProps();\r\n    }\r\n    const rawExp = exp.loc.source;\r\n    const expString = exp.type === 4 /* SIMPLE_EXPRESSION */ ? exp.content : rawExp;\r\n    // im SFC <script setup> inline mode, the exp may have been transformed into\r\n    // _unref(exp)\r\n    context.bindingMetadata[rawExp];\r\n    const maybeRef = !true    /* SETUP_CONST */;\r\n    if (!expString.trim() ||\r\n        (!isMemberExpression(expString) && !maybeRef)) {\r\n        context.onError(createCompilerError(42 /* X_V_MODEL_MALFORMED_EXPRESSION */, exp.loc));\r\n        return createTransformProps();\r\n    }\r\n    const propName = arg ? arg : createSimpleExpression('modelValue', true);\r\n    const eventName = arg\r\n        ? isStaticExp(arg)\r\n            ? `onUpdate:${arg.content}`\r\n            : createCompoundExpression(['\"onUpdate:\" + ', arg])\r\n        : `onUpdate:modelValue`;\r\n    let assignmentExp;\r\n    const eventArg = context.isTS ? `($event: any)` : `$event`;\r\n    {\r\n        assignmentExp = createCompoundExpression([\r\n            `${eventArg} => (`,\r\n            exp,\r\n            ` = $event)`\r\n        ]);\r\n    }\r\n    const props = [\r\n        // modelValue: foo\r\n        createObjectProperty(propName, dir.exp),\r\n        // \"onUpdate:modelValue\": $event => (foo = $event)\r\n        createObjectProperty(eventName, assignmentExp)\r\n    ];\r\n    // modelModifiers: { foo: true, \"bar-baz\": true }\r\n    if (dir.modifiers.length && node.tagType === 1 /* COMPONENT */) {\r\n        const modifiers = dir.modifiers\r\n            .map(m => (isSimpleIdentifier(m) ? m : JSON.stringify(m)) + `: true`)\r\n            .join(`, `);\r\n        const modifiersKey = arg\r\n            ? isStaticExp(arg)\r\n                ? `${arg.content}Modifiers`\r\n                : createCompoundExpression([arg, ' + \"Modifiers\"'])\r\n            : `modelModifiers`;\r\n        props.push(createObjectProperty(modifiersKey, createSimpleExpression(`{ ${modifiers} }`, false, dir.loc, 2 /* CAN_HOIST */)));\r\n    }\r\n    return createTransformProps(props);\r\n};\r\nfunction createTransformProps(props = []) {\r\n    return { props };\r\n}\n\nconst validDivisionCharRE = /[\\w).+\\-_$\\]]/;\r\nconst transformFilter = (node, context) => {\r\n    if (!isCompatEnabled(\"COMPILER_FILTER\" /* COMPILER_FILTERS */, context)) {\r\n        return;\r\n    }\r\n    if (node.type === 5 /* INTERPOLATION */) {\r\n        // filter rewrite is applied before expression transform so only\r\n        // simple expressions are possible at this stage\r\n        rewriteFilter(node.content, context);\r\n    }\r\n    if (node.type === 1 /* ELEMENT */) {\r\n        node.props.forEach((prop) => {\r\n            if (prop.type === 7 /* DIRECTIVE */ &&\r\n                prop.name !== 'for' &&\r\n                prop.exp) {\r\n                rewriteFilter(prop.exp, context);\r\n            }\r\n        });\r\n    }\r\n};\r\nfunction rewriteFilter(node, context) {\r\n    if (node.type === 4 /* SIMPLE_EXPRESSION */) {\r\n        parseFilter(node, context);\r\n    }\r\n    else {\r\n        for (let i = 0; i < node.children.length; i++) {\r\n            const child = node.children[i];\r\n            if (typeof child !== 'object')\r\n                continue;\r\n            if (child.type === 4 /* SIMPLE_EXPRESSION */) {\r\n                parseFilter(child, context);\r\n            }\r\n            else if (child.type === 8 /* COMPOUND_EXPRESSION */) {\r\n                rewriteFilter(node, context);\r\n            }\r\n            else if (child.type === 5 /* INTERPOLATION */) {\r\n                rewriteFilter(child.content, context);\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction parseFilter(node, context) {\r\n    const exp = node.content;\r\n    let inSingle = false;\r\n    let inDouble = false;\r\n    let inTemplateString = false;\r\n    let inRegex = false;\r\n    let curly = 0;\r\n    let square = 0;\r\n    let paren = 0;\r\n    let lastFilterIndex = 0;\r\n    let c, prev, i, expression, filters = [];\r\n    for (i = 0; i < exp.length; i++) {\r\n        prev = c;\r\n        c = exp.charCodeAt(i);\r\n        if (inSingle) {\r\n            if (c === 0x27 && prev !== 0x5c)\r\n                inSingle = false;\r\n        }\r\n        else if (inDouble) {\r\n            if (c === 0x22 && prev !== 0x5c)\r\n                inDouble = false;\r\n        }\r\n        else if (inTemplateString) {\r\n            if (c === 0x60 && prev !== 0x5c)\r\n                inTemplateString = false;\r\n        }\r\n        else if (inRegex) {\r\n            if (c === 0x2f && prev !== 0x5c)\r\n                inRegex = false;\r\n        }\r\n        else if (c === 0x7c && // pipe\r\n            exp.charCodeAt(i + 1) !== 0x7c &&\r\n            exp.charCodeAt(i - 1) !== 0x7c &&\r\n            !curly &&\r\n            !square &&\r\n            !paren) {\r\n            if (expression === undefined) {\r\n                // first filter, end of expression\r\n                lastFilterIndex = i + 1;\r\n                expression = exp.slice(0, i).trim();\r\n            }\r\n            else {\r\n                pushFilter();\r\n            }\r\n        }\r\n        else {\r\n            switch (c) {\r\n                case 0x22:\r\n                    inDouble = true;\r\n                    break; // \"\r\n                case 0x27:\r\n                    inSingle = true;\r\n                    break; // '\r\n                case 0x60:\r\n                    inTemplateString = true;\r\n                    break; // `\r\n                case 0x28:\r\n                    paren++;\r\n                    break; // (\r\n                case 0x29:\r\n                    paren--;\r\n                    break; // )\r\n                case 0x5b:\r\n                    square++;\r\n                    break; // [\r\n                case 0x5d:\r\n                    square--;\r\n                    break; // ]\r\n                case 0x7b:\r\n                    curly++;\r\n                    break; // {\r\n                case 0x7d:\r\n                    curly--;\r\n                    break; // }\r\n            }\r\n            if (c === 0x2f) {\r\n                // /\r\n                let j = i - 1;\r\n                let p;\r\n                // find first non-whitespace prev char\r\n                for (; j >= 0; j--) {\r\n                    p = exp.charAt(j);\r\n                    if (p !== ' ')\r\n                        break;\r\n                }\r\n                if (!p || !validDivisionCharRE.test(p)) {\r\n                    inRegex = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (expression === undefined) {\r\n        expression = exp.slice(0, i).trim();\r\n    }\r\n    else if (lastFilterIndex !== 0) {\r\n        pushFilter();\r\n    }\r\n    function pushFilter() {\r\n        filters.push(exp.slice(lastFilterIndex, i).trim());\r\n        lastFilterIndex = i + 1;\r\n    }\r\n    if (filters.length) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warnDeprecation(\"COMPILER_FILTER\" /* COMPILER_FILTERS */, context, node.loc);\r\n        for (i = 0; i < filters.length; i++) {\r\n            expression = wrapFilter(expression, filters[i], context);\r\n        }\r\n        node.content = expression;\r\n    }\r\n}\r\nfunction wrapFilter(exp, filter, context) {\r\n    context.helper(RESOLVE_FILTER);\r\n    const i = filter.indexOf('(');\r\n    if (i < 0) {\r\n        context.filters.add(filter);\r\n        return `${toValidAssetId(filter, 'filter')}(${exp})`;\r\n    }\r\n    else {\r\n        const name = filter.slice(0, i);\r\n        const args = filter.slice(i + 1);\r\n        context.filters.add(name);\r\n        return `${toValidAssetId(name, 'filter')}(${exp}${args !== ')' ? ',' + args : args}`;\r\n    }\r\n}\n\nconst seen$1 = new WeakSet();\r\nconst transformMemo = (node, context) => {\r\n    if (node.type === 1 /* ELEMENT */) {\r\n        const dir = findDir(node, 'memo');\r\n        if (!dir || seen$1.has(node)) {\r\n            return;\r\n        }\r\n        seen$1.add(node);\r\n        return () => {\r\n            const codegenNode = node.codegenNode ||\r\n                context.currentNode.codegenNode;\r\n            if (codegenNode && codegenNode.type === 13 /* VNODE_CALL */) {\r\n                // non-component sub tree should be turned into a block\r\n                if (node.tagType !== 1 /* COMPONENT */) {\r\n                    makeBlock(codegenNode, context);\r\n                }\r\n                node.codegenNode = createCallExpression(context.helper(WITH_MEMO), [\r\n                    dir.exp,\r\n                    createFunctionExpression(undefined, codegenNode),\r\n                    `_cache`,\r\n                    String(context.cached++)\r\n                ]);\r\n            }\r\n        };\r\n    }\r\n};\n\nfunction getBaseTransformPreset(prefixIdentifiers) {\r\n    return [\r\n        [\r\n            transformOnce,\r\n            transformIf,\r\n            transformMemo,\r\n            transformFor,\r\n            ...([transformFilter] ),\r\n            ...((process.env.NODE_ENV !== 'production')\r\n                    ? [transformExpression]\r\n                    : []),\r\n            transformSlotOutlet,\r\n            transformElement,\r\n            trackSlotScopes,\r\n            transformText\r\n        ],\r\n        {\r\n            on: transformOn,\r\n            bind: transformBind,\r\n            model: transformModel\r\n        }\r\n    ];\r\n}\r\n// we name it `baseCompile` so that higher order compilers like\r\n// @vue/compiler-dom can export `compile` while re-exporting everything else.\r\nfunction baseCompile(template, options = {}) {\r\n    const onError = options.onError || defaultOnError;\r\n    const isModuleMode = options.mode === 'module';\r\n    /* istanbul ignore if */\r\n    {\r\n        if (options.prefixIdentifiers === true) {\r\n            onError(createCompilerError(46 /* X_PREFIX_ID_NOT_SUPPORTED */));\r\n        }\r\n        else if (isModuleMode) {\r\n            onError(createCompilerError(47 /* X_MODULE_MODE_NOT_SUPPORTED */));\r\n        }\r\n    }\r\n    const prefixIdentifiers = !true ;\r\n    if (options.cacheHandlers) {\r\n        onError(createCompilerError(48 /* X_CACHE_HANDLER_NOT_SUPPORTED */));\r\n    }\r\n    if (options.scopeId && !isModuleMode) {\r\n        onError(createCompilerError(49 /* X_SCOPE_ID_NOT_SUPPORTED */));\r\n    }\r\n    const ast = isString(template) ? baseParse(template, options) : template;\r\n    const [nodeTransforms, directiveTransforms] = getBaseTransformPreset();\r\n    transform(ast, extend({}, options, {\r\n        prefixIdentifiers,\r\n        nodeTransforms: [\r\n            ...nodeTransforms,\r\n            ...(options.nodeTransforms || []) // user transforms\r\n        ],\r\n        directiveTransforms: extend({}, directiveTransforms, options.directiveTransforms || {} // user transforms\r\n        )\r\n    }));\r\n    return generate(ast, extend({}, options, {\r\n        prefixIdentifiers\r\n    }));\r\n}\n\nconst noopDirectiveTransform = () => ({ props: [] });\n\nexport { BASE_TRANSITION, CAMELIZE, CAPITALIZE, CREATE_BLOCK, CREATE_COMMENT, CREATE_ELEMENT_BLOCK, CREATE_ELEMENT_VNODE, CREATE_SLOTS, CREATE_STATIC, CREATE_TEXT, CREATE_VNODE, FRAGMENT, GUARD_REACTIVE_PROPS, IS_MEMO_SAME, IS_REF, KEEP_ALIVE, MERGE_PROPS, NORMALIZE_CLASS, NORMALIZE_PROPS, NORMALIZE_STYLE, OPEN_BLOCK, POP_SCOPE_ID, PUSH_SCOPE_ID, RENDER_LIST, RENDER_SLOT, RESOLVE_COMPONENT, RESOLVE_DIRECTIVE, RESOLVE_DYNAMIC_COMPONENT, RESOLVE_FILTER, SET_BLOCK_TRACKING, SUSPENSE, TELEPORT, TO_DISPLAY_STRING, TO_HANDLERS, TO_HANDLER_KEY, UNREF, WITH_CTX, WITH_DIRECTIVES, WITH_MEMO, advancePositionWithClone, advancePositionWithMutation, assert, baseCompile, baseParse, buildProps, buildSlots, checkCompatEnabled, createArrayExpression, createAssignmentExpression, createBlockStatement, createCacheExpression, createCallExpression, createCompilerError, createCompoundExpression, createConditionalExpression, createForLoopParams, createFunctionExpression, createIfStatement, createInterpolation, createObjectExpression, createObjectProperty, createReturnStatement, createRoot, createSequenceExpression, createSimpleExpression, createStructuralDirectiveTransform, createTemplateLiteral, createTransformContext, createVNodeCall, extractIdentifiers, findDir, findProp, generate, getBaseTransformPreset, getInnerRange, getMemoedVNodeCall, getVNodeBlockHelper, getVNodeHelper, hasDynamicKeyVBind, hasScopeRef, helperNameMap, injectProp, isBindKey, isBuiltInType, isCoreComponent, isFunctionType, isInDestructureAssignment, isMemberExpression, isMemberExpressionBrowser, isMemberExpressionNode, isReferencedIdentifier, isSimpleIdentifier, isSlotOutlet, isStaticExp, isStaticProperty, isStaticPropertyKey, isTemplateNode, isText, isVSlot, locStub, makeBlock, noopDirectiveTransform, processExpression, processFor, processIf, processSlotOutlet, registerRuntimeHelpers, resolveComponentType, toValidAssetId, trackSlotScopes, trackVForSlotScopes, transform, transformBind, transformElement, transformExpression, transformModel, transformOn, traverseNode, walkBlockDeclarations, walkFunctionParams, walkIdentifiers, warnDeprecation };\n","import { registerRuntimeHelpers, isBuiltInType, createSimpleExpression, createCompilerError, createObjectProperty, createCallExpression, TO_DISPLAY_STRING, transformModel as transformModel$1, findProp, hasDynamicKeyVBind, transformOn as transformOn$1, createCompoundExpression, isStaticExp, checkCompatEnabled, noopDirectiveTransform, baseCompile, baseParse } from '@vue/compiler-core';\nexport * from '@vue/compiler-core';\nimport { isVoidTag, isHTMLTag, isSVGTag, makeMap, parseStringStyle, capitalize, extend } from '@vue/shared';\n\nconst V_MODEL_RADIO = Symbol((process.env.NODE_ENV !== 'production') ? `vModelRadio` : ``);\r\nconst V_MODEL_CHECKBOX = Symbol((process.env.NODE_ENV !== 'production') ? `vModelCheckbox` : ``);\r\nconst V_MODEL_TEXT = Symbol((process.env.NODE_ENV !== 'production') ? `vModelText` : ``);\r\nconst V_MODEL_SELECT = Symbol((process.env.NODE_ENV !== 'production') ? `vModelSelect` : ``);\r\nconst V_MODEL_DYNAMIC = Symbol((process.env.NODE_ENV !== 'production') ? `vModelDynamic` : ``);\r\nconst V_ON_WITH_MODIFIERS = Symbol((process.env.NODE_ENV !== 'production') ? `vOnModifiersGuard` : ``);\r\nconst V_ON_WITH_KEYS = Symbol((process.env.NODE_ENV !== 'production') ? `vOnKeysGuard` : ``);\r\nconst V_SHOW = Symbol((process.env.NODE_ENV !== 'production') ? `vShow` : ``);\r\nconst TRANSITION = Symbol((process.env.NODE_ENV !== 'production') ? `Transition` : ``);\r\nconst TRANSITION_GROUP = Symbol((process.env.NODE_ENV !== 'production') ? `TransitionGroup` : ``);\r\nregisterRuntimeHelpers({\r\n    [V_MODEL_RADIO]: `vModelRadio`,\r\n    [V_MODEL_CHECKBOX]: `vModelCheckbox`,\r\n    [V_MODEL_TEXT]: `vModelText`,\r\n    [V_MODEL_SELECT]: `vModelSelect`,\r\n    [V_MODEL_DYNAMIC]: `vModelDynamic`,\r\n    [V_ON_WITH_MODIFIERS]: `withModifiers`,\r\n    [V_ON_WITH_KEYS]: `withKeys`,\r\n    [V_SHOW]: `vShow`,\r\n    [TRANSITION]: `Transition`,\r\n    [TRANSITION_GROUP]: `TransitionGroup`\r\n});\n\n/* eslint-disable no-restricted-globals */\r\nlet decoder;\r\nfunction decodeHtmlBrowser(raw, asAttr = false) {\r\n    if (!decoder) {\r\n        decoder = document.createElement('div');\r\n    }\r\n    if (asAttr) {\r\n        decoder.innerHTML = `<div foo=\"${raw.replace(/\"/g, '&quot;')}\">`;\r\n        return decoder.children[0].getAttribute('foo');\r\n    }\r\n    else {\r\n        decoder.innerHTML = raw;\r\n        return decoder.textContent;\r\n    }\r\n}\n\nconst isRawTextContainer = /*#__PURE__*/ makeMap('style,iframe,script,noscript', true);\r\nconst parserOptions = {\r\n    isVoidTag,\r\n    isNativeTag: tag => isHTMLTag(tag) || isSVGTag(tag),\r\n    isPreTag: tag => tag === 'pre',\r\n    decodeEntities: decodeHtmlBrowser ,\r\n    isBuiltInComponent: (tag) => {\r\n        if (isBuiltInType(tag, `Transition`)) {\r\n            return TRANSITION;\r\n        }\r\n        else if (isBuiltInType(tag, `TransitionGroup`)) {\r\n            return TRANSITION_GROUP;\r\n        }\r\n    },\r\n    // https://html.spec.whatwg.org/multipage/parsing.html#tree-construction-dispatcher\r\n    getNamespace(tag, parent) {\r\n        let ns = parent ? parent.ns : 0 /* HTML */;\r\n        if (parent && ns === 2 /* MATH_ML */) {\r\n            if (parent.tag === 'annotation-xml') {\r\n                if (tag === 'svg') {\r\n                    return 1 /* SVG */;\r\n                }\r\n                if (parent.props.some(a => a.type === 6 /* ATTRIBUTE */ &&\r\n                    a.name === 'encoding' &&\r\n                    a.value != null &&\r\n                    (a.value.content === 'text/html' ||\r\n                        a.value.content === 'application/xhtml+xml'))) {\r\n                    ns = 0 /* HTML */;\r\n                }\r\n            }\r\n            else if (/^m(?:[ions]|text)$/.test(parent.tag) &&\r\n                tag !== 'mglyph' &&\r\n                tag !== 'malignmark') {\r\n                ns = 0 /* HTML */;\r\n            }\r\n        }\r\n        else if (parent && ns === 1 /* SVG */) {\r\n            if (parent.tag === 'foreignObject' ||\r\n                parent.tag === 'desc' ||\r\n                parent.tag === 'title') {\r\n                ns = 0 /* HTML */;\r\n            }\r\n        }\r\n        if (ns === 0 /* HTML */) {\r\n            if (tag === 'svg') {\r\n                return 1 /* SVG */;\r\n            }\r\n            if (tag === 'math') {\r\n                return 2 /* MATH_ML */;\r\n            }\r\n        }\r\n        return ns;\r\n    },\r\n    // https://html.spec.whatwg.org/multipage/parsing.html#parsing-html-fragments\r\n    getTextMode({ tag, ns }) {\r\n        if (ns === 0 /* HTML */) {\r\n            if (tag === 'textarea' || tag === 'title') {\r\n                return 1 /* RCDATA */;\r\n            }\r\n            if (isRawTextContainer(tag)) {\r\n                return 2 /* RAWTEXT */;\r\n            }\r\n        }\r\n        return 0 /* DATA */;\r\n    }\r\n};\n\n// Parse inline CSS strings for static style attributes into an object.\r\n// This is a NodeTransform since it works on the static `style` attribute and\r\n// converts it into a dynamic equivalent:\r\n// style=\"color: red\" -> :style='{ \"color\": \"red\" }'\r\n// It is then processed by `transformElement` and included in the generated\r\n// props.\r\nconst transformStyle = node => {\r\n    if (node.type === 1 /* ELEMENT */) {\r\n        node.props.forEach((p, i) => {\r\n            if (p.type === 6 /* ATTRIBUTE */ && p.name === 'style' && p.value) {\r\n                // replace p with an expression node\r\n                node.props[i] = {\r\n                    type: 7 /* DIRECTIVE */,\r\n                    name: `bind`,\r\n                    arg: createSimpleExpression(`style`, true, p.loc),\r\n                    exp: parseInlineCSS(p.value.content, p.loc),\r\n                    modifiers: [],\r\n                    loc: p.loc\r\n                };\r\n            }\r\n        });\r\n    }\r\n};\r\nconst parseInlineCSS = (cssText, loc) => {\r\n    const normalized = parseStringStyle(cssText);\r\n    return createSimpleExpression(JSON.stringify(normalized), false, loc, 3 /* CAN_STRINGIFY */);\r\n};\n\nfunction createDOMCompilerError(code, loc) {\r\n    return createCompilerError(code, loc, (process.env.NODE_ENV !== 'production') || !true ? DOMErrorMessages : undefined);\r\n}\r\nconst DOMErrorMessages = {\r\n    [50 /* X_V_HTML_NO_EXPRESSION */]: `v-html is missing expression.`,\r\n    [51 /* X_V_HTML_WITH_CHILDREN */]: `v-html will override element children.`,\r\n    [52 /* X_V_TEXT_NO_EXPRESSION */]: `v-text is missing expression.`,\r\n    [53 /* X_V_TEXT_WITH_CHILDREN */]: `v-text will override element children.`,\r\n    [54 /* X_V_MODEL_ON_INVALID_ELEMENT */]: `v-model can only be used on <input>, <textarea> and <select> elements.`,\r\n    [55 /* X_V_MODEL_ARG_ON_ELEMENT */]: `v-model argument is not supported on plain elements.`,\r\n    [56 /* X_V_MODEL_ON_FILE_INPUT_ELEMENT */]: `v-model cannot be used on file inputs since they are read-only. Use a v-on:change listener instead.`,\r\n    [57 /* X_V_MODEL_UNNECESSARY_VALUE */]: `Unnecessary value binding used alongside v-model. It will interfere with v-model's behavior.`,\r\n    [58 /* X_V_SHOW_NO_EXPRESSION */]: `v-show is missing expression.`,\r\n    [59 /* X_TRANSITION_INVALID_CHILDREN */]: `<Transition> expects exactly one child element or component.`,\r\n    [60 /* X_IGNORED_SIDE_EFFECT_TAG */]: `Tags with side effect (<script> and <style>) are ignored in client component templates.`\r\n};\n\nconst transformVHtml = (dir, node, context) => {\r\n    const { exp, loc } = dir;\r\n    if (!exp) {\r\n        context.onError(createDOMCompilerError(50 /* X_V_HTML_NO_EXPRESSION */, loc));\r\n    }\r\n    if (node.children.length) {\r\n        context.onError(createDOMCompilerError(51 /* X_V_HTML_WITH_CHILDREN */, loc));\r\n        node.children.length = 0;\r\n    }\r\n    return {\r\n        props: [\r\n            createObjectProperty(createSimpleExpression(`innerHTML`, true, loc), exp || createSimpleExpression('', true))\r\n        ]\r\n    };\r\n};\n\nconst transformVText = (dir, node, context) => {\r\n    const { exp, loc } = dir;\r\n    if (!exp) {\r\n        context.onError(createDOMCompilerError(52 /* X_V_TEXT_NO_EXPRESSION */, loc));\r\n    }\r\n    if (node.children.length) {\r\n        context.onError(createDOMCompilerError(53 /* X_V_TEXT_WITH_CHILDREN */, loc));\r\n        node.children.length = 0;\r\n    }\r\n    return {\r\n        props: [\r\n            createObjectProperty(createSimpleExpression(`textContent`, true), exp\r\n                ? createCallExpression(context.helperString(TO_DISPLAY_STRING), [exp], loc)\r\n                : createSimpleExpression('', true))\r\n        ]\r\n    };\r\n};\n\nconst transformModel = (dir, node, context) => {\r\n    const baseResult = transformModel$1(dir, node, context);\r\n    // base transform has errors OR component v-model (only need props)\r\n    if (!baseResult.props.length || node.tagType === 1 /* COMPONENT */) {\r\n        return baseResult;\r\n    }\r\n    if (dir.arg) {\r\n        context.onError(createDOMCompilerError(55 /* X_V_MODEL_ARG_ON_ELEMENT */, dir.arg.loc));\r\n    }\r\n    function checkDuplicatedValue() {\r\n        const value = findProp(node, 'value');\r\n        if (value) {\r\n            context.onError(createDOMCompilerError(57 /* X_V_MODEL_UNNECESSARY_VALUE */, value.loc));\r\n        }\r\n    }\r\n    const { tag } = node;\r\n    const isCustomElement = context.isCustomElement(tag);\r\n    if (tag === 'input' ||\r\n        tag === 'textarea' ||\r\n        tag === 'select' ||\r\n        isCustomElement) {\r\n        let directiveToUse = V_MODEL_TEXT;\r\n        let isInvalidType = false;\r\n        if (tag === 'input' || isCustomElement) {\r\n            const type = findProp(node, `type`);\r\n            if (type) {\r\n                if (type.type === 7 /* DIRECTIVE */) {\r\n                    // :type=\"foo\"\r\n                    directiveToUse = V_MODEL_DYNAMIC;\r\n                }\r\n                else if (type.value) {\r\n                    switch (type.value.content) {\r\n                        case 'radio':\r\n                            directiveToUse = V_MODEL_RADIO;\r\n                            break;\r\n                        case 'checkbox':\r\n                            directiveToUse = V_MODEL_CHECKBOX;\r\n                            break;\r\n                        case 'file':\r\n                            isInvalidType = true;\r\n                            context.onError(createDOMCompilerError(56 /* X_V_MODEL_ON_FILE_INPUT_ELEMENT */, dir.loc));\r\n                            break;\r\n                        default:\r\n                            // text type\r\n                            (process.env.NODE_ENV !== 'production') && checkDuplicatedValue();\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            else if (hasDynamicKeyVBind(node)) {\r\n                // element has bindings with dynamic keys, which can possibly contain\r\n                // \"type\".\r\n                directiveToUse = V_MODEL_DYNAMIC;\r\n            }\r\n            else {\r\n                // text type\r\n                (process.env.NODE_ENV !== 'production') && checkDuplicatedValue();\r\n            }\r\n        }\r\n        else if (tag === 'select') {\r\n            directiveToUse = V_MODEL_SELECT;\r\n        }\r\n        else {\r\n            // textarea\r\n            (process.env.NODE_ENV !== 'production') && checkDuplicatedValue();\r\n        }\r\n        // inject runtime directive\r\n        // by returning the helper symbol via needRuntime\r\n        // the import will replaced a resolveDirective call.\r\n        if (!isInvalidType) {\r\n            baseResult.needRuntime = context.helper(directiveToUse);\r\n        }\r\n    }\r\n    else {\r\n        context.onError(createDOMCompilerError(54 /* X_V_MODEL_ON_INVALID_ELEMENT */, dir.loc));\r\n    }\r\n    // native vmodel doesn't need the `modelValue` props since they are also\r\n    // passed to the runtime as `binding.value`. removing it reduces code size.\r\n    baseResult.props = baseResult.props.filter(p => !(p.key.type === 4 /* SIMPLE_EXPRESSION */ &&\r\n        p.key.content === 'modelValue'));\r\n    return baseResult;\r\n};\n\nconst isEventOptionModifier = /*#__PURE__*/ makeMap(`passive,once,capture`);\r\nconst isNonKeyModifier = /*#__PURE__*/ makeMap(\r\n// event propagation management\r\n`stop,prevent,self,` +\r\n    // system modifiers + exact\r\n    `ctrl,shift,alt,meta,exact,` +\r\n    // mouse\r\n    `middle`);\r\n// left & right could be mouse or key modifiers based on event type\r\nconst maybeKeyModifier = /*#__PURE__*/ makeMap('left,right');\r\nconst isKeyboardEvent = /*#__PURE__*/ makeMap(`onkeyup,onkeydown,onkeypress`, true);\r\nconst resolveModifiers = (key, modifiers, context, loc) => {\r\n    const keyModifiers = [];\r\n    const nonKeyModifiers = [];\r\n    const eventOptionModifiers = [];\r\n    for (let i = 0; i < modifiers.length; i++) {\r\n        const modifier = modifiers[i];\r\n        if (modifier === 'native' &&\r\n            checkCompatEnabled(\"COMPILER_V_ON_NATIVE\" /* COMPILER_V_ON_NATIVE */, context, loc)) {\r\n            eventOptionModifiers.push(modifier);\r\n        }\r\n        else if (isEventOptionModifier(modifier)) {\r\n            // eventOptionModifiers: modifiers for addEventListener() options,\r\n            // e.g. .passive & .capture\r\n            eventOptionModifiers.push(modifier);\r\n        }\r\n        else {\r\n            // runtimeModifiers: modifiers that needs runtime guards\r\n            if (maybeKeyModifier(modifier)) {\r\n                if (isStaticExp(key)) {\r\n                    if (isKeyboardEvent(key.content)) {\r\n                        keyModifiers.push(modifier);\r\n                    }\r\n                    else {\r\n                        nonKeyModifiers.push(modifier);\r\n                    }\r\n                }\r\n                else {\r\n                    keyModifiers.push(modifier);\r\n                    nonKeyModifiers.push(modifier);\r\n                }\r\n            }\r\n            else {\r\n                if (isNonKeyModifier(modifier)) {\r\n                    nonKeyModifiers.push(modifier);\r\n                }\r\n                else {\r\n                    keyModifiers.push(modifier);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        keyModifiers,\r\n        nonKeyModifiers,\r\n        eventOptionModifiers\r\n    };\r\n};\r\nconst transformClick = (key, event) => {\r\n    const isStaticClick = isStaticExp(key) && key.content.toLowerCase() === 'onclick';\r\n    return isStaticClick\r\n        ? createSimpleExpression(event, true)\r\n        : key.type !== 4 /* SIMPLE_EXPRESSION */\r\n            ? createCompoundExpression([\r\n                `(`,\r\n                key,\r\n                `) === \"onClick\" ? \"${event}\" : (`,\r\n                key,\r\n                `)`\r\n            ])\r\n            : key;\r\n};\r\nconst transformOn = (dir, node, context) => {\r\n    return transformOn$1(dir, node, context, baseResult => {\r\n        const { modifiers } = dir;\r\n        if (!modifiers.length)\r\n            return baseResult;\r\n        let { key, value: handlerExp } = baseResult.props[0];\r\n        const { keyModifiers, nonKeyModifiers, eventOptionModifiers } = resolveModifiers(key, modifiers, context, dir.loc);\r\n        // normalize click.right and click.middle since they don't actually fire\r\n        if (nonKeyModifiers.includes('right')) {\r\n            key = transformClick(key, `onContextmenu`);\r\n        }\r\n        if (nonKeyModifiers.includes('middle')) {\r\n            key = transformClick(key, `onMouseup`);\r\n        }\r\n        if (nonKeyModifiers.length) {\r\n            handlerExp = createCallExpression(context.helper(V_ON_WITH_MODIFIERS), [\r\n                handlerExp,\r\n                JSON.stringify(nonKeyModifiers)\r\n            ]);\r\n        }\r\n        if (keyModifiers.length &&\r\n            // if event name is dynamic, always wrap with keys guard\r\n            (!isStaticExp(key) || isKeyboardEvent(key.content))) {\r\n            handlerExp = createCallExpression(context.helper(V_ON_WITH_KEYS), [\r\n                handlerExp,\r\n                JSON.stringify(keyModifiers)\r\n            ]);\r\n        }\r\n        if (eventOptionModifiers.length) {\r\n            const modifierPostfix = eventOptionModifiers.map(capitalize).join('');\r\n            key = isStaticExp(key)\r\n                ? createSimpleExpression(`${key.content}${modifierPostfix}`, true)\r\n                : createCompoundExpression([`(`, key, `) + \"${modifierPostfix}\"`]);\r\n        }\r\n        return {\r\n            props: [createObjectProperty(key, handlerExp)]\r\n        };\r\n    });\r\n};\n\nconst transformShow = (dir, node, context) => {\r\n    const { exp, loc } = dir;\r\n    if (!exp) {\r\n        context.onError(createDOMCompilerError(58 /* X_V_SHOW_NO_EXPRESSION */, loc));\r\n    }\r\n    return {\r\n        props: [],\r\n        needRuntime: context.helper(V_SHOW)\r\n    };\r\n};\n\nconst warnTransitionChildren = (node, context) => {\r\n    if (node.type === 1 /* ELEMENT */ &&\r\n        node.tagType === 1 /* COMPONENT */) {\r\n        const component = context.isBuiltInComponent(node.tag);\r\n        if (component === TRANSITION) {\r\n            return () => {\r\n                if (node.children.length && hasMultipleChildren(node)) {\r\n                    context.onError(createDOMCompilerError(59 /* X_TRANSITION_INVALID_CHILDREN */, {\r\n                        start: node.children[0].loc.start,\r\n                        end: node.children[node.children.length - 1].loc.end,\r\n                        source: ''\r\n                    }));\r\n                }\r\n            };\r\n        }\r\n    }\r\n};\r\nfunction hasMultipleChildren(node) {\r\n    // #1352 filter out potential comment nodes.\r\n    const children = (node.children = node.children.filter(c => c.type !== 3 /* COMMENT */ &&\r\n        !(c.type === 2 /* TEXT */ && !c.content.trim())));\r\n    const child = children[0];\r\n    return (children.length !== 1 ||\r\n        child.type === 11 /* FOR */ ||\r\n        (child.type === 9 /* IF */ && child.branches.some(hasMultipleChildren)));\r\n}\n\nconst ignoreSideEffectTags = (node, context) => {\r\n    if (node.type === 1 /* ELEMENT */ &&\r\n        node.tagType === 0 /* ELEMENT */ &&\r\n        (node.tag === 'script' || node.tag === 'style')) {\r\n        context.onError(createDOMCompilerError(60 /* X_IGNORED_SIDE_EFFECT_TAG */, node.loc));\r\n        context.removeNode();\r\n    }\r\n};\n\nconst DOMNodeTransforms = [\r\n    transformStyle,\r\n    ...((process.env.NODE_ENV !== 'production') ? [warnTransitionChildren] : [])\r\n];\r\nconst DOMDirectiveTransforms = {\r\n    cloak: noopDirectiveTransform,\r\n    html: transformVHtml,\r\n    text: transformVText,\r\n    model: transformModel,\r\n    on: transformOn,\r\n    show: transformShow\r\n};\r\nfunction compile(template, options = {}) {\r\n    return baseCompile(template, extend({}, parserOptions, options, {\r\n        nodeTransforms: [\r\n            // ignore <script> and <tag>\r\n            // this is not put inside DOMNodeTransforms because that list is used\r\n            // by compiler-ssr to generate vnode fallback branches\r\n            ignoreSideEffectTags,\r\n            ...DOMNodeTransforms,\r\n            ...(options.nodeTransforms || [])\r\n        ],\r\n        directiveTransforms: extend({}, DOMDirectiveTransforms, options.directiveTransforms || {}),\r\n        transformHoist: null \r\n    }));\r\n}\r\nfunction parse(template, options = {}) {\r\n    return baseParse(template, extend({}, parserOptions, options));\r\n}\n\nexport { DOMDirectiveTransforms, DOMNodeTransforms, TRANSITION, TRANSITION_GROUP, V_MODEL_CHECKBOX, V_MODEL_DYNAMIC, V_MODEL_RADIO, V_MODEL_SELECT, V_MODEL_TEXT, V_ON_WITH_KEYS, V_ON_WITH_MODIFIERS, V_SHOW, compile, createDOMCompilerError, parse, parserOptions, transformStyle };\n","import * as runtimeDom from '@vue/runtime-dom';\nimport { initCustomFormatter, warn, registerRuntimeCompiler } from '@vue/runtime-dom';\nexport * from '@vue/runtime-dom';\nimport { compile } from '@vue/compiler-dom';\nimport { isString, NOOP, extend, generateCodeFrame } from '@vue/shared';\n\nfunction initDev() {\r\n    {\r\n        initCustomFormatter();\r\n    }\r\n}\n\n// This entry is the \"full-build\" that includes both the runtime\r\nif ((process.env.NODE_ENV !== 'production')) {\r\n    initDev();\r\n}\r\nconst compileCache = Object.create(null);\r\nfunction compileToFunction(template, options) {\r\n    if (!isString(template)) {\r\n        if (template.nodeType) {\r\n            template = template.innerHTML;\r\n        }\r\n        else {\r\n            (process.env.NODE_ENV !== 'production') && warn(`invalid template option: `, template);\r\n            return NOOP;\r\n        }\r\n    }\r\n    const key = template;\r\n    const cached = compileCache[key];\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    if (template[0] === '#') {\r\n        const el = document.querySelector(template);\r\n        if ((process.env.NODE_ENV !== 'production') && !el) {\r\n            warn(`Template element not found or is empty: ${template}`);\r\n        }\r\n        // __UNSAFE__\r\n        // Reason: potential execution of JS expressions in in-DOM template.\r\n        // The user must make sure the in-DOM template is trusted. If it's rendered\r\n        // by the server, the template should not contain any user data.\r\n        template = el ? el.innerHTML : ``;\r\n    }\r\n    const { code } = compile(template, extend({\r\n        hoistStatic: true,\r\n        onError: (process.env.NODE_ENV !== 'production') ? onError : undefined,\r\n        onWarn: (process.env.NODE_ENV !== 'production') ? e => onError(e, true) : NOOP\r\n    }, options));\r\n    function onError(err, asWarning = false) {\r\n        const message = asWarning\r\n            ? err.message\r\n            : `Template compilation error: ${err.message}`;\r\n        const codeFrame = err.loc &&\r\n            generateCodeFrame(template, err.loc.start.offset, err.loc.end.offset);\r\n        warn(codeFrame ? `${message}\\n${codeFrame}` : message);\r\n    }\r\n    // The wildcard import results in a huge object with every export\r\n    // with keys that cannot be mangled, and can be quite heavy size-wise.\r\n    // In the global build we know `Vue` is available globally so we can avoid\r\n    // the wildcard object.\r\n    const render = (new Function('Vue', code)(runtimeDom));\r\n    render._rc = true;\r\n    return (compileCache[key] = render);\r\n}\r\nregisterRuntimeCompiler(compileToFunction);\n\nexport { compileToFunction as compile };\n","export type Pos = {\n  start: number;\n};\n\n// These are used when `options.locations` is on, for the\n// `startLoc` and `endLoc` properties.\n\nexport class Position {\n  line: number;\n  column: number;\n  index: number;\n\n  constructor(line: number, col: number, index: number) {\n    this.line = line;\n    this.column = col;\n    this.index = index;\n  }\n}\n\nexport class SourceLocation {\n  start: Position;\n  end: Position;\n  filename: string;\n  identifierName: string | undefined | null;\n\n  constructor(start: Position, end?: Position) {\n    this.start = start;\n    // (may start as null, but initialized later)\n    this.end = end;\n  }\n}\n\n/**\n * creates a new position with a non-zero column offset from the given position.\n * This function should be only be used when we create AST node out of the token\n * boundaries, such as TemplateElement ends before tt.templateNonTail. This\n * function does not skip whitespaces.\n */\nexport function createPositionWithColumnOffset(\n  position: Position,\n  columnOffset: number,\n) {\n  const { line, column, index } = position;\n  return new Position(line, column + columnOffset, index + columnOffset);\n}\n","import type { ParseErrorTemplates } from \"../parse-error.ts\";\n\nconst code = \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\";\n\nexport default {\n  ImportMetaOutsideModule: {\n    message: `import.meta may appear only with 'sourceType: \"module\"'`,\n    code,\n  },\n  ImportOutsideModule: {\n    message: `'import' and 'export' may appear only with 'sourceType: \"module\"'`,\n    code,\n  },\n} satisfies ParseErrorTemplates;\n","const NodeDescriptions = {\n  ArrayPattern: \"array destructuring pattern\",\n  AssignmentExpression: \"assignment expression\",\n  AssignmentPattern: \"assignment expression\",\n  ArrowFunctionExpression: \"arrow function expression\",\n  ConditionalExpression: \"conditional expression\",\n  CatchClause: \"catch clause\",\n  ForOfStatement: \"for-of statement\",\n  ForInStatement: \"for-in statement\",\n  ForStatement: \"for-loop\",\n  FormalParameters: \"function parameter list\",\n  Identifier: \"identifier\",\n  ImportSpecifier: \"import specifier\",\n  ImportDefaultSpecifier: \"import default specifier\",\n  ImportNamespaceSpecifier: \"import namespace specifier\",\n  ObjectPattern: \"object destructuring pattern\",\n  ParenthesizedExpression: \"parenthesized expression\",\n  RestElement: \"rest element\",\n  UpdateExpression: {\n    true: \"prefix operation\",\n    false: \"postfix operation\",\n  },\n  VariableDeclarator: \"variable declaration\",\n  YieldExpression: \"yield expression\",\n};\n\ntype NodeTypesWithDescriptions = keyof Omit<\n  typeof NodeDescriptions,\n  \"UpdateExpression\"\n>;\n\ntype NodeWithDescription =\n  | {\n      type: \"UpdateExpression\";\n      prefix: boolean;\n    }\n  | {\n      type: NodeTypesWithDescriptions;\n    };\n\n// @ts-expect-error prefix is specified only when type is UpdateExpression\n// eslint-disable-next-line no-confusing-arrow\nconst toNodeDescription = ({ type, prefix }: NodeWithDescription) =>\n  type === \"UpdateExpression\"\n    ? NodeDescriptions.UpdateExpression[String(prefix) as \"true\" | \"false\"]\n    : NodeDescriptions[type];\n\nexport default toNodeDescription;\n","import type { ParseErrorTemplates } from \"../parse-error.ts\";\nimport toNodeDescription from \"./to-node-description.ts\";\n\nexport type LValAncestor =\n  | { type: \"UpdateExpression\"; prefix: boolean }\n  | {\n      type:\n        | \"ArrayPattern\"\n        | \"AssignmentExpression\"\n        | \"CatchClause\"\n        | \"ForOfStatement\"\n        | \"FormalParameters\"\n        | \"ForInStatement\"\n        | \"ForStatement\"\n        | \"ImportSpecifier\"\n        | \"ImportNamespaceSpecifier\"\n        | \"ImportDefaultSpecifier\"\n        | \"ParenthesizedExpression\"\n        | \"ObjectPattern\"\n        | \"RestElement\"\n        | \"VariableDeclarator\";\n    };\n\nexport default {\n  AccessorIsGenerator: ({ kind }: { kind: \"get\" | \"set\" }) =>\n    `A ${kind}ter cannot be a generator.`,\n  ArgumentsInClass:\n    \"'arguments' is only allowed in functions and class methods.\",\n  AsyncFunctionInSingleStatementContext:\n    \"Async functions can only be declared at the top level or inside a block.\",\n  AwaitBindingIdentifier:\n    \"Can not use 'await' as identifier inside an async function.\",\n  AwaitBindingIdentifierInStaticBlock:\n    \"Can not use 'await' as identifier inside a static block.\",\n  AwaitExpressionFormalParameter:\n    \"'await' is not allowed in async function parameters.\",\n  AwaitUsingNotInAsyncContext:\n    \"'await using' is only allowed within async functions and at the top levels of modules.\",\n  AwaitNotInAsyncContext:\n    \"'await' is only allowed within async functions and at the top levels of modules.\",\n  AwaitNotInAsyncFunction: \"'await' is only allowed within async functions.\",\n  BadGetterArity: \"A 'get' accessor must not have any formal parameters.\",\n  BadSetterArity: \"A 'set' accessor must have exactly one formal parameter.\",\n  BadSetterRestParameter:\n    \"A 'set' accessor function argument must not be a rest parameter.\",\n  ConstructorClassField: \"Classes may not have a field named 'constructor'.\",\n  ConstructorClassPrivateField:\n    \"Classes may not have a private field named '#constructor'.\",\n  ConstructorIsAccessor: \"Class constructor may not be an accessor.\",\n  ConstructorIsAsync: \"Constructor can't be an async function.\",\n  ConstructorIsGenerator: \"Constructor can't be a generator.\",\n  DeclarationMissingInitializer: ({\n    kind,\n  }: {\n    kind: \"const\" | \"destructuring\";\n  }) => `Missing initializer in ${kind} declaration.`,\n  DecoratorArgumentsOutsideParentheses:\n    \"Decorator arguments must be moved inside parentheses: use '@(decorator(args))' instead of '@(decorator)(args)'.\",\n  DecoratorBeforeExport:\n    \"Decorators must be placed *before* the 'export' keyword. Remove the 'decoratorsBeforeExport: true' option to use the 'export @decorator class {}' syntax.\",\n  DecoratorsBeforeAfterExport:\n    \"Decorators can be placed *either* before or after the 'export' keyword, but not in both locations at the same time.\",\n  DecoratorConstructor:\n    \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  DecoratorExportClass:\n    \"Decorators must be placed *after* the 'export' keyword. Remove the 'decoratorsBeforeExport: false' option to use the '@decorator export class {}' syntax.\",\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon.\",\n  DecoratorStaticBlock: \"Decorators can't be used with a static block.\",\n  DeferImportRequiresNamespace:\n    'Only `import defer * as x from \"./module\"` is valid.',\n  DeletePrivateField: \"Deleting a private field is not allowed.\",\n  DestructureNamedImport:\n    \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  DuplicateConstructor: \"Duplicate constructor in the same class.\",\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\n  DuplicateExport: ({ exportName }: { exportName: string }) =>\n    `\\`${exportName}\\` has already been exported. Exported identifiers must be unique.`,\n  DuplicateProto: \"Redefinition of __proto__ property.\",\n  DuplicateRegExpFlags: \"Duplicate regular expression flag.\",\n  DynamicImportPhaseRequiresImportExpressions: ({ phase }: { phase: string }) =>\n    `'import.${phase}(...)' can only be parsed when using the 'createImportExpressions' option.`,\n  ElementAfterRest: \"Rest element must be last element.\",\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape.\",\n  ExportBindingIsString: ({\n    localName,\n    exportName,\n  }: {\n    localName: string;\n    exportName: string;\n  }) =>\n    `A string literal cannot be used as an exported binding without \\`from\\`.\\n- Did you mean \\`export { '${localName}' as '${exportName}' } from 'some-module'\\`?`,\n  ExportDefaultFromAsIdentifier:\n    \"'from' is not allowed as an identifier after 'export default'.\",\n\n  ForInOfLoopInitializer: ({\n    type,\n  }: {\n    type: \"ForInStatement\" | \"ForOfStatement\";\n  }) =>\n    `'${\n      type === \"ForInStatement\" ? \"for-in\" : \"for-of\"\n    }' loop variable declaration may not have an initializer.`,\n  ForInUsing: \"For-in loop may not start with 'using' declaration.\",\n\n  ForOfAsync: \"The left-hand side of a for-of loop may not be 'async'.\",\n  ForOfLet: \"The left-hand side of a for-of loop may not start with 'let'.\",\n  GeneratorInSingleStatementContext:\n    \"Generators can only be declared at the top level or inside a block.\",\n\n  IllegalBreakContinue: ({\n    type,\n  }: {\n    type: \"BreakStatement\" | \"ContinueStatement\";\n  }) => `Unsyntactic ${type === \"BreakStatement\" ? \"break\" : \"continue\"}.`,\n\n  IllegalLanguageModeDirective:\n    \"Illegal 'use strict' directive in function with non-simple parameter list.\",\n  IllegalReturn: \"'return' outside of function.\",\n  ImportAttributesUseAssert:\n    \"The `assert` keyword in import attributes is deprecated and it has been replaced by the `with` keyword. You can enable the `deprecatedAssertSyntax: true` option in the import attributes plugin to suppress this error.\",\n  ImportBindingIsString: ({ importName }: { importName: string }) =>\n    `A string literal cannot be used as an imported binding.\\n- Did you mean \\`import { \"${importName}\" as foo }\\`?`,\n  ImportCallArgumentTrailingComma:\n    \"Trailing comma is disallowed inside import(...) arguments.\",\n  ImportCallArity: ({ maxArgumentCount }: { maxArgumentCount: 1 | 2 }) =>\n    `\\`import()\\` requires exactly ${\n      maxArgumentCount === 1 ? \"one argument\" : \"one or two arguments\"\n    }.`,\n  ImportCallNotNewExpression: \"Cannot use new with import(...).\",\n  ImportCallSpreadArgument: \"`...` is not allowed in `import()`.\",\n  ImportJSONBindingNotDefault:\n    \"A JSON module can only be imported with `default`.\",\n  ImportReflectionHasAssertion: \"`import module x` cannot have assertions.\",\n  ImportReflectionNotBinding:\n    'Only `import module x from \"./module\"` is valid.',\n  IncompatibleRegExpUVFlags:\n    \"The 'u' and 'v' regular expression flags cannot be enabled at the same time.\",\n  InvalidBigIntLiteral: \"Invalid BigIntLiteral.\",\n  InvalidCodePoint: \"Code point out of bounds.\",\n  InvalidCoverInitializedName: \"Invalid shorthand property initializer.\",\n  InvalidDecimal: \"Invalid decimal.\",\n  InvalidDigit: ({ radix }: { radix: number }) =>\n    `Expected number in radix ${radix}.`,\n  InvalidEscapeSequence: \"Bad character escape sequence.\",\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template.\",\n  InvalidEscapedReservedWord: ({ reservedWord }: { reservedWord: string }) =>\n    `Escape sequence in keyword ${reservedWord}.`,\n  InvalidIdentifier: ({ identifierName }: { identifierName: string }) =>\n    `Invalid identifier ${identifierName}.`,\n  InvalidLhs: ({ ancestor }: { ancestor: LValAncestor }) =>\n    `Invalid left-hand side in ${toNodeDescription(ancestor)}.`,\n  InvalidLhsBinding: ({ ancestor }: { ancestor: LValAncestor }) =>\n    `Binding invalid left-hand side in ${toNodeDescription(ancestor)}.`,\n  InvalidLhsOptionalChaining: ({ ancestor }: { ancestor: LValAncestor }) =>\n    `Invalid optional chaining in the left-hand side of ${toNodeDescription(\n      ancestor,\n    )}.`,\n  InvalidNumber: \"Invalid number.\",\n  InvalidOrMissingExponent:\n    \"Floating-point numbers require a valid exponent after the 'e'.\",\n  InvalidOrUnexpectedToken: ({ unexpected }: { unexpected: string }) =>\n    `Unexpected character '${unexpected}'.`,\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern.\",\n  InvalidPrivateFieldResolution: ({\n    identifierName,\n  }: {\n    identifierName: string;\n  }) => `Private name #${identifierName} is not defined.`,\n  InvalidPropertyBindingPattern: \"Binding member expression.\",\n  InvalidRecordProperty:\n    \"Only properties and spread elements are allowed in record definitions.\",\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument.\",\n  LabelRedeclaration: ({ labelName }: { labelName: string }) =>\n    `Label '${labelName}' is already declared.`,\n  LetInLexicalBinding: \"'let' is disallowed as a lexically bound name.\",\n  LineTerminatorBeforeArrow: \"No line break is allowed before '=>'.\",\n  MalformedRegExpFlags: \"Invalid regular expression flag.\",\n  MissingClassName: \"A class name is required.\",\n  MissingEqInAssignment:\n    \"Only '=' operator can be used for specifying default value.\",\n  MissingSemicolon: \"Missing semicolon.\",\n  MissingPlugin: ({ missingPlugin }: { missingPlugin: [string] }) =>\n    `This experimental syntax requires enabling the parser plugin: ${missingPlugin\n      .map(name => JSON.stringify(name))\n      .join(\", \")}.`,\n  // FIXME: Would be nice to make this \"missingPlugins\" instead.\n  // Also, seems like we can drop the \"(s)\" from the message and just make it \"s\".\n  MissingOneOfPlugins: ({ missingPlugin }: { missingPlugin: string[] }) =>\n    `This experimental syntax requires enabling one of the following parser plugin(s): ${missingPlugin\n      .map(name => JSON.stringify(name))\n      .join(\", \")}.`,\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX.\",\n  MixingCoalesceWithLogical:\n    \"Nullish coalescing operator(??) requires parens when mixing with logical operators.\",\n  ModuleAttributeDifferentFromType:\n    \"The only accepted module attribute is `type`.\",\n  ModuleAttributeInvalidValue:\n    \"Only string literals are allowed as module attribute values.\",\n  ModuleAttributesWithDuplicateKeys: ({ key }: { key: string }) =>\n    `Duplicate key \"${key}\" is not allowed in module attributes.`,\n  ModuleExportNameHasLoneSurrogate: ({\n    surrogateCharCode,\n  }: {\n    surrogateCharCode: number;\n  }) =>\n    `An export name cannot include a lone surrogate, found '\\\\u${surrogateCharCode.toString(\n      16,\n    )}'.`,\n  ModuleExportUndefined: ({ localName }: { localName: string }) =>\n    `Export '${localName}' is not defined.`,\n  MultipleDefaultsInSwitch: \"Multiple default clauses.\",\n  NewlineAfterThrow: \"Illegal newline after throw.\",\n  NoCatchOrFinally: \"Missing catch or finally clause.\",\n  NumberIdentifier: \"Identifier directly after number.\",\n  NumericSeparatorInEscapeSequence:\n    \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences.\",\n  ObsoleteAwaitStar:\n    \"'await*' has been removed from the async functions proposal. Use Promise.all() instead.\",\n  OptionalChainingNoNew:\n    \"Constructors in/after an Optional Chain are not allowed.\",\n  OptionalChainingNoTemplate:\n    \"Tagged Template Literals are not allowed in optionalChain.\",\n  OverrideOnConstructor:\n    \"'override' modifier cannot appear on a constructor declaration.\",\n  ParamDupe: \"Argument name clash.\",\n  PatternHasAccessor: \"Object pattern can't contain getter or setter.\",\n  PatternHasMethod: \"Object pattern can't contain methods.\",\n  PrivateInExpectedIn: ({ identifierName }: { identifierName: string }) =>\n    `Private names are only allowed in property accesses (\\`obj.#${identifierName}\\`) or in \\`in\\` expressions (\\`#${identifierName} in obj\\`).`,\n  PrivateNameRedeclaration: ({ identifierName }: { identifierName: string }) =>\n    `Duplicate private name #${identifierName}.`,\n  RecordExpressionBarIncorrectEndSyntaxType:\n    \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionBarIncorrectStartSyntaxType:\n    \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionHashIncorrectStartSyntaxType:\n    \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  RecordNoProto: \"'__proto__' is not allowed in Record expressions.\",\n  RestTrailingComma: \"Unexpected trailing comma after rest element.\",\n  SloppyFunction:\n    \"In non-strict mode code, functions can only be declared at top level or inside a block.\",\n  SloppyFunctionAnnexB:\n    \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.\",\n  SourcePhaseImportRequiresDefault:\n    'Only `import source x from \"./module\"` is valid.',\n  StaticPrototype: \"Classes may not have static property named prototype.\",\n  SuperNotAllowed:\n    \"`super()` is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  SuperPrivateField: \"Private fields can't be accessed on super.\",\n  TrailingDecorator: \"Decorators must be attached to a class element.\",\n  TupleExpressionBarIncorrectEndSyntaxType:\n    \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionBarIncorrectStartSyntaxType:\n    \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionHashIncorrectStartSyntaxType:\n    \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder.\",\n  UnexpectedAwaitAfterPipelineBody:\n    'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal.',\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token.\",\n  UnexpectedImportExport:\n    \"'import' and 'export' may only appear at the top level.\",\n  UnexpectedKeyword: ({ keyword }: { keyword: string }) =>\n    `Unexpected keyword '${keyword}'.`,\n  UnexpectedLeadingDecorator:\n    \"Leading decorators must be attached to a class declaration.\",\n  UnexpectedLexicalDeclaration:\n    \"Lexical declaration cannot appear in a single-statement context.\",\n  UnexpectedNewTarget:\n    \"`new.target` can only be used in functions or class properties.\",\n  UnexpectedNumericSeparator:\n    \"A numeric separator is only allowed between two digits.\",\n  UnexpectedPrivateField: \"Unexpected private name.\",\n  UnexpectedReservedWord: ({ reservedWord }: { reservedWord: string }) =>\n    `Unexpected reserved word '${reservedWord}'.`,\n  UnexpectedSuper: \"'super' is only allowed in object methods and classes.\",\n  UnexpectedToken: ({\n    expected,\n    unexpected,\n  }: {\n    expected?: string | null;\n    unexpected?: string | null;\n  }) =>\n    `Unexpected token${unexpected ? ` '${unexpected}'.` : \"\"}${\n      expected ? `, expected \"${expected}\"` : \"\"\n    }`,\n  UnexpectedTokenUnaryExponentiation:\n    \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  UnexpectedUsingDeclaration:\n    \"Using declaration cannot appear in the top level when source type is `script`.\",\n  UnsupportedBind: \"Binding should be performed on object property.\",\n  UnsupportedDecoratorExport:\n    \"A decorated export must export a class declaration.\",\n  UnsupportedDefaultExport:\n    \"Only expressions, functions or classes are allowed as the `default` export.\",\n  UnsupportedImport:\n    \"`import` can only be used in `import()` or `import.meta`.\",\n  UnsupportedMetaProperty: ({\n    target,\n    onlyValidPropertyName,\n  }: {\n    target: string;\n    onlyValidPropertyName: string;\n  }) =>\n    `The only valid meta property for ${target} is ${target}.${onlyValidPropertyName}.`,\n  UnsupportedParameterDecorator:\n    \"Decorators cannot be used to decorate parameters.\",\n  UnsupportedPropertyDecorator:\n    \"Decorators cannot be used to decorate object literal properties.\",\n  UnsupportedSuper:\n    \"'super' can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop]).\",\n  UnterminatedComment: \"Unterminated comment.\",\n  UnterminatedRegExp: \"Unterminated regular expression.\",\n  UnterminatedString: \"Unterminated string constant.\",\n  UnterminatedTemplate: \"Unterminated template.\",\n  UsingDeclarationHasBindingPattern:\n    \"Using declaration cannot have destructuring patterns.\",\n  VarRedeclaration: ({ identifierName }: { identifierName: string }) =>\n    `Identifier '${identifierName}' has already been declared.`,\n  YieldBindingIdentifier:\n    \"Can not use 'yield' as identifier inside a generator.\",\n  YieldInParameter: \"Yield expression is not allowed in formal parameters.\",\n  ZeroDigitNumericSeparator:\n    \"Numeric separator can not be used after leading 0.\",\n} satisfies ParseErrorTemplates;\n","import type { ParseErrorTemplates } from \"../parse-error\";\n\nexport default {\n  StrictDelete: \"Deleting local variable in strict mode.\",\n\n  // `referenceName` is the StringValue[1] of an IdentifierReference[2], which\n  // is represented as just an `Identifier`[3] in the Babel AST.\n  // 1. https://tc39.es/ecma262/#sec-static-semantics-stringvalue\n  // 2. https://tc39.es/ecma262/#prod-IdentifierReference\n  // 3. https://github.com/babel/babel/blob/main/packages/babel-parser/ast/spec.md#identifier\n  StrictEvalArguments: ({ referenceName }: { referenceName: string }) =>\n    `Assigning to '${referenceName}' in strict mode.`,\n\n  // `bindingName` is the StringValue[1] of a BindingIdentifier[2], which is\n  // represented as just an `Identifier`[3] in the Babel AST.\n  // 1. https://tc39.es/ecma262/#sec-static-semantics-stringvalue\n  // 2. https://tc39.es/ecma262/#prod-BindingIdentifier\n  // 3. https://github.com/babel/babel/blob/main/packages/babel-parser/ast/spec.md#identifier\n  StrictEvalArgumentsBinding: ({ bindingName }: { bindingName: string }) =>\n    `Binding '${bindingName}' in strict mode.`,\n\n  StrictFunction:\n    \"In strict mode code, functions can only be declared at top level or inside a block.\",\n\n  StrictNumericEscape: \"The only valid numeric escape in strict mode is '\\\\0'.\",\n\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode.\",\n\n  StrictWith: \"'with' in strict mode.\",\n} satisfies ParseErrorTemplates;\n","import type { ParseErrorTemplates } from \"../parse-error.ts\";\nimport toNodeDescription from \"./to-node-description.ts\";\n\nexport const UnparenthesizedPipeBodyDescriptions = new Set([\n  \"ArrowFunctionExpression\",\n  \"AssignmentExpression\",\n  \"ConditionalExpression\",\n  \"YieldExpression\",\n] as const);\n\ntype GetSetMemberType<T extends Set<any>> = T extends Set<infer M>\n  ? M\n  : unknown;\n\ntype UnparenthesizedPipeBodyTypes = GetSetMemberType<\n  typeof UnparenthesizedPipeBodyDescriptions\n>;\n\nexport default {\n  // This error is only used by the smart-mix proposal\n  PipeBodyIsTighter:\n    \"Unexpected yield after pipeline body; any yield expression acting as Hack-style pipe body must be parenthesized due to its loose operator precedence.\",\n  PipeTopicRequiresHackPipes:\n    'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.',\n  PipeTopicUnbound:\n    \"Topic reference is unbound; it must be inside a pipe body.\",\n  PipeTopicUnconfiguredToken: ({ token }: { token: string }) =>\n    `Invalid topic token ${token}. In order to use ${token} as a topic reference, the pipelineOperator plugin must be configured with { \"proposal\": \"hack\", \"topicToken\": \"${token}\" }.`,\n  PipeTopicUnused:\n    \"Hack-style pipe body does not contain a topic reference; Hack-style pipes must use topic at least once.\",\n  PipeUnparenthesizedBody: ({ type }: { type: UnparenthesizedPipeBodyTypes }) =>\n    `Hack-style pipe body cannot be an unparenthesized ${toNodeDescription({\n      type,\n    })}; please wrap it in parentheses.`,\n\n  // Messages whose codes start with “Pipeline” or “PrimaryTopic”\n  // are retained for backwards compatibility\n  // with the deprecated smart-mix pipe operator proposal plugin.\n  // They are subject to removal in a future major version.\n  PipelineBodyNoArrow:\n    'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized.',\n  PipelineBodySequenceExpression:\n    \"Pipeline body may not be a comma-separated sequence expression.\",\n  PipelineHeadSequenceExpression:\n    \"Pipeline head should not be a comma-separated sequence expression.\",\n  PipelineTopicUnused:\n    \"Pipeline is in topic style but does not use topic reference.\",\n  PrimaryTopicNotAllowed:\n    \"Topic reference was used in a lexical context without topic binding.\",\n  PrimaryTopicRequiresSmartPipeline:\n    'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.',\n} satisfies ParseErrorTemplates;\n","import { Position } from \"./util/location.ts\";\nimport type { Undone } from \"./parser/node.ts\";\nimport type { Node } from \"./types.ts\";\n\ntype SyntaxPlugin =\n  | \"flow\"\n  | \"typescript\"\n  | \"jsx\"\n  | \"pipelineOperator\"\n  | \"placeholders\";\n\ntype ParseErrorCode =\n  | \"BABEL_PARSER_SYNTAX_ERROR\"\n  | \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\";\n\n// Babel uses \"normal\" SyntaxErrors for it's errors, but adds some extra\n// functionality. This functionality is defined in the\n// `ParseErrorSpecification` interface below. We may choose to change to someday\n// give our errors their own full-blown class, but until then this allow us to\n// keep all the desirable properties of SyntaxErrors (like their name in stack\n// traces, etc.), and also allows us to punt on any publicly facing\n// class-hierarchy decisions until Babel 8.\ninterface ParseErrorSpecification<ErrorDetails> {\n  // Look, these *could* be readonly, but then Flow complains when we initially\n  // set them. We could do a whole dance and make a special interface that's not\n  // readonly for when we create the error, then cast it to the readonly\n  // interface for public use, but the previous implementation didn't have them\n  // as readonly, so let's just not worry about it for now.\n  code: ParseErrorCode;\n  reasonCode: string;\n  syntaxPlugin?: SyntaxPlugin;\n  missingPlugin?: string | string[];\n  loc: Position;\n  details: ErrorDetails;\n\n  // We should consider removing this as it now just contains the same\n  // information as `loc.index`.\n  // pos: number;\n}\n\nexport type ParseError<ErrorDetails> = SyntaxError &\n  ParseErrorSpecification<ErrorDetails>;\n\n// By `ParseErrorConstructor`, we mean something like the new-less style\n// `ErrorConstructor`[1], since `ParseError`'s are not themselves actually\n// separate classes from `SyntaxError`'s.\n//\n// 1. https://github.com/microsoft/TypeScript/blob/v4.5.5/lib/lib.es5.d.ts#L1027\nexport type ParseErrorConstructor<ErrorDetails> = (a: {\n  loc: Position;\n  details: ErrorDetails;\n}) => ParseError<ErrorDetails>;\n\ntype ToMessage<ErrorDetails> = (self: ErrorDetails) => string;\n\ntype ParseErrorCredentials<ErrorDetails> = {\n  code: string;\n  reasonCode: string;\n  syntaxPlugin?: SyntaxPlugin;\n  toMessage: ToMessage<ErrorDetails>;\n};\n\nfunction defineHidden(obj: object, key: string, value: unknown) {\n  Object.defineProperty(obj, key, {\n    enumerable: false,\n    configurable: true,\n    value,\n  });\n}\n\nfunction toParseErrorConstructor<ErrorDetails extends object>({\n  toMessage,\n  ...properties\n}: ParseErrorCredentials<ErrorDetails>): ParseErrorConstructor<ErrorDetails> {\n  type ConstructorArgument = {\n    loc: Position;\n    details: ErrorDetails;\n  };\n\n  return function constructor({ loc, details }: ConstructorArgument) {\n    const error = new SyntaxError();\n    Object.assign(error, properties, { loc, pos: loc.index });\n    if (\"missingPlugin\" in details) {\n      Object.assign(error, { missingPlugin: details.missingPlugin });\n    }\n\n    type Overrides = {\n      loc?: Position;\n      details?: ErrorDetails;\n    };\n    defineHidden(error, \"clone\", function clone(overrides: Overrides = {}) {\n      const { line, column, index } = overrides.loc ?? loc;\n      return constructor({\n        loc: new Position(line, column, index),\n        details: { ...details, ...overrides.details },\n      });\n    });\n\n    defineHidden(error, \"details\", details);\n\n    Object.defineProperty(error, \"message\", {\n      configurable: true,\n      get(this: ParseError<ErrorDetails>): string {\n        const message = `${toMessage(details)} (${loc.line}:${loc.column})`;\n        this.message = message;\n        return message;\n      },\n      set(value: string) {\n        Object.defineProperty(this, \"message\", { value, writable: true });\n      },\n    });\n\n    return error as ParseError<ErrorDetails>;\n  };\n}\n\ntype ParseErrorTemplate =\n  | string\n  | ToMessage<any>\n  | { message: string | ToMessage<any>; code?: ParseErrorCode };\n\nexport type ParseErrorTemplates = { [reasonCode: string]: ParseErrorTemplate };\n\n// This is the templated form of `ParseErrorEnum`.\n//\n// Note: We could factor out the return type calculation into something like\n// `ParseErrorConstructor<T extends ParseErrorTemplates>`, and then we could\n// reuse it in the non-templated form of `ParseErrorEnum`, but TypeScript\n// doesn't seem to drill down that far when showing you the computed type of\n// an object in an editor, so we'll leave it inlined for now.\nexport function ParseErrorEnum(a: TemplateStringsArray): <\n  T extends ParseErrorTemplates,\n>(\n  parseErrorTemplates: T,\n) => {\n  [K in keyof T]: ParseErrorConstructor<\n    T[K] extends { message: string | ToMessage<any> }\n      ? T[K][\"message\"] extends ToMessage<any>\n        ? Parameters<T[K][\"message\"]>[0]\n        : {}\n      : T[K] extends ToMessage<any>\n      ? Parameters<T[K]>[0]\n      : {}\n  >;\n};\n\nexport function ParseErrorEnum<T extends ParseErrorTemplates>(\n  parseErrorTemplates: T,\n  syntaxPlugin?: SyntaxPlugin,\n): {\n  [K in keyof T]: ParseErrorConstructor<\n    T[K] extends { message: string | ToMessage<any> }\n      ? T[K][\"message\"] extends ToMessage<any>\n        ? Parameters<T[K][\"message\"]>[0]\n        : {}\n      : T[K] extends ToMessage<any>\n      ? Parameters<T[K]>[0]\n      : {}\n  >;\n};\n\n// You call `ParseErrorEnum` with a mapping from `ReasonCode`'s to either:\n//\n// 1. a static error message,\n// 2. `toMessage` functions that define additional necessary `details` needed by\n//    the `ParseError`, or\n// 3. Objects that contain a `message` of one of the above and overridden `code`\n//    and/or `reasonCode`:\n//\n// ParseErrorEnum `optionalSyntaxPlugin` ({\n//   ErrorWithStaticMessage: \"message\",\n//   ErrorWithDynamicMessage: ({ type } : { type: string }) => `${type}`),\n//   ErrorWithOverriddenCodeAndOrReasonCode: {\n//     message: ({ type }: { type: string }) => `${type}`),\n//     code: \"AN_ERROR_CODE\",\n//     ...(BABEL_8_BREAKING ? { } : { reasonCode: \"CustomErrorReasonCode\" })\n//   }\n// });\n//\nexport function ParseErrorEnum(\n  argument: TemplateStringsArray | ParseErrorTemplates,\n  syntaxPlugin?: SyntaxPlugin,\n) {\n  // If the first parameter is an array, that means we were called with a tagged\n  // template literal. Extract the syntaxPlugin from this, and call again in\n  // the \"normalized\" form.\n  if (Array.isArray(argument)) {\n    return (parseErrorTemplates: ParseErrorTemplates) =>\n      ParseErrorEnum(parseErrorTemplates, argument[0]);\n  }\n\n  const ParseErrorConstructors = {} as Record<\n    string,\n    ParseErrorConstructor<unknown>\n  >;\n\n  for (const reasonCode of Object.keys(argument)) {\n    const template = (argument as ParseErrorTemplates)[reasonCode];\n    const { message, ...rest } =\n      typeof template === \"string\"\n        ? { message: () => template }\n        : typeof template === \"function\"\n        ? { message: template }\n        : template;\n    const toMessage = typeof message === \"string\" ? () => message : message;\n\n    ParseErrorConstructors[reasonCode] = toParseErrorConstructor({\n      code: \"BABEL_PARSER_SYNTAX_ERROR\",\n      reasonCode,\n      toMessage,\n      ...(syntaxPlugin ? { syntaxPlugin } : {}),\n      ...rest,\n    });\n  }\n\n  return ParseErrorConstructors;\n}\n\nexport type RaiseProperties<ErrorDetails> = {\n  at: Position | Undone<Node>;\n} & ErrorDetails;\n\nimport ModuleErrors from \"./parse-error/module-errors.ts\";\nimport StandardErrors from \"./parse-error/standard-errors.ts\";\nimport StrictModeErrors from \"./parse-error/strict-mode-errors.ts\";\nimport PipelineOperatorErrors from \"./parse-error/pipeline-operator-errors.ts\";\n\nexport const Errors = {\n  ...ParseErrorEnum(ModuleErrors),\n  ...ParseErrorEnum(StandardErrors),\n  ...ParseErrorEnum(StrictModeErrors),\n  ...ParseErrorEnum`pipelineOperator`(PipelineOperatorErrors),\n};\n\nexport type { LValAncestor } from \"./parse-error/standard-errors.ts\";\n","import type { TokenType } from \"../tokenizer/types.ts\";\nimport type Parser from \"../parser/index.ts\";\nimport type { ExpressionErrors } from \"../parser/util.ts\";\nimport type * as N from \"../types.ts\";\nimport type { Node as NodeType, NodeBase, File } from \"../types.ts\";\nimport type { Position } from \"../util/location.ts\";\nimport { Errors } from \"../parse-error.ts\";\nimport type { Undone } from \"../parser/node.ts\";\nimport type { BindingTypes } from \"../util/scopeflags.ts\";\n\nconst { defineProperty } = Object;\nconst toUnenumerable = (object: any, key: string) =>\n  defineProperty(object, key, { enumerable: false, value: object[key] });\n\nfunction toESTreeLocation(node: any) {\n  node.loc.start && toUnenumerable(node.loc.start, \"index\");\n  node.loc.end && toUnenumerable(node.loc.end, \"index\");\n\n  return node;\n}\n\nexport default (superClass: typeof Parser) =>\n  class ESTreeParserMixin extends superClass implements Parser {\n    parse(): File {\n      const file = toESTreeLocation(super.parse());\n\n      if (this.options.tokens) {\n        file.tokens = file.tokens.map(toESTreeLocation);\n      }\n\n      return file;\n    }\n\n    // @ts-expect-error ESTree plugin changes node types\n    parseRegExpLiteral({ pattern, flags }): N.EstreeRegExpLiteral {\n      let regex: RegExp | null = null;\n      try {\n        regex = new RegExp(pattern, flags);\n      } catch (e) {\n        // In environments that don't support these flags value will\n        // be null as the regex can't be represented natively.\n      }\n      const node = this.estreeParseLiteral<N.EstreeRegExpLiteral>(regex);\n      node.regex = { pattern, flags };\n\n      return node;\n    }\n\n    // @ts-expect-error ESTree plugin changes node types\n    parseBigIntLiteral(value: any): N.Node {\n      // https://github.com/estree/estree/blob/master/es2020.md#bigintliteral\n      let bigInt: BigInt | null;\n      try {\n        bigInt = BigInt(value);\n      } catch {\n        bigInt = null;\n      }\n      const node = this.estreeParseLiteral<N.EstreeBigIntLiteral>(bigInt);\n      node.bigint = String(node.value || value);\n\n      return node;\n    }\n\n    // @ts-expect-error ESTree plugin changes node types\n    parseDecimalLiteral(value: any): N.Node {\n      // https://github.com/estree/estree/blob/master/experimental/decimal.md\n      // todo: use BigDecimal when node supports it.\n      const decimal: null = null;\n      const node = this.estreeParseLiteral(decimal);\n      node.decimal = String(node.value || value);\n\n      return node;\n    }\n\n    estreeParseLiteral<T extends N.Node>(value: any) {\n      // @ts-expect-error ESTree plugin changes node types\n      return this.parseLiteral<T>(value, \"Literal\");\n    }\n\n    // @ts-expect-error ESTree plugin changes node types\n    parseStringLiteral(value: any): N.Node {\n      return this.estreeParseLiteral(value);\n    }\n\n    parseNumericLiteral(value: any): any {\n      return this.estreeParseLiteral(value);\n    }\n\n    // @ts-expect-error ESTree plugin changes node types\n    parseNullLiteral(): N.Node {\n      return this.estreeParseLiteral(null);\n    }\n\n    parseBooleanLiteral(value: boolean): N.BooleanLiteral {\n      return this.estreeParseLiteral(value);\n    }\n\n    // Cast a Directive to an ExpressionStatement. Mutates the input Directive.\n    directiveToStmt(directive: N.Directive): N.ExpressionStatement {\n      const expression = directive.value as any as N.EstreeLiteral;\n      delete directive.value;\n\n      expression.type = \"Literal\";\n      // @ts-expect-error N.EstreeLiteral.raw is not defined.\n      expression.raw = expression.extra.raw;\n      expression.value = expression.extra.expressionValue;\n\n      const stmt = directive as any as N.ExpressionStatement;\n      stmt.type = \"ExpressionStatement\";\n      stmt.expression = expression;\n      // @ts-expect-error N.ExpressionStatement.directive is not defined\n      stmt.directive = expression.extra.rawValue;\n\n      delete expression.extra;\n\n      return stmt;\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    initFunction(node: N.BodilessFunctionOrMethodBase, isAsync: boolean): void {\n      super.initFunction(node, isAsync);\n      node.expression = false;\n    }\n\n    checkDeclaration(node: N.Pattern | N.ObjectProperty): void {\n      if (node != null && this.isObjectProperty(node)) {\n        // @ts-expect-error plugin typings\n        this.checkDeclaration((node as unknown as N.EstreeProperty).value);\n      } else {\n        super.checkDeclaration(node);\n      }\n    }\n\n    getObjectOrClassMethodParams(method: N.ObjectMethod | N.ClassMethod) {\n      return (method as any as N.EstreeProperty | N.EstreeMethodDefinition)\n        .value.params;\n    }\n\n    isValidDirective(stmt: N.Statement): boolean {\n      return (\n        stmt.type === \"ExpressionStatement\" &&\n        stmt.expression.type === \"Literal\" &&\n        typeof stmt.expression.value === \"string\" &&\n        !stmt.expression.extra?.parenthesized\n      );\n    }\n\n    parseBlockBody(\n      node: N.BlockStatementLike,\n      allowDirectives: boolean | undefined | null,\n      topLevel: boolean,\n      end: TokenType,\n      afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n    ): void {\n      super.parseBlockBody(\n        node,\n        allowDirectives,\n        topLevel,\n        end,\n        afterBlockParse,\n      );\n\n      const directiveStatements = node.directives.map(d =>\n        this.directiveToStmt(d),\n      );\n      // @ts-expect-error estree plugin typings\n      node.body = directiveStatements.concat(node.body);\n      delete node.directives;\n    }\n\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      this.parseMethod(\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n        \"ClassMethod\",\n        true,\n      );\n      if (method.typeParameters) {\n        // @ts-expect-error mutate AST types\n        method.value.typeParameters = method.typeParameters;\n        delete method.typeParameters;\n      }\n      classBody.body.push(method);\n    }\n\n    parsePrivateName(): any {\n      const node = super.parsePrivateName();\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return node;\n        }\n      }\n      return this.convertPrivateNameToPrivateIdentifier(node);\n    }\n\n    convertPrivateNameToPrivateIdentifier(\n      node: N.PrivateName,\n    ): N.EstreePrivateIdentifier {\n      const name = super.getPrivateNameSV(node);\n      node = node as any;\n      delete node.id;\n      // @ts-expect-error mutate AST types\n      node.name = name;\n      // @ts-expect-error mutate AST types\n      node.type = \"PrivateIdentifier\";\n      return node as unknown as N.EstreePrivateIdentifier;\n    }\n\n    isPrivateName(node: N.Node): boolean {\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return super.isPrivateName(node);\n        }\n      }\n      return node.type === \"PrivateIdentifier\";\n    }\n\n    getPrivateNameSV(node: N.Node): string {\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return super.getPrivateNameSV(node);\n        }\n      }\n      return node.name;\n    }\n\n    // @ts-expect-error plugin may override interfaces\n    parseLiteral<T extends N.Literal>(value: any, type: T[\"type\"]): T {\n      const node = super.parseLiteral<T>(value, type);\n      // @ts-expect-error mutating AST types\n      node.raw = node.extra.raw;\n      delete node.extra;\n\n      return node;\n    }\n\n    parseFunctionBody(\n      node: N.Function,\n      allowExpression?: boolean | null,\n      isMethod: boolean = false,\n    ): void {\n      super.parseFunctionBody(node, allowExpression, isMethod);\n      node.expression = node.body.type !== \"BlockStatement\";\n    }\n\n    // @ts-expect-error plugin may override interfaces\n    parseMethod<\n      T extends N.ClassPrivateMethod | N.ObjectMethod | N.ClassMethod,\n    >(\n      node: Undone<T>,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowDirectSuper: boolean,\n      type: T[\"type\"],\n      inClassScope: boolean = false,\n    ): N.EstreeMethodDefinition {\n      let funcNode = this.startNode<N.MethodLike>();\n      funcNode.kind = node.kind; // provide kind, so super method correctly sets state\n      funcNode = super.parseMethod(\n        // @ts-expect-error todo(flow->ts)\n        funcNode,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowDirectSuper,\n        type,\n        inClassScope,\n      );\n      // @ts-expect-error mutate AST types\n      funcNode.type = \"FunctionExpression\";\n      delete funcNode.kind;\n      // @ts-expect-error mutate AST types\n      node.value = funcNode;\n      if (type === \"ClassPrivateMethod\") {\n        node.computed = false;\n      }\n      return this.finishNode(\n        // @ts-expect-error cast methods to estree types\n        node as Undone<N.EstreeMethodDefinition>,\n        \"MethodDefinition\",\n      );\n    }\n\n    parseClassProperty(...args: [N.ClassProperty]): any {\n      const propertyNode = super.parseClassProperty(...args) as any;\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return propertyNode as N.EstreePropertyDefinition;\n        }\n      }\n      propertyNode.type = \"PropertyDefinition\";\n      return propertyNode as N.EstreePropertyDefinition;\n    }\n\n    parseClassPrivateProperty(...args: [N.ClassPrivateProperty]): any {\n      const propertyNode = super.parseClassPrivateProperty(...args) as any;\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return propertyNode as N.EstreePropertyDefinition;\n        }\n      }\n      propertyNode.type = \"PropertyDefinition\";\n      propertyNode.computed = false;\n      return propertyNode as N.EstreePropertyDefinition;\n    }\n\n    parseObjectMethod(\n      prop: N.ObjectMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isPattern: boolean,\n      isAccessor: boolean,\n    ): N.ObjectMethod | undefined | null {\n      const node: N.EstreeProperty = super.parseObjectMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n      ) as any;\n\n      if (node) {\n        node.type = \"Property\";\n        if ((node as any as N.ClassMethod).kind === \"method\") {\n          node.kind = \"init\";\n        }\n        node.shorthand = false;\n      }\n\n      return node as any;\n    }\n\n    parseObjectProperty(\n      prop: N.ObjectProperty,\n      startLoc: Position | undefined | null,\n      isPattern: boolean,\n      refExpressionErrors?: ExpressionErrors | null,\n    ): N.ObjectProperty | undefined | null {\n      const node: N.EstreeProperty = super.parseObjectProperty(\n        prop,\n        startLoc,\n        isPattern,\n        refExpressionErrors,\n      ) as any;\n\n      if (node) {\n        node.kind = \"init\";\n        node.type = \"Property\";\n      }\n\n      return node as any;\n    }\n\n    isValidLVal(\n      type: string,\n      isUnparenthesizedInAssign: boolean,\n      binding: BindingTypes,\n    ) {\n      return type === \"Property\"\n        ? \"value\"\n        : super.isValidLVal(type, isUnparenthesizedInAssign, binding);\n    }\n\n    isAssignable(node: N.Node, isBinding?: boolean): boolean {\n      if (node != null && this.isObjectProperty(node)) {\n        return this.isAssignable(node.value, isBinding);\n      }\n      return super.isAssignable(node, isBinding);\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): void {\n      if (node != null && this.isObjectProperty(node)) {\n        const { key, value } = node;\n        if (this.isPrivateName(key)) {\n          this.classScope.usePrivateName(\n            this.getPrivateNameSV(key),\n            key.loc.start,\n          );\n        }\n        this.toAssignable(value, isLHS);\n      } else {\n        super.toAssignable(node, isLHS);\n      }\n    }\n\n    toAssignableObjectExpressionProp(\n      prop: N.Node,\n      isLast: boolean,\n      isLHS: boolean,\n    ) {\n      if (prop.kind === \"get\" || prop.kind === \"set\") {\n        this.raise(Errors.PatternHasAccessor, { at: prop.key });\n      } else if (prop.method) {\n        this.raise(Errors.PatternHasMethod, { at: prop.key });\n      } else {\n        super.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n      }\n    }\n\n    finishCallExpression<T extends N.CallExpression | N.OptionalCallExpression>(\n      unfinished: Undone<T>,\n      optional: boolean,\n    ): T {\n      const node = super.finishCallExpression(unfinished, optional);\n\n      if (node.callee.type === \"Import\") {\n        (node as N.Node as N.EstreeImportExpression).type = \"ImportExpression\";\n        (node as N.Node as N.EstreeImportExpression).source = node.arguments[0];\n        if (\n          this.hasPlugin(\"importAttributes\") ||\n          this.hasPlugin(\"importAssertions\")\n        ) {\n          (node as N.Node as N.EstreeImportExpression).options =\n            node.arguments[1] ?? null;\n          // compatibility with previous ESTree AST\n          (node as N.Node as N.EstreeImportExpression).attributes =\n            node.arguments[1] ?? null;\n        }\n        // arguments isn't optional in the type definition\n        delete node.arguments;\n        // callee isn't optional in the type definition\n        delete node.callee;\n      }\n\n      return node;\n    }\n\n    toReferencedArguments(\n      node:\n        | N.CallExpression\n        | N.OptionalCallExpression\n        | N.EstreeImportExpression,\n      /* isParenthesizedExpr?: boolean, */\n    ) {\n      // ImportExpressions do not have an arguments array.\n      if (node.type === \"ImportExpression\") {\n        return;\n      }\n\n      super.toReferencedArguments(node);\n    }\n\n    parseExport(\n      unfinished: Undone<N.AnyExport>,\n      decorators: N.Decorator[] | null,\n    ) {\n      const exportStartLoc = this.state.lastTokStartLoc;\n      const node = super.parseExport(unfinished, decorators);\n\n      switch (node.type) {\n        case \"ExportAllDeclaration\":\n          // @ts-expect-error mutating AST types\n          node.exported = null;\n          break;\n\n        case \"ExportNamedDeclaration\":\n          if (\n            node.specifiers.length === 1 &&\n            // @ts-expect-error mutating AST types\n            node.specifiers[0].type === \"ExportNamespaceSpecifier\"\n          ) {\n            // @ts-expect-error mutating AST types\n            node.type = \"ExportAllDeclaration\";\n            // @ts-expect-error mutating AST types\n            node.exported = node.specifiers[0].exported;\n            delete node.specifiers;\n          }\n\n        // fallthrough\n        case \"ExportDefaultDeclaration\":\n          {\n            const { declaration } = node;\n            if (\n              declaration?.type === \"ClassDeclaration\" &&\n              declaration.decorators?.length > 0 &&\n              // decorator comes before export\n              declaration.start === node.start\n            ) {\n              this.resetStartLocation(\n                node,\n                // For compatibility with ESLint's keyword-spacing rule, which assumes that an\n                // export declaration must start with export.\n                // https://github.com/babel/babel/issues/15085\n                // Here we reset export declaration's start to be the start of the export token\n                exportStartLoc,\n              );\n            }\n          }\n\n          break;\n      }\n\n      return node;\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startLoc: Position,\n      noCalls: boolean | undefined | null,\n      state: N.ParseSubscriptState,\n    ) {\n      const node = super.parseSubscript(base, startLoc, noCalls, state);\n\n      if (state.optionalChainMember) {\n        // https://github.com/estree/estree/blob/master/es2020.md#chainexpression\n        if (\n          node.type === \"OptionalMemberExpression\" ||\n          node.type === \"OptionalCallExpression\"\n        ) {\n          node.type = node.type.substring(8); // strip Optional prefix\n        }\n        if (state.stop) {\n          const chain = this.startNodeAtNode(node);\n          chain.expression = node;\n          return this.finishNode(chain, \"ChainExpression\");\n        }\n      } else if (\n        node.type === \"MemberExpression\" ||\n        node.type === \"CallExpression\"\n      ) {\n        node.optional = false;\n      }\n\n      return node;\n    }\n\n    isOptionalMemberExpression(node: N.Node) {\n      if (node.type === \"ChainExpression\") {\n        return node.expression.type === \"MemberExpression\";\n      }\n      return super.isOptionalMemberExpression(node);\n    }\n\n    hasPropertyAsPrivateName(node: N.Node): boolean {\n      if (node.type === \"ChainExpression\") {\n        node = node.expression;\n      }\n      return super.hasPropertyAsPrivateName(node);\n    }\n\n    // @ts-expect-error override interfaces\n    isObjectProperty(node: N.Node): boolean {\n      return node.type === \"Property\" && node.kind === \"init\" && !node.method;\n    }\n\n    isObjectMethod(node: N.Node): boolean {\n      return node.method || node.kind === \"get\" || node.kind === \"set\";\n    }\n\n    finishNodeAt<T extends NodeType>(\n      node: Undone<T>,\n      type: T[\"type\"],\n      endLoc: Position,\n    ): T {\n      return toESTreeLocation(super.finishNodeAt(node, type, endLoc));\n    }\n\n    resetStartLocation(node: N.Node, startLoc: Position) {\n      super.resetStartLocation(node, startLoc);\n      toESTreeLocation(node);\n    }\n\n    resetEndLocation(\n      node: NodeBase,\n      endLoc: Position = this.state.lastTokEndLoc,\n    ): void {\n      super.resetEndLocation(node, endLoc);\n      toESTreeLocation(node);\n    }\n  };\n","// The token context is used in JSX plugin to track\n// jsx tag / jsx text / normal JavaScript expression\n\nexport class TokContext {\n  constructor(token: string, preserveSpace?: boolean) {\n    this.token = token;\n    this.preserveSpace = !!preserveSpace;\n  }\n\n  token: string;\n  preserveSpace: boolean;\n}\n\nconst types: {\n  [key: string]: TokContext;\n} = {\n  brace: new TokContext(\"{\"), // normal JavaScript expression\n  j_oTag: new TokContext(\"<tag\"), // JSX opening tag\n  j_cTag: new TokContext(\"</tag\"), // JSX closing tag\n  j_expr: new TokContext(\"<tag>...</tag>\", true), // JSX expressions\n};\n\nif (!process.env.BABEL_8_BREAKING) {\n  types.template = new TokContext(\"`\", true);\n}\n\nexport { types };\n","import { types as tc, type TokContext } from \"./context.ts\";\n// ## Token types\n\n// The assignment of fine-grained, information-carrying type objects\n// allows the tokenizer to store the information it has about a\n// token in a way that is very cheap for the parser to look up.\n\n// All token type variables start with an underscore, to make them\n// easy to recognize.\n\n// The `beforeExpr` property is used to disambiguate between 1) binary\n// expression (<) and JSX Tag start (<name>); 2) object literal and JSX\n// texts. It is set on the `updateContext` function in the JSX plugin.\n\n// The `startsExpr` property is used to determine whether an expression\n// may be the “argument” subexpression of a `yield` expression or\n// `yield` statement. It is set on all token types that may be at the\n// start of a subexpression.\n\n// `isLoop` marks a keyword as starting a loop, which is important\n// to know when parsing a label, in order to allow or disallow\n// continue jumps to that label.\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\n\ntype TokenOptions = {\n  keyword?: string;\n  beforeExpr?: boolean;\n  startsExpr?: boolean;\n  rightAssociative?: boolean;\n  isLoop?: boolean;\n  isAssign?: boolean;\n  prefix?: boolean;\n  postfix?: boolean;\n  binop?: number | null;\n};\n\n// Internally the tokenizer stores token as a number\nexport type TokenType = number;\n\n// The `ExportedTokenType` is exported via `tokTypes` and accessible\n// when `tokens: true` is enabled. Unlike internal token type, it provides\n// metadata of the tokens.\nexport class ExportedTokenType {\n  label: string;\n  keyword: string | undefined | null;\n  beforeExpr: boolean;\n  startsExpr: boolean;\n  rightAssociative: boolean;\n  isLoop: boolean;\n  isAssign: boolean;\n  prefix: boolean;\n  postfix: boolean;\n  binop: number | undefined | null;\n  // todo(Babel 8): remove updateContext from exposed token layout\n  declare updateContext:\n    | ((context: Array<TokContext>) => void)\n    | undefined\n    | null;\n\n  constructor(label: string, conf: TokenOptions = {}) {\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    if (!process.env.BABEL_8_BREAKING) {\n      this.updateContext = null;\n    }\n  }\n}\n\n// A map from keyword/keyword-like string value to the token type\nexport const keywords = new Map<string, TokenType>();\n\nfunction createKeyword(name: string, options: TokenOptions = {}): TokenType {\n  options.keyword = name;\n  const token = createToken(name, options);\n  keywords.set(name, token);\n  return token;\n}\n\nfunction createBinop(name: string, binop: number) {\n  return createToken(name, { beforeExpr, binop });\n}\n\nlet tokenTypeCounter = -1;\nexport const tokenTypes: ExportedTokenType[] = [];\nconst tokenLabels: string[] = [];\nconst tokenBinops: number[] = [];\nconst tokenBeforeExprs: boolean[] = [];\nconst tokenStartsExprs: boolean[] = [];\nconst tokenPrefixes: boolean[] = [];\n\nfunction createToken(name: string, options: TokenOptions = {}): TokenType {\n  ++tokenTypeCounter;\n  tokenLabels.push(name);\n  tokenBinops.push(options.binop ?? -1);\n  tokenBeforeExprs.push(options.beforeExpr ?? false);\n  tokenStartsExprs.push(options.startsExpr ?? false);\n  tokenPrefixes.push(options.prefix ?? false);\n  tokenTypes.push(new ExportedTokenType(name, options));\n\n  return tokenTypeCounter;\n}\n\nfunction createKeywordLike(\n  name: string,\n  options: TokenOptions = {},\n): TokenType {\n  ++tokenTypeCounter;\n  keywords.set(name, tokenTypeCounter);\n  tokenLabels.push(name);\n  tokenBinops.push(options.binop ?? -1);\n  tokenBeforeExprs.push(options.beforeExpr ?? false);\n  tokenStartsExprs.push(options.startsExpr ?? false);\n  tokenPrefixes.push(options.prefix ?? false);\n  // In the exported token type, we set the label as \"name\" for backward compatibility with Babel 7\n  tokenTypes.push(new ExportedTokenType(\"name\", options));\n\n  return tokenTypeCounter;\n}\n\n// For performance the token type helpers depend on the following declarations order.\n// When adding new token types, please also check if the token helpers need update.\n\nexport type InternalTokenTypes = typeof tt;\n\nexport const tt = {\n  // Punctuation token types.\n  bracketL: createToken(\"[\", { beforeExpr, startsExpr }),\n  bracketHashL: createToken(\"#[\", { beforeExpr, startsExpr }),\n  bracketBarL: createToken(\"[|\", { beforeExpr, startsExpr }),\n  bracketR: createToken(\"]\"),\n  bracketBarR: createToken(\"|]\"),\n  braceL: createToken(\"{\", { beforeExpr, startsExpr }),\n  braceBarL: createToken(\"{|\", { beforeExpr, startsExpr }),\n  braceHashL: createToken(\"#{\", { beforeExpr, startsExpr }),\n  braceR: createToken(\"}\"),\n  braceBarR: createToken(\"|}\"),\n  parenL: createToken(\"(\", { beforeExpr, startsExpr }),\n  parenR: createToken(\")\"),\n  comma: createToken(\",\", { beforeExpr }),\n  semi: createToken(\";\", { beforeExpr }),\n  colon: createToken(\":\", { beforeExpr }),\n  doubleColon: createToken(\"::\", { beforeExpr }),\n  dot: createToken(\".\"),\n  question: createToken(\"?\", { beforeExpr }),\n  questionDot: createToken(\"?.\"),\n  arrow: createToken(\"=>\", { beforeExpr }),\n  template: createToken(\"template\"),\n  ellipsis: createToken(\"...\", { beforeExpr }),\n  backQuote: createToken(\"`\", { startsExpr }),\n  dollarBraceL: createToken(\"${\", { beforeExpr, startsExpr }),\n  // start: isTemplate\n  templateTail: createToken(\"...`\", { startsExpr }),\n  templateNonTail: createToken(\"...${\", { beforeExpr, startsExpr }),\n  // end: isTemplate\n  at: createToken(\"@\"),\n  hash: createToken(\"#\", { startsExpr }),\n\n  // Special hashbang token.\n  interpreterDirective: createToken(\"#!...\"),\n\n  // Operators. These carry several kinds of properties to help the\n  // parser use them properly (the presence of these properties is\n  // what categorizes them as operators).\n  //\n  // `binop`, when present, specifies that this operator is a binary\n  // operator, and will refer to its precedence.\n  //\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\n  // unary operator.\n  //\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n  // binary operators with a very low precedence, that should result\n  // in AssignmentExpression nodes.\n\n  // start: isAssign\n  eq: createToken(\"=\", { beforeExpr, isAssign }),\n  assign: createToken(\"_=\", { beforeExpr, isAssign }),\n  slashAssign: createToken(\"_=\", { beforeExpr, isAssign }),\n  // These are only needed to support % and ^ as a Hack-pipe topic token.\n  // When the proposal settles on a token, the others can be merged with\n  // tt.assign.\n  xorAssign: createToken(\"_=\", { beforeExpr, isAssign }),\n  moduloAssign: createToken(\"_=\", { beforeExpr, isAssign }),\n  // end: isAssign\n\n  incDec: createToken(\"++/--\", { prefix, postfix, startsExpr }),\n  bang: createToken(\"!\", { beforeExpr, prefix, startsExpr }),\n  tilde: createToken(\"~\", { beforeExpr, prefix, startsExpr }),\n\n  // More possible topic tokens.\n  // When the proposal settles on a token, at least one of these may be removed.\n  doubleCaret: createToken(\"^^\", { startsExpr }),\n  doubleAt: createToken(\"@@\", { startsExpr }),\n\n  // start: isBinop\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  lt: createBinop(\"</>/<=/>=\", 7),\n  gt: createBinop(\"</>/<=/>=\", 7),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  bitShiftL: createBinop(\"<</>>/>>>\", 8),\n  bitShiftR: createBinop(\"<</>>/>>>\", 8),\n  plusMin: createToken(\"+/-\", { beforeExpr, binop: 9, prefix, startsExpr }),\n  // startsExpr: required by v8intrinsic plugin\n  modulo: createToken(\"%\", { binop: 10, startsExpr }),\n  // unset `beforeExpr` as it can be `function *`\n  star: createToken(\"*\", { binop: 10 }),\n  slash: createBinop(\"/\", 10),\n  exponent: createToken(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true,\n  }),\n\n  // Keywords\n  // Don't forget to update packages/babel-helper-validator-identifier/src/keyword.js\n  // when new keywords are added\n  // start: isLiteralPropertyName\n  // start: isKeyword\n  _in: createKeyword(\"in\", { beforeExpr, binop: 7 }),\n  _instanceof: createKeyword(\"instanceof\", { beforeExpr, binop: 7 }),\n  // end: isBinop\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", { beforeExpr }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", { beforeExpr }),\n  _else: createKeyword(\"else\", { beforeExpr }),\n  _finally: createKeyword(\"finally\"),\n  _function: createKeyword(\"function\", { startsExpr }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", { beforeExpr }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", { beforeExpr, prefix, startsExpr }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", { beforeExpr, startsExpr }),\n  _this: createKeyword(\"this\", { startsExpr }),\n  _super: createKeyword(\"super\", { startsExpr }),\n  _class: createKeyword(\"class\", { startsExpr }),\n  _extends: createKeyword(\"extends\", { beforeExpr }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", { startsExpr }),\n  _null: createKeyword(\"null\", { startsExpr }),\n  _true: createKeyword(\"true\", { startsExpr }),\n  _false: createKeyword(\"false\", { startsExpr }),\n  _typeof: createKeyword(\"typeof\", { beforeExpr, prefix, startsExpr }),\n  _void: createKeyword(\"void\", { beforeExpr, prefix, startsExpr }),\n  _delete: createKeyword(\"delete\", { beforeExpr, prefix, startsExpr }),\n  // start: isLoop\n  _do: createKeyword(\"do\", { isLoop, beforeExpr }),\n  _for: createKeyword(\"for\", { isLoop }),\n  _while: createKeyword(\"while\", { isLoop }),\n  // end: isLoop\n  // end: isKeyword\n\n  // Primary literals\n  // start: isIdentifier\n  _as: createKeywordLike(\"as\", { startsExpr }),\n  _assert: createKeywordLike(\"assert\", { startsExpr }),\n  _async: createKeywordLike(\"async\", { startsExpr }),\n  _await: createKeywordLike(\"await\", { startsExpr }),\n  _defer: createKeywordLike(\"defer\", { startsExpr }),\n  _from: createKeywordLike(\"from\", { startsExpr }),\n  _get: createKeywordLike(\"get\", { startsExpr }),\n  _let: createKeywordLike(\"let\", { startsExpr }),\n  _meta: createKeywordLike(\"meta\", { startsExpr }),\n  _of: createKeywordLike(\"of\", { startsExpr }),\n  _sent: createKeywordLike(\"sent\", { startsExpr }),\n  _set: createKeywordLike(\"set\", { startsExpr }),\n  _source: createKeywordLike(\"source\", { startsExpr }),\n  _static: createKeywordLike(\"static\", { startsExpr }),\n  _using: createKeywordLike(\"using\", { startsExpr }),\n  _yield: createKeywordLike(\"yield\", { startsExpr }),\n\n  // Flow and TypeScript Keywordlike\n  _asserts: createKeywordLike(\"asserts\", { startsExpr }),\n  _checks: createKeywordLike(\"checks\", { startsExpr }),\n  _exports: createKeywordLike(\"exports\", { startsExpr }),\n  _global: createKeywordLike(\"global\", { startsExpr }),\n  _implements: createKeywordLike(\"implements\", { startsExpr }),\n  _intrinsic: createKeywordLike(\"intrinsic\", { startsExpr }),\n  _infer: createKeywordLike(\"infer\", { startsExpr }),\n  _is: createKeywordLike(\"is\", { startsExpr }),\n  _mixins: createKeywordLike(\"mixins\", { startsExpr }),\n  _proto: createKeywordLike(\"proto\", { startsExpr }),\n  _require: createKeywordLike(\"require\", { startsExpr }),\n  _satisfies: createKeywordLike(\"satisfies\", { startsExpr }),\n  // start: isTSTypeOperator\n  _keyof: createKeywordLike(\"keyof\", { startsExpr }),\n  _readonly: createKeywordLike(\"readonly\", { startsExpr }),\n  _unique: createKeywordLike(\"unique\", { startsExpr }),\n  // end: isTSTypeOperator\n  // start: isTSDeclarationStart\n  _abstract: createKeywordLike(\"abstract\", { startsExpr }),\n  _declare: createKeywordLike(\"declare\", { startsExpr }),\n  _enum: createKeywordLike(\"enum\", { startsExpr }),\n  _module: createKeywordLike(\"module\", { startsExpr }),\n  _namespace: createKeywordLike(\"namespace\", { startsExpr }),\n  // start: isFlowInterfaceOrTypeOrOpaque\n  _interface: createKeywordLike(\"interface\", { startsExpr }),\n  _type: createKeywordLike(\"type\", { startsExpr }),\n  // end: isTSDeclarationStart\n  _opaque: createKeywordLike(\"opaque\", { startsExpr }),\n  // end: isFlowInterfaceOrTypeOrOpaque\n  name: createToken(\"name\", { startsExpr }),\n  // end: isIdentifier\n\n  string: createToken(\"string\", { startsExpr }),\n  num: createToken(\"num\", { startsExpr }),\n  bigint: createToken(\"bigint\", { startsExpr }),\n  decimal: createToken(\"decimal\", { startsExpr }),\n  // end: isLiteralPropertyName\n  regexp: createToken(\"regexp\", { startsExpr }),\n  privateName: createToken(\"#name\", { startsExpr }),\n  eof: createToken(\"eof\"),\n\n  // jsx plugin\n  jsxName: createToken(\"jsxName\"),\n  jsxText: createToken(\"jsxText\", { beforeExpr: true }),\n  jsxTagStart: createToken(\"jsxTagStart\", { startsExpr: true }),\n  jsxTagEnd: createToken(\"jsxTagEnd\"),\n\n  // placeholder plugin\n  placeholder: createToken(\"%%\", { startsExpr: true }),\n} as const;\n\nexport function tokenIsIdentifier(token: TokenType): boolean {\n  return token >= tt._as && token <= tt.name;\n}\n\nexport function tokenKeywordOrIdentifierIsKeyword(token: TokenType): boolean {\n  // we can remove the token >= tt._in check when we\n  // know a token is either keyword or identifier\n  return token <= tt._while;\n}\n\nexport function tokenIsKeywordOrIdentifier(token: TokenType): boolean {\n  return token >= tt._in && token <= tt.name;\n}\n\nexport function tokenIsLiteralPropertyName(token: TokenType): boolean {\n  return token >= tt._in && token <= tt.decimal;\n}\n\nexport function tokenComesBeforeExpression(token: TokenType): boolean {\n  return tokenBeforeExprs[token];\n}\n\nexport function tokenCanStartExpression(token: TokenType): boolean {\n  return tokenStartsExprs[token];\n}\n\nexport function tokenIsAssignment(token: TokenType): boolean {\n  return token >= tt.eq && token <= tt.moduloAssign;\n}\n\nexport function tokenIsFlowInterfaceOrTypeOrOpaque(token: TokenType): boolean {\n  return token >= tt._interface && token <= tt._opaque;\n}\n\nexport function tokenIsLoop(token: TokenType): boolean {\n  return token >= tt._do && token <= tt._while;\n}\n\nexport function tokenIsKeyword(token: TokenType): boolean {\n  return token >= tt._in && token <= tt._while;\n}\n\nexport function tokenIsOperator(token: TokenType): boolean {\n  return token >= tt.pipeline && token <= tt._instanceof;\n}\n\nexport function tokenIsPostfix(token: TokenType): boolean {\n  return token === tt.incDec;\n}\n\nexport function tokenIsPrefix(token: TokenType): boolean {\n  return tokenPrefixes[token];\n}\n\nexport function tokenIsTSTypeOperator(token: TokenType): boolean {\n  return token >= tt._keyof && token <= tt._unique;\n}\n\nexport function tokenIsTSDeclarationStart(token: TokenType): boolean {\n  return token >= tt._abstract && token <= tt._type;\n}\n\nexport function tokenLabelName(token: TokenType): string {\n  return tokenLabels[token];\n}\n\nexport function tokenOperatorPrecedence(token: TokenType): number {\n  return tokenBinops[token];\n}\n\nexport function tokenIsBinaryOperator(token: TokenType): boolean {\n  return tokenBinops[token] !== -1;\n}\n\nexport function tokenIsRightAssociative(token: TokenType): boolean {\n  return token === tt.exponent;\n}\n\nexport function tokenIsTemplate(token: TokenType): boolean {\n  return token >= tt.templateTail && token <= tt.templateNonTail;\n}\n\nexport function getExportedToken(token: TokenType): ExportedTokenType {\n  return tokenTypes[token];\n}\n\nexport function isTokenType(obj: any): boolean {\n  return typeof obj === \"number\";\n}\n\nif (!process.env.BABEL_8_BREAKING) {\n  tokenTypes[tt.braceR].updateContext = context => {\n    context.pop();\n  };\n\n  tokenTypes[tt.braceL].updateContext =\n    tokenTypes[tt.braceHashL].updateContext =\n    tokenTypes[tt.dollarBraceL].updateContext =\n      context => {\n        context.push(tc.brace);\n      };\n\n  tokenTypes[tt.backQuote].updateContext = context => {\n    if (context[context.length - 1] === tc.template) {\n      context.pop();\n    } else {\n      context.push(tc.template);\n    }\n  };\n\n  tokenTypes[tt.jsxTagStart].updateContext = context => {\n    context.push(tc.j_expr, tc.j_oTag);\n  };\n}\n","import * as charCodes from \"charcodes\";\n\n// ## Character categories\n\n// Big ugly regular expressions that match characters in the\n// whitespace, identifier, and identifier-start categories. These\n// are only applied when a character is found to actually have a\n// code point between 0x80 and 0xffff.\n// Generated by `scripts/generate-identifier-regex.js`.\n\n/* prettier-ignore */\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u0870-\\u0887\\u0889-\\u088e\\u08a0-\\u08c9\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c5d\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cdd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u1711\\u171f-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4c\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7ca\\ua7d0\\ua7d1\\ua7d3\\ua7d5-\\ua7d9\\ua7f2-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n/* prettier-ignore */\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u0898-\\u089f\\u08ca-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3c\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0cf3\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ece\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u180f-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf-\\u1ace\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1dff\\u200c\\u200d\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\u30fb\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\\uff65\";\n\nconst nonASCIIidentifierStart = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + \"]\",\n);\nconst nonASCIIidentifier = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\",\n);\n\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\n\n// These are a run-length and offset-encoded representation of the\n// >0xffff code points that are a valid part of identifiers. The\n// offset starts at 0x10000, and each pair of numbers represents an\n// offset to the next range, and then a size of the range. They were\n// generated by `scripts/generate-identifier-regex.js`.\n/* prettier-ignore */\nconst astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,13,10,2,14,2,6,2,1,2,10,2,14,2,6,2,1,68,310,10,21,11,7,25,5,2,41,2,8,70,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,349,41,7,1,79,28,11,0,9,21,43,17,47,20,28,22,13,52,58,1,3,0,14,44,33,24,27,35,30,0,3,0,9,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,20,1,64,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,2,31,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,38,6,186,43,117,63,32,7,3,0,3,7,2,1,2,23,16,0,2,0,95,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,19,72,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,16,0,2,12,2,33,125,0,80,921,103,110,18,195,2637,96,16,1071,18,5,4026,582,8634,568,8,30,18,78,18,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,1237,43,8,8936,3,2,6,2,1,2,290,16,0,30,2,3,0,15,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,1845,30,7,5,262,61,147,44,11,6,17,0,322,29,19,43,485,27,757,6,2,3,2,1,2,14,2,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42719,33,4153,7,221,3,5761,15,7472,16,621,2467,541,1507,4938,6,4191];\n/* prettier-ignore */\nconst astralIdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,370,1,81,2,71,10,50,3,123,2,54,14,32,10,3,1,11,3,46,10,8,0,46,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,2,11,83,11,7,0,3,0,158,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,71,5,2,1,3,3,2,0,2,1,13,9,120,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,10,1,2,0,49,6,4,4,14,9,5351,0,7,14,13835,9,87,9,39,4,60,6,26,9,1014,0,2,54,8,3,82,0,12,1,19628,1,4706,45,3,22,543,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,101,0,161,6,10,9,357,0,62,13,499,13,983,6,110,6,6,9,4759,9,787719,239];\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code: number, set: readonly number[]): boolean {\n  let pos = 0x10000;\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n  return false;\n}\n\n// Test whether a given character code starts an identifier.\n\nexport function isIdentifierStart(code: number): boolean {\n  if (code < charCodes.uppercaseA) return code === charCodes.dollarSign;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return (\n      code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code))\n    );\n  }\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\n\n// Test whether a given character is part of an identifier.\n\nexport function isIdentifierChar(code: number): boolean {\n  if (code < charCodes.digit0) return code === charCodes.dollarSign;\n  if (code < charCodes.colon) return true;\n  if (code < charCodes.uppercaseA) return false;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n  return (\n    isInAstralSet(code, astralIdentifierStartCodes) ||\n    isInAstralSet(code, astralIdentifierCodes)\n  );\n}\n\n// Test whether a given string is a valid identifier name\n\nexport function isIdentifierName(name: string): boolean {\n  let isFirst = true;\n  for (let i = 0; i < name.length; i++) {\n    // The implementation is based on\n    // https://source.chromium.org/chromium/chromium/src/+/master:v8/src/builtins/builtins-string-gen.cc;l=1455;drc=221e331b49dfefadbc6fa40b0c68e6f97606d0b3;bpv=0;bpt=1\n    // We reimplement `codePointAt` because `codePointAt` is a V8 builtin which is not inlined by TurboFan (as of M91)\n    // since `name` is mostly ASCII, an inlined `charCodeAt` wins here\n    let cp = name.charCodeAt(i);\n    if ((cp & 0xfc00) === 0xd800 && i + 1 < name.length) {\n      const trail = name.charCodeAt(++i);\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n    if (isFirst) {\n      isFirst = false;\n      if (!isIdentifierStart(cp)) {\n        return false;\n      }\n    } else if (!isIdentifierChar(cp)) {\n      return false;\n    }\n  }\n  return !isFirst;\n}\n","const reservedWords = {\n  keyword: [\n    \"break\",\n    \"case\",\n    \"catch\",\n    \"continue\",\n    \"debugger\",\n    \"default\",\n    \"do\",\n    \"else\",\n    \"finally\",\n    \"for\",\n    \"function\",\n    \"if\",\n    \"return\",\n    \"switch\",\n    \"throw\",\n    \"try\",\n    \"var\",\n    \"const\",\n    \"while\",\n    \"with\",\n    \"new\",\n    \"this\",\n    \"super\",\n    \"class\",\n    \"extends\",\n    \"export\",\n    \"import\",\n    \"null\",\n    \"true\",\n    \"false\",\n    \"in\",\n    \"instanceof\",\n    \"typeof\",\n    \"void\",\n    \"delete\",\n  ],\n  strict: [\n    \"implements\",\n    \"interface\",\n    \"let\",\n    \"package\",\n    \"private\",\n    \"protected\",\n    \"public\",\n    \"static\",\n    \"yield\",\n  ],\n  strictBind: [\"eval\", \"arguments\"],\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\n\n/**\n * Checks if word is a reserved word in non-strict mode\n */\nexport function isReservedWord(word: string, inModule: boolean): boolean {\n  return (inModule && word === \"await\") || word === \"enum\";\n}\n\n/**\n * Checks if word is a reserved word in non-binding strict mode\n *\n * Includes non-strict reserved words\n */\nexport function isStrictReservedWord(word: string, inModule: boolean): boolean {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode, but it is allowed as\n * a normal identifier.\n */\nexport function isStrictBindOnlyReservedWord(word: string): boolean {\n  return reservedWordsStrictBindSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode\n *\n * Includes non-strict reserved words and non-binding strict reserved words\n */\nexport function isStrictBindReservedWord(\n  word: string,\n  inModule: boolean,\n): boolean {\n  return (\n    isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word)\n  );\n}\n\nexport function isKeyword(word: string): boolean {\n  return keywords.has(word);\n}\n","import * as charCodes from \"charcodes\";\nimport { isIdentifierStart } from \"@babel/helper-validator-identifier\";\n\nexport {\n  isIdentifierStart,\n  isIdentifierChar,\n  isReservedWord,\n  isStrictBindOnlyReservedWord,\n  isStrictBindReservedWord,\n  isStrictReservedWord,\n  isKeyword,\n} from \"@babel/helper-validator-identifier\";\n\nexport const keywordRelationalOperator = /^in(stanceof)?$/;\n\n// Test whether a current state character code and next character code is @\n\nexport function isIteratorStart(\n  current: number,\n  next: number,\n  next2: number,\n): boolean {\n  return (\n    current === charCodes.atSign &&\n    next === charCodes.atSign &&\n    isIdentifierStart(next2)\n  );\n}\n\n// This is the comprehensive set of JavaScript reserved words\n// If a word is in this set, it could be a reserved word,\n// depending on sourceType/strictMode/binding info. In other words\n// if a word is not in this set, it is not a reserved word under\n// any circumstance.\nconst reservedWordLikeSet = new Set([\n  \"break\",\n  \"case\",\n  \"catch\",\n  \"continue\",\n  \"debugger\",\n  \"default\",\n  \"do\",\n  \"else\",\n  \"finally\",\n  \"for\",\n  \"function\",\n  \"if\",\n  \"return\",\n  \"switch\",\n  \"throw\",\n  \"try\",\n  \"var\",\n  \"const\",\n  \"while\",\n  \"with\",\n  \"new\",\n  \"this\",\n  \"super\",\n  \"class\",\n  \"extends\",\n  \"export\",\n  \"import\",\n  \"null\",\n  \"true\",\n  \"false\",\n  \"in\",\n  \"instanceof\",\n  \"typeof\",\n  \"void\",\n  \"delete\",\n  // strict\n  \"implements\",\n  \"interface\",\n  \"let\",\n  \"package\",\n  \"private\",\n  \"protected\",\n  \"public\",\n  \"static\",\n  \"yield\",\n  // strictBind\n  \"eval\",\n  \"arguments\",\n  // reservedWorkLike\n  \"enum\",\n  \"await\",\n]);\n\nexport function canBeReservedWord(word: string): boolean {\n  return reservedWordLikeSet.has(word);\n}\n","import { ScopeFlag, BindingFlag, type BindingTypes } from \"./scopeflags.ts\";\nimport type { Position } from \"./location.ts\";\nimport type * as N from \"../types.ts\";\nimport { Errors } from \"../parse-error.ts\";\nimport type Tokenizer from \"../tokenizer/index.ts\";\n\n// Start an AST node, attaching a start offset.\nexport class Scope {\n  declare flags: ScopeFlag;\n  // A set of var-declared names in the current lexical scope\n  var: Set<string> = new Set();\n  // A set of lexically-declared names in the current lexical scope\n  lexical: Set<string> = new Set();\n  // A set of lexically-declared FunctionDeclaration names in the current lexical scope\n  functions: Set<string> = new Set();\n\n  constructor(flags: ScopeFlag) {\n    this.flags = flags;\n  }\n}\n\n// The functions in this module keep track of declared variables in the\n// current scope in order to detect duplicate variable names.\nexport default class ScopeHandler<IScope extends Scope = Scope> {\n  parser: Tokenizer;\n  scopeStack: Array<IScope> = [];\n  inModule: boolean;\n  undefinedExports: Map<string, Position> = new Map();\n\n  constructor(parser: Tokenizer, inModule: boolean) {\n    this.parser = parser;\n    this.inModule = inModule;\n  }\n\n  get inTopLevel() {\n    return (this.currentScope().flags & ScopeFlag.PROGRAM) > 0;\n  }\n  get inFunction() {\n    return (this.currentVarScopeFlags() & ScopeFlag.FUNCTION) > 0;\n  }\n  get allowSuper() {\n    return (this.currentThisScopeFlags() & ScopeFlag.SUPER) > 0;\n  }\n  get allowDirectSuper() {\n    return (this.currentThisScopeFlags() & ScopeFlag.DIRECT_SUPER) > 0;\n  }\n  get inClass() {\n    return (this.currentThisScopeFlags() & ScopeFlag.CLASS) > 0;\n  }\n  get inClassAndNotInNonArrowFunction() {\n    const flags = this.currentThisScopeFlags();\n    return (flags & ScopeFlag.CLASS) > 0 && (flags & ScopeFlag.FUNCTION) === 0;\n  }\n  get inStaticBlock() {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const { flags } = this.scopeStack[i];\n      if (flags & ScopeFlag.STATIC_BLOCK) {\n        return true;\n      }\n      if (flags & (ScopeFlag.VAR | ScopeFlag.CLASS)) {\n        // function body, module body, class property initializers\n        return false;\n      }\n    }\n  }\n  get inNonArrowFunction() {\n    return (this.currentThisScopeFlags() & ScopeFlag.FUNCTION) > 0;\n  }\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n\n  createScope(flags: ScopeFlag): Scope {\n    return new Scope(flags);\n  }\n\n  enter(flags: ScopeFlag) {\n    /*:: +createScope: (flags:ScopeFlag) => IScope; */\n    // @ts-expect-error This method will be overwritten by subclasses\n    this.scopeStack.push(this.createScope(flags));\n  }\n\n  exit(): ScopeFlag {\n    const scope = this.scopeStack.pop();\n    return scope.flags;\n  }\n\n  // The spec says:\n  // > At the top level of a function, or script, function declarations are\n  // > treated like var declarations rather than like lexical declarations.\n  treatFunctionsAsVarInScope(scope: IScope): boolean {\n    return !!(\n      scope.flags & (ScopeFlag.FUNCTION | ScopeFlag.STATIC_BLOCK) ||\n      (!this.parser.inModule && scope.flags & ScopeFlag.PROGRAM)\n    );\n  }\n\n  declareName(name: string, bindingType: BindingTypes, loc: Position) {\n    let scope = this.currentScope();\n    if (\n      bindingType & BindingFlag.SCOPE_LEXICAL ||\n      bindingType & BindingFlag.SCOPE_FUNCTION\n    ) {\n      this.checkRedeclarationInScope(scope, name, bindingType, loc);\n\n      if (bindingType & BindingFlag.SCOPE_FUNCTION) {\n        scope.functions.add(name);\n      } else {\n        scope.lexical.add(name);\n      }\n\n      if (bindingType & BindingFlag.SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BindingFlag.SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, loc);\n        scope.var.add(name);\n        this.maybeExportDefined(scope, name);\n\n        if (scope.flags & ScopeFlag.VAR) break;\n      }\n    }\n    if (this.parser.inModule && scope.flags & ScopeFlag.PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  maybeExportDefined(scope: IScope, name: string) {\n    if (this.parser.inModule && scope.flags & ScopeFlag.PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  checkRedeclarationInScope(\n    scope: IScope,\n    name: string,\n    bindingType: BindingTypes,\n    loc: Position,\n  ) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.parser.raise(Errors.VarRedeclaration, {\n        at: loc,\n        identifierName: name,\n      });\n    }\n  }\n\n  isRedeclaredInScope(\n    scope: IScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (!(bindingType & BindingFlag.KIND_VALUE)) return false;\n\n    if (bindingType & BindingFlag.SCOPE_LEXICAL) {\n      return (\n        scope.lexical.has(name) ||\n        scope.functions.has(name) ||\n        scope.var.has(name)\n      );\n    }\n\n    if (bindingType & BindingFlag.SCOPE_FUNCTION) {\n      return (\n        scope.lexical.has(name) ||\n        (!this.treatFunctionsAsVarInScope(scope) && scope.var.has(name))\n      );\n    }\n\n    return (\n      (scope.lexical.has(name) &&\n        // Annex B.3.4\n        // https://tc39.es/ecma262/#sec-variablestatements-in-catch-blocks\n        !(\n          scope.flags & ScopeFlag.SIMPLE_CATCH &&\n          scope.lexical.values().next().value === name\n        )) ||\n      (!this.treatFunctionsAsVarInScope(scope) && scope.functions.has(name))\n    );\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    const { name } = id;\n    const topLevelScope = this.scopeStack[0];\n    if (\n      !topLevelScope.lexical.has(name) &&\n      !topLevelScope.var.has(name) &&\n      // In strict mode, scope.functions will always be empty.\n      // Modules are strict by default, but the `scriptMode` option\n      // can overwrite this behavior.\n      !topLevelScope.functions.has(name)\n    ) {\n      this.undefinedExports.set(name, id.loc.start);\n    }\n  }\n\n  currentScope(): IScope {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n\n  currentVarScopeFlags(): ScopeFlag {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const { flags } = this.scopeStack[i];\n      if (flags & ScopeFlag.VAR) {\n        return flags;\n      }\n    }\n  }\n\n  // Could be useful for `arguments`, `this`, `new.target`, `super()`, `super.property`, and `super[property]`.\n  currentThisScopeFlags(): ScopeFlag {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const { flags } = this.scopeStack[i];\n      if (\n        flags & (ScopeFlag.VAR | ScopeFlag.CLASS) &&\n        !(flags & ScopeFlag.ARROW)\n      ) {\n        return flags;\n      }\n    }\n  }\n}\n","import type { Position } from \"../../util/location.ts\";\nimport ScopeHandler, { Scope } from \"../../util/scope.ts\";\nimport {\n  BindingFlag,\n  type ScopeFlag,\n  type BindingTypes,\n} from \"../../util/scopeflags.ts\";\nimport type * as N from \"../../types.ts\";\n\n// Reference implementation: https://github.com/facebook/flow/blob/23aeb2a2ef6eb4241ce178fde5d8f17c5f747fb5/src/typing/env.ml#L536-L584\nclass FlowScope extends Scope {\n  // declare function foo(): type;\n  declareFunctions: Set<string> = new Set();\n}\n\nexport default class FlowScopeHandler extends ScopeHandler<FlowScope> {\n  createScope(flags: ScopeFlag): FlowScope {\n    return new FlowScope(flags);\n  }\n\n  declareName(name: string, bindingType: BindingTypes, loc: Position) {\n    const scope = this.currentScope();\n    if (bindingType & BindingFlag.FLAG_FLOW_DECLARE_FN) {\n      this.checkRedeclarationInScope(scope, name, bindingType, loc);\n      this.maybeExportDefined(scope, name);\n      scope.declareFunctions.add(name);\n      return;\n    }\n\n    super.declareName(name, bindingType, loc);\n  }\n\n  isRedeclaredInScope(\n    scope: FlowScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (super.isRedeclaredInScope(scope, name, bindingType)) return true;\n\n    if (bindingType & BindingFlag.FLAG_FLOW_DECLARE_FN) {\n      return (\n        !scope.declareFunctions.has(name) &&\n        (scope.lexical.has(name) || scope.functions.has(name))\n      );\n    }\n\n    return false;\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    if (!this.scopeStack[0].declareFunctions.has(id.name)) {\n      super.checkLocalExport(id);\n    }\n  }\n}\n","import type { Options } from \"../options.ts\";\nimport type State from \"../tokenizer/state.ts\";\nimport type { PluginsMap } from \"./index.ts\";\nimport type ScopeHandler from \"../util/scope.ts\";\nimport type ExpressionScopeHandler from \"../util/expression-scope.ts\";\nimport type ClassScopeHandler from \"../util/class-scope.ts\";\nimport type ProductionParameterHandler from \"../util/production-parameter.ts\";\nimport type {\n  ParserPluginWithOptions,\n  PluginConfig,\n  PluginOptions,\n} from \"../typings.ts\";\n\nexport default class BaseParser {\n  // Properties set by constructor in index.js\n  declare options: Options;\n  declare inModule: boolean;\n  declare scope: ScopeHandler<any>;\n  declare classScope: ClassScopeHandler;\n  declare prodParam: ProductionParameterHandler;\n  declare expressionScope: ExpressionScopeHandler;\n  declare plugins: PluginsMap;\n  declare filename: string | undefined | null;\n  // Names of exports store. `default` is stored as a name for both\n  // `export default foo;` and `export { foo as default };`.\n  declare exportedIdentifiers: Set<string>;\n  sawUnambiguousESM: boolean = false;\n  ambiguousScriptDifferentAst: boolean = false;\n\n  // Initialized by Tokenizer\n  declare state: State;\n  // input and length are not in state as they are constant and we do\n  // not want to ever copy them, which happens if state gets cloned\n  declare input: string;\n  declare length: number;\n\n  // This method accepts either a string (plugin name) or an array pair\n  // (plugin name and options object). If an options object is given,\n  // then each value is non-recursively checked for identity with that\n  // plugin’s actual option value.\n  hasPlugin(pluginConfig: PluginConfig): boolean {\n    if (typeof pluginConfig === \"string\") {\n      return this.plugins.has(pluginConfig);\n    } else {\n      const [pluginName, pluginOptions] = pluginConfig;\n      if (!this.hasPlugin(pluginName)) {\n        return false;\n      }\n      const actualOptions = this.plugins.get(pluginName);\n      for (const key of Object.keys(\n        pluginOptions,\n      ) as (keyof typeof pluginOptions)[]) {\n        if (actualOptions?.[key] !== pluginOptions[key]) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n\n  getPluginOption<\n    PluginName extends ParserPluginWithOptions[0],\n    OptionName extends keyof PluginOptions<PluginName>,\n  >(plugin: PluginName, name: OptionName) {\n    return (this.plugins.get(plugin) as null | PluginOptions<PluginName>)?.[\n      name\n    ];\n  }\n}\n","/*:: declare var invariant; */\n\nimport BaseParser from \"./base.ts\";\nimport type { Comment, Node, Identifier } from \"../types.ts\";\nimport * as charCodes from \"charcodes\";\nimport type { Undone } from \"./node.ts\";\n\n/**\n * A whitespace token containing comments\n */\nexport type CommentWhitespace = {\n  /**\n   * the start of the whitespace token.\n   */\n  start: number;\n  /**\n   * the end of the whitespace token.\n   */\n  end: number;\n  /**\n   * the containing comments\n   */\n  comments: Array<Comment>;\n  /**\n   * the immediately preceding AST node of the whitespace token\n   */\n  leadingNode: Node | null;\n  /**\n   * the immediately following AST node of the whitespace token\n   */\n  trailingNode: Node | null;\n  /**\n   * the innermost AST node containing the whitespace with minimal size (|end - start|)\n   */\n  containingNode: Node | null;\n};\n\n/**\n * Merge comments with node's trailingComments or assign comments to be\n * trailingComments. New comments will be placed before old comments\n * because the commentStack is enumerated reversely.\n */\nfunction setTrailingComments(node: Undone<Node>, comments: Array<Comment>) {\n  if (node.trailingComments === undefined) {\n    node.trailingComments = comments;\n  } else {\n    node.trailingComments.unshift(...comments);\n  }\n}\n\n/**\n * Merge comments with node's leadingComments or assign comments to be\n * leadingComments. New comments will be placed before old comments\n * because the commentStack is enumerated reversely.\n */\nfunction setLeadingComments(node: Undone<Node>, comments: Array<Comment>) {\n  if (node.leadingComments === undefined) {\n    node.leadingComments = comments;\n  } else {\n    node.leadingComments.unshift(...comments);\n  }\n}\n\n/**\n * Merge comments with node's innerComments or assign comments to be\n * innerComments. New comments will be placed before old comments\n * because the commentStack is enumerated reversely.\n */\nexport function setInnerComments(\n  node: Undone<Node>,\n  comments?: Array<Comment>,\n) {\n  if (node.innerComments === undefined) {\n    node.innerComments = comments;\n  } else {\n    node.innerComments.unshift(...comments);\n  }\n}\n\n/**\n * Given node and elements array, if elements has non-null element,\n * merge comments to its trailingComments, otherwise merge comments\n * to node's innerComments\n */\nfunction adjustInnerComments(\n  node: Undone<Node>,\n  elements: Array<Node>,\n  commentWS: CommentWhitespace,\n) {\n  let lastElement = null;\n  let i = elements.length;\n  while (lastElement === null && i > 0) {\n    lastElement = elements[--i];\n  }\n  if (lastElement === null || lastElement.start > commentWS.start) {\n    setInnerComments(node, commentWS.comments);\n  } else {\n    setTrailingComments(lastElement, commentWS.comments);\n  }\n}\n\nexport default class CommentsParser extends BaseParser {\n  addComment(comment: Comment): void {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.comments.push(comment);\n  }\n\n  /**\n   * Given a newly created AST node _n_, attach _n_ to a comment whitespace _w_ if applicable\n   * {@see {@link CommentWhitespace}}\n   */\n  processComment(node: Node): void {\n    const { commentStack } = this.state;\n    const commentStackLength = commentStack.length;\n    if (commentStackLength === 0) return;\n    let i = commentStackLength - 1;\n    const lastCommentWS = commentStack[i];\n\n    if (lastCommentWS.start === node.end) {\n      lastCommentWS.leadingNode = node;\n      i--;\n    }\n\n    const { start: nodeStart } = node;\n    // invariant: for all 0 <= j <= i, let c = commentStack[j], c must satisfy c.end < node.end\n    for (; i >= 0; i--) {\n      const commentWS = commentStack[i];\n      const commentEnd = commentWS.end;\n      if (commentEnd > nodeStart) {\n        // by definition of commentWhiteSpace, this implies commentWS.start > nodeStart\n        // so node can be a containingNode candidate. At this time we can finalize the comment\n        // whitespace, because\n        // 1) its leadingNode or trailingNode, if exists, will not change\n        // 2) its containingNode have been assigned and will not change because it is the\n        //    innermost minimal-sized AST node\n        commentWS.containingNode = node;\n        this.finalizeComment(commentWS);\n        commentStack.splice(i, 1);\n      } else {\n        if (commentEnd === nodeStart) {\n          commentWS.trailingNode = node;\n        }\n        // stop the loop when commentEnd <= nodeStart\n        break;\n      }\n    }\n  }\n\n  /**\n   * Assign the comments of comment whitespaces to related AST nodes.\n   * Also adjust innerComments following trailing comma.\n   */\n  finalizeComment(commentWS: CommentWhitespace) {\n    const { comments } = commentWS;\n    if (commentWS.leadingNode !== null || commentWS.trailingNode !== null) {\n      if (commentWS.leadingNode !== null) {\n        setTrailingComments(commentWS.leadingNode, comments);\n      }\n      if (commentWS.trailingNode !== null) {\n        setLeadingComments(commentWS.trailingNode, comments);\n      }\n    } else {\n      /*:: invariant(commentWS.containingNode !== null) */\n      const { containingNode: node, start: commentStart } = commentWS;\n      if (this.input.charCodeAt(commentStart - 1) === charCodes.comma) {\n        // If a commentWhitespace follows a comma and the containingNode allows\n        // list structures with trailing comma, merge it to the trailingComment\n        // of the last non-null list element\n        switch (node.type) {\n          case \"ObjectExpression\":\n          case \"ObjectPattern\":\n          case \"RecordExpression\":\n            adjustInnerComments(node, node.properties, commentWS);\n            break;\n          case \"CallExpression\":\n          case \"OptionalCallExpression\":\n            adjustInnerComments(node, node.arguments, commentWS);\n            break;\n          case \"FunctionDeclaration\":\n          case \"FunctionExpression\":\n          case \"ArrowFunctionExpression\":\n          case \"ObjectMethod\":\n          case \"ClassMethod\":\n          case \"ClassPrivateMethod\":\n            adjustInnerComments(node, node.params, commentWS);\n            break;\n          case \"ArrayExpression\":\n          case \"ArrayPattern\":\n          case \"TupleExpression\":\n            adjustInnerComments(node, node.elements, commentWS);\n            break;\n          case \"ExportNamedDeclaration\":\n          case \"ImportDeclaration\":\n            adjustInnerComments(node, node.specifiers, commentWS);\n            break;\n          default: {\n            setInnerComments(node, comments);\n          }\n        }\n      } else {\n        setInnerComments(node, comments);\n      }\n    }\n  }\n\n  /**\n   * Drains remaining commentStack and applies finalizeComment\n   * to each comment whitespace. Used only in parseExpression\n   * where the top level AST node is _not_ Program\n   * {@see {@link CommentsParser#finalizeComment}}\n   */\n  finalizeRemainingComments() {\n    const { commentStack } = this.state;\n    for (let i = commentStack.length - 1; i >= 0; i--) {\n      this.finalizeComment(commentStack[i]);\n    }\n    this.state.commentStack = [];\n  }\n\n  /* eslint-disable no-irregular-whitespace */\n  /**\n   * Reset previous node trailing comments. Used in object / class\n   * property parsing. We parse `async`, `static`, `set` and `get`\n   * as an identifier but may reinterpret it into an async/static/accessor\n   * method later. In this case the identifier is not part of the AST and we\n   * should sync the knowledge to commentStacks\n   *\n   * For example, when parsing\n   * ```\n   * async /* 1 *​/ function f() {}\n   * ```\n   * the comment whitespace `/* 1 *​/` has leading node Identifier(async). When\n   * we see the function token, we create a Function node and mark `/* 1 *​/` as\n   * inner comments. So `/* 1 *​/` should be detached from the Identifier node.\n   *\n   * @param node the last finished AST node _before_ current token\n   */\n  /* eslint-enable no-irregular-whitespace */\n  resetPreviousNodeTrailingComments(node: Node) {\n    const { commentStack } = this.state;\n    const { length } = commentStack;\n    if (length === 0) return;\n    const commentWS = commentStack[length - 1];\n    if (commentWS.leadingNode === node) {\n      commentWS.leadingNode = null;\n    }\n  }\n\n  /* eslint-disable no-irregular-whitespace */\n  /**\n   * Reset previous node leading comments, assuming that `node` is a\n   * single-token node. Used in import phase modifiers parsing. We parse\n   * `module` in `import module foo from ...` as an identifier but may\n   * reinterpret it into a phase modifier later. In this case the identifier is\n   * not part of the AST and we should sync the knowledge to commentStacks\n   *\n   * For example, when parsing\n   * ```\n   * import /* 1 *​/ module a from \"a\";\n   * ```\n   * the comment whitespace `/* 1 *​/` has trailing node Identifier(module). When\n   * we see that `module` is not a default import binding, we mark `/* 1 *​/` as\n   * inner comments of the ImportDeclaration. So `/* 1 *​/` should be detached from\n   * the Identifier node.\n   *\n   * @param node the last finished AST node _before_ current token\n   */\n  /* eslint-enable no-irregular-whitespace */\n  resetPreviousIdentifierLeadingComments(node: Identifier) {\n    const { commentStack } = this.state;\n    const { length } = commentStack;\n    if (length === 0) return;\n\n    if (commentStack[length - 1].trailingNode === node) {\n      commentStack[length - 1].trailingNode = null;\n    } else if (length >= 2 && commentStack[length - 2].trailingNode === node) {\n      commentStack[length - 2].trailingNode = null;\n    }\n  }\n\n  /**\n   * Attach a node to the comment whitespaces right before/after\n   * the given range.\n   *\n   * This is used to properly attach comments around parenthesized\n   * expressions as leading/trailing comments of the inner expression.\n   */\n  takeSurroundingComments(node: Node, start: number, end: number) {\n    const { commentStack } = this.state;\n    const commentStackLength = commentStack.length;\n    if (commentStackLength === 0) return;\n    let i = commentStackLength - 1;\n\n    for (; i >= 0; i--) {\n      const commentWS = commentStack[i];\n      const commentEnd = commentWS.end;\n      const commentStart = commentWS.start;\n\n      if (commentStart === end) {\n        commentWS.leadingNode = node;\n      } else if (commentEnd === start) {\n        commentWS.trailingNode = node;\n      } else if (commentEnd < start) {\n        break;\n      }\n    }\n  }\n}\n","import * as charCodes from \"charcodes\";\n\n// Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\nexport const lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nexport const lineBreakG = new RegExp(lineBreak.source, \"g\");\n\n// https://tc39.github.io/ecma262/#sec-line-terminators\nexport function isNewLine(code: number): boolean {\n  switch (code) {\n    case charCodes.lineFeed:\n    case charCodes.carriageReturn:\n    case charCodes.lineSeparator:\n    case charCodes.paragraphSeparator:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nexport const skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\nexport const skipWhiteSpaceInLine =\n  /(?:[^\\S\\n\\r\\u2028\\u2029]|\\/\\/.*|\\/\\*.*?\\*\\/)*/g;\n\n// Skip whitespace and single-line comments, including /* no newline here */.\n// After this RegExp matches, its lastIndex points to a line terminator, or\n// the start of multi-line comment (which is effectively a line terminator),\n// or the end of string.\nexport const skipWhiteSpaceToLineBreak = new RegExp(\n  // Unfortunately JS doesn't support Perl's atomic /(?>pattern)/ or\n  // possessive quantifiers, so we use a trick to prevent backtracking\n  // when the look-ahead for line terminator fails.\n  \"(?=(\" +\n    // Capture the whitespace and comments that should be skipped inside\n    // a look-ahead assertion, and then re-match the group as a unit.\n    skipWhiteSpaceInLine.source +\n    \"))\\\\1\" +\n    // Look-ahead for either line terminator, start of multi-line comment,\n    // or end of string.\n    /(?=[\\n\\r\\u2028\\u2029]|\\/\\*(?!.*?\\*\\/)|$)/.source,\n  \"y\", // sticky\n);\n\n// https://tc39.github.io/ecma262/#sec-white-space\nexport function isWhitespace(code: number): boolean {\n  switch (code) {\n    case 0x0009: // CHARACTER TABULATION\n    case 0x000b: // LINE TABULATION\n    case 0x000c: // FORM FEED\n    case charCodes.space:\n    case charCodes.nonBreakingSpace:\n    case charCodes.oghamSpaceMark:\n    case 0x2000: // EN QUAD\n    case 0x2001: // EM QUAD\n    case 0x2002: // EN SPACE\n    case 0x2003: // EM SPACE\n    case 0x2004: // THREE-PER-EM SPACE\n    case 0x2005: // FOUR-PER-EM SPACE\n    case 0x2006: // SIX-PER-EM SPACE\n    case 0x2007: // FIGURE SPACE\n    case 0x2008: // PUNCTUATION SPACE\n    case 0x2009: // THIN SPACE\n    case 0x200a: // HAIR SPACE\n    case 0x202f: // NARROW NO-BREAK SPACE\n    case 0x205f: // MEDIUM MATHEMATICAL SPACE\n    case 0x3000: // IDEOGRAPHIC SPACE\n    case 0xfeff: // ZERO WIDTH NO-BREAK SPACE\n      return true;\n\n    default:\n      return false;\n  }\n}\n","import type { Options } from \"../options.ts\";\nimport type * as N from \"../types.ts\";\nimport type { CommentWhitespace } from \"../parser/comments\";\nimport { Position } from \"../util/location.ts\";\n\nimport { types as ct, type TokContext } from \"./context.ts\";\nimport { tt, type TokenType } from \"./types.ts\";\nimport type { Errors } from \"../parse-error.ts\";\nimport type { ParseError } from \"../parse-error.ts\";\n\nexport type DeferredStrictError =\n  | typeof Errors.StrictNumericEscape\n  | typeof Errors.StrictOctalLiteral;\n\ntype TopicContextState = {\n  // When a topic binding has been currently established,\n  // then this is 1. Otherwise, it is 0. This is forwards compatible\n  // with a future plugin for multiple lexical topics.\n  maxNumOfResolvableTopics: number;\n  // When a topic binding has been currently established, and if that binding\n  // has been used as a topic reference `#`, then this is 0. Otherwise, it is\n  // `null`. This is forwards compatible with a future plugin for multiple\n  // lexical topics.\n  maxTopicIndex: null | 0;\n};\n\nexport default class State {\n  strict: boolean;\n  curLine: number;\n  lineStart: number;\n\n  // And, if locations are used, the {line, column} object\n  // corresponding to those offsets\n  startLoc: Position;\n  endLoc: Position;\n\n  init({ strictMode, sourceType, startLine, startColumn }: Options): void {\n    this.strict =\n      strictMode === false\n        ? false\n        : strictMode === true\n        ? true\n        : sourceType === \"module\";\n\n    this.curLine = startLine;\n    this.lineStart = -startColumn;\n    this.startLoc = this.endLoc = new Position(startLine, startColumn, 0);\n  }\n\n  errors: ParseError<any>[] = [];\n\n  // Used to signify the start of a potential arrow function\n  potentialArrowAt: number = -1;\n\n  // Used to signify the start of an expression which looks like a\n  // typed arrow function, but it isn't\n  // e.g. a ? (b) : c => d\n  //          ^\n  noArrowAt: number[] = [];\n\n  // Used to signify the start of an expression whose params, if it looks like\n  // an arrow function, shouldn't be converted to assignable nodes.\n  // This is used to defer the validation of typed arrow functions inside\n  // conditional expressions.\n  // e.g. a ? (b) : c => d\n  //          ^\n  noArrowParamsConversionAt: number[] = [];\n\n  // Flags to track\n  maybeInArrowParameters: boolean = false;\n  inType: boolean = false;\n  noAnonFunctionType: boolean = false;\n  hasFlowComment: boolean = false;\n  isAmbientContext: boolean = false;\n  inAbstractClass: boolean = false;\n  inDisallowConditionalTypesContext: boolean = false;\n\n  // For the Hack-style pipelines plugin\n  topicContext: TopicContextState = {\n    maxNumOfResolvableTopics: 0,\n    maxTopicIndex: null,\n  };\n\n  // For the F#-style pipelines plugin\n  soloAwait: boolean = false;\n  inFSharpPipelineDirectBody: boolean = false;\n\n  // Labels in scope.\n  labels: Array<{\n    kind: \"loop\" | \"switch\" | undefined | null;\n    name?: string | null;\n    statementStart?: number;\n  }> = [];\n\n  // Comment store for Program.comments\n  comments: Array<N.Comment> = [];\n\n  // Comment attachment store\n  commentStack: Array<CommentWhitespace> = [];\n\n  // The current position of the tokenizer in the input.\n  pos: number = 0;\n\n  // Properties of the current token:\n  // Its type\n  type: TokenType = tt.eof;\n\n  // For tokens that include more information than their type, the value\n  value: any = null;\n\n  // Its start and end offset\n  start: number = 0;\n  end: number = 0;\n\n  // Position information for the previous token\n  // this is initialized when generating the second token.\n  lastTokEndLoc: Position = null;\n  // this is initialized when generating the second token.\n  lastTokStartLoc: Position = null;\n  lastTokStart: number = 0;\n\n  // The context stack is used to track whether the apostrophe \"`\" starts\n  // or ends a string template\n  context: Array<TokContext> = [ct.brace];\n  // Used to track whether a JSX element is allowed to form\n  canStartJSXElement: boolean = true;\n\n  // Used to signal to callers of `readWord1` whether the word\n  // contained any escape sequences. This is needed because words with\n  // escape sequences must not be interpreted as keywords.\n  containsEsc: boolean = false;\n\n  // Used to track invalid escape sequences in template literals,\n  // that must be reported if the template is not tagged.\n  firstInvalidTemplateEscapePos: null | Position = null;\n\n  // This property is used to track the following errors\n  // - StrictNumericEscape\n  // - StrictOctalLiteral\n  //\n  // in a literal that occurs prior to/immediately after a \"use strict\" directive.\n\n  // todo(JLHwung): set strictErrors to null and avoid recording string errors\n  // after a non-directive is parsed\n  strictErrors: Map<number, [DeferredStrictError, Position]> = new Map();\n\n  // Tokens length in token store\n  tokensLength: number = 0;\n\n  curPosition(): Position {\n    return new Position(this.curLine, this.pos - this.lineStart, this.pos);\n  }\n\n  clone(skipArrays?: boolean): State {\n    const state = new State();\n    const keys = Object.keys(this) as (keyof State)[];\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      let val = this[key];\n\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n\n      // @ts-expect-error val must conform to S[key]\n      state[key] = val;\n    }\n\n    return state;\n  }\n}\n\nexport type LookaheadState = {\n  pos: number;\n  value: any;\n  type: TokenType;\n  start: number;\n  end: number;\n  context: TokContext[];\n  startLoc: Position;\n  lastTokEndLoc: Position;\n  curLine: number;\n  lineStart: number;\n  curPosition: () => Position;\n  /* Used only in readToken_mult_modulo */\n  inType: boolean;\n  // These boolean properties are not initialized in createLookaheadState()\n  // instead they will only be set by the tokenizer\n  containsEsc?: boolean;\n};\n","import * as charCodes from \"charcodes\";\n\n// The following character codes are forbidden from being\n// an immediate sibling of NumericLiteralSeparator _\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: new Set<number>([\n    charCodes.dot,\n    charCodes.uppercaseB,\n    charCodes.uppercaseE,\n    charCodes.uppercaseO,\n    charCodes.underscore, // multiple separators are not allowed\n    charCodes.lowercaseB,\n    charCodes.lowercaseE,\n    charCodes.lowercaseO,\n  ]),\n  hex: new Set<number>([\n    charCodes.dot,\n    charCodes.uppercaseX,\n    charCodes.underscore, // multiple separators are not allowed\n    charCodes.lowercaseX,\n  ]),\n};\n\nconst isAllowedNumericSeparatorSibling = {\n  // 0 - 1\n  bin: (ch: number) => ch === charCodes.digit0 || ch === charCodes.digit1,\n\n  // 0 - 7\n  oct: (ch: number) => ch >= charCodes.digit0 && ch <= charCodes.digit7,\n\n  // 0 - 9\n  dec: (ch: number) => ch >= charCodes.digit0 && ch <= charCodes.digit9,\n\n  // 0 - 9, A - F, a - f,\n  hex: (ch: number) =>\n    (ch >= charCodes.digit0 && ch <= charCodes.digit9) ||\n    (ch >= charCodes.uppercaseA && ch <= charCodes.uppercaseF) ||\n    (ch >= charCodes.lowercaseA && ch <= charCodes.lowercaseF),\n};\n\nexport type StringContentsErrorHandlers = EscapedCharErrorHandlers & {\n  unterminated(\n    initialPos: number,\n    initialLineStart: number,\n    initialCurLine: number,\n  ): void;\n};\n\nexport function readStringContents(\n  type: \"single\" | \"double\" | \"template\",\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  errors: StringContentsErrorHandlers,\n) {\n  const initialPos = pos;\n  const initialLineStart = lineStart;\n  const initialCurLine = curLine;\n\n  let out = \"\";\n  let firstInvalidLoc = null;\n  let chunkStart = pos;\n  const { length } = input;\n  for (;;) {\n    if (pos >= length) {\n      errors.unterminated(initialPos, initialLineStart, initialCurLine);\n      out += input.slice(chunkStart, pos);\n      break;\n    }\n    const ch = input.charCodeAt(pos);\n    if (isStringEnd(type, ch, input, pos)) {\n      out += input.slice(chunkStart, pos);\n      break;\n    }\n    if (ch === charCodes.backslash) {\n      out += input.slice(chunkStart, pos);\n      const res = readEscapedChar(\n        input,\n        pos,\n        lineStart,\n        curLine,\n        type === \"template\",\n        errors,\n      );\n      if (res.ch === null && !firstInvalidLoc) {\n        firstInvalidLoc = { pos, lineStart, curLine };\n      } else {\n        out += res.ch;\n      }\n      ({ pos, lineStart, curLine } = res);\n      chunkStart = pos;\n    } else if (\n      ch === charCodes.lineSeparator ||\n      ch === charCodes.paragraphSeparator\n    ) {\n      ++pos;\n      ++curLine;\n      lineStart = pos;\n    } else if (ch === charCodes.lineFeed || ch === charCodes.carriageReturn) {\n      if (type === \"template\") {\n        out += input.slice(chunkStart, pos) + \"\\n\";\n        ++pos;\n        if (\n          ch === charCodes.carriageReturn &&\n          input.charCodeAt(pos) === charCodes.lineFeed\n        ) {\n          ++pos;\n        }\n        ++curLine;\n        chunkStart = lineStart = pos;\n      } else {\n        errors.unterminated(initialPos, initialLineStart, initialCurLine);\n      }\n    } else {\n      ++pos;\n    }\n  }\n  return process.env.BABEL_8_BREAKING\n    ? { pos, str: out, firstInvalidLoc, lineStart, curLine }\n    : {\n        pos,\n        str: out,\n        firstInvalidLoc,\n        lineStart,\n        curLine,\n        containsInvalid: !!firstInvalidLoc,\n      };\n}\n\nfunction isStringEnd(\n  type: \"single\" | \"double\" | \"template\",\n  ch: number,\n  input: string,\n  pos: number,\n) {\n  if (type === \"template\") {\n    return (\n      ch === charCodes.graveAccent ||\n      (ch === charCodes.dollarSign &&\n        input.charCodeAt(pos + 1) === charCodes.leftCurlyBrace)\n    );\n  }\n  return (\n    ch === (type === \"double\" ? charCodes.quotationMark : charCodes.apostrophe)\n  );\n}\n\ntype EscapedCharErrorHandlers = HexCharErrorHandlers &\n  CodePointErrorHandlers & {\n    strictNumericEscape(pos: number, lineStart: number, curLine: number): void;\n  };\n\nfunction readEscapedChar(\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  inTemplate: boolean,\n  errors: EscapedCharErrorHandlers,\n) {\n  const throwOnInvalid = !inTemplate;\n  pos++; // skip '\\'\n\n  const res = (ch: string | null) => ({ pos, ch, lineStart, curLine });\n\n  const ch = input.charCodeAt(pos++);\n  switch (ch) {\n    case charCodes.lowercaseN:\n      return res(\"\\n\");\n    case charCodes.lowercaseR:\n      return res(\"\\r\");\n    case charCodes.lowercaseX: {\n      let code;\n      ({ code, pos } = readHexChar(\n        input,\n        pos,\n        lineStart,\n        curLine,\n        2,\n        false,\n        throwOnInvalid,\n        errors,\n      ));\n      return res(code === null ? null : String.fromCharCode(code));\n    }\n    case charCodes.lowercaseU: {\n      let code;\n      ({ code, pos } = readCodePoint(\n        input,\n        pos,\n        lineStart,\n        curLine,\n        throwOnInvalid,\n        errors,\n      ));\n      return res(code === null ? null : String.fromCodePoint(code));\n    }\n    case charCodes.lowercaseT:\n      return res(\"\\t\");\n    case charCodes.lowercaseB:\n      return res(\"\\b\");\n    case charCodes.lowercaseV:\n      return res(\"\\u000b\");\n    case charCodes.lowercaseF:\n      return res(\"\\f\");\n    case charCodes.carriageReturn:\n      if (input.charCodeAt(pos) === charCodes.lineFeed) {\n        ++pos;\n      }\n    // fall through\n    case charCodes.lineFeed:\n      lineStart = pos;\n      ++curLine;\n    // fall through\n    case charCodes.lineSeparator:\n    case charCodes.paragraphSeparator:\n      return res(\"\");\n    case charCodes.digit8:\n    case charCodes.digit9:\n      if (inTemplate) {\n        return res(null);\n      } else {\n        errors.strictNumericEscape(pos - 1, lineStart, curLine);\n      }\n    // fall through\n    default:\n      if (ch >= charCodes.digit0 && ch <= charCodes.digit7) {\n        const startPos = pos - 1;\n        const match = input.slice(startPos, pos + 2).match(/^[0-7]+/)!;\n\n        let octalStr = match[0];\n\n        let octal = parseInt(octalStr, 8);\n        if (octal > 255) {\n          octalStr = octalStr.slice(0, -1);\n          octal = parseInt(octalStr, 8);\n        }\n        pos += octalStr.length - 1;\n        const next = input.charCodeAt(pos);\n        if (\n          octalStr !== \"0\" ||\n          next === charCodes.digit8 ||\n          next === charCodes.digit9\n        ) {\n          if (inTemplate) {\n            return res(null);\n          } else {\n            errors.strictNumericEscape(startPos, lineStart, curLine);\n          }\n        }\n\n        return res(String.fromCharCode(octal));\n      }\n\n      return res(String.fromCharCode(ch));\n  }\n}\n\ntype HexCharErrorHandlers = IntErrorHandlers & {\n  invalidEscapeSequence(pos: number, lineStart: number, curLine: number): void;\n};\n\n// Used to read character escape sequences ('\\x', '\\u').\nfunction readHexChar(\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  len: number,\n  forceLen: boolean,\n  throwOnInvalid: boolean,\n  errors: HexCharErrorHandlers,\n) {\n  const initialPos = pos;\n  let n;\n  ({ n, pos } = readInt(\n    input,\n    pos,\n    lineStart,\n    curLine,\n    16,\n    len,\n    forceLen,\n    false,\n    errors,\n    /* bailOnError */ !throwOnInvalid,\n  ));\n  if (n === null) {\n    if (throwOnInvalid) {\n      errors.invalidEscapeSequence(initialPos, lineStart, curLine);\n    } else {\n      pos = initialPos - 1;\n    }\n  }\n  return { code: n, pos };\n}\n\nexport type IntErrorHandlers = {\n  numericSeparatorInEscapeSequence(\n    pos: number,\n    lineStart: number,\n    curLine: number,\n  ): void;\n  unexpectedNumericSeparator(\n    pos: number,\n    lineStart: number,\n    curLine: number,\n  ): void;\n  // It can return \"true\" to indicate that the error was handled\n  // and the int parsing should continue.\n  invalidDigit(\n    pos: number,\n    lineStart: number,\n    curLine: number,\n    radix: number,\n  ): boolean;\n};\n\nexport function readInt(\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  radix: number,\n  len: number | undefined,\n  forceLen: boolean,\n  allowNumSeparator: boolean | \"bail\",\n  errors: IntErrorHandlers,\n  bailOnError: boolean,\n) {\n  const start = pos;\n  const forbiddenSiblings =\n    radix === 16\n      ? forbiddenNumericSeparatorSiblings.hex\n      : forbiddenNumericSeparatorSiblings.decBinOct;\n  const isAllowedSibling =\n    radix === 16\n      ? isAllowedNumericSeparatorSibling.hex\n      : radix === 10\n      ? isAllowedNumericSeparatorSibling.dec\n      : radix === 8\n      ? isAllowedNumericSeparatorSibling.oct\n      : isAllowedNumericSeparatorSibling.bin;\n\n  let invalid = false;\n  let total = 0;\n\n  for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n    const code = input.charCodeAt(pos);\n    let val;\n\n    if (code === charCodes.underscore && allowNumSeparator !== \"bail\") {\n      const prev = input.charCodeAt(pos - 1);\n      const next = input.charCodeAt(pos + 1);\n\n      if (!allowNumSeparator) {\n        if (bailOnError) return { n: null, pos };\n        errors.numericSeparatorInEscapeSequence(pos, lineStart, curLine);\n      } else if (\n        Number.isNaN(next) ||\n        !isAllowedSibling(next) ||\n        forbiddenSiblings.has(prev) ||\n        forbiddenSiblings.has(next)\n      ) {\n        if (bailOnError) return { n: null, pos };\n        errors.unexpectedNumericSeparator(pos, lineStart, curLine);\n      }\n\n      // Ignore this _ character\n      ++pos;\n      continue;\n    }\n\n    if (code >= charCodes.lowercaseA) {\n      val = code - charCodes.lowercaseA + charCodes.lineFeed;\n    } else if (code >= charCodes.uppercaseA) {\n      val = code - charCodes.uppercaseA + charCodes.lineFeed;\n    } else if (charCodes.isDigit(code)) {\n      val = code - charCodes.digit0; // 0-9\n    } else {\n      val = Infinity;\n    }\n    if (val >= radix) {\n      // If we found a digit which is too big, errors.invalidDigit can return true to avoid\n      // breaking the loop (this is used for error recovery).\n      if (val <= 9 && bailOnError) {\n        return { n: null, pos };\n      } else if (\n        val <= 9 &&\n        errors.invalidDigit(pos, lineStart, curLine, radix)\n      ) {\n        val = 0;\n      } else if (forceLen) {\n        val = 0;\n        invalid = true;\n      } else {\n        break;\n      }\n    }\n    ++pos;\n    total = total * radix + val;\n  }\n  if (pos === start || (len != null && pos - start !== len) || invalid) {\n    return { n: null, pos };\n  }\n\n  return { n: total, pos };\n}\n\nexport type CodePointErrorHandlers = HexCharErrorHandlers & {\n  invalidCodePoint(pos: number, lineStart: number, curLine: number): void;\n};\n\nexport function readCodePoint(\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  throwOnInvalid: boolean,\n  errors: CodePointErrorHandlers,\n) {\n  const ch = input.charCodeAt(pos);\n  let code;\n\n  if (ch === charCodes.leftCurlyBrace) {\n    ++pos;\n    ({ code, pos } = readHexChar(\n      input,\n      pos,\n      lineStart,\n      curLine,\n      input.indexOf(\"}\", pos) - pos,\n      true,\n      throwOnInvalid,\n      errors,\n    ));\n    ++pos;\n    if (code !== null && code > 0x10ffff) {\n      if (throwOnInvalid) {\n        errors.invalidCodePoint(pos, lineStart, curLine);\n      } else {\n        return { code: null, pos };\n      }\n    }\n  } else {\n    ({ code, pos } = readHexChar(\n      input,\n      pos,\n      lineStart,\n      curLine,\n      4,\n      false,\n      throwOnInvalid,\n      errors,\n    ));\n  }\n  return { code, pos };\n}\n","/*:: declare var invariant; */\n\nimport type { Options } from \"../options.ts\";\nimport {\n  Position,\n  SourceLocation,\n  createPositionWithColumnOffset,\n} from \"../util/location.ts\";\nimport CommentsParser, { type CommentWhitespace } from \"../parser/comments.ts\";\nimport type * as N from \"../types.ts\";\nimport * as charCodes from \"charcodes\";\nimport { isIdentifierStart, isIdentifierChar } from \"../util/identifier.ts\";\nimport {\n  tokenIsKeyword,\n  tokenLabelName,\n  tt,\n  keywords as keywordTypes,\n  type TokenType,\n} from \"./types.ts\";\nimport type { TokContext } from \"./context.ts\";\nimport {\n  Errors,\n  type ParseError,\n  type ParseErrorConstructor,\n  type RaiseProperties,\n} from \"../parse-error.ts\";\nimport {\n  lineBreakG,\n  isNewLine,\n  isWhitespace,\n  skipWhiteSpace,\n  skipWhiteSpaceInLine,\n} from \"../util/whitespace.ts\";\nimport State from \"./state.ts\";\nimport type { LookaheadState, DeferredStrictError } from \"./state.ts\";\n\nimport {\n  readInt,\n  readCodePoint,\n  readStringContents,\n  type IntErrorHandlers,\n  type CodePointErrorHandlers,\n  type StringContentsErrorHandlers,\n} from \"@babel/helper-string-parser\";\n\nimport type { Plugin } from \"../typings.ts\";\n\nfunction buildPosition(pos: number, lineStart: number, curLine: number) {\n  return new Position(curLine, pos - lineStart, pos);\n}\n\nconst VALID_REGEX_FLAGS = new Set([\n  charCodes.lowercaseG,\n  charCodes.lowercaseM,\n  charCodes.lowercaseS,\n  charCodes.lowercaseI,\n  charCodes.lowercaseY,\n  charCodes.lowercaseU,\n  charCodes.lowercaseD,\n  charCodes.lowercaseV,\n]);\n\n// Object type used to represent tokens. Note that normally, tokens\n// simply exist as properties on the parser object. This is only\n// used for the onToken callback and the external tokenizer.\n\nexport class Token {\n  constructor(state: State) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n\n  declare type: TokenType;\n  declare value: any;\n  declare start: number;\n  declare end: number;\n  declare loc: SourceLocation;\n}\n\n// ## Tokenizer\n\nexport default abstract class Tokenizer extends CommentsParser {\n  isLookahead: boolean;\n\n  // Token store.\n  tokens: Array<Token | N.Comment> = [];\n\n  constructor(options: Options, input: string) {\n    super();\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n\n  pushToken(token: Token | N.Comment) {\n    // Pop out invalid tokens trapped by try-catch parsing.\n    // Those parsing branches are mainly created by typescript and flow plugins.\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n\n  // Move to the next token\n\n  next(): void {\n    this.checkKeywordEscapes();\n    if (this.options.tokens) {\n      this.pushToken(new Token(this.state));\n    }\n\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n\n  eat(type: TokenType): boolean {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Whether current token matches given type\n   */\n  match(type: TokenType): boolean {\n    return this.state.type === type;\n  }\n\n  /**\n   * Create a LookaheadState from current parser state\n   */\n  createLookaheadState(state: State): LookaheadState {\n    return {\n      pos: state.pos,\n      value: null,\n      type: state.type,\n      start: state.start,\n      end: state.end,\n      context: [this.curContext()],\n      inType: state.inType,\n      startLoc: state.startLoc,\n      lastTokEndLoc: state.lastTokEndLoc,\n      curLine: state.curLine,\n      lineStart: state.lineStart,\n      curPosition: state.curPosition,\n    };\n  }\n\n  /**\n   * lookahead peeks the next token, skipping changes to token context and\n   * comment stack. For performance it returns a limited LookaheadState\n   * instead of full parser state.\n   *\n   * The { column, line } Loc info is not included in lookahead since such usage\n   * is rare. Although it may return other location properties e.g. `curLine` and\n   * `lineStart`, these properties are not listed in the LookaheadState interface\n   * and thus the returned value is _NOT_ reliable.\n   *\n   * The tokenizer should make best efforts to avoid using any parser state\n   * other than those defined in LookaheadState\n   */\n  lookahead(): LookaheadState {\n    const old = this.state;\n    // @ts-expect-error For performance we use a simplified tokenizer state structure\n    this.state = this.createLookaheadState(old);\n\n    this.isLookahead = true;\n    this.nextToken();\n    this.isLookahead = false;\n\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n\n  nextTokenStart(): number {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n\n  nextTokenStartSince(pos: number): number {\n    skipWhiteSpace.lastIndex = pos;\n    return skipWhiteSpace.test(this.input) ? skipWhiteSpace.lastIndex : pos;\n  }\n\n  lookaheadCharCode(): number {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n\n  /**\n   * Similar to nextToken, but it will stop at line break when it is seen before the next token\n   *\n   * @returns {number} position of the next token start or line break, whichever is seen first.\n   * @memberof Tokenizer\n   */\n  nextTokenInLineStart(): number {\n    return this.nextTokenInLineStartSince(this.state.pos);\n  }\n\n  nextTokenInLineStartSince(pos: number): number {\n    skipWhiteSpaceInLine.lastIndex = pos;\n    return skipWhiteSpaceInLine.test(this.input)\n      ? skipWhiteSpaceInLine.lastIndex\n      : pos;\n  }\n\n  /**\n   * Similar to lookaheadCharCode, but it will return the char code of line break if it is\n   * seen before the next token\n   *\n   * @returns {number} char code of the next token start or line break, whichever is seen first.\n   * @memberof Tokenizer\n   */\n  lookaheadInLineCharCode(): number {\n    return this.input.charCodeAt(this.nextTokenInLineStart());\n  }\n\n  codePointAtPos(pos: number): number {\n    // The implementation is based on\n    // https://source.chromium.org/chromium/chromium/src/+/master:v8/src/builtins/builtins-string-gen.cc;l=1455;drc=221e331b49dfefadbc6fa40b0c68e6f97606d0b3;bpv=0;bpt=1\n    // We reimplement `codePointAt` because `codePointAt` is a V8 builtin which is not inlined by TurboFan (as of M91)\n    // since `input` is mostly ASCII, an inlined `charCodeAt` wins here\n    let cp = this.input.charCodeAt(pos);\n    if ((cp & 0xfc00) === 0xd800 && ++pos < this.input.length) {\n      const trail = this.input.charCodeAt(pos);\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n    return cp;\n  }\n\n  // Toggle strict mode. Re-reads the next number or string to please\n  // pedantic tests (`\"use strict\"; 010;` should fail).\n\n  setStrict(strict: boolean): void {\n    this.state.strict = strict;\n    if (strict) {\n      // Throw an error for any string decimal escape found before/immediately\n      // after a \"use strict\" directive. Strict mode will be set at parse\n      // time for any literals that occur after the next node of the strict\n      // directive.\n      this.state.strictErrors.forEach(([toParseError, at]) =>\n        this.raise(toParseError, { at }),\n      );\n      this.state.strictErrors.clear();\n    }\n  }\n\n  curContext(): TokContext {\n    return this.state.context[this.state.context.length - 1];\n  }\n\n  // Read a single token, updating the parser object's token-related properties.\n  nextToken(): void {\n    this.skipSpace();\n    this.state.start = this.state.pos;\n    if (!this.isLookahead) this.state.startLoc = this.state.curPosition();\n    if (this.state.pos >= this.length) {\n      this.finishToken(tt.eof);\n      return;\n    }\n\n    this.getTokenFromCode(this.codePointAtPos(this.state.pos));\n  }\n\n  // Skips a block comment, whose end is marked by commentEnd.\n  // *-/ is used by the Flow plugin, when parsing block comments nested\n  // inside Flow comments.\n  skipBlockComment(commentEnd: \"*/\" | \"*-/\"): N.CommentBlock | undefined {\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(commentEnd, start + 2);\n    if (end === -1) {\n      // We have to call this again here because startLoc may not be set...\n      // This seems to be for performance reasons:\n      // https://github.com/babel/babel/commit/acf2a10899f696a8aaf34df78bf9725b5ea7f2da\n      throw this.raise(Errors.UnterminatedComment, {\n        at: this.state.curPosition(),\n      });\n    }\n\n    this.state.pos = end + commentEnd.length;\n    lineBreakG.lastIndex = start + 2;\n    while (lineBreakG.test(this.input) && lineBreakG.lastIndex <= end) {\n      ++this.state.curLine;\n      this.state.lineStart = lineBreakG.lastIndex;\n    }\n\n    // If we are doing a lookahead right now we need to advance the position (above code)\n    // but we do not want to push the comment to the state.\n    if (this.isLookahead) return;\n    /*:: invariant(startLoc) */\n\n    const comment: N.CommentBlock = {\n      type: \"CommentBlock\",\n      value: this.input.slice(start + 2, end),\n      start,\n      end: end + commentEnd.length,\n      loc: new SourceLocation(startLoc, this.state.curPosition()),\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n\n  skipLineComment(startSkip: number): N.CommentLine | undefined {\n    const start = this.state.pos;\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt((this.state.pos += startSkip));\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n\n    // If we are doing a lookahead right now we need to advance the position (above code)\n    // but we do not want to push the comment to the state.\n    if (this.isLookahead) return;\n    /*:: invariant(startLoc) */\n\n    const end = this.state.pos;\n    const value = this.input.slice(start + startSkip, end);\n\n    const comment: N.CommentLine = {\n      type: \"CommentLine\",\n      value,\n      start,\n      end,\n      loc: new SourceLocation(startLoc, this.state.curPosition()),\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n\n  // Called at the start of the parse and after every token. Skips\n  // whitespace and comments, and.\n\n  skipSpace(): void {\n    const spaceStart = this.state.pos;\n    const comments = [];\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n      switch (ch) {\n        case charCodes.space:\n        case charCodes.nonBreakingSpace:\n        case charCodes.tab:\n          ++this.state.pos;\n          break;\n        case charCodes.carriageReturn:\n          if (\n            this.input.charCodeAt(this.state.pos + 1) === charCodes.lineFeed\n          ) {\n            ++this.state.pos;\n          }\n        // fall through\n        case charCodes.lineFeed:\n        case charCodes.lineSeparator:\n        case charCodes.paragraphSeparator:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case charCodes.slash:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case charCodes.asterisk: {\n              const comment = this.skipBlockComment(\"*/\");\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n              break;\n            }\n\n            case charCodes.slash: {\n              const comment = this.skipLineComment(2);\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n              break;\n            }\n\n            default:\n              break loop;\n          }\n          break;\n\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else if (\n            ch === charCodes.dash &&\n            !this.inModule &&\n            this.options.annexB\n          ) {\n            const pos = this.state.pos;\n            if (\n              this.input.charCodeAt(pos + 1) === charCodes.dash &&\n              this.input.charCodeAt(pos + 2) === charCodes.greaterThan &&\n              (spaceStart === 0 || this.state.lineStart > spaceStart)\n            ) {\n              // A `-->` line comment\n              const comment = this.skipLineComment(3);\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else if (\n            ch === charCodes.lessThan &&\n            !this.inModule &&\n            this.options.annexB\n          ) {\n            const pos = this.state.pos;\n            if (\n              this.input.charCodeAt(pos + 1) === charCodes.exclamationMark &&\n              this.input.charCodeAt(pos + 2) === charCodes.dash &&\n              this.input.charCodeAt(pos + 3) === charCodes.dash\n            ) {\n              // `<!--`, an XML-style comment that should be interpreted as a line comment\n              const comment = this.skipLineComment(4);\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else {\n            break loop;\n          }\n      }\n    }\n\n    if (comments.length > 0) {\n      const end = this.state.pos;\n      const commentWhitespace: CommentWhitespace = {\n        start: spaceStart,\n        end,\n        comments,\n        leadingNode: null,\n        trailingNode: null,\n        containingNode: null,\n      };\n      this.state.commentStack.push(commentWhitespace);\n    }\n  }\n\n  // Called at the end of every token. Sets `end`, `val`, and\n  // maintains `context` and `canStartJSXElement`, and skips the space after\n  // the token, so that the next one's `start` will point at the\n  // right position.\n\n  finishToken(type: TokenType, val?: any): void {\n    this.state.end = this.state.pos;\n    this.state.endLoc = this.state.curPosition();\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n\n    if (!this.isLookahead) {\n      this.updateContext(prevType);\n    }\n  }\n\n  replaceToken(type: TokenType): void {\n    this.state.type = type;\n    // @ts-expect-error the prevType of updateContext is required\n    // only when the new type is tt.slash/tt.jsxTagEnd\n    this.updateContext();\n  }\n\n  // ### Token reading\n\n  // This is the function that is called to fetch the next token. It\n  // is somewhat obscure, because it works in character codes rather\n  // than characters, and because operator parsing has been inlined\n  // into it.\n  //\n  // All in the name of speed.\n\n  // number sign is \"#\"\n  readToken_numberSign(): void {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n\n    const nextPos = this.state.pos + 1;\n    const next = this.codePointAtPos(nextPos);\n    if (next >= charCodes.digit0 && next <= charCodes.digit9) {\n      throw this.raise(Errors.UnexpectedDigitAfterHash, {\n        at: this.state.curPosition(),\n      });\n    }\n\n    if (\n      next === charCodes.leftCurlyBrace ||\n      (next === charCodes.leftSquareBracket && this.hasPlugin(\"recordAndTuple\"))\n    ) {\n      // When we see `#{`, it is likely to be a hash record.\n      // However we don't yell at `#[` since users may intend to use \"computed private fields\",\n      // which is not allowed in the spec. Throwing expecting recordAndTuple is\n      // misleading\n      this.expectPlugin(\"recordAndTuple\");\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") === \"bar\") {\n        throw this.raise(\n          next === charCodes.leftCurlyBrace\n            ? Errors.RecordExpressionHashIncorrectStartSyntaxType\n            : Errors.TupleExpressionHashIncorrectStartSyntaxType,\n          { at: this.state.curPosition() },\n        );\n      }\n\n      this.state.pos += 2;\n      if (next === charCodes.leftCurlyBrace) {\n        // #{\n        this.finishToken(tt.braceHashL);\n      } else {\n        // #[\n        this.finishToken(tt.bracketHashL);\n      }\n    } else if (isIdentifierStart(next)) {\n      ++this.state.pos;\n      this.finishToken(tt.privateName, this.readWord1(next));\n    } else if (next === charCodes.backslash) {\n      ++this.state.pos;\n      this.finishToken(tt.privateName, this.readWord1());\n    } else {\n      this.finishOp(tt.hash, 1);\n    }\n  }\n\n  readToken_dot(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next >= charCodes.digit0 && next <= charCodes.digit9) {\n      this.readNumber(true);\n      return;\n    }\n\n    if (\n      next === charCodes.dot &&\n      this.input.charCodeAt(this.state.pos + 2) === charCodes.dot\n    ) {\n      this.state.pos += 3;\n      this.finishToken(tt.ellipsis);\n    } else {\n      ++this.state.pos;\n      this.finishToken(tt.dot);\n    }\n  }\n\n  readToken_slash(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.slashAssign, 2);\n    } else {\n      this.finishOp(tt.slash, 1);\n    }\n  }\n\n  readToken_interpreter(): boolean {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== charCodes.exclamationMark) return false;\n\n    const start = this.state.pos;\n    this.state.pos += 1;\n\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    const value = this.input.slice(start + 2, this.state.pos);\n\n    this.finishToken(tt.interpreterDirective, value);\n\n    return true;\n  }\n\n  readToken_mult_modulo(code: number): void {\n    // '%' or '*'\n    let type = code === charCodes.asterisk ? tt.star : tt.modulo;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n\n    // Exponentiation operator '**'\n    if (code === charCodes.asterisk && next === charCodes.asterisk) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = tt.exponent;\n    }\n\n    // '%=' or '*='\n    if (next === charCodes.equalsTo && !this.state.inType) {\n      width++;\n      // `tt.moduloAssign` is only needed to support % as a Hack-pipe topic token.\n      // If the proposal ends up choosing a different token,\n      // it can be merged with tt.assign.\n      type = code === charCodes.percentSign ? tt.moduloAssign : tt.assign;\n    }\n\n    this.finishOp(type, width);\n  }\n\n  readToken_pipe_amp(code: number): void {\n    // '||' '&&' '||=' '&&='\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, 3);\n      } else {\n        this.finishOp(\n          code === charCodes.verticalBar ? tt.logicalOR : tt.logicalAND,\n          2,\n        );\n      }\n      return;\n    }\n\n    if (code === charCodes.verticalBar) {\n      // '|>'\n      if (next === charCodes.greaterThan) {\n        this.finishOp(tt.pipeline, 2);\n        return;\n      }\n      // '|}'\n      if (\n        this.hasPlugin(\"recordAndTuple\") &&\n        next === charCodes.rightCurlyBrace\n      ) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(Errors.RecordExpressionBarIncorrectEndSyntaxType, {\n            at: this.state.curPosition(),\n          });\n        }\n        this.state.pos += 2;\n        this.finishToken(tt.braceBarR);\n        return;\n      }\n\n      // '|]'\n      if (\n        this.hasPlugin(\"recordAndTuple\") &&\n        next === charCodes.rightSquareBracket\n      ) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(Errors.TupleExpressionBarIncorrectEndSyntaxType, {\n            at: this.state.curPosition(),\n          });\n        }\n        this.state.pos += 2;\n        this.finishToken(tt.bracketBarR);\n        return;\n      }\n    }\n\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n      return;\n    }\n\n    this.finishOp(\n      code === charCodes.verticalBar ? tt.bitwiseOR : tt.bitwiseAND,\n      1,\n    );\n  }\n\n  readToken_caret(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    // '^='\n    if (next === charCodes.equalsTo && !this.state.inType) {\n      // `tt.xorAssign` is only needed to support ^ as a Hack-pipe topic token.\n      // If the proposal ends up choosing a different token,\n      // it can be merged with tt.assign.\n      this.finishOp(tt.xorAssign, 2);\n    }\n    // '^^'\n    else if (\n      next === charCodes.caret &&\n      // If the ^^ token is not enabled, we don't throw but parse two single ^s\n      // because it could be a ^ hack token followed by a ^ binary operator.\n      this.hasPlugin([\n        \"pipelineOperator\",\n        { proposal: \"hack\", topicToken: \"^^\" },\n      ])\n    ) {\n      this.finishOp(tt.doubleCaret, 2);\n\n      // `^^^` is forbidden and must be separated by a space.\n      const lookaheadCh = this.input.codePointAt(this.state.pos);\n      if (lookaheadCh === charCodes.caret) {\n        this.unexpected();\n      }\n    }\n    // '^'\n    else {\n      this.finishOp(tt.bitwiseXOR, 1);\n    }\n  }\n\n  readToken_atSign(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    // '@@'\n    if (\n      next === charCodes.atSign &&\n      this.hasPlugin([\n        \"pipelineOperator\",\n        { proposal: \"hack\", topicToken: \"@@\" },\n      ])\n    ) {\n      this.finishOp(tt.doubleAt, 2);\n    }\n    // '@'\n    else {\n      this.finishOp(tt.at, 1);\n    }\n  }\n\n  readToken_plus_min(code: number): void {\n    // '+-'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      this.finishOp(tt.incDec, 2);\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n    } else {\n      this.finishOp(tt.plusMin, 1);\n    }\n  }\n\n  readToken_lt(): void {\n    // '<'\n    const { pos } = this.state;\n    const next = this.input.charCodeAt(pos + 1);\n\n    if (next === charCodes.lessThan) {\n      if (this.input.charCodeAt(pos + 2) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, 3);\n        return;\n      }\n      this.finishOp(tt.bitShiftL, 2);\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      // <=\n      this.finishOp(tt.relational, 2);\n      return;\n    }\n\n    this.finishOp(tt.lt, 1);\n  }\n\n  readToken_gt(): void {\n    // '>'\n    const { pos } = this.state;\n    const next = this.input.charCodeAt(pos + 1);\n\n    if (next === charCodes.greaterThan) {\n      const size =\n        this.input.charCodeAt(pos + 2) === charCodes.greaterThan ? 3 : 2;\n      if (this.input.charCodeAt(pos + size) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, size + 1);\n        return;\n      }\n      this.finishOp(tt.bitShiftR, size);\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      // <= | >=\n      this.finishOp(tt.relational, 2);\n      return;\n    }\n\n    this.finishOp(tt.gt, 1);\n  }\n\n  readToken_eq_excl(code: number): void {\n    // '=!'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(\n        tt.equality,\n        this.input.charCodeAt(this.state.pos + 2) === charCodes.equalsTo\n          ? 3\n          : 2,\n      );\n      return;\n    }\n    if (code === charCodes.equalsTo && next === charCodes.greaterThan) {\n      // '=>'\n      this.state.pos += 2;\n      this.finishToken(tt.arrow);\n      return;\n    }\n    this.finishOp(code === charCodes.equalsTo ? tt.eq : tt.bang, 1);\n  }\n\n  readToken_question(): void {\n    // '?'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n    if (next === charCodes.questionMark) {\n      if (next2 === charCodes.equalsTo) {\n        // '??='\n        this.finishOp(tt.assign, 3);\n      } else {\n        // '??'\n        this.finishOp(tt.nullishCoalescing, 2);\n      }\n    } else if (\n      next === charCodes.dot &&\n      !(next2 >= charCodes.digit0 && next2 <= charCodes.digit9)\n    ) {\n      // '.' not followed by a number\n      this.state.pos += 2;\n      this.finishToken(tt.questionDot);\n    } else {\n      ++this.state.pos;\n      this.finishToken(tt.question);\n    }\n  }\n\n  getTokenFromCode(code: number): void {\n    switch (code) {\n      // The interpretation of a dot depends on whether it is followed\n      // by a digit or another two dots.\n\n      case charCodes.dot:\n        this.readToken_dot();\n        return;\n      // Punctuation tokens.\n      case charCodes.leftParenthesis:\n        ++this.state.pos;\n        this.finishToken(tt.parenL);\n        return;\n      case charCodes.rightParenthesis:\n        ++this.state.pos;\n        this.finishToken(tt.parenR);\n        return;\n      case charCodes.semicolon:\n        ++this.state.pos;\n        this.finishToken(tt.semi);\n        return;\n      case charCodes.comma:\n        ++this.state.pos;\n        this.finishToken(tt.comma);\n        return;\n      case charCodes.leftSquareBracket:\n        if (\n          this.hasPlugin(\"recordAndTuple\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.verticalBar\n        ) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(\n              Errors.TupleExpressionBarIncorrectStartSyntaxType,\n              { at: this.state.curPosition() },\n            );\n          }\n\n          // [|\n          this.state.pos += 2;\n          this.finishToken(tt.bracketBarL);\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.bracketL);\n        }\n        return;\n      case charCodes.rightSquareBracket:\n        ++this.state.pos;\n        this.finishToken(tt.bracketR);\n        return;\n      case charCodes.leftCurlyBrace:\n        if (\n          this.hasPlugin(\"recordAndTuple\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.verticalBar\n        ) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(\n              Errors.RecordExpressionBarIncorrectStartSyntaxType,\n              { at: this.state.curPosition() },\n            );\n          }\n\n          // {|\n          this.state.pos += 2;\n          this.finishToken(tt.braceBarL);\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.braceL);\n        }\n        return;\n      case charCodes.rightCurlyBrace:\n        ++this.state.pos;\n        this.finishToken(tt.braceR);\n        return;\n\n      case charCodes.colon:\n        if (\n          this.hasPlugin(\"functionBind\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.colon\n        ) {\n          this.finishOp(tt.doubleColon, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.colon);\n        }\n        return;\n\n      case charCodes.questionMark:\n        this.readToken_question();\n        return;\n\n      case charCodes.graveAccent:\n        this.readTemplateToken();\n        return;\n\n      case charCodes.digit0: {\n        const next = this.input.charCodeAt(this.state.pos + 1);\n        // '0x', '0X' - hex number\n        if (next === charCodes.lowercaseX || next === charCodes.uppercaseX) {\n          this.readRadixNumber(16);\n          return;\n        }\n        // '0o', '0O' - octal number\n        if (next === charCodes.lowercaseO || next === charCodes.uppercaseO) {\n          this.readRadixNumber(8);\n          return;\n        }\n        // '0b', '0B' - binary number\n        if (next === charCodes.lowercaseB || next === charCodes.uppercaseB) {\n          this.readRadixNumber(2);\n          return;\n        }\n      }\n      // Anything else beginning with a digit is an integer, octal\n      // number, or float. (fall through)\n      case charCodes.digit1:\n      case charCodes.digit2:\n      case charCodes.digit3:\n      case charCodes.digit4:\n      case charCodes.digit5:\n      case charCodes.digit6:\n      case charCodes.digit7:\n      case charCodes.digit8:\n      case charCodes.digit9:\n        this.readNumber(false);\n        return;\n\n      // Quotes produce strings.\n      case charCodes.quotationMark:\n      case charCodes.apostrophe:\n        this.readString(code);\n        return;\n\n      // Operators are parsed inline in tiny state machines. '=' (charCodes.equalsTo) is\n      // often referred to. `finishOp` simply skips the amount of\n      // characters it is given as second argument, and returns a token\n      // of the type given by its first argument.\n\n      case charCodes.slash:\n        this.readToken_slash();\n        return;\n\n      case charCodes.percentSign:\n      case charCodes.asterisk:\n        this.readToken_mult_modulo(code);\n        return;\n\n      case charCodes.verticalBar:\n      case charCodes.ampersand:\n        this.readToken_pipe_amp(code);\n        return;\n\n      case charCodes.caret:\n        this.readToken_caret();\n        return;\n\n      case charCodes.plusSign:\n      case charCodes.dash:\n        this.readToken_plus_min(code);\n        return;\n\n      case charCodes.lessThan:\n        this.readToken_lt();\n        return;\n\n      case charCodes.greaterThan:\n        this.readToken_gt();\n        return;\n\n      case charCodes.equalsTo:\n      case charCodes.exclamationMark:\n        this.readToken_eq_excl(code);\n        return;\n\n      case charCodes.tilde:\n        this.finishOp(tt.tilde, 1);\n        return;\n\n      case charCodes.atSign:\n        this.readToken_atSign();\n        return;\n\n      case charCodes.numberSign:\n        this.readToken_numberSign();\n        return;\n\n      case charCodes.backslash:\n        this.readWord();\n        return;\n\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord(code);\n          return;\n        }\n    }\n\n    throw this.raise(Errors.InvalidOrUnexpectedToken, {\n      at: this.state.curPosition(),\n      unexpected: String.fromCodePoint(code),\n    });\n  }\n\n  finishOp(type: TokenType, size: number): void {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n\n  readRegexp(): void {\n    const startLoc = this.state.startLoc;\n    const start = this.state.start + 1;\n    let escaped, inClass;\n    let { pos } = this.state;\n    for (; ; ++pos) {\n      if (pos >= this.length) {\n        // FIXME: explain\n        throw this.raise(Errors.UnterminatedRegExp, {\n          at: createPositionWithColumnOffset(startLoc, 1),\n        });\n      }\n      const ch = this.input.charCodeAt(pos);\n      if (isNewLine(ch)) {\n        throw this.raise(Errors.UnterminatedRegExp, {\n          at: createPositionWithColumnOffset(startLoc, 1),\n        });\n      }\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === charCodes.leftSquareBracket) {\n          inClass = true;\n        } else if (ch === charCodes.rightSquareBracket && inClass) {\n          inClass = false;\n        } else if (ch === charCodes.slash && !inClass) {\n          break;\n        }\n        escaped = ch === charCodes.backslash;\n      }\n    }\n    const content = this.input.slice(start, pos);\n    ++pos;\n\n    let mods = \"\";\n\n    const nextPos = () =>\n      // (pos + 1) + 1 - start\n      createPositionWithColumnOffset(startLoc, pos + 2 - start);\n\n    while (pos < this.length) {\n      const cp = this.codePointAtPos(pos);\n      // It doesn't matter if cp > 0xffff, the loop will either throw or break because we check on cp\n      const char = String.fromCharCode(cp);\n\n      // @ts-expect-error VALID_REGEX_FLAGS.has should accept expanded type: number\n      if (VALID_REGEX_FLAGS.has(cp)) {\n        if (cp === charCodes.lowercaseV) {\n          if (mods.includes(\"u\")) {\n            this.raise(Errors.IncompatibleRegExpUVFlags, { at: nextPos() });\n          }\n        } else if (cp === charCodes.lowercaseU) {\n          if (mods.includes(\"v\")) {\n            this.raise(Errors.IncompatibleRegExpUVFlags, { at: nextPos() });\n          }\n        }\n        if (mods.includes(char)) {\n          this.raise(Errors.DuplicateRegExpFlags, { at: nextPos() });\n        }\n      } else if (isIdentifierChar(cp) || cp === charCodes.backslash) {\n        this.raise(Errors.MalformedRegExpFlags, { at: nextPos() });\n      } else {\n        break;\n      }\n\n      ++pos;\n      mods += char;\n    }\n    this.state.pos = pos;\n\n    this.finishToken(tt.regexp, {\n      pattern: content,\n      flags: mods,\n    });\n  }\n\n  // Read an integer in the given radix. Return null if zero digits\n  // were read, the integer value otherwise. When `len` is given, this\n  // will return `null` unless the integer has exactly `len` digits.\n  // When `forceLen` is `true`, it means that we already know that in case\n  // of a malformed number we have to skip `len` characters anyway, instead\n  // of bailing out early. For example, in \"\\u{123Z}\" we want to read up to }\n  // anyway, while in \"\\u00Z\" we will stop at Z instead of consuming four\n  // characters (and thus the closing quote).\n\n  readInt(\n    radix: number,\n    len?: number,\n    forceLen: boolean = false,\n    allowNumSeparator: boolean | \"bail\" = true,\n  ): number | null {\n    const { n, pos } = readInt(\n      this.input,\n      this.state.pos,\n      this.state.lineStart,\n      this.state.curLine,\n      radix,\n      len,\n      forceLen,\n      allowNumSeparator,\n      this.errorHandlers_readInt,\n      /* bailOnError */ false,\n    );\n    this.state.pos = pos;\n    return n;\n  }\n\n  readRadixNumber(radix: number): void {\n    const startLoc = this.state.curPosition();\n    let isBigInt = false;\n\n    this.state.pos += 2; // 0x\n    const val = this.readInt(radix);\n    if (val == null) {\n      this.raise(Errors.InvalidDigit, {\n        // Numeric literals can't have newlines, so this is safe to do.\n        at: createPositionWithColumnOffset(startLoc, 2),\n        radix,\n      });\n    }\n    const next = this.input.charCodeAt(this.state.pos);\n\n    if (next === charCodes.lowercaseN) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === charCodes.lowercaseM) {\n      throw this.raise(Errors.InvalidDecimal, { at: startLoc });\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(Errors.NumberIdentifier, {\n        at: this.state.curPosition(),\n      });\n    }\n\n    if (isBigInt) {\n      const str = this.input\n        .slice(startLoc.index, this.state.pos)\n        .replace(/[_n]/g, \"\");\n      this.finishToken(tt.bigint, str);\n      return;\n    }\n\n    this.finishToken(tt.num, val);\n  }\n\n  // Read an integer, octal integer, or floating-point number.\n\n  readNumber(startsWithDot: boolean): void {\n    const start = this.state.pos;\n    const startLoc = this.state.curPosition();\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(Errors.InvalidNumber, { at: this.state.curPosition() });\n    }\n    const hasLeadingZero =\n      this.state.pos - start >= 2 &&\n      this.input.charCodeAt(start) === charCodes.digit0;\n\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      this.recordStrictModeErrors(Errors.StrictOctalLiteral, { at: startLoc });\n      if (!this.state.strict) {\n        // disallow numeric separators in non octal decimals and legacy octal likes\n        const underscorePos = integer.indexOf(\"_\");\n        if (underscorePos > 0) {\n          // Numeric literals can't have newlines, so this is safe to do.\n          this.raise(Errors.ZeroDigitNumericSeparator, {\n            at: createPositionWithColumnOffset(startLoc, underscorePos),\n          });\n        }\n      }\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n\n    let next = this.input.charCodeAt(this.state.pos);\n    if (next === charCodes.dot && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (\n      (next === charCodes.uppercaseE || next === charCodes.lowercaseE) &&\n      !isOctal\n    ) {\n      next = this.input.charCodeAt(++this.state.pos);\n      if (next === charCodes.plusSign || next === charCodes.dash) {\n        ++this.state.pos;\n      }\n      if (this.readInt(10) === null) {\n        this.raise(Errors.InvalidOrMissingExponent, { at: startLoc });\n      }\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (next === charCodes.lowercaseN) {\n      // disallow floats, legacy octal syntax and non octal decimals\n      // new style octal (\"0o\") is handled in this.readRadixNumber\n      if (isFloat || hasLeadingZero) {\n        this.raise(Errors.InvalidBigIntLiteral, { at: startLoc });\n      }\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (next === charCodes.lowercaseM) {\n      this.expectPlugin(\"decimal\", this.state.curPosition());\n      if (hasExponent || hasLeadingZero) {\n        this.raise(Errors.InvalidDecimal, { at: startLoc });\n      }\n      ++this.state.pos;\n      isDecimal = true;\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(Errors.NumberIdentifier, {\n        at: this.state.curPosition(),\n      });\n    }\n\n    // remove \"_\" for numeric literal separator, and trailing `m` or `n`\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n\n    if (isBigInt) {\n      this.finishToken(tt.bigint, str);\n      return;\n    }\n\n    if (isDecimal) {\n      this.finishToken(tt.decimal, str);\n      return;\n    }\n\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(tt.num, val);\n  }\n\n  // Read a string value, interpreting backslash-escapes.\n\n  readCodePoint(throwOnInvalid: boolean): number | null {\n    const { code, pos } = readCodePoint(\n      this.input,\n      this.state.pos,\n      this.state.lineStart,\n      this.state.curLine,\n      throwOnInvalid,\n      this.errorHandlers_readCodePoint,\n    );\n    this.state.pos = pos;\n    return code;\n  }\n\n  readString(quote: number): void {\n    const { str, pos, curLine, lineStart } = readStringContents(\n      quote === charCodes.quotationMark ? \"double\" : \"single\",\n      this.input,\n      this.state.pos + 1, // skip the quote\n      this.state.lineStart,\n      this.state.curLine,\n      this.errorHandlers_readStringContents_string,\n    );\n    this.state.pos = pos + 1; // skip the quote\n    this.state.lineStart = lineStart;\n    this.state.curLine = curLine;\n    this.finishToken(tt.string, str);\n  }\n\n  // Reads template continuation `}...`\n  readTemplateContinuation(): void {\n    if (!this.match(tt.braceR)) {\n      this.unexpected(null, tt.braceR);\n    }\n    // rewind pos to `}`\n    this.state.pos--;\n    this.readTemplateToken();\n  }\n\n  // Reads template string tokens.\n  readTemplateToken(): void {\n    const opening = this.input[this.state.pos];\n    const { str, firstInvalidLoc, pos, curLine, lineStart } =\n      readStringContents(\n        \"template\",\n        this.input,\n        this.state.pos + 1, // skip '`' or `}`\n        this.state.lineStart,\n        this.state.curLine,\n        this.errorHandlers_readStringContents_template,\n      );\n    this.state.pos = pos + 1; // skip '`' or `$`\n    this.state.lineStart = lineStart;\n    this.state.curLine = curLine;\n\n    if (firstInvalidLoc) {\n      this.state.firstInvalidTemplateEscapePos = new Position(\n        firstInvalidLoc.curLine,\n        firstInvalidLoc.pos - firstInvalidLoc.lineStart,\n        firstInvalidLoc.pos,\n      );\n    }\n\n    if (this.input.codePointAt(pos) === charCodes.graveAccent) {\n      this.finishToken(\n        tt.templateTail,\n        firstInvalidLoc ? null : opening + str + \"`\",\n      );\n    } else {\n      this.state.pos++; // skip '{'\n      this.finishToken(\n        tt.templateNonTail,\n        firstInvalidLoc ? null : opening + str + \"${\",\n      );\n    }\n  }\n\n  recordStrictModeErrors(\n    toParseError: DeferredStrictError,\n    { at }: { at: Position },\n  ) {\n    const index = at.index;\n\n    if (this.state.strict && !this.state.strictErrors.has(index)) {\n      this.raise(toParseError, { at });\n    } else {\n      this.state.strictErrors.set(index, [toParseError, at]);\n    }\n  }\n\n  // Read an identifier, and return it as a string. Sets `this.state.containsEsc`\n  // to whether the word contained a '\\u' escape.\n  //\n  // Incrementally adds only escaped chars, adding other chunks as-is\n  // as a micro-optimization.\n  //\n  // When `firstCode` is given, it assumes it is always an identifier start and\n  // will skip reading start position again\n\n  readWord1(firstCode?: number): string {\n    this.state.containsEsc = false;\n    let word = \"\";\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n    if (firstCode !== undefined) {\n      this.state.pos += firstCode <= 0xffff ? 1 : 2;\n    }\n\n    while (this.state.pos < this.length) {\n      const ch = this.codePointAtPos(this.state.pos);\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (ch === charCodes.backslash) {\n        this.state.containsEsc = true;\n\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.curPosition();\n        const identifierCheck =\n          this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n        if (this.input.charCodeAt(++this.state.pos) !== charCodes.lowercaseU) {\n          this.raise(Errors.MissingUnicodeEscape, {\n            at: this.state.curPosition(),\n          });\n          chunkStart = this.state.pos - 1;\n          continue;\n        }\n\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(Errors.EscapedCharNotAnIdentifier, { at: escStart });\n          }\n\n          word += String.fromCodePoint(esc);\n        }\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n\n  // Read an identifier or keyword token. Will check for reserved\n  // words when necessary.\n\n  readWord(firstCode?: number): void {\n    const word = this.readWord1(firstCode);\n    const type = keywordTypes.get(word);\n    if (type !== undefined) {\n      // We don't use word as state.value here because word is a dynamic string\n      // while token label is a shared constant string\n      this.finishToken(type, tokenLabelName(type));\n    } else {\n      this.finishToken(tt.name, word);\n    }\n  }\n\n  checkKeywordEscapes(): void {\n    const { type } = this.state;\n    if (tokenIsKeyword(type) && this.state.containsEsc) {\n      this.raise(Errors.InvalidEscapedReservedWord, {\n        at: this.state.startLoc,\n        reservedWord: tokenLabelName(type),\n      });\n    }\n  }\n\n  /**\n   * Raise a `ParseError` given the appropriate properties. If passed a\n   * `Position` for the `at` property, raises the `ParseError` at that location.\n   * Otherwise, if passed a `Node`, raises the `ParseError` at the start\n   * location of that `Node`.\n   *\n   * If `errorRecovery` is `true`, the error is pushed to the errors array and\n   * returned. If `errorRecovery` is `false`, the error is instead thrown.\n   */\n  raise<ErrorDetails>(\n    toParseError: ParseErrorConstructor<ErrorDetails>,\n    raiseProperties: RaiseProperties<ErrorDetails>,\n  ): ParseError<ErrorDetails> {\n    const { at, ...details } = raiseProperties;\n    const loc = at instanceof Position ? at : at.loc.start;\n    // @ts-expect-error: refine details typing\n    const error = toParseError({ loc, details });\n\n    if (!this.options.errorRecovery) throw error;\n    if (!this.isLookahead) this.state.errors.push(error);\n\n    return error;\n  }\n\n  /**\n   * If `errorRecovery` is `false`, this method behaves identically to `raise`.\n   * If `errorRecovery` is `true`, this method will first see if there is\n   * already an error stored at the same `Position`, and replaces it with the\n   * one generated here.\n   */\n  raiseOverwrite<ErrorDetails>(\n    toParseError: ParseErrorConstructor<ErrorDetails>,\n    raiseProperties: RaiseProperties<ErrorDetails>,\n  ): ParseError<ErrorDetails> | never {\n    const { at, ...details } = raiseProperties;\n    const loc = at instanceof Position ? at : at.loc.start;\n    const pos = loc.index;\n    const errors = this.state.errors;\n\n    for (let i = errors.length - 1; i >= 0; i--) {\n      const error = errors[i];\n      if (error.loc.index === pos) {\n        // @ts-expect-error: refine details typing\n        return (errors[i] = toParseError({ loc, details }));\n      }\n      if (error.loc.index < pos) break;\n    }\n\n    return this.raise(toParseError, raiseProperties);\n  }\n\n  // updateContext is used by the jsx plugin\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  updateContext(prevType: TokenType): void {}\n\n  // Raise an unexpected token error. Can take the expected token type.\n  unexpected(loc?: Position | null, type?: TokenType): void {\n    throw this.raise(Errors.UnexpectedToken, {\n      expected: type ? tokenLabelName(type) : null,\n      at: loc != null ? loc : this.state.startLoc,\n    });\n  }\n\n  expectPlugin(pluginName: Plugin, loc?: Position): true {\n    if (this.hasPlugin(pluginName)) {\n      return true;\n    }\n\n    throw this.raise(Errors.MissingPlugin, {\n      at: loc != null ? loc : this.state.startLoc,\n      missingPlugin: [pluginName],\n    });\n  }\n\n  expectOnePlugin(pluginNames: Plugin[]): void {\n    if (!pluginNames.some(name => this.hasPlugin(name))) {\n      throw this.raise(Errors.MissingOneOfPlugins, {\n        at: this.state.startLoc,\n        missingPlugin: pluginNames,\n      });\n    }\n  }\n\n  errorBuilder(error: ParseErrorConstructor<{}>) {\n    return (pos: number, lineStart: number, curLine: number) => {\n      this.raise(error, {\n        at: buildPosition(pos, lineStart, curLine),\n      });\n    };\n  }\n\n  errorHandlers_readInt: IntErrorHandlers = {\n    invalidDigit: (pos, lineStart, curLine, radix) => {\n      if (!this.options.errorRecovery) return false;\n\n      this.raise(Errors.InvalidDigit, {\n        at: buildPosition(pos, lineStart, curLine),\n        radix,\n      });\n      // Continue parsing the number as if there was no invalid digit.\n      return true;\n    },\n    numericSeparatorInEscapeSequence: this.errorBuilder(\n      Errors.NumericSeparatorInEscapeSequence,\n    ),\n    unexpectedNumericSeparator: this.errorBuilder(\n      Errors.UnexpectedNumericSeparator,\n    ),\n  };\n\n  errorHandlers_readCodePoint: CodePointErrorHandlers = {\n    ...this.errorHandlers_readInt,\n    invalidEscapeSequence: this.errorBuilder(Errors.InvalidEscapeSequence),\n    invalidCodePoint: this.errorBuilder(Errors.InvalidCodePoint),\n  };\n\n  errorHandlers_readStringContents_string: StringContentsErrorHandlers = {\n    ...this.errorHandlers_readCodePoint,\n    strictNumericEscape: (pos, lineStart, curLine) => {\n      this.recordStrictModeErrors(Errors.StrictNumericEscape, {\n        at: buildPosition(pos, lineStart, curLine),\n      });\n    },\n    unterminated: (pos, lineStart, curLine) => {\n      throw this.raise(Errors.UnterminatedString, {\n        // Report the error at the string quote\n        at: buildPosition(pos - 1, lineStart, curLine),\n      });\n    },\n  };\n\n  errorHandlers_readStringContents_template: StringContentsErrorHandlers = {\n    ...this.errorHandlers_readCodePoint,\n    strictNumericEscape: this.errorBuilder(Errors.StrictNumericEscape),\n    unterminated: (pos, lineStart, curLine) => {\n      throw this.raise(Errors.UnterminatedTemplate, {\n        at: buildPosition(pos, lineStart, curLine),\n      });\n    },\n  };\n}\n","import { ClassElementType } from \"./scopeflags.ts\";\nimport type { Position } from \"./location.ts\";\nimport { Errors } from \"../parse-error.ts\";\nimport type Tokenizer from \"../tokenizer/index.ts\";\n\nexport class ClassScope {\n  // A list of private named declared in the current class\n  privateNames: Set<string> = new Set();\n\n  // A list of private getters of setters without their counterpart\n  loneAccessors: Map<string, ClassElementType> = new Map();\n\n  // A list of private names used before being defined, mapping to\n  // their position.\n  undefinedPrivateNames: Map<string, Position> = new Map();\n}\n\nexport default class ClassScopeHandler {\n  parser: Tokenizer;\n  stack: Array<ClassScope> = [];\n  undefinedPrivateNames: Map<string, Position> = new Map();\n\n  constructor(parser: Tokenizer) {\n    this.parser = parser;\n  }\n\n  current(): ClassScope {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n\n    // Migrate the usage of not yet defined private names to the outer\n    // class scope, or raise an error if we reached the top-level scope.\n\n    const current = this.current();\n\n    // Array.from is needed because this is compiled to an array-like for loop\n    for (const [name, loc] of Array.from(oldClassScope.undefinedPrivateNames)) {\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, loc);\n        }\n      } else {\n        this.parser.raise(Errors.InvalidPrivateFieldResolution, {\n          at: loc,\n          identifierName: name,\n        });\n      }\n    }\n  }\n\n  declarePrivateName(\n    name: string,\n    elementType: ClassElementType,\n    loc: Position,\n  ) {\n    const { privateNames, loneAccessors, undefinedPrivateNames } =\n      this.current();\n    let redefined = privateNames.has(name);\n\n    if (elementType & ClassElementType.KIND_ACCESSOR) {\n      const accessor = redefined && loneAccessors.get(name);\n      if (accessor) {\n        const oldStatic = accessor & ClassElementType.FLAG_STATIC;\n        const newStatic = elementType & ClassElementType.FLAG_STATIC;\n\n        const oldKind = accessor & ClassElementType.KIND_ACCESSOR;\n        const newKind = elementType & ClassElementType.KIND_ACCESSOR;\n\n        // The private name can be duplicated only if it is used by\n        // two accessors with different kind (get and set), and if\n        // they have the same placement (static or not).\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n\n        if (!redefined) loneAccessors.delete(name);\n      } else if (!redefined) {\n        loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.parser.raise(Errors.PrivateNameRedeclaration, {\n        at: loc,\n        identifierName: name,\n      });\n    }\n\n    privateNames.add(name);\n    undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name: string, loc: Position) {\n    let classScope;\n    for (classScope of this.stack) {\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, loc);\n    } else {\n      // top-level\n      this.parser.raise(Errors.InvalidPrivateFieldResolution, {\n        at: loc,\n        identifierName: name,\n      });\n    }\n  }\n}\n","import { Errors, type ParseErrorConstructor } from \"../parse-error.ts\";\nimport type { Position } from \"./location.ts\";\nimport type { Node } from \"../types.ts\";\nimport type Tokenizer from \"../tokenizer/index.ts\";\n\n/**\n * @module util/expression-scope\n\nExpressionScope is used to track declaration errors in these ambiguous patterns:\n\n- CoverParenthesizedExpressionAndArrowParameterList\n  e.g. we don't know if `({ x })` is an parenthesized expression or an\n  arrow function parameters until we see an `=>` after `)`.\n\n- CoverCallExpressionAndAsyncArrowHead\n  e.g. we don't know if `async({ x })` is a call expression or an async arrow\n  function parameters until we see an `=>` after `)`\n\nThe following declaration errors (@see parser-errors/standard) will be recorded in\nsome expression scopes and thrown later when we know what the ambiguous pattern is\n\n- AwaitBindingIdentifier\n- AwaitExpressionFormalParameter\n- YieldInParameter\n- InvalidParenthesizedAssignment when parenthesized is an identifier\n\nThere are four different expression scope\n- Expression\n  A general scope that represents program / function body / static block. No errors\n  will be recorded nor thrown in this scope.\n\n- MaybeArrowParameterDeclaration\n  A scope that represents ambiguous arrow head e.g. `(x)`. Errors will be recorded\n  alongside parent scopes and thrown when `ExpressionScopeHandler#validateAsPattern`\n  is called.\n\n- MaybeAsyncArrowParameterDeclaration\n  A scope that represents ambiguous async arrow head e.g. `async(x)`. Errors will\n  be recorded alongside parent scopes and thrown when\n  `ExpressionScopeHandler#validateAsPattern` is called.\n\n- ParameterDeclaration\n  A scope that represents unambiguous function parameters `function(x)`. Errors\n  recorded in this scope will be thrown immediately. No errors will be recorded in\n  this scope.\n\n// @see {@link https://docs.google.com/document/d/1FAvEp9EUK-G8kHfDIEo_385Hs2SUBCYbJ5H-NnLvq8M|V8 Expression Scope design docs}\n */\n\nconst enum ExpressionScopeType {\n  kExpression = 0,\n  kMaybeArrowParameterDeclaration = 1,\n  kMaybeAsyncArrowParameterDeclaration = 2,\n  kParameterDeclaration = 3,\n}\n\nclass ExpressionScope {\n  declare type: ExpressionScopeType;\n\n  constructor(type: ExpressionScopeType = ExpressionScopeType.kExpression) {\n    this.type = type;\n  }\n\n  canBeArrowParameterDeclaration(): this is ArrowHeadParsingScope {\n    return (\n      this.type === ExpressionScopeType.kMaybeAsyncArrowParameterDeclaration ||\n      this.type === ExpressionScopeType.kMaybeArrowParameterDeclaration\n    );\n  }\n\n  isCertainlyParameterDeclaration() {\n    return this.type === ExpressionScopeType.kParameterDeclaration;\n  }\n}\n\ntype ArrowHeadParsingParameterInitializerError =\n  | typeof Errors.AwaitExpressionFormalParameter\n  | typeof Errors.YieldInParameter;\ntype ArrowHeadParsingDeclarationError =\n  | ArrowHeadParsingParameterInitializerError\n  | typeof Errors.InvalidParenthesizedAssignment\n  | typeof Errors.AwaitBindingIdentifier;\n\nclass ArrowHeadParsingScope extends ExpressionScope {\n  declarationErrors: Map<number, [ParseErrorConstructor<{}>, Position]> =\n    new Map();\n  constructor(\n    type:\n      | ExpressionScopeType.kMaybeArrowParameterDeclaration\n      | ExpressionScopeType.kMaybeAsyncArrowParameterDeclaration,\n  ) {\n    super(type);\n  }\n  recordDeclarationError(\n    ParsingErrorClass: ParseErrorConstructor<{}>,\n    {\n      at,\n    }: {\n      at: Position;\n    },\n  ) {\n    const index = at.index;\n\n    this.declarationErrors.set(index, [ParsingErrorClass, at]);\n  }\n  clearDeclarationError(index: number) {\n    this.declarationErrors.delete(index);\n  }\n  iterateErrors(\n    iterator: (a: [ArrowHeadParsingDeclarationError, Position]) => void,\n  ) {\n    this.declarationErrors.forEach(iterator);\n  }\n}\n\nexport default class ExpressionScopeHandler {\n  parser: Tokenizer;\n  stack: Array<ExpressionScope> = [new ExpressionScope()];\n\n  constructor(parser: Tokenizer) {\n    this.parser = parser;\n  }\n  enter(scope: ExpressionScope) {\n    this.stack.push(scope);\n  }\n\n  exit() {\n    this.stack.pop();\n  }\n\n  /**\n   * Record likely parameter initializer errors\n   *\n   * When current scope is a ParameterDeclaration, the error will be thrown immediately,\n   * otherwise it will be recorded to any ancestry MaybeArrowParameterDeclaration and\n   * MaybeAsyncArrowParameterDeclaration scope until an Expression scope is seen.\n   */\n  recordParameterInitializerError(\n    toParseError: ArrowHeadParsingParameterInitializerError,\n    {\n      at: node,\n    }: {\n      at: Node;\n    },\n  ): void {\n    const origin = { at: node.loc.start };\n    const { stack } = this;\n    let i = stack.length - 1;\n    let scope: ExpressionScope = stack[i];\n    while (!scope.isCertainlyParameterDeclaration()) {\n      if (scope.canBeArrowParameterDeclaration()) {\n        scope.recordDeclarationError(toParseError, origin);\n      } else {\n        /*:: invariant(scope.type == ExpressionScopeType.kExpression) */\n        // Type-Expression is the boundary where initializer error can populate to\n        return;\n      }\n      scope = stack[--i];\n    }\n    this.parser.raise(toParseError, origin);\n  }\n\n  /**\n   * Record errors that must be thrown if the current pattern ends up being an arrow\n   * function parameter. This is used to record parenthesized identifiers, and to record\n   * \"a as T\" and \"<T> a\" type assertions when parsing typescript.\n   *\n   * A parenthesized identifier (or type assertion) in LHS can be ambiguous because the assignment\n   * can be transformed to an assignable later, but not vice versa:\n   * For example, in `([(a) = []] = []) => {}`, we think `(a) = []` is an LHS in `[(a) = []]`,\n   * an LHS within `[(a) = []] = []`. However the LHS chain is then transformed by toAssignable,\n   * and we should throw assignment `(a)`, which is only valid in LHS. Hence we record the\n   * location of parenthesized `(a)` to current scope if it is one of MaybeArrowParameterDeclaration\n   * and MaybeAsyncArrowParameterDeclaration\n   *\n   * Unlike `recordParameterInitializerError`, we don't record to ancestry scope because we\n   * validate arrow head parsing scope before exit, and then the LHS will be unambiguous:\n   * For example, in `( x = ( [(a) = []] = [] ) ) => {}`, we should not record `(a)` in `( x = ... ) =>`\n   * arrow scope because when we finish parsing `( [(a) = []] = [] )`, it is an unambiguous assignment\n   * expression and can not be cast to pattern\n   */\n  recordArrowParameterBindingError(\n    error: ParseErrorConstructor<{}>,\n    {\n      at: node,\n    }: {\n      at: Node;\n    },\n  ): void {\n    const { stack } = this;\n    const scope: ExpressionScope = stack[stack.length - 1];\n    const origin = { at: node.loc.start };\n    if (scope.isCertainlyParameterDeclaration()) {\n      this.parser.raise(error, origin);\n    } else if (scope.canBeArrowParameterDeclaration()) {\n      scope.recordDeclarationError(error, origin);\n    } else {\n      return;\n    }\n  }\n\n  /**\n   * Record likely async arrow parameter errors\n   *\n   * Errors will be recorded to any ancestry MaybeAsyncArrowParameterDeclaration\n   * scope until an Expression scope is seen.\n   */\n  recordAsyncArrowParametersError({ at }: { at: Position }): void {\n    const { stack } = this;\n    let i = stack.length - 1;\n    let scope: ExpressionScope = stack[i];\n    while (scope.canBeArrowParameterDeclaration()) {\n      if (\n        scope.type === ExpressionScopeType.kMaybeAsyncArrowParameterDeclaration\n      ) {\n        scope.recordDeclarationError(Errors.AwaitBindingIdentifier, { at });\n      }\n      scope = stack[--i];\n    }\n  }\n\n  validateAsPattern(): void {\n    const { stack } = this;\n    const currentScope = stack[stack.length - 1];\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\n    currentScope.iterateErrors(([toParseError, loc]) => {\n      this.parser.raise(toParseError, { at: loc });\n      // iterate from parent scope\n      let i = stack.length - 2;\n      let scope = stack[i];\n      while (scope.canBeArrowParameterDeclaration()) {\n        scope.clearDeclarationError(loc.index);\n        scope = stack[--i];\n      }\n    });\n  }\n}\n\nexport function newParameterDeclarationScope() {\n  return new ExpressionScope(ExpressionScopeType.kParameterDeclaration);\n}\n\nexport function newArrowHeadScope() {\n  return new ArrowHeadParsingScope(\n    ExpressionScopeType.kMaybeArrowParameterDeclaration,\n  );\n}\n\nexport function newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(\n    ExpressionScopeType.kMaybeAsyncArrowParameterDeclaration,\n  );\n}\n\nexport function newExpressionScope() {\n  return new ExpressionScope();\n}\n","export const // Initial Parameter flags\n  PARAM = 0b0000,\n  // track [Yield] production parameter\n  PARAM_YIELD = 0b0001,\n  // track [Await] production parameter\n  PARAM_AWAIT = 0b0010,\n  // track [Return] production parameter\n  PARAM_RETURN = 0b0100,\n  PARAM_IN = 0b1000; // track [In] production parameter\n\n// ProductionParameterHandler is a stack fashioned production parameter tracker\n// https://tc39.es/ecma262/#sec-grammar-notation\n// The tracked parameters are defined above.\n//\n// Whenever [+Await]/[+Yield] appears in the right-hand sides of a production,\n// we must enter a new tracking stack. For example when parsing\n//\n// AsyncFunctionDeclaration [Yield, Await]:\n//   async [no LineTerminator here] function BindingIdentifier[?Yield, ?Await]\n//     ( FormalParameters[~Yield, +Await] ) { AsyncFunctionBody }\n//\n// we must follow such process:\n//\n// 1. parse async keyword\n// 2. parse function keyword\n// 3. parse bindingIdentifier <= inherit current parameters: [?Await]\n// 4. enter new stack with (PARAM_AWAIT)\n// 5. parse formal parameters <= must have [Await] parameter [+Await]\n// 6. parse function body\n// 7. exit current stack\n\nexport type ParamKind = number;\n\n// todo(flow->ts) - check if more granular type can be used,\n//  type below is not good because things like PARAM_AWAIT|PARAM_YIELD are not included\n// export type ParamKind =\n//   | typeof PARAM\n//   | typeof PARAM_AWAIT\n//   | typeof PARAM_IN\n//   | typeof PARAM_RETURN\n//   | typeof PARAM_YIELD;\n\nexport default class ProductionParameterHandler {\n  stacks: Array<number> = [];\n  enter(flags: number) {\n    this.stacks.push(flags);\n  }\n\n  exit() {\n    this.stacks.pop();\n  }\n\n  currentFlags(): number {\n    return this.stacks[this.stacks.length - 1];\n  }\n\n  get hasAwait(): boolean {\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\n  }\n\n  get hasYield(): boolean {\n    return (this.currentFlags() & PARAM_YIELD) > 0;\n  }\n\n  get hasReturn(): boolean {\n    return (this.currentFlags() & PARAM_RETURN) > 0;\n  }\n\n  get hasIn(): boolean {\n    return (this.currentFlags() & PARAM_IN) > 0;\n  }\n}\n\nexport function functionFlags(\n  isAsync: boolean,\n  isGenerator: boolean,\n): ParamKind {\n  return (isAsync ? PARAM_AWAIT : 0) | (isGenerator ? PARAM_YIELD : 0);\n}\n","import type { Position } from \"../util/location.ts\";\nimport {\n  tokenIsLiteralPropertyName,\n  tt,\n  type TokenType,\n} from \"../tokenizer/types.ts\";\nimport Tokenizer from \"../tokenizer/index.ts\";\nimport type State from \"../tokenizer/state.ts\";\nimport type {\n  EstreePropertyDefinition,\n  Node,\n  ObjectProperty,\n} from \"../types.ts\";\nimport { lineBreak, skipWhiteSpaceToLineBreak } from \"../util/whitespace.ts\";\nimport { isIdentifierChar } from \"../util/identifier.ts\";\nimport ClassScopeHandler from \"../util/class-scope.ts\";\nimport ExpressionScopeHandler from \"../util/expression-scope.ts\";\nimport { ScopeFlag } from \"../util/scopeflags.ts\";\nimport ProductionParameterHandler, {\n  PARAM_AWAIT,\n  PARAM,\n} from \"../util/production-parameter.ts\";\nimport {\n  Errors,\n  type ParseError,\n  type ParseErrorConstructor,\n} from \"../parse-error.ts\";\nimport type Parser from \"./index.ts\";\n\nimport type ScopeHandler from \"../util/scope.ts\";\n\ntype TryParse<Node, Error, Thrown, Aborted, FailState> = {\n  node: Node;\n  error: Error;\n  thrown: Thrown;\n  aborted: Aborted;\n  failState: FailState;\n};\n\n// ## Parser utilities\n\nexport default abstract class UtilParser extends Tokenizer {\n  // Forward-declaration: defined in parser/index.js\n  abstract getScopeHandler(): { new (...args: any): ScopeHandler };\n\n  addExtra(\n    node: Partial<Node>,\n    key: string,\n    value: any,\n    enumerable: boolean = true,\n  ): void {\n    if (!node) return;\n\n    const extra = (node.extra = node.extra || {});\n    if (enumerable) {\n      extra[key] = value;\n    } else {\n      Object.defineProperty(extra, key, { enumerable, value });\n    }\n  }\n\n  // Tests whether parsed token is a contextual keyword.\n\n  isContextual(token: TokenType): boolean {\n    return this.state.type === token && !this.state.containsEsc;\n  }\n\n  isUnparsedContextual(nameStart: number, name: string): boolean {\n    const nameEnd = nameStart + name.length;\n    if (this.input.slice(nameStart, nameEnd) === name) {\n      const nextCh = this.input.charCodeAt(nameEnd);\n      return !(\n        isIdentifierChar(nextCh) ||\n        // check if `nextCh is between 0xd800 - 0xdbff,\n        // if `nextCh` is NaN, `NaN & 0xfc00` is 0, the function\n        // returns true\n        (nextCh & 0xfc00) === 0xd800\n      );\n    }\n    return false;\n  }\n\n  isLookaheadContextual(name: string): boolean {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n\n  // Consumes contextual keyword if possible.\n\n  eatContextual(token: TokenType): boolean {\n    if (this.isContextual(token)) {\n      this.next();\n      return true;\n    }\n    return false;\n  }\n\n  // Asserts that following token is given contextual keyword.\n\n  expectContextual(\n    token: TokenType,\n    toParseError?: ParseErrorConstructor<any>,\n  ): void {\n    if (!this.eatContextual(token)) {\n      if (toParseError != null) {\n        throw this.raise(toParseError, { at: this.state.startLoc });\n      }\n      this.unexpected(null, token);\n    }\n  }\n\n  // Test whether a semicolon can be inserted at the current position.\n\n  canInsertSemicolon(): boolean {\n    return (\n      this.match(tt.eof) ||\n      this.match(tt.braceR) ||\n      this.hasPrecedingLineBreak()\n    );\n  }\n\n  hasPrecedingLineBreak(): boolean {\n    return lineBreak.test(\n      this.input.slice(this.state.lastTokEndLoc.index, this.state.start),\n    );\n  }\n\n  hasFollowingLineBreak(): boolean {\n    skipWhiteSpaceToLineBreak.lastIndex = this.state.end;\n    return skipWhiteSpaceToLineBreak.test(this.input);\n  }\n\n  isLineTerminator(): boolean {\n    return this.eat(tt.semi) || this.canInsertSemicolon();\n  }\n\n  // Consume a semicolon, or, failing that, see if we are allowed to\n  // pretend that there is a semicolon at this position.\n\n  semicolon(allowAsi: boolean = true): void {\n    if (allowAsi ? this.isLineTerminator() : this.eat(tt.semi)) return;\n    this.raise(Errors.MissingSemicolon, { at: this.state.lastTokEndLoc });\n  }\n\n  // Expect a token of a given type. If found, consume it, otherwise,\n  // raise an unexpected token error at given pos.\n\n  expect(type: TokenType, loc?: Position | null): void {\n    this.eat(type) || this.unexpected(loc, type);\n  }\n\n  // tryParse will clone parser state.\n  // It is expensive and should be used with cautions\n  tryParse<T extends Node | ReadonlyArray<Node>>(\n    fn: (abort: (node?: T) => never) => T,\n    oldState: State = this.state.clone(),\n  ):\n    | TryParse<T, null, false, false, null>\n    | TryParse<T | null, ParseError<any>, boolean, false, State>\n    | TryParse<T | null, null, false, true, State> {\n    const abortSignal: {\n      node: T | null;\n    } = { node: null };\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        // tokensLength should be preserved during error recovery mode\n        // since the parser does not halt and will instead parse the\n        // remaining tokens\n        this.state.tokensLength = failState.tokensLength;\n        return {\n          node,\n          error: failState.errors[oldState.errors.length],\n          thrown: false,\n          aborted: false,\n          failState,\n        };\n      }\n\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null,\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n      if (error instanceof SyntaxError) {\n        // @ts-expect-error casting general syntax error to parse error\n        return { node: null, error, thrown: true, aborted: false, failState };\n      }\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState,\n        };\n      }\n\n      throw error;\n    }\n  }\n\n  checkExpressionErrors(\n    refExpressionErrors: ExpressionErrors | undefined | null,\n    andThrow: boolean,\n  ) {\n    if (!refExpressionErrors) return false;\n    const {\n      shorthandAssignLoc,\n      doubleProtoLoc,\n      privateKeyLoc,\n      optionalParametersLoc,\n    } = refExpressionErrors;\n\n    const hasErrors =\n      !!shorthandAssignLoc ||\n      !!doubleProtoLoc ||\n      !!optionalParametersLoc ||\n      !!privateKeyLoc;\n\n    if (!andThrow) {\n      return hasErrors;\n    }\n\n    if (shorthandAssignLoc != null) {\n      this.raise(Errors.InvalidCoverInitializedName, {\n        at: shorthandAssignLoc,\n      });\n    }\n\n    if (doubleProtoLoc != null) {\n      this.raise(Errors.DuplicateProto, { at: doubleProtoLoc });\n    }\n\n    if (privateKeyLoc != null) {\n      this.raise(Errors.UnexpectedPrivateField, { at: privateKeyLoc });\n    }\n\n    if (optionalParametersLoc != null) {\n      this.unexpected(optionalParametersLoc);\n    }\n  }\n\n  /**\n   * Test if current token is a literal property name\n   * https://tc39.es/ecma262/#prod-LiteralPropertyName\n   * LiteralPropertyName:\n   *   IdentifierName\n   *   StringLiteral\n   *   NumericLiteral\n   *   BigIntLiteral\n   */\n  isLiteralPropertyName(): boolean {\n    return tokenIsLiteralPropertyName(this.state.type);\n  }\n\n  /**\n   * Test if given node is a PrivateName\n   * will be overridden in ESTree plugin\n   */\n  isPrivateName(node: Node): boolean {\n    return node.type === \"PrivateName\";\n  }\n\n  /**\n   * Return the string value of a given private name\n   * WITHOUT `#`\n   * @see {@link https://tc39.es/ecma262/#sec-static-semantics-stringvalue}\n   */\n  getPrivateNameSV(node: Node): string {\n    return node.id.name;\n  }\n\n  /**\n   * Return whether the given node is a member/optional chain that\n   * contains a private name as its property\n   * It is overridden in ESTree plugin\n   */\n  hasPropertyAsPrivateName(node: Node): boolean {\n    return (\n      (node.type === \"MemberExpression\" ||\n        node.type === \"OptionalMemberExpression\") &&\n      this.isPrivateName(node.property)\n    );\n  }\n\n  isObjectProperty(\n    node: Node,\n  ): node is ObjectProperty | EstreePropertyDefinition {\n    return node.type === \"ObjectProperty\";\n  }\n\n  isObjectMethod(node: Node): boolean {\n    return node.type === \"ObjectMethod\";\n  }\n\n  initializeScopes(\n    this: Parser,\n    inModule: boolean = this.options.sourceType === \"module\",\n  ): () => void {\n    // Initialize state\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n\n    const oldExportedIdentifiers = this.exportedIdentifiers;\n    this.exportedIdentifiers = new Set();\n\n    // initialize scopes\n    const oldInModule = this.inModule;\n    this.inModule = inModule;\n\n    const oldScope = this.scope;\n    const ScopeHandler = this.getScopeHandler();\n    this.scope = new ScopeHandler(this, inModule);\n\n    const oldProdParam = this.prodParam;\n    this.prodParam = new ProductionParameterHandler();\n\n    const oldClassScope = this.classScope;\n    this.classScope = new ClassScopeHandler(this);\n\n    const oldExpressionScope = this.expressionScope;\n    this.expressionScope = new ExpressionScopeHandler(this);\n\n    return () => {\n      // Revert state\n      this.state.labels = oldLabels;\n      this.exportedIdentifiers = oldExportedIdentifiers;\n\n      // Revert scopes\n      this.inModule = oldInModule;\n      this.scope = oldScope;\n      this.prodParam = oldProdParam;\n      this.classScope = oldClassScope;\n      this.expressionScope = oldExpressionScope;\n    };\n  }\n\n  enterInitialScopes() {\n    let paramFlags = PARAM;\n    if (this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n    this.scope.enter(ScopeFlag.PROGRAM);\n    this.prodParam.enter(paramFlags);\n  }\n\n  checkDestructuringPrivate(refExpressionErrors: ExpressionErrors) {\n    const { privateKeyLoc } = refExpressionErrors;\n    if (privateKeyLoc !== null) {\n      this.expectPlugin(\"destructuringPrivate\", privateKeyLoc);\n    }\n  }\n}\n\n/**\n * The ExpressionErrors is a context struct used to track ambiguous patterns\n * When we are sure the parsed pattern is a RHS, which means it is not a pattern,\n * we will throw on this position on invalid assign syntax, otherwise it will be reset to -1\n *\n * Types of ExpressionErrors:\n *\n * - **shorthandAssignLoc**: track initializer `=` position\n * - **doubleProtoLoc**: track the duplicate `__proto__` key position\n * - **privateKey**: track private key `#p` position\n * - **optionalParametersLoc**: track the optional parameter (`?`).\n * It's only used by typescript and flow plugins\n */\nexport class ExpressionErrors {\n  shorthandAssignLoc: Position | undefined | null = null;\n  doubleProtoLoc: Position | undefined | null = null;\n  privateKeyLoc: Position | undefined | null = null;\n  optionalParametersLoc: Position | undefined | null = null;\n}\n","import type Parser from \"./index.ts\";\nimport UtilParser from \"./util.ts\";\nimport { SourceLocation, type Position } from \"../util/location.ts\";\nimport type { Comment, Node as NodeType, NodeBase } from \"../types.ts\";\n\n// Start an AST node, attaching a start offset.\n\nclass Node implements NodeBase {\n  constructor(parser: Parser, pos: number, loc: Position) {\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser?.options.ranges) this.range = [pos, 0];\n    if (parser?.filename) this.loc.filename = parser.filename;\n  }\n\n  type: string = \"\";\n  declare start: number;\n  declare end: number;\n  declare loc: SourceLocation;\n  declare range: [number, number];\n  declare leadingComments: Array<Comment>;\n  declare trailingComments: Array<Comment>;\n  declare innerComments: Array<Comment>;\n  declare extra: {\n    [key: string]: any;\n  };\n}\nconst NodePrototype = Node.prototype;\n\nif (!process.env.BABEL_8_BREAKING) {\n  // @ts-expect-error __clone is not defined in Node prototype\n  NodePrototype.__clone = function (): Node {\n    const newNode = new Node(undefined, this.start, this.loc.start);\n    const keys = Object.keys(this) as (keyof Node)[];\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      // Do not clone comments that are already attached to the node\n      if (\n        key !== \"leadingComments\" &&\n        key !== \"trailingComments\" &&\n        key !== \"innerComments\"\n      ) {\n        // @ts-expect-error cloning this to newNode\n        newNode[key] = this[key];\n      }\n    }\n\n    return newNode;\n  };\n}\n\nfunction clonePlaceholder(node: any): any {\n  return cloneIdentifier(node);\n}\n\nexport function cloneIdentifier(node: any): any {\n  // We don't need to clone `typeAnnotations` and `optional`: because\n  // cloneIdentifier is only used in object shorthand and named import/export.\n  // Neither of them allow type annotations after the identifier or optional identifier\n  const { type, start, end, loc, range, extra, name } = node;\n  const cloned = Object.create(NodePrototype);\n  cloned.type = type;\n  cloned.start = start;\n  cloned.end = end;\n  cloned.loc = loc;\n  cloned.range = range;\n  cloned.extra = extra;\n  cloned.name = name;\n  if (type === \"Placeholder\") {\n    cloned.expectedNode = node.expectedNode;\n  }\n  return cloned;\n}\n\nexport function cloneStringLiteral(node: any): any {\n  const { type, start, end, loc, range, extra } = node;\n  if (type === \"Placeholder\") {\n    return clonePlaceholder(node);\n  }\n  const cloned = Object.create(NodePrototype);\n  cloned.type = type;\n  cloned.start = start;\n  cloned.end = end;\n  cloned.loc = loc;\n  cloned.range = range;\n  if (node.raw !== undefined) {\n    // estree set node.raw instead of node.extra\n    cloned.raw = node.raw;\n  } else {\n    cloned.extra = extra;\n  }\n  cloned.value = node.value;\n  return cloned;\n}\n\nexport type Undone<T extends NodeType> = Omit<T, \"type\">;\n\nexport abstract class NodeUtils extends UtilParser {\n  startNode<T extends NodeType>(): Undone<T> {\n    // @ts-expect-error cast Node as Undone<T>\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n\n  startNodeAt<T extends NodeType>(loc: Position): Undone<T> {\n    // @ts-expect-error cast Node as Undone<T>\n    return new Node(this, loc.index, loc);\n  }\n\n  /** Start a new node with a previous node's location. */\n  startNodeAtNode<T extends NodeType>(type: Undone<NodeType>): Undone<T> {\n    return this.startNodeAt(type.loc.start);\n  }\n\n  // Finish an AST node, adding `type` and `end` properties.\n\n  finishNode<T extends NodeType>(node: Undone<T>, type: T[\"type\"]): T {\n    return this.finishNodeAt(node, type, this.state.lastTokEndLoc);\n  }\n\n  // Finish node at given position\n\n  finishNodeAt<T extends NodeType>(\n    node: Omit<T, \"type\">,\n    type: T[\"type\"],\n    endLoc: Position,\n  ): T {\n    if (process.env.NODE_ENV !== \"production\" && node.end > 0) {\n      throw new Error(\n        \"Do not call finishNode*() twice on the same node.\" +\n          \" Instead use resetEndLocation() or change type directly.\",\n      );\n    }\n    // @ts-expect-error migrate to Babel types AST typings\n    node.type = type;\n    // @ts-expect-error migrate to Babel types AST typings\n    node.end = endLoc.index;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = endLoc.index;\n    if (this.options.attachComment) this.processComment(node as T);\n    return node as T;\n  }\n\n  resetStartLocation(node: NodeBase, startLoc: Position): void {\n    node.start = startLoc.index;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = startLoc.index;\n  }\n\n  resetEndLocation(\n    node: NodeBase,\n    endLoc: Position = this.state.lastTokEndLoc,\n  ): void {\n    node.end = endLoc.index;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = endLoc.index;\n  }\n\n  /**\n   * Reset the start location of node to the start location of locationNode\n   */\n  resetStartLocationFromNode(node: NodeBase, locationNode: NodeBase): void {\n    this.resetStartLocation(node, locationNode.loc.start);\n  }\n}\n","/*:: declare var invariant; */\n\nimport type Parser from \"../../parser/index.ts\";\nimport {\n  tokenIsIdentifier,\n  tokenIsKeyword,\n  tokenIsKeywordOrIdentifier,\n  tokenIsLiteralPropertyName,\n  tokenLabelName,\n  tt,\n  type TokenType,\n  tokenIsFlowInterfaceOrTypeOrOpaque,\n} from \"../../tokenizer/types.ts\";\nimport type * as N from \"../../types.ts\";\nimport type { Position } from \"../../util/location.ts\";\nimport { types as tc } from \"../../tokenizer/context.ts\";\nimport * as charCodes from \"charcodes\";\nimport { isIteratorStart } from \"../../util/identifier.ts\";\nimport FlowScopeHandler from \"./scope.ts\";\nimport {\n  BindingFlag,\n  ScopeFlag,\n  type BindingTypes,\n} from \"../../util/scopeflags.ts\";\nimport type { ExpressionErrors } from \"../../parser/util.ts\";\nimport type { ParseStatementFlag } from \"../../parser/statement.ts\";\nimport { Errors, ParseErrorEnum } from \"../../parse-error.ts\";\nimport { cloneIdentifier, type Undone } from \"../../parser/node.ts\";\n\nconst reservedTypes = new Set([\n  \"_\",\n  \"any\",\n  \"bool\",\n  \"boolean\",\n  \"empty\",\n  \"extends\",\n  \"false\",\n  \"interface\",\n  \"mixed\",\n  \"null\",\n  \"number\",\n  \"static\",\n  \"string\",\n  \"true\",\n  \"typeof\",\n  \"void\",\n]);\n\n/* eslint sort-keys: \"error\" */\n// The Errors key follows https://github.com/facebook/flow/blob/master/src/parser/parse_error.ml unless it does not exist\nconst FlowErrors = ParseErrorEnum`flow`({\n  AmbiguousConditionalArrow:\n    \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  AmbiguousDeclareModuleKind:\n    \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module.\",\n  // TODO: When we get proper string enums in typescript make this ReservedType.\n  // Not really worth it to do the whole $Values dance with reservedTypes set.\n  AssignReservedType: ({ reservedType }: { reservedType: string }) =>\n    `Cannot overwrite reserved type ${reservedType}.`,\n  DeclareClassElement:\n    \"The `declare` modifier can only appear on class fields.\",\n  DeclareClassFieldInitializer:\n    \"Initializers are not allowed in fields with the `declare` modifier.\",\n  DuplicateDeclareModuleExports:\n    \"Duplicate `declare module.exports` statement.\",\n  EnumBooleanMemberNotInitialized: ({\n    memberName,\n    enumName,\n  }: {\n    memberName: string;\n    enumName: string;\n  }) =>\n    `Boolean enum members need to be initialized. Use either \\`${memberName} = true,\\` or \\`${memberName} = false,\\` in enum \\`${enumName}\\`.`,\n  EnumDuplicateMemberName: ({\n    memberName,\n    enumName,\n  }: {\n    memberName: string;\n    enumName: string;\n  }) =>\n    `Enum member names need to be unique, but the name \\`${memberName}\\` has already been used before in enum \\`${enumName}\\`.`,\n  EnumInconsistentMemberValues: ({ enumName }: { enumName: string }) =>\n    `Enum \\`${enumName}\\` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.`,\n  EnumInvalidExplicitType: ({\n    invalidEnumType,\n    enumName,\n  }: {\n    invalidEnumType: string;\n    enumName: string;\n  }) =>\n    `Enum type \\`${invalidEnumType}\\` is not valid. Use one of \\`boolean\\`, \\`number\\`, \\`string\\`, or \\`symbol\\` in enum \\`${enumName}\\`.`,\n  EnumInvalidExplicitTypeUnknownSupplied: ({\n    enumName,\n  }: {\n    enumName: string;\n  }) =>\n    `Supplied enum type is not valid. Use one of \\`boolean\\`, \\`number\\`, \\`string\\`, or \\`symbol\\` in enum \\`${enumName}\\`.`,\n\n  // TODO: When moving to typescript, we should either have each of the\n  // following errors only accept the specific strings they want:\n  //\n  // ...PrimaryType: explicitType: \"string\" | \"number\" | \"boolean\"\n  // ...SymbolType: explicitType: \"symbol\"\n  // ...UnknownType: explicitType: null\n  //\n  // Or, alternatively, merge these three errors together into one\n  // `EnumInvalidMemberInitializer` error that can accept `EnumExplicitType`\n  // without alteration, and then just have its message change based on the\n  // explicitType.\n  EnumInvalidMemberInitializerPrimaryType: ({\n    enumName,\n    memberName,\n    explicitType,\n  }: {\n    enumName: string;\n    memberName: string;\n    explicitType: EnumExplicitType;\n  }) =>\n    `Enum \\`${enumName}\\` has type \\`${explicitType}\\`, so the initializer of \\`${memberName}\\` needs to be a ${explicitType} literal.`,\n  EnumInvalidMemberInitializerSymbolType: ({\n    enumName,\n    memberName,\n  }: {\n    enumName: string;\n    memberName: string;\n    explicitType: EnumExplicitType;\n  }) =>\n    `Symbol enum members cannot be initialized. Use \\`${memberName},\\` in enum \\`${enumName}\\`.`,\n  EnumInvalidMemberInitializerUnknownType: ({\n    enumName,\n    memberName,\n  }: {\n    enumName: string;\n    memberName: string;\n    explicitType: EnumExplicitType;\n  }) =>\n    `The enum member initializer for \\`${memberName}\\` needs to be a literal (either a boolean, number, or string) in enum \\`${enumName}\\`.`,\n  EnumInvalidMemberName: ({\n    enumName,\n    memberName,\n    suggestion,\n  }: {\n    enumName: string;\n    memberName: string;\n    suggestion: string;\n  }) =>\n    `Enum member names cannot start with lowercase 'a' through 'z'. Instead of using \\`${memberName}\\`, consider using \\`${suggestion}\\`, in enum \\`${enumName}\\`.`,\n  EnumNumberMemberNotInitialized: ({\n    enumName,\n    memberName,\n  }: {\n    enumName: string;\n    memberName: string;\n  }) =>\n    `Number enum members need to be initialized, e.g. \\`${memberName} = 1\\` in enum \\`${enumName}\\`.`,\n  EnumStringMemberInconsistentlyInitialized: ({\n    enumName,\n  }: {\n    enumName: string;\n  }) =>\n    `String enum members need to consistently either all use initializers, or use no initializers, in enum \\`${enumName}\\`.`,\n  GetterMayNotHaveThisParam: \"A getter cannot have a `this` parameter.\",\n  ImportReflectionHasImportType:\n    \"An `import module` declaration can not use `type` or `typeof` keyword.\",\n  ImportTypeShorthandOnlyInPureImport:\n    \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements.\",\n  InexactInsideExact:\n    \"Explicit inexact syntax cannot appear inside an explicit exact object type.\",\n  InexactInsideNonObject:\n    \"Explicit inexact syntax cannot appear in class or interface definitions.\",\n  InexactVariance: \"Explicit inexact syntax cannot have variance.\",\n  InvalidNonTypeImportInDeclareModule:\n    \"Imports within a `declare module` body must always be `import type` or `import typeof`.\",\n  MissingTypeParamDefault:\n    \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  NestedDeclareModule:\n    \"`declare module` cannot be used inside another `declare module`.\",\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment.\",\n  PatternIsOptional: {\n    message:\n      \"A binding pattern parameter cannot be optional in an implementation signature.\",\n    // For consistency in TypeScript and Flow error codes\n    ...(!process.env.BABEL_8_BREAKING\n      ? { reasonCode: \"OptionalBindingPattern\" }\n      : {}),\n  },\n  SetterMayNotHaveThisParam: \"A setter cannot have a `this` parameter.\",\n  SpreadVariance: \"Spread properties cannot have variance.\",\n  ThisParamAnnotationRequired:\n    \"A type annotation is required for the `this` parameter.\",\n  ThisParamBannedInConstructor:\n    \"Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.\",\n  ThisParamMayNotBeOptional: \"The `this` parameter cannot be optional.\",\n  ThisParamMustBeFirst:\n    \"The `this` parameter must be the first function parameter.\",\n  ThisParamNoDefault: \"The `this` parameter may not have a default value.\",\n  TypeBeforeInitializer:\n    \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeCastInPattern:\n    \"The type cast expression is expected to be wrapped with parenthesis.\",\n  UnexpectedExplicitInexactInObject:\n    \"Explicit inexact syntax must appear at the end of an inexact object.\",\n  UnexpectedReservedType: ({ reservedType }: { reservedType: string }) =>\n    `Unexpected reserved type ${reservedType}.`,\n  UnexpectedReservedUnderscore:\n    \"`_` is only allowed as a type argument to call or new.\",\n  UnexpectedSpaceBetweenModuloChecks:\n    \"Spaces between `%` and `checks` are not allowed here.\",\n  UnexpectedSpreadType:\n    \"Spread operator cannot appear in class or interface definitions.\",\n  UnexpectedSubtractionOperand:\n    'Unexpected token, expected \"number\" or \"bigint\".',\n  UnexpectedTokenAfterTypeParameter:\n    \"Expected an arrow function after this type parameter declaration.\",\n  UnexpectedTypeParameterBeforeAsyncArrowFunction:\n    \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`.\",\n  UnsupportedDeclareExportKind: ({\n    unsupportedExportKind,\n    suggestion,\n  }: {\n    unsupportedExportKind: string;\n    suggestion: string;\n  }) =>\n    `\\`declare export ${unsupportedExportKind}\\` is not supported. Use \\`${suggestion}\\` instead.`,\n  UnsupportedStatementInDeclareModule:\n    \"Only declares and type imports are allowed inside declare module.\",\n  UnterminatedFlowComment: \"Unterminated flow-comment.\",\n});\n/* eslint-disable sort-keys */\n\nfunction isEsModuleType(bodyElement: N.Node): boolean {\n  return (\n    bodyElement.type === \"DeclareExportAllDeclaration\" ||\n    (bodyElement.type === \"DeclareExportDeclaration\" &&\n      (!bodyElement.declaration ||\n        (bodyElement.declaration.type !== \"TypeAlias\" &&\n          bodyElement.declaration.type !== \"InterfaceDeclaration\")))\n  );\n}\n\nfunction hasTypeImportKind(node: N.Node): boolean {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\",\n};\n\n// Like Array#filter, but returns a tuple [ acceptedElements, discardedElements ]\nfunction partition<T>(\n  list: T[],\n  test: (c: T, b: number, a: T[]) => boolean | undefined | null,\n): [T[], T[]] {\n  const list1: T[] = [];\n  const list2: T[] = [];\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n  return [list1, list2];\n}\n\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\n\n// Flow enums types\ntype EnumExplicitType = null | \"boolean\" | \"number\" | \"string\" | \"symbol\";\n\ntype EnumContext = {\n  enumName: string;\n  explicitType: EnumExplicitType;\n  memberName: string;\n};\n\ntype EnumMemberInit =\n  | {\n      type: \"number\";\n      loc: Position;\n      value: N.Node;\n    }\n  | {\n      type: \"string\";\n      loc: Position;\n      value: N.Node;\n    }\n  | {\n      type: \"boolean\";\n      loc: Position;\n      value: N.Node;\n    }\n  | {\n      type: \"invalid\";\n      loc: Position;\n    }\n  | {\n      type: \"none\";\n      loc: Position;\n    };\n\nexport default (superClass: typeof Parser) =>\n  class FlowParserMixin extends superClass implements Parser {\n    // The value of the @flow/@noflow pragma. Initially undefined, transitions\n    // to \"@flow\" or \"@noflow\" if we see a pragma. Transitions to null if we are\n    // past the initial comment.\n    flowPragma: void | null | \"flow\" | \"noflow\" = undefined;\n\n    getScopeHandler(): {\n      new (...args: any): FlowScopeHandler;\n    } {\n      return FlowScopeHandler;\n    }\n\n    shouldParseTypes(): boolean {\n      return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n    }\n\n    shouldParseEnums(): boolean {\n      return !!this.getPluginOption(\"flow\", \"enums\");\n    }\n\n    finishToken(type: TokenType, val: any): void {\n      if (\n        type !== tt.string &&\n        type !== tt.semi &&\n        type !== tt.interpreterDirective\n      ) {\n        if (this.flowPragma === undefined) {\n          this.flowPragma = null;\n        }\n      }\n      super.finishToken(type, val);\n    }\n\n    addComment(comment: N.Comment): void {\n      if (this.flowPragma === undefined) {\n        // Try to parse a flow pragma.\n        const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n        if (!matches) {\n          // do nothing\n        } else if (matches[1] === \"flow\") {\n          this.flowPragma = \"flow\";\n        } else if (matches[1] === \"noflow\") {\n          this.flowPragma = \"noflow\";\n        } else {\n          throw new Error(\"Unexpected flow pragma\");\n        }\n      }\n      super.addComment(comment);\n    }\n\n    flowParseTypeInitialiser(tok?: TokenType): N.FlowType {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tok || tt.colon);\n\n      const type = this.flowParseType();\n      this.state.inType = oldInType;\n      return type;\n    }\n\n    flowParsePredicate(): N.FlowPredicate {\n      const node = this.startNode();\n      const moduloLoc = this.state.startLoc;\n      this.next(); // eat `%`\n      this.expectContextual(tt._checks);\n      // Force '%' and 'checks' to be adjacent\n      if (this.state.lastTokStart > moduloLoc.index + 1) {\n        this.raise(FlowErrors.UnexpectedSpaceBetweenModuloChecks, {\n          at: moduloLoc,\n        });\n      }\n      if (this.eat(tt.parenL)) {\n        node.value = super.parseExpression();\n        this.expect(tt.parenR);\n        return this.finishNode(node, \"DeclaredPredicate\");\n      } else {\n        return this.finishNode(node, \"InferredPredicate\");\n      }\n    }\n\n    flowParseTypeAndPredicateInitialiser(): [\n      N.FlowType | undefined | null,\n      N.FlowPredicate | undefined | null,\n    ] {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tt.colon);\n      let type = null;\n      let predicate = null;\n      if (this.match(tt.modulo)) {\n        this.state.inType = oldInType;\n        predicate = this.flowParsePredicate();\n      } else {\n        type = this.flowParseType();\n        this.state.inType = oldInType;\n        if (this.match(tt.modulo)) {\n          predicate = this.flowParsePredicate();\n        }\n      }\n      return [type, predicate];\n    }\n\n    flowParseDeclareClass(\n      node: Undone<N.FlowDeclareClass>,\n    ): N.FlowDeclareClass {\n      this.next();\n      this.flowParseInterfaceish(node, /*isClass*/ true);\n      return this.finishNode(node, \"DeclareClass\");\n    }\n\n    flowParseDeclareFunction(\n      node: Undone<N.FlowDeclareFunction>,\n    ): N.FlowDeclareFunction {\n      this.next();\n\n      const id = (node.id = this.parseIdentifier());\n\n      const typeNode = this.startNode();\n      const typeContainer = this.startNode<N.TypeAnnotation>();\n\n      if (this.match(tt.lt)) {\n        typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        typeNode.typeParameters = null;\n      }\n\n      this.expect(tt.parenL);\n      const tmp = this.flowParseFunctionTypeParams();\n      typeNode.params = tmp.params;\n      typeNode.rest = tmp.rest;\n      typeNode.this = tmp._this;\n      this.expect(tt.parenR);\n\n      [typeNode.returnType, node.predicate] =\n        this.flowParseTypeAndPredicateInitialiser();\n\n      typeContainer.typeAnnotation = this.finishNode(\n        typeNode,\n        \"FunctionTypeAnnotation\",\n      );\n\n      id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n\n      this.resetEndLocation(id);\n      this.semicolon();\n\n      this.scope.declareName(\n        node.id.name,\n        BindingFlag.TYPE_FLOW_DECLARE_FN,\n        node.id.loc.start,\n      );\n\n      return this.finishNode(node, \"DeclareFunction\");\n    }\n\n    flowParseDeclare(\n      node: Undone<N.FlowDeclare>,\n      insideModule?: boolean,\n    ): N.FlowDeclare {\n      if (this.match(tt._class)) {\n        return this.flowParseDeclareClass(node);\n      } else if (this.match(tt._function)) {\n        return this.flowParseDeclareFunction(node);\n      } else if (this.match(tt._var)) {\n        return this.flowParseDeclareVariable(node);\n      } else if (this.eatContextual(tt._module)) {\n        if (this.match(tt.dot)) {\n          return this.flowParseDeclareModuleExports(node);\n        } else {\n          if (insideModule) {\n            this.raise(FlowErrors.NestedDeclareModule, {\n              at: this.state.lastTokStartLoc,\n            });\n          }\n          return this.flowParseDeclareModule(node);\n        }\n      } else if (this.isContextual(tt._type)) {\n        return this.flowParseDeclareTypeAlias(node);\n      } else if (this.isContextual(tt._opaque)) {\n        return this.flowParseDeclareOpaqueType(node);\n      } else if (this.isContextual(tt._interface)) {\n        return this.flowParseDeclareInterface(node);\n      } else if (this.match(tt._export)) {\n        return this.flowParseDeclareExportDeclaration(node, insideModule);\n      } else {\n        this.unexpected();\n      }\n    }\n\n    flowParseDeclareVariable(\n      node: Undone<N.FlowDeclareVariable>,\n    ): N.FlowDeclareVariable {\n      this.next();\n      node.id = this.flowParseTypeAnnotatableIdentifier(\n        /*allowPrimitiveOverride*/ true,\n      );\n      this.scope.declareName(\n        node.id.name,\n        BindingFlag.TYPE_VAR,\n        node.id.loc.start,\n      );\n      this.semicolon();\n      return this.finishNode(node, \"DeclareVariable\");\n    }\n\n    flowParseDeclareModule(\n      node: Undone<N.FlowDeclareModule>,\n    ): N.FlowDeclareModule {\n      this.scope.enter(ScopeFlag.OTHER);\n\n      if (this.match(tt.string)) {\n        node.id = super.parseExprAtom();\n      } else {\n        node.id = this.parseIdentifier();\n      }\n\n      const bodyNode = (node.body = this.startNode());\n      // @ts-expect-error refine typings\n      const body = (bodyNode.body = []);\n      this.expect(tt.braceL);\n      while (!this.match(tt.braceR)) {\n        let bodyNode = this.startNode<N.ImportDeclaration>();\n\n        if (this.match(tt._import)) {\n          this.next();\n          if (!this.isContextual(tt._type) && !this.match(tt._typeof)) {\n            this.raise(FlowErrors.InvalidNonTypeImportInDeclareModule, {\n              at: this.state.lastTokStartLoc,\n            });\n          }\n          super.parseImport(bodyNode);\n        } else {\n          this.expectContextual(\n            tt._declare,\n            FlowErrors.UnsupportedStatementInDeclareModule,\n          );\n          // @ts-expect-error refine typings\n          bodyNode = this.flowParseDeclare(bodyNode, true);\n        }\n\n        body.push(bodyNode);\n      }\n\n      this.scope.exit();\n\n      this.expect(tt.braceR);\n\n      this.finishNode(bodyNode, \"BlockStatement\");\n\n      let kind: \"CommonJS\" | \"ES\" | null = null;\n      let hasModuleExport = false;\n      body.forEach(bodyElement => {\n        if (isEsModuleType(bodyElement)) {\n          if (kind === \"CommonJS\") {\n            this.raise(FlowErrors.AmbiguousDeclareModuleKind, {\n              at: bodyElement,\n            });\n          }\n          kind = \"ES\";\n        } else if (bodyElement.type === \"DeclareModuleExports\") {\n          if (hasModuleExport) {\n            this.raise(FlowErrors.DuplicateDeclareModuleExports, {\n              at: bodyElement,\n            });\n          }\n          if (kind === \"ES\") {\n            this.raise(FlowErrors.AmbiguousDeclareModuleKind, {\n              at: bodyElement,\n            });\n          }\n          kind = \"CommonJS\";\n          hasModuleExport = true;\n        }\n      });\n\n      node.kind = kind || \"CommonJS\";\n      return this.finishNode(node, \"DeclareModule\");\n    }\n\n    flowParseDeclareExportDeclaration(\n      node: Undone<N.FlowDeclareExportDeclaration>,\n      insideModule?: boolean | null,\n    ): N.FlowDeclareExportDeclaration {\n      this.expect(tt._export);\n\n      if (this.eat(tt._default)) {\n        if (this.match(tt._function) || this.match(tt._class)) {\n          // declare export default class ...\n          // declare export default function ...\n          node.declaration = this.flowParseDeclare(this.startNode());\n        } else {\n          // declare export default [type];\n          node.declaration = this.flowParseType();\n          this.semicolon();\n        }\n        node.default = true;\n\n        return this.finishNode(node, \"DeclareExportDeclaration\");\n      } else {\n        if (\n          this.match(tt._const) ||\n          this.isLet() ||\n          ((this.isContextual(tt._type) || this.isContextual(tt._interface)) &&\n            !insideModule)\n        ) {\n          const label = this.state.value as\n            | \"const\"\n            | \"let\"\n            | \"type\"\n            | \"interface\";\n          throw this.raise(FlowErrors.UnsupportedDeclareExportKind, {\n            at: this.state.startLoc,\n            unsupportedExportKind: label,\n            suggestion: exportSuggestions[label],\n          });\n        }\n\n        if (\n          this.match(tt._var) || // declare export var ...\n          this.match(tt._function) || // declare export function ...\n          this.match(tt._class) || // declare export class ...\n          this.isContextual(tt._opaque) // declare export opaque ..\n        ) {\n          node.declaration = this.flowParseDeclare(this.startNode());\n          node.default = false;\n\n          return this.finishNode(node, \"DeclareExportDeclaration\");\n        } else if (\n          this.match(tt.star) || // declare export * from ''\n          this.match(tt.braceL) || // declare export {} ...\n          this.isContextual(tt._interface) || // declare export interface ...\n          this.isContextual(tt._type) || // declare export type ...\n          this.isContextual(tt._opaque) // declare export opaque type ...\n        ) {\n          node = this.parseExport(\n            node as Undone<N.ExportNamedDeclaration | N.ExportAllDeclaration>,\n            /* decorators */ null,\n          );\n          if (node.type === \"ExportNamedDeclaration\") {\n            node.type = \"ExportDeclaration\";\n            node.default = false;\n            delete node.exportKind;\n          }\n\n          node.type = \"Declare\" + node.type;\n\n          return node as N.Node;\n        }\n      }\n\n      this.unexpected();\n    }\n\n    flowParseDeclareModuleExports(\n      node: Undone<N.FlowDeclareModuleExports>,\n    ): N.FlowDeclareModuleExports {\n      this.next();\n      this.expectContextual(tt._exports);\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n      this.semicolon();\n\n      return this.finishNode(node, \"DeclareModuleExports\");\n    }\n\n    flowParseDeclareTypeAlias(\n      node: Undone<N.FlowDeclareTypeAlias>,\n    ): N.FlowDeclareTypeAlias {\n      this.next();\n      const finished = this.flowParseTypeAlias(node);\n      // Don't do finishNode as we don't want to process comments twice\n      finished.type = \"DeclareTypeAlias\";\n      return finished;\n    }\n\n    flowParseDeclareOpaqueType(\n      node: Undone<N.FlowDeclareOpaqueType>,\n    ): N.FlowDeclareOpaqueType {\n      this.next();\n      const finished = this.flowParseOpaqueType(node, true);\n      // Don't do finishNode as we don't want to process comments twice\n      finished.type = \"DeclareOpaqueType\";\n      return finished;\n    }\n\n    flowParseDeclareInterface(\n      node: Undone<N.FlowDeclareInterface>,\n    ): N.FlowDeclareInterface {\n      this.next();\n      this.flowParseInterfaceish(node, /* isClass */ false);\n      return this.finishNode(node, \"DeclareInterface\");\n    }\n\n    // Interfaces\n\n    flowParseInterfaceish(node: Undone<N.FlowDeclare>, isClass: boolean): void {\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ !isClass,\n        /* declaration */ true,\n      );\n\n      this.scope.declareName(\n        node.id.name,\n        isClass ? BindingFlag.TYPE_FUNCTION : BindingFlag.TYPE_LEXICAL,\n        node.id.loc.start,\n      );\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.extends = [];\n\n      if (this.eat(tt._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (!isClass && this.eat(tt.comma));\n      }\n\n      if (isClass) {\n        node.implements = [];\n        node.mixins = [];\n\n        if (this.eatContextual(tt._mixins)) {\n          do {\n            node.mixins.push(this.flowParseInterfaceExtends());\n          } while (this.eat(tt.comma));\n        }\n\n        if (this.eatContextual(tt._implements)) {\n          do {\n            node.implements.push(this.flowParseInterfaceExtends());\n          } while (this.eat(tt.comma));\n        }\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: isClass,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: isClass,\n        allowInexact: false,\n      });\n    }\n\n    flowParseInterfaceExtends(): N.FlowInterfaceExtends {\n      const node = this.startNode();\n\n      node.id = this.flowParseQualifiedTypeIdentifier();\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      } else {\n        node.typeParameters = null;\n      }\n\n      return this.finishNode(node, \"InterfaceExtends\");\n    }\n\n    flowParseInterface(node: Undone<N.FlowInterface>): N.FlowInterface {\n      this.flowParseInterfaceish(node, /* isClass */ false);\n      return this.finishNode(node, \"InterfaceDeclaration\");\n    }\n\n    checkNotUnderscore(word: string) {\n      if (word === \"_\") {\n        this.raise(FlowErrors.UnexpectedReservedUnderscore, {\n          at: this.state.startLoc,\n        });\n      }\n    }\n\n    checkReservedType(word: string, startLoc: Position, declaration?: boolean) {\n      if (!reservedTypes.has(word)) return;\n\n      this.raise(\n        declaration\n          ? FlowErrors.AssignReservedType\n          : FlowErrors.UnexpectedReservedType,\n        {\n          at: startLoc,\n          reservedType: word,\n        },\n      );\n    }\n\n    flowParseRestrictedIdentifier(\n      liberal?: boolean,\n      declaration?: boolean,\n    ): N.Identifier {\n      this.checkReservedType(\n        this.state.value,\n        this.state.startLoc,\n        declaration,\n      );\n      return this.parseIdentifier(liberal);\n    }\n\n    // Type aliases\n\n    flowParseTypeAlias(node: Undone<N.FlowTypeAlias>): N.FlowTypeAlias {\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ false,\n        /* declaration */ true,\n      );\n      this.scope.declareName(\n        node.id.name,\n        BindingFlag.TYPE_LEXICAL,\n        node.id.loc.start,\n      );\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.right = this.flowParseTypeInitialiser(tt.eq);\n      this.semicolon();\n\n      return this.finishNode(node, \"TypeAlias\");\n    }\n\n    flowParseOpaqueType(\n      node: Undone<N.FlowOpaqueType>,\n      declare: boolean,\n    ): N.FlowOpaqueType {\n      this.expectContextual(tt._type);\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ true,\n        /* declaration */ true,\n      );\n      this.scope.declareName(\n        node.id.name,\n        BindingFlag.TYPE_LEXICAL,\n        node.id.loc.start,\n      );\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      // Parse the supertype\n      node.supertype = null;\n      if (this.match(tt.colon)) {\n        node.supertype = this.flowParseTypeInitialiser(tt.colon);\n      }\n\n      node.impltype = null;\n      if (!declare) {\n        node.impltype = this.flowParseTypeInitialiser(tt.eq);\n      }\n      this.semicolon();\n\n      return this.finishNode(node, \"OpaqueType\");\n    }\n\n    // Type annotations\n\n    flowParseTypeParameter(requireDefault: boolean = false): N.TypeParameter {\n      const nodeStartLoc = this.state.startLoc;\n\n      const node = this.startNode<N.TypeParameter>();\n\n      const variance = this.flowParseVariance();\n\n      const ident = this.flowParseTypeAnnotatableIdentifier();\n      node.name = ident.name;\n      // @ts-expect-error migrate to Babel types\n      node.variance = variance;\n      // @ts-expect-error migrate to Babel types\n      node.bound = ident.typeAnnotation;\n\n      if (this.match(tt.eq)) {\n        this.eat(tt.eq);\n        // @ts-expect-error migrate to Babel types\n        node.default = this.flowParseType();\n      } else {\n        if (requireDefault) {\n          this.raise(FlowErrors.MissingTypeParamDefault, { at: nodeStartLoc });\n        }\n      }\n\n      return this.finishNode(node, \"TypeParameter\");\n    }\n\n    flowParseTypeParameterDeclaration(): N.TypeParameterDeclaration {\n      const oldInType = this.state.inType;\n      const node = this.startNode<N.TypeParameterDeclaration>();\n      node.params = [];\n\n      this.state.inType = true;\n\n      // istanbul ignore else: this condition is already checked at all call sites\n      if (this.match(tt.lt) || this.match(tt.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      let defaultRequired = false;\n\n      do {\n        const typeParameter = this.flowParseTypeParameter(defaultRequired);\n\n        node.params.push(typeParameter);\n\n        if (typeParameter.default) {\n          defaultRequired = true;\n        }\n\n        if (!this.match(tt.gt)) {\n          this.expect(tt.comma);\n        }\n      } while (!this.match(tt.gt));\n      this.expect(tt.gt);\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterDeclaration\");\n    }\n\n    flowParseTypeParameterInstantiation(): N.TypeParameterInstantiation {\n      const node = this.startNode<N.TypeParameterInstantiation>();\n      const oldInType = this.state.inType;\n      node.params = [];\n\n      this.state.inType = true;\n\n      this.expect(tt.lt);\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = false;\n      while (!this.match(tt.gt)) {\n        node.params.push(this.flowParseType());\n        if (!this.match(tt.gt)) {\n          this.expect(tt.comma);\n        }\n      }\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      this.expect(tt.gt);\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseTypeParameterInstantiationCallOrNew(): N.TypeParameterInstantiation {\n      const node = this.startNode<N.TypeParameterInstantiation>();\n      const oldInType = this.state.inType;\n      node.params = [];\n\n      this.state.inType = true;\n\n      this.expect(tt.lt);\n      while (!this.match(tt.gt)) {\n        node.params.push(this.flowParseTypeOrImplicitInstantiation());\n        if (!this.match(tt.gt)) {\n          this.expect(tt.comma);\n        }\n      }\n      this.expect(tt.gt);\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseInterfaceType(): N.FlowInterfaceType {\n      const node = this.startNode<N.FlowInterfaceType>();\n      this.expectContextual(tt._interface);\n\n      node.extends = [];\n      if (this.eat(tt._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: false,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: false,\n        allowInexact: false,\n      });\n\n      return this.finishNode(node, \"InterfaceTypeAnnotation\");\n    }\n\n    flowParseObjectPropertyKey(): N.Expression {\n      return this.match(tt.num) || this.match(tt.string)\n        ? super.parseExprAtom()\n        : this.parseIdentifier(true);\n    }\n\n    flowParseObjectTypeIndexer(\n      node: Undone<N.FlowObjectTypeIndexer>,\n      isStatic: boolean,\n      variance?: N.FlowVariance | null,\n    ): N.FlowObjectTypeIndexer {\n      node.static = isStatic;\n\n      // Note: bracketL has already been consumed\n      if (this.lookahead().type === tt.colon) {\n        node.id = this.flowParseObjectPropertyKey();\n        node.key = this.flowParseTypeInitialiser();\n      } else {\n        node.id = null;\n        node.key = this.flowParseType();\n      }\n      this.expect(tt.bracketR);\n      node.value = this.flowParseTypeInitialiser();\n      node.variance = variance;\n\n      return this.finishNode(node, \"ObjectTypeIndexer\");\n    }\n\n    flowParseObjectTypeInternalSlot(\n      node: Undone<N.FlowObjectTypeInternalSlot>,\n      isStatic: boolean,\n    ): N.FlowObjectTypeInternalSlot {\n      node.static = isStatic;\n      // Note: both bracketL have already been consumed\n      node.id = this.flowParseObjectPropertyKey();\n      this.expect(tt.bracketR);\n      this.expect(tt.bracketR);\n      if (this.match(tt.lt) || this.match(tt.parenL)) {\n        node.method = true;\n        node.optional = false;\n        node.value = this.flowParseObjectTypeMethodish(\n          this.startNodeAt(node.loc.start),\n        );\n      } else {\n        node.method = false;\n        if (this.eat(tt.question)) {\n          node.optional = true;\n        }\n        node.value = this.flowParseTypeInitialiser();\n      }\n      return this.finishNode(node, \"ObjectTypeInternalSlot\");\n    }\n\n    flowParseObjectTypeMethodish(\n      node: Undone<N.FlowFunctionTypeAnnotation>,\n    ): N.FlowFunctionTypeAnnotation {\n      node.params = [];\n      node.rest = null;\n      node.typeParameters = null;\n      node.this = null;\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      this.expect(tt.parenL);\n      if (this.match(tt._this)) {\n        node.this = this.flowParseFunctionTypeParam(/* first */ true);\n        // match Flow parser behavior\n        node.this.name = null;\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      while (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n        node.params.push(this.flowParseFunctionTypeParam(false));\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n\n      if (this.eat(tt.ellipsis)) {\n        node.rest = this.flowParseFunctionTypeParam(false);\n      }\n      this.expect(tt.parenR);\n      node.returnType = this.flowParseTypeInitialiser();\n\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n\n    flowParseObjectTypeCallProperty(\n      node: Undone<N.FlowObjectTypeCallProperty>,\n      isStatic: boolean,\n    ): N.FlowObjectTypeCallProperty {\n      const valueNode = this.startNode();\n      node.static = isStatic;\n      node.value = this.flowParseObjectTypeMethodish(valueNode);\n      return this.finishNode(node, \"ObjectTypeCallProperty\");\n    }\n\n    flowParseObjectType({\n      allowStatic,\n      allowExact,\n      allowSpread,\n      allowProto,\n      allowInexact,\n    }: {\n      allowStatic: boolean;\n      allowExact: boolean;\n      allowSpread: boolean;\n      allowProto: boolean;\n      allowInexact: boolean;\n    }): N.FlowObjectTypeAnnotation {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n\n      const nodeStart = this.startNode();\n\n      nodeStart.callProperties = [];\n      nodeStart.properties = [];\n      nodeStart.indexers = [];\n      nodeStart.internalSlots = [];\n\n      let endDelim;\n      let exact;\n      let inexact = false;\n      if (allowExact && this.match(tt.braceBarL)) {\n        this.expect(tt.braceBarL);\n        endDelim = tt.braceBarR;\n        exact = true;\n      } else {\n        this.expect(tt.braceL);\n        endDelim = tt.braceR;\n        exact = false;\n      }\n\n      nodeStart.exact = exact;\n\n      while (!this.match(endDelim)) {\n        let isStatic = false;\n        let protoStartLoc: Position | undefined | null = null;\n        let inexactStartLoc: Position | undefined | null = null;\n        const node = this.startNode();\n\n        if (allowProto && this.isContextual(tt._proto)) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type !== tt.colon && lookahead.type !== tt.question) {\n            this.next();\n            protoStartLoc = this.state.startLoc;\n            allowStatic = false;\n          }\n        }\n\n        if (allowStatic && this.isContextual(tt._static)) {\n          const lookahead = this.lookahead();\n\n          // static is a valid identifier name\n          if (lookahead.type !== tt.colon && lookahead.type !== tt.question) {\n            this.next();\n            isStatic = true;\n          }\n        }\n\n        const variance = this.flowParseVariance();\n\n        if (this.eat(tt.bracketL)) {\n          if (protoStartLoc != null) {\n            this.unexpected(protoStartLoc);\n          }\n          if (this.eat(tt.bracketL)) {\n            if (variance) {\n              this.unexpected(variance.loc.start);\n            }\n            nodeStart.internalSlots.push(\n              this.flowParseObjectTypeInternalSlot(node, isStatic),\n            );\n          } else {\n            nodeStart.indexers.push(\n              this.flowParseObjectTypeIndexer(node, isStatic, variance),\n            );\n          }\n        } else if (this.match(tt.parenL) || this.match(tt.lt)) {\n          if (protoStartLoc != null) {\n            this.unexpected(protoStartLoc);\n          }\n          if (variance) {\n            this.unexpected(variance.loc.start);\n          }\n          nodeStart.callProperties.push(\n            this.flowParseObjectTypeCallProperty(node, isStatic),\n          );\n        } else {\n          let kind = \"init\";\n\n          if (this.isContextual(tt._get) || this.isContextual(tt._set)) {\n            const lookahead = this.lookahead();\n            if (tokenIsLiteralPropertyName(lookahead.type)) {\n              kind = this.state.value;\n              this.next();\n            }\n          }\n\n          const propOrInexact = this.flowParseObjectTypeProperty(\n            node,\n            isStatic,\n            protoStartLoc,\n            variance,\n            kind,\n            allowSpread,\n            allowInexact ?? !exact,\n          );\n\n          if (propOrInexact === null) {\n            inexact = true;\n            inexactStartLoc = this.state.lastTokStartLoc;\n          } else {\n            nodeStart.properties.push(propOrInexact);\n          }\n        }\n\n        this.flowObjectTypeSemicolon();\n\n        if (\n          inexactStartLoc &&\n          !this.match(tt.braceR) &&\n          !this.match(tt.braceBarR)\n        ) {\n          this.raise(FlowErrors.UnexpectedExplicitInexactInObject, {\n            at: inexactStartLoc,\n          });\n        }\n      }\n\n      this.expect(endDelim);\n\n      /* The inexact flag should only be added on ObjectTypeAnnotations that\n       * are not the body of an interface, declare interface, or declare class.\n       * Since spreads are only allowed in object types, checking that is\n       * sufficient here.\n       */\n      if (allowSpread) {\n        nodeStart.inexact = inexact;\n      }\n\n      const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n\n      this.state.inType = oldInType;\n\n      return out;\n    }\n\n    flowParseObjectTypeProperty(\n      node: Undone<N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty>,\n      isStatic: boolean,\n      protoStartLoc: Position | undefined | null,\n      variance: N.FlowVariance | undefined | null,\n      kind: string,\n      allowSpread: boolean,\n      allowInexact: boolean,\n    ): N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty | null {\n      if (this.eat(tt.ellipsis)) {\n        const isInexactToken =\n          this.match(tt.comma) ||\n          this.match(tt.semi) ||\n          this.match(tt.braceR) ||\n          this.match(tt.braceBarR);\n\n        if (isInexactToken) {\n          if (!allowSpread) {\n            this.raise(FlowErrors.InexactInsideNonObject, {\n              at: this.state.lastTokStartLoc,\n            });\n          } else if (!allowInexact) {\n            this.raise(FlowErrors.InexactInsideExact, {\n              at: this.state.lastTokStartLoc,\n            });\n          }\n          if (variance) {\n            this.raise(FlowErrors.InexactVariance, { at: variance });\n          }\n\n          return null;\n        }\n\n        if (!allowSpread) {\n          this.raise(FlowErrors.UnexpectedSpreadType, {\n            at: this.state.lastTokStartLoc,\n          });\n        }\n        if (protoStartLoc != null) {\n          this.unexpected(protoStartLoc);\n        }\n        if (variance) {\n          this.raise(FlowErrors.SpreadVariance, { at: variance });\n        }\n\n        node.argument = this.flowParseType();\n        return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n      } else {\n        node.key = this.flowParseObjectPropertyKey();\n        node.static = isStatic;\n        node.proto = protoStartLoc != null;\n        node.kind = kind;\n\n        let optional = false;\n        if (this.match(tt.lt) || this.match(tt.parenL)) {\n          // This is a method property\n          node.method = true;\n\n          if (protoStartLoc != null) {\n            this.unexpected(protoStartLoc);\n          }\n          if (variance) {\n            this.unexpected(variance.loc.start);\n          }\n\n          node.value = this.flowParseObjectTypeMethodish(\n            this.startNodeAt(node.loc.start),\n          );\n          if (kind === \"get\" || kind === \"set\") {\n            this.flowCheckGetterSetterParams(node);\n          }\n          /** Declared classes/interfaces do not allow spread */\n          if (\n            !allowSpread &&\n            node.key.name === \"constructor\" &&\n            node.value.this\n          ) {\n            this.raise(FlowErrors.ThisParamBannedInConstructor, {\n              at: node.value.this,\n            });\n          }\n        } else {\n          if (kind !== \"init\") this.unexpected();\n\n          node.method = false;\n\n          if (this.eat(tt.question)) {\n            optional = true;\n          }\n          node.value = this.flowParseTypeInitialiser();\n          node.variance = variance;\n        }\n\n        node.optional = optional;\n\n        return this.finishNode(node, \"ObjectTypeProperty\");\n      }\n    }\n\n    // This is similar to checkGetterSetterParams, but as\n    // @babel/parser uses non estree properties we cannot reuse it here\n    flowCheckGetterSetterParams(\n      property: Undone<\n        N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty\n      >,\n    ): void {\n      const paramCount = property.kind === \"get\" ? 0 : 1;\n      const length =\n        property.value.params.length + (property.value.rest ? 1 : 0);\n\n      if (property.value.this) {\n        this.raise(\n          property.kind === \"get\"\n            ? FlowErrors.GetterMayNotHaveThisParam\n            : FlowErrors.SetterMayNotHaveThisParam,\n          { at: property.value.this },\n        );\n      }\n\n      if (length !== paramCount) {\n        this.raise(\n          property.kind === \"get\"\n            ? Errors.BadGetterArity\n            : Errors.BadSetterArity,\n          { at: property },\n        );\n      }\n\n      if (property.kind === \"set\" && property.value.rest) {\n        this.raise(Errors.BadSetterRestParameter, { at: property });\n      }\n    }\n\n    flowObjectTypeSemicolon(): void {\n      if (\n        !this.eat(tt.semi) &&\n        !this.eat(tt.comma) &&\n        !this.match(tt.braceR) &&\n        !this.match(tt.braceBarR)\n      ) {\n        this.unexpected();\n      }\n    }\n\n    flowParseQualifiedTypeIdentifier(\n      startLoc?: Position,\n      id?: N.Identifier,\n    ): N.FlowQualifiedTypeIdentifier {\n      startLoc ??= this.state.startLoc;\n      let node: N.Identifier | N.FlowQualifiedTypeIdentifier =\n        id || this.flowParseRestrictedIdentifier(true);\n\n      while (this.eat(tt.dot)) {\n        const node2 = this.startNodeAt<N.FlowQualifiedTypeIdentifier>(startLoc);\n        node2.qualification = node;\n        node2.id = this.flowParseRestrictedIdentifier(true);\n        node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n      }\n\n      return node;\n    }\n\n    flowParseGenericType(\n      startLoc: Position,\n      id: N.Identifier,\n    ): N.FlowGenericTypeAnnotation {\n      const node = this.startNodeAt(startLoc);\n\n      node.typeParameters = null;\n      node.id = this.flowParseQualifiedTypeIdentifier(startLoc, id);\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      }\n\n      return this.finishNode(node, \"GenericTypeAnnotation\");\n    }\n\n    flowParseTypeofType(): N.FlowTypeofTypeAnnotation {\n      const node = this.startNode();\n      this.expect(tt._typeof);\n      node.argument = this.flowParsePrimaryType();\n      return this.finishNode(node, \"TypeofTypeAnnotation\");\n    }\n\n    flowParseTupleType(): N.FlowTupleTypeAnnotation {\n      const node = this.startNode();\n      node.types = [];\n      this.expect(tt.bracketL);\n      // We allow trailing commas\n      while (this.state.pos < this.length && !this.match(tt.bracketR)) {\n        node.types.push(this.flowParseType());\n        if (this.match(tt.bracketR)) break;\n        this.expect(tt.comma);\n      }\n      this.expect(tt.bracketR);\n      return this.finishNode(node, \"TupleTypeAnnotation\");\n    }\n\n    flowParseFunctionTypeParam(first: boolean): N.FlowFunctionTypeParam {\n      let name = null;\n      let optional = false;\n      let typeAnnotation = null;\n      const node = this.startNode<N.FlowFunctionTypeParam>();\n      const lh = this.lookahead();\n      const isThis = this.state.type === tt._this;\n\n      if (lh.type === tt.colon || lh.type === tt.question) {\n        if (isThis && !first) {\n          this.raise(FlowErrors.ThisParamMustBeFirst, { at: node });\n        }\n        name = this.parseIdentifier(isThis);\n        if (this.eat(tt.question)) {\n          optional = true;\n          if (isThis) {\n            this.raise(FlowErrors.ThisParamMayNotBeOptional, { at: node });\n          }\n        }\n        typeAnnotation = this.flowParseTypeInitialiser();\n      } else {\n        typeAnnotation = this.flowParseType();\n      }\n      node.name = name;\n      node.optional = optional;\n      node.typeAnnotation = typeAnnotation;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    reinterpretTypeAsFunctionTypeParam(\n      type: N.FlowType,\n    ): N.FlowFunctionTypeParam {\n      const node = this.startNodeAt(type.loc.start);\n      node.name = null;\n      node.optional = false;\n      node.typeAnnotation = type;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    flowParseFunctionTypeParams(params: N.FlowFunctionTypeParam[] = []): {\n      params: N.FlowFunctionTypeParam[];\n      rest: N.FlowFunctionTypeParam | undefined | null;\n      _this: N.FlowFunctionTypeParam | undefined | null;\n    } {\n      let rest: N.FlowFunctionTypeParam | undefined | null = null;\n      let _this: N.FlowFunctionTypeParam | undefined | null = null;\n      if (this.match(tt._this)) {\n        _this = this.flowParseFunctionTypeParam(/* first */ true);\n        // match Flow parser behavior\n        _this.name = null;\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      while (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n        params.push(this.flowParseFunctionTypeParam(false));\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      if (this.eat(tt.ellipsis)) {\n        rest = this.flowParseFunctionTypeParam(false);\n      }\n      return { params, rest, _this };\n    }\n\n    flowIdentToTypeAnnotation(\n      startLoc: Position,\n      node: Undone<N.FlowTypeAnnotation>,\n      id: N.Identifier,\n    ): N.FlowTypeAnnotation {\n      switch (id.name) {\n        case \"any\":\n          return this.finishNode(node, \"AnyTypeAnnotation\");\n\n        case \"bool\":\n        case \"boolean\":\n          return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n        case \"mixed\":\n          return this.finishNode(node, \"MixedTypeAnnotation\");\n\n        case \"empty\":\n          return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n        case \"number\":\n          return this.finishNode(node, \"NumberTypeAnnotation\");\n\n        case \"string\":\n          return this.finishNode(node, \"StringTypeAnnotation\");\n\n        case \"symbol\":\n          return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n        default:\n          this.checkNotUnderscore(id.name);\n          return this.flowParseGenericType(startLoc, id);\n      }\n    }\n\n    // The parsing of types roughly parallels the parsing of expressions, and\n    // primary types are kind of like primary expressions...they're the\n    // primitives with which other types are constructed.\n    flowParsePrimaryType(): N.FlowTypeAnnotation {\n      const startLoc = this.state.startLoc;\n      const node = this.startNode();\n      let tmp;\n      let type;\n      let isGroupedType = false;\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n      switch (this.state.type) {\n        case tt.braceL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: false,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: true,\n          });\n\n        case tt.braceBarL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: true,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: false,\n          });\n\n        case tt.bracketL:\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseTupleType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n          return type;\n\n        case tt.lt:\n          node.typeParameters = this.flowParseTypeParameterDeclaration();\n          this.expect(tt.parenL);\n          tmp = this.flowParseFunctionTypeParams();\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          node.this = tmp._this;\n          this.expect(tt.parenR);\n\n          this.expect(tt.arrow);\n\n          node.returnType = this.flowParseType();\n\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n        case tt.parenL:\n          this.next();\n\n          // Check to see if this is actually a grouped type\n          if (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n            if (tokenIsIdentifier(this.state.type) || this.match(tt._this)) {\n              const token = this.lookahead().type;\n              isGroupedType = token !== tt.question && token !== tt.colon;\n            } else {\n              isGroupedType = true;\n            }\n          }\n\n          if (isGroupedType) {\n            this.state.noAnonFunctionType = false;\n            type = this.flowParseType();\n            this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n            // A `,` or a `) =>` means this is an anonymous function type\n            if (\n              this.state.noAnonFunctionType ||\n              !(\n                this.match(tt.comma) ||\n                (this.match(tt.parenR) && this.lookahead().type === tt.arrow)\n              )\n            ) {\n              this.expect(tt.parenR);\n              return type;\n            } else {\n              // Eat a comma if there is one\n              this.eat(tt.comma);\n            }\n          }\n\n          if (type) {\n            tmp = this.flowParseFunctionTypeParams([\n              this.reinterpretTypeAsFunctionTypeParam(type),\n            ]);\n          } else {\n            tmp = this.flowParseFunctionTypeParams();\n          }\n\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          node.this = tmp._this;\n\n          this.expect(tt.parenR);\n\n          this.expect(tt.arrow);\n\n          node.returnType = this.flowParseType();\n\n          node.typeParameters = null;\n\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n        case tt.string:\n          return this.parseLiteral<N.StringLiteralTypeAnnotation>(\n            this.state.value,\n            \"StringLiteralTypeAnnotation\",\n          );\n\n        case tt._true:\n        case tt._false:\n          node.value = this.match(tt._true);\n          this.next();\n          return this.finishNode(\n            node as Undone<N.BooleanLiteralTypeAnnotation>,\n            \"BooleanLiteralTypeAnnotation\",\n          );\n\n        case tt.plusMin:\n          if (this.state.value === \"-\") {\n            this.next();\n            if (this.match(tt.num)) {\n              return this.parseLiteralAtNode<N.NumberLiteralTypeAnnotation>(\n                -this.state.value,\n                \"NumberLiteralTypeAnnotation\",\n                node,\n              );\n            }\n\n            if (this.match(tt.bigint)) {\n              return this.parseLiteralAtNode<N.BigIntLiteralTypeAnnotation>(\n                -this.state.value,\n                \"BigIntLiteralTypeAnnotation\",\n                node,\n              );\n            }\n\n            throw this.raise(FlowErrors.UnexpectedSubtractionOperand, {\n              at: this.state.startLoc,\n            });\n          }\n          this.unexpected();\n          return;\n        case tt.num:\n          return this.parseLiteral(\n            this.state.value,\n            \"NumberLiteralTypeAnnotation\",\n          );\n\n        case tt.bigint:\n          return this.parseLiteral(\n            this.state.value,\n            \"BigIntLiteralTypeAnnotation\",\n          );\n\n        case tt._void:\n          this.next();\n          return this.finishNode(node, \"VoidTypeAnnotation\");\n\n        case tt._null:\n          this.next();\n          return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n        case tt._this:\n          this.next();\n          return this.finishNode(node, \"ThisTypeAnnotation\");\n\n        case tt.star:\n          this.next();\n          return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n        case tt._typeof:\n          return this.flowParseTypeofType();\n\n        default:\n          if (tokenIsKeyword(this.state.type)) {\n            const label = tokenLabelName(this.state.type);\n            this.next();\n            return super.createIdentifier(node as Undone<N.Identifier>, label);\n          } else if (tokenIsIdentifier(this.state.type)) {\n            if (this.isContextual(tt._interface)) {\n              return this.flowParseInterfaceType();\n            }\n\n            return this.flowIdentToTypeAnnotation(\n              startLoc,\n              node,\n              this.parseIdentifier(),\n            );\n          }\n      }\n\n      this.unexpected();\n    }\n\n    flowParsePostfixType(): N.FlowTypeAnnotation {\n      const startLoc = this.state.startLoc;\n      let type = this.flowParsePrimaryType();\n      let seenOptionalIndexedAccess = false;\n      while (\n        (this.match(tt.bracketL) || this.match(tt.questionDot)) &&\n        !this.canInsertSemicolon()\n      ) {\n        const node = this.startNodeAt(startLoc);\n        const optional = this.eat(tt.questionDot);\n        seenOptionalIndexedAccess = seenOptionalIndexedAccess || optional;\n        this.expect(tt.bracketL);\n        if (!optional && this.match(tt.bracketR)) {\n          node.elementType = type;\n          this.next(); // eat `]`\n          type = this.finishNode(node, \"ArrayTypeAnnotation\");\n        } else {\n          node.objectType = type;\n          node.indexType = this.flowParseType();\n          this.expect(tt.bracketR);\n          if (seenOptionalIndexedAccess) {\n            node.optional = optional;\n            type = this.finishNode<N.FlowOptionalIndexedAccessType>(\n              // @ts-expect-error todo(flow->ts)\n              node,\n              \"OptionalIndexedAccessType\",\n            );\n          } else {\n            type = this.finishNode<N.FlowIndexedAccessType>(\n              // @ts-expect-error todo(flow->ts)\n              node,\n              \"IndexedAccessType\",\n            );\n          }\n        }\n      }\n      return type;\n    }\n\n    flowParsePrefixType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      if (this.eat(tt.question)) {\n        node.typeAnnotation = this.flowParsePrefixType();\n        return this.finishNode(node, \"NullableTypeAnnotation\");\n      } else {\n        return this.flowParsePostfixType();\n      }\n    }\n\n    flowParseAnonFunctionWithoutParens(): N.FlowTypeAnnotation {\n      const param = this.flowParsePrefixType();\n      if (!this.state.noAnonFunctionType && this.eat(tt.arrow)) {\n        // TODO: This should be a type error. Passing in a SourceLocation, and it expects a Position.\n        const node = this.startNodeAt(param.loc.start);\n        node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n        node.rest = null;\n        node.this = null;\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n      }\n      return param;\n    }\n\n    flowParseIntersectionType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      this.eat(tt.bitwiseAND);\n      const type = this.flowParseAnonFunctionWithoutParens();\n      node.types = [type];\n      while (this.eat(tt.bitwiseAND)) {\n        node.types.push(this.flowParseAnonFunctionWithoutParens());\n      }\n      return node.types.length === 1\n        ? type\n        : this.finishNode(node, \"IntersectionTypeAnnotation\");\n    }\n\n    flowParseUnionType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      this.eat(tt.bitwiseOR);\n      const type = this.flowParseIntersectionType();\n      node.types = [type];\n      while (this.eat(tt.bitwiseOR)) {\n        node.types.push(this.flowParseIntersectionType());\n      }\n      return node.types.length === 1\n        ? type\n        : this.finishNode(node, \"UnionTypeAnnotation\");\n    }\n\n    flowParseType(): N.FlowTypeAnnotation {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      const type = this.flowParseUnionType();\n      this.state.inType = oldInType;\n      return type;\n    }\n\n    flowParseTypeOrImplicitInstantiation(): N.FlowTypeAnnotation {\n      if (this.state.type === tt.name && this.state.value === \"_\") {\n        const startLoc = this.state.startLoc;\n        const node = this.parseIdentifier();\n        return this.flowParseGenericType(startLoc, node);\n      } else {\n        return this.flowParseType();\n      }\n    }\n\n    flowParseTypeAnnotation(): N.FlowTypeAnnotation {\n      const node = this.startNode<N.FlowTypeAnnotation>();\n      node.typeAnnotation = this.flowParseTypeInitialiser();\n      return this.finishNode(node, \"TypeAnnotation\");\n    }\n\n    flowParseTypeAnnotatableIdentifier(\n      allowPrimitiveOverride?: boolean,\n    ): N.Identifier {\n      const ident = allowPrimitiveOverride\n        ? this.parseIdentifier()\n        : this.flowParseRestrictedIdentifier();\n      if (this.match(tt.colon)) {\n        // @ts-expect-error: refine typings\n        ident.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(ident);\n      }\n      return ident;\n    }\n\n    typeCastToParameter(node: N.Node): N.Node {\n      node.expression.typeAnnotation = node.typeAnnotation;\n\n      this.resetEndLocation(node.expression, node.typeAnnotation.loc.end);\n\n      return node.expression;\n    }\n\n    flowParseVariance(): N.FlowVariance | undefined | null {\n      let variance = null;\n      if (this.match(tt.plusMin)) {\n        variance = this.startNode<N.FlowVariance>();\n        if (this.state.value === \"+\") {\n          variance.kind = \"plus\";\n        } else {\n          variance.kind = \"minus\";\n        }\n        this.next();\n        return this.finishNode(variance, \"Variance\");\n      }\n      return variance;\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    parseFunctionBody(\n      node: N.Function,\n      allowExpressionBody?: boolean | null,\n      isMethod: boolean = false,\n    ): void {\n      if (allowExpressionBody) {\n        this.forwardNoArrowParamsConversionAt(node, () =>\n          super.parseFunctionBody(node, true, isMethod),\n        );\n        return;\n      }\n\n      super.parseFunctionBody(node, false, isMethod);\n    }\n\n    parseFunctionBodyAndFinish<\n      T extends\n        | N.Function\n        | N.TSDeclareMethod\n        | N.TSDeclareFunction\n        | N.ClassPrivateMethod,\n    >(node: Undone<T>, type: T[\"type\"], isMethod: boolean = false): T {\n      if (this.match(tt.colon)) {\n        const typeNode = this.startNode<N.TypeAnnotation>();\n\n        [\n          typeNode.typeAnnotation,\n          // @ts-expect-error predicate may not exist\n          node.predicate,\n        ] = this.flowParseTypeAndPredicateInitialiser();\n\n        node.returnType = typeNode.typeAnnotation\n          ? this.finishNode(typeNode, \"TypeAnnotation\")\n          : null;\n      }\n\n      return super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    // interfaces and enums\n    parseStatementLike(flags: ParseStatementFlag): N.Statement {\n      // strict mode handling of `interface` since it's a reserved word\n      if (this.state.strict && this.isContextual(tt._interface)) {\n        const lookahead = this.lookahead();\n        if (tokenIsKeywordOrIdentifier(lookahead.type)) {\n          const node = this.startNode<N.FlowInterface>();\n          this.next();\n          return this.flowParseInterface(node);\n        }\n      } else if (this.shouldParseEnums() && this.isContextual(tt._enum)) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n      const stmt = super.parseStatementLike(flags);\n      // We will parse a flow pragma in any comment before the first statement.\n      if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n        this.flowPragma = null;\n      }\n      return stmt;\n    }\n\n    // declares, interfaces and type aliases\n    parseExpressionStatement(\n      node: N.ExpressionStatement,\n      expr: N.Expression,\n      decorators: N.Decorator[] | null,\n    ): N.ExpressionStatement {\n      if (expr.type === \"Identifier\") {\n        if (expr.name === \"declare\") {\n          if (\n            this.match(tt._class) ||\n            tokenIsIdentifier(this.state.type) ||\n            this.match(tt._function) ||\n            this.match(tt._var) ||\n            this.match(tt._export)\n          ) {\n            // @ts-expect-error: refine typings\n            return this.flowParseDeclare(node);\n          }\n        } else if (tokenIsIdentifier(this.state.type)) {\n          if (expr.name === \"interface\") {\n            // @ts-expect-error: refine typings\n            return this.flowParseInterface(node);\n          } else if (expr.name === \"type\") {\n            // @ts-expect-error: refine typings\n            return this.flowParseTypeAlias(node);\n          } else if (expr.name === \"opaque\") {\n            // @ts-expect-error: refine typings\n            return this.flowParseOpaqueType(node, false);\n          }\n        }\n      }\n\n      return super.parseExpressionStatement(node, expr, decorators);\n    }\n\n    // export type\n    shouldParseExportDeclaration(): boolean {\n      const { type } = this.state;\n      if (\n        tokenIsFlowInterfaceOrTypeOrOpaque(type) ||\n        (this.shouldParseEnums() && type === tt._enum)\n      ) {\n        return !this.state.containsEsc;\n      }\n      return super.shouldParseExportDeclaration();\n    }\n\n    isExportDefaultSpecifier(): boolean {\n      const { type } = this.state;\n      if (\n        tokenIsFlowInterfaceOrTypeOrOpaque(type) ||\n        (this.shouldParseEnums() && type === tt._enum)\n      ) {\n        return this.state.containsEsc;\n      }\n\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseExportDefaultExpression(): N.Expression | N.Declaration {\n      if (this.shouldParseEnums() && this.isContextual(tt._enum)) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n      return super.parseExportDefaultExpression();\n    }\n\n    parseConditional(\n      expr: N.Expression,\n\n      startLoc: Position,\n      refExpressionErrors?: ExpressionErrors | null,\n    ): N.Expression {\n      if (!this.match(tt.question)) return expr;\n\n      if (this.state.maybeInArrowParameters) {\n        const nextCh = this.lookaheadCharCode();\n        // These tokens cannot start an expression, so if one of them follows\n        // ? then we are probably in an arrow function parameters list and we\n        // don't parse the conditional expression.\n        if (\n          nextCh === charCodes.comma || // (a?, b) => c\n          nextCh === charCodes.equalsTo || // (a? = b) => c\n          nextCh === charCodes.colon || // (a?: b) => c\n          nextCh === charCodes.rightParenthesis // (a?) => c\n        ) {\n          /*:: invariant(refExpressionErrors != null) */\n          this.setOptionalParametersError(refExpressionErrors);\n          return expr;\n        }\n      }\n\n      this.expect(tt.question);\n      const state = this.state.clone();\n      const originalNoArrowAt = this.state.noArrowAt;\n      const node = this.startNodeAt(startLoc);\n      let { consequent, failed } = this.tryParseConditionalConsequent();\n      let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n\n      if (failed || invalid.length > 0) {\n        const noArrowAt = [...originalNoArrowAt];\n\n        if (invalid.length > 0) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt;\n\n          for (let i = 0; i < invalid.length; i++) {\n            noArrowAt.push(invalid[i].start);\n          }\n\n          ({ consequent, failed } = this.tryParseConditionalConsequent());\n          [valid, invalid] = this.getArrowLikeExpressions(consequent);\n        }\n\n        if (failed && valid.length > 1) {\n          // if there are two or more possible correct ways of parsing, throw an\n          // error.\n          // e.g.   Source: a ? (b): c => (d): e => f\n          //      Result 1: a ? b : (c => ((d): e => f))\n          //      Result 2: a ? ((b): c => d) : (e => f)\n          this.raise(FlowErrors.AmbiguousConditionalArrow, {\n            at: state.startLoc,\n          });\n        }\n\n        if (failed && valid.length === 1) {\n          this.state = state;\n          noArrowAt.push(valid[0].start);\n          this.state.noArrowAt = noArrowAt;\n          ({ consequent, failed } = this.tryParseConditionalConsequent());\n        }\n      }\n\n      this.getArrowLikeExpressions(consequent, true);\n\n      this.state.noArrowAt = originalNoArrowAt;\n      this.expect(tt.colon);\n\n      node.test = expr;\n      node.consequent = consequent;\n      node.alternate = this.forwardNoArrowParamsConversionAt(node, () =>\n        this.parseMaybeAssign(undefined, undefined),\n      );\n\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    tryParseConditionalConsequent(): {\n      consequent: N.Expression;\n      failed: boolean;\n    } {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n\n      const consequent = this.parseMaybeAssignAllowIn();\n      const failed = !this.match(tt.colon);\n\n      this.state.noArrowParamsConversionAt.pop();\n\n      return { consequent, failed };\n    }\n\n    // Given an expression, walks through out its arrow functions whose body is\n    // an expression and through out conditional expressions. It returns every\n    // function which has been parsed with a return type but could have been\n    // parenthesized expressions.\n    // These functions are separated into two arrays: one containing the ones\n    // whose parameters can be converted to assignable lists, one containing the\n    // others.\n    getArrowLikeExpressions(\n      node: N.Expression,\n      disallowInvalid?: boolean,\n    ): [N.ArrowFunctionExpression[], N.ArrowFunctionExpression[]] {\n      const stack = [node];\n      const arrows: N.ArrowFunctionExpression[] = [];\n\n      while (stack.length !== 0) {\n        const node = stack.pop();\n        if (node.type === \"ArrowFunctionExpression\") {\n          if (node.typeParameters || !node.returnType) {\n            // This is an arrow expression without ambiguity, so check its parameters\n            // @ts-expect-error: refine typings\n            this.finishArrowValidation(node);\n          } else {\n            // @ts-expect-error: refine typings\n            arrows.push(node);\n          }\n          stack.push(node.body);\n        } else if (node.type === \"ConditionalExpression\") {\n          stack.push(node.consequent);\n          stack.push(node.alternate);\n        }\n      }\n\n      if (disallowInvalid) {\n        arrows.forEach(node => this.finishArrowValidation(node));\n        return [arrows, []];\n      }\n\n      return partition(arrows, node =>\n        node.params.every(param => this.isAssignable(param, true)),\n      );\n    }\n\n    finishArrowValidation(node: N.ArrowFunctionExpression) {\n      this.toAssignableList(\n        // node.params is Expression[] instead of $ReadOnlyArray<Pattern> because it\n        // has not been converted yet.\n        node.params as any as N.Expression[],\n        node.extra?.trailingCommaLoc,\n        /* isLHS */ false,\n      );\n      // Enter scope, as checkParams defines bindings\n      this.scope.enter(ScopeFlag.FUNCTION | ScopeFlag.ARROW);\n      // Use super's method to force the parameters to be checked\n      super.checkParams(node, false, true);\n      this.scope.exit();\n    }\n\n    forwardNoArrowParamsConversionAt<T>(\n      node: Undone<N.Node>,\n      parse: () => T,\n    ): T {\n      let result: T;\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        this.state.noArrowParamsConversionAt.push(this.state.start);\n        result = parse();\n        this.state.noArrowParamsConversionAt.pop();\n      } else {\n        result = parse();\n      }\n\n      return result;\n    }\n\n    parseParenItem(\n      node: N.Expression,\n\n      startLoc: Position,\n    ): N.Expression {\n      node = super.parseParenItem(node, startLoc);\n      if (this.eat(tt.question)) {\n        node.optional = true;\n        // Include questionmark in location of node\n        // Don't use this.finishNode() as otherwise we might process comments twice and\n        // include already consumed parens\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(tt.colon)) {\n        const typeCastNode = this.startNodeAt(startLoc);\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n\n        return this.finishNode(typeCastNode, \"TypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    assertModuleNodeAllowed(node: N.Node) {\n      if (\n        (node.type === \"ImportDeclaration\" &&\n          (node.importKind === \"type\" || node.importKind === \"typeof\")) ||\n        (node.type === \"ExportNamedDeclaration\" &&\n          node.exportKind === \"type\") ||\n        (node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\")\n      ) {\n        // Allow Flowtype imports and exports in all conditions because\n        // Flow itself does not care about 'sourceType'.\n        return;\n      }\n\n      super.assertModuleNodeAllowed(node);\n    }\n\n    parseExportDeclaration(\n      node: N.ExportNamedDeclaration,\n    ): N.Declaration | undefined | null {\n      if (this.isContextual(tt._type)) {\n        node.exportKind = \"type\";\n\n        const declarationNode = this.startNode();\n        this.next();\n\n        if (this.match(tt.braceL)) {\n          // export type { foo, bar };\n          node.specifiers = this.parseExportSpecifiers(\n            /* isInTypeExport */ true,\n          );\n          super.parseExportFrom(node);\n          return null;\n        } else {\n          // export type Foo = Bar;\n          // @ts-expect-error: refine typings\n          return this.flowParseTypeAlias(declarationNode);\n        }\n      } else if (this.isContextual(tt._opaque)) {\n        node.exportKind = \"type\";\n\n        const declarationNode = this.startNode();\n        this.next();\n        // export opaque type Foo = Bar;\n        // @ts-expect-error: refine typings\n        return this.flowParseOpaqueType(declarationNode, false);\n      } else if (this.isContextual(tt._interface)) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n        // @ts-expect-error: refine typings\n        return this.flowParseInterface(declarationNode);\n      } else if (this.shouldParseEnums() && this.isContextual(tt._enum)) {\n        node.exportKind = \"value\";\n        const declarationNode = this.startNode();\n        this.next();\n        // @ts-expect-error: refine typings\n        return this.flowParseEnumDeclaration(declarationNode);\n      } else {\n        return super.parseExportDeclaration(node);\n      }\n    }\n\n    eatExportStar(node: N.Node): boolean {\n      if (super.eatExportStar(node)) return true;\n\n      if (this.isContextual(tt._type) && this.lookahead().type === tt.star) {\n        node.exportKind = \"type\";\n        this.next();\n        this.next();\n        return true;\n      }\n\n      return false;\n    }\n\n    maybeParseExportNamespaceSpecifier(node: N.Node): boolean {\n      const { startLoc } = this.state;\n      const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n      if (hasNamespace && node.exportKind === \"type\") {\n        this.unexpected(startLoc);\n      }\n      return hasNamespace;\n    }\n\n    parseClassId(\n      node: N.Class,\n      isStatement: boolean,\n      optionalId?: boolean | null,\n    ) {\n      super.parseClassId(node, isStatement, optionalId);\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n    }\n\n    parseClassMember(\n      classBody: N.ClassBody,\n      member: any,\n      state: N.ParseClassMemberState,\n    ): void {\n      const { startLoc } = this.state;\n      if (this.isContextual(tt._declare)) {\n        if (super.parseClassMemberFromModifier(classBody, member)) {\n          // 'declare' is a class element name\n          return;\n        }\n\n        member.declare = true;\n      }\n\n      super.parseClassMember(classBody, member, state);\n\n      if (member.declare) {\n        if (\n          member.type !== \"ClassProperty\" &&\n          member.type !== \"ClassPrivateProperty\" &&\n          member.type !== \"PropertyDefinition\" // Used by estree plugin\n        ) {\n          this.raise(FlowErrors.DeclareClassElement, { at: startLoc });\n        } else if (member.value) {\n          this.raise(FlowErrors.DeclareClassFieldInitializer, {\n            at: member.value,\n          });\n        }\n      }\n    }\n\n    isIterator(word: string): boolean {\n      return word === \"iterator\" || word === \"asyncIterator\";\n    }\n\n    readIterator(): void {\n      const word = super.readWord1();\n      const fullWord = \"@@\" + word;\n\n      // Allow @@iterator and @@asyncIterator as a identifier only inside type\n      if (!this.isIterator(word) || !this.state.inType) {\n        this.raise(Errors.InvalidIdentifier, {\n          at: this.state.curPosition(),\n          identifierName: fullWord,\n        });\n      }\n\n      this.finishToken(tt.name, fullWord);\n    }\n\n    // ensure that inside flow types, we bypass the jsx parser plugin\n    getTokenFromCode(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (code === charCodes.leftCurlyBrace && next === charCodes.verticalBar) {\n        this.finishOp(tt.braceBarL, 2);\n      } else if (\n        this.state.inType &&\n        (code === charCodes.greaterThan || code === charCodes.lessThan)\n      ) {\n        this.finishOp(code === charCodes.greaterThan ? tt.gt : tt.lt, 1);\n      } else if (this.state.inType && code === charCodes.questionMark) {\n        if (next === charCodes.dot) {\n          this.finishOp(tt.questionDot, 2);\n        } else {\n          // allow double nullable types in Flow: ??string\n          this.finishOp(tt.question, 1);\n        }\n      } else if (\n        isIteratorStart(code, next, this.input.charCodeAt(this.state.pos + 2))\n      ) {\n        this.state.pos += 2; // eat \"@@\"\n        this.readIterator();\n      } else {\n        super.getTokenFromCode(code);\n      }\n    }\n\n    isAssignable(node: N.Node, isBinding?: boolean): boolean {\n      if (node.type === \"TypeCastExpression\") {\n        return this.isAssignable(node.expression, isBinding);\n      } else {\n        return super.isAssignable(node, isBinding);\n      }\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): void {\n      if (\n        !isLHS &&\n        node.type === \"AssignmentExpression\" &&\n        node.left.type === \"TypeCastExpression\"\n      ) {\n        node.left = this.typeCastToParameter(node.left);\n      }\n      super.toAssignable(node, isLHS);\n    }\n\n    // turn type casts that we found in function parameter head into type annotated params\n    toAssignableList(\n      exprList: N.Expression[],\n      trailingCommaLoc: Position | undefined | null,\n      isLHS: boolean,\n    ): void {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (expr?.type === \"TypeCastExpression\") {\n          exprList[i] = this.typeCastToParameter(expr);\n        }\n      }\n      super.toAssignableList(exprList, trailingCommaLoc, isLHS);\n    }\n\n    // this is a list of nodes, from something like a call expression, we need to filter the\n    // type casts that we've found that are illegal in this context\n    toReferencedList(\n      exprList: ReadonlyArray<N.Expression | undefined | null>,\n      isParenthesizedExpr?: boolean,\n    ): ReadonlyArray<N.Expression | undefined | null> {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (\n          expr &&\n          expr.type === \"TypeCastExpression\" &&\n          !expr.extra?.parenthesized &&\n          (exprList.length > 1 || !isParenthesizedExpr)\n        ) {\n          this.raise(FlowErrors.TypeCastInPattern, {\n            at: expr.typeAnnotation,\n          });\n        }\n      }\n\n      return exprList;\n    }\n\n    parseArrayLike(\n      close: TokenType,\n      canBePattern: boolean,\n      isTuple: boolean,\n      refExpressionErrors?: ExpressionErrors | null,\n    ): N.ArrayExpression | N.TupleExpression {\n      const node = super.parseArrayLike(\n        close,\n        canBePattern,\n        isTuple,\n        refExpressionErrors,\n      );\n\n      // This could be an array pattern:\n      //   ([a: string, b: string]) => {}\n      // In this case, we don't have to call toReferencedList. We will\n      // call it, if needed, when we are sure that it is a parenthesized\n      // expression by calling toReferencedListDeep.\n      if (canBePattern && !this.state.maybeInArrowParameters) {\n        this.toReferencedList(node.elements);\n      }\n\n      return node;\n    }\n\n    isValidLVal(type: string, isParenthesized: boolean, binding: BindingTypes) {\n      return (\n        type === \"TypeCastExpression\" ||\n        super.isValidLVal(type, isParenthesized, binding)\n      );\n    }\n\n    // parse class property type annotations\n    parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n      if (this.match(tt.colon)) {\n        // @ts-expect-error refine typings\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(\n      node: N.ClassPrivateProperty,\n    ): N.ClassPrivateProperty {\n      if (this.match(tt.colon)) {\n        // @ts-expect-error refine typings\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      return super.parseClassPrivateProperty(node);\n    }\n\n    // determine whether or not we're currently in the position where a class method would appear\n    isClassMethod(): boolean {\n      return this.match(tt.lt) || super.isClassMethod();\n    }\n\n    // determine whether or not we're currently in the position where a class property would appear\n    isClassProperty(): boolean {\n      return this.match(tt.colon) || super.isClassProperty();\n    }\n\n    isNonstaticConstructor(method: N.ClassMethod | N.ClassProperty): boolean {\n      return !this.match(tt.colon) && super.isNonstaticConstructor(method);\n    }\n\n    // parse type parameters for class methods\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      if ((method as any).variance) {\n        this.unexpected((method as any).variance.loc.start);\n      }\n      delete (method as any).variance;\n      if (this.match(tt.lt)) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassMethod(\n        classBody,\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n      );\n\n      if (method.params && isConstructor) {\n        const params = method.params;\n        if (params.length > 0 && this.isThisParam(params[0])) {\n          this.raise(FlowErrors.ThisParamBannedInConstructor, { at: method });\n        }\n        // estree support\n      } else if (\n        // @ts-expect-error TS does not know about the face that estree can replace ClassMethod with MethodDefinition\n        method.type === \"MethodDefinition\" &&\n        isConstructor &&\n        // @ts-expect-error estree\n        method.value.params\n      ) {\n        // @ts-expect-error estree\n        const params = method.value.params;\n        if (params.length > 0 && this.isThisParam(params[0])) {\n          this.raise(FlowErrors.ThisParamBannedInConstructor, { at: method });\n        }\n      }\n    }\n\n    pushClassPrivateMethod(\n      classBody: N.ClassBody,\n      method: N.ClassPrivateMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n    ): void {\n      if ((method as any).variance) {\n        this.unexpected((method as any).variance.loc.start);\n      }\n      delete (method as any).variance;\n      if (this.match(tt.lt)) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    // parse a the super class type parameters and implements\n    parseClassSuper(node: N.Class): void {\n      super.parseClassSuper(node);\n      if (node.superClass && this.match(tt.lt)) {\n        node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n      }\n      if (this.isContextual(tt._implements)) {\n        this.next();\n        const implemented: N.FlowClassImplements[] = (node.implements = []);\n        do {\n          const node = this.startNode();\n          node.id = this.flowParseRestrictedIdentifier(/*liberal*/ true);\n          if (this.match(tt.lt)) {\n            node.typeParameters = this.flowParseTypeParameterInstantiation();\n          } else {\n            node.typeParameters = null;\n          }\n          implemented.push(this.finishNode(node, \"ClassImplements\"));\n        } while (this.eat(tt.comma));\n      }\n    }\n\n    checkGetterSetterParams(method: N.ObjectMethod | N.ClassMethod): void {\n      super.checkGetterSetterParams(method);\n      const params = this.getObjectOrClassMethodParams(method);\n      if (params.length > 0) {\n        const param = params[0];\n        if (this.isThisParam(param) && method.kind === \"get\") {\n          this.raise(FlowErrors.GetterMayNotHaveThisParam, { at: param });\n        } else if (this.isThisParam(param)) {\n          this.raise(FlowErrors.SetterMayNotHaveThisParam, { at: param });\n        }\n      }\n    }\n\n    parsePropertyNamePrefixOperator(\n      node: N.ObjectOrClassMember | N.ClassMember,\n    ): void {\n      node.variance = this.flowParseVariance();\n    }\n\n    // parse type parameters for object method shorthand\n    parseObjPropValue(\n      prop: Undone<N.ObjectMethod | N.ObjectProperty>,\n      startLoc: Position | undefined | null,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isPattern: boolean,\n      isAccessor: boolean,\n      refExpressionErrors?: ExpressionErrors | null,\n    ): N.ObjectMethod | N.ObjectProperty {\n      if ((prop as any).variance) {\n        this.unexpected((prop as any).variance.loc.start);\n      }\n      delete (prop as any).variance;\n\n      let typeParameters;\n\n      // method shorthand\n      if (this.match(tt.lt) && !isAccessor) {\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        if (!this.match(tt.parenL)) this.unexpected();\n      }\n\n      const result = super.parseObjPropValue(\n        prop,\n        startLoc,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n        refExpressionErrors,\n      );\n\n      // add typeParameters if we found them\n      if (typeParameters) {\n        // @ts-expect-error: refine typings\n        (result.value || result).typeParameters = typeParameters;\n      }\n      return result;\n    }\n\n    parseAssignableListItemTypes(param: N.Pattern): N.Pattern {\n      if (this.eat(tt.question)) {\n        if (param.type !== \"Identifier\") {\n          this.raise(FlowErrors.PatternIsOptional, { at: param });\n        }\n        if (this.isThisParam(param)) {\n          this.raise(FlowErrors.ThisParamMayNotBeOptional, { at: param });\n        }\n\n        (param as any as N.Identifier).optional = true;\n      }\n      if (this.match(tt.colon)) {\n        // @ts-expect-error: refine typings\n        param.typeAnnotation = this.flowParseTypeAnnotation();\n      } else if (this.isThisParam(param)) {\n        this.raise(FlowErrors.ThisParamAnnotationRequired, { at: param });\n      }\n\n      if (this.match(tt.eq) && this.isThisParam(param)) {\n        this.raise(FlowErrors.ThisParamNoDefault, { at: param });\n      }\n\n      this.resetEndLocation(param);\n      return param;\n    }\n\n    parseMaybeDefault(\n      startLoc?: Position | null,\n      left?: N.Pattern | null,\n    ): N.Pattern {\n      const node = super.parseMaybeDefault(startLoc, left);\n\n      if (\n        node.type === \"AssignmentPattern\" &&\n        node.typeAnnotation &&\n        node.right.start < node.typeAnnotation.start\n      ) {\n        this.raise(FlowErrors.TypeBeforeInitializer, {\n          at: node.typeAnnotation,\n        });\n      }\n\n      return node;\n    }\n\n    checkImportReflection(node: Undone<N.ImportDeclaration>) {\n      super.checkImportReflection(node);\n      if (node.module && node.importKind !== \"value\") {\n        this.raise(FlowErrors.ImportReflectionHasImportType, {\n          at: node.specifiers[0].loc.start,\n        });\n      }\n    }\n\n    parseImportSpecifierLocal<\n      T extends\n        | N.ImportSpecifier\n        | N.ImportDefaultSpecifier\n        | N.ImportNamespaceSpecifier,\n    >(node: N.ImportDeclaration, specifier: Undone<T>, type: T[\"type\"]): void {\n      specifier.local = hasTypeImportKind(node)\n        ? this.flowParseRestrictedIdentifier(\n            /* liberal */ true,\n            /* declaration */ true,\n          )\n        : this.parseIdentifier();\n\n      node.specifiers.push(this.finishImportSpecifier(specifier, type));\n    }\n\n    isPotentialImportPhase(isExport: boolean): boolean {\n      if (super.isPotentialImportPhase(isExport)) return true;\n      if (this.isContextual(tt._type)) {\n        if (!isExport) return true;\n        const ch = this.lookaheadCharCode();\n        return ch === charCodes.leftCurlyBrace || ch === charCodes.asterisk;\n      }\n      return !isExport && this.isContextual(tt._typeof);\n    }\n\n    applyImportPhase(\n      node: Undone<N.ImportDeclaration | N.ExportNamedDeclaration>,\n      isExport: boolean,\n      phase: string | null,\n      loc?: Position,\n    ): void {\n      super.applyImportPhase(node, isExport, phase, loc);\n      if (isExport) {\n        if (!phase && this.match(tt._default)) {\n          // TODO: Align with our TS AST and always add .exportKind\n          return;\n        }\n        (node as N.ExportNamedDeclaration).exportKind =\n          phase === \"type\" ? phase : \"value\";\n      } else {\n        if (phase === \"type\" && this.match(tt.star)) this.unexpected();\n        (node as N.ImportDeclaration).importKind =\n          phase === \"type\" || phase === \"typeof\" ? phase : \"value\";\n      }\n    }\n\n    // parse import-type/typeof shorthand\n    parseImportSpecifier(\n      specifier: any,\n      importedIsString: boolean,\n      isInTypeOnlyImport: boolean,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      isMaybeTypeOnly: boolean,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      bindingType: BindingTypes | undefined,\n    ): N.ImportSpecifier {\n      const firstIdent = specifier.imported;\n\n      let specifierTypeKind = null;\n      if (firstIdent.type === \"Identifier\") {\n        if (firstIdent.name === \"type\") {\n          specifierTypeKind = \"type\";\n        } else if (firstIdent.name === \"typeof\") {\n          specifierTypeKind = \"typeof\";\n        }\n      }\n\n      let isBinding = false;\n      if (this.isContextual(tt._as) && !this.isLookaheadContextual(\"as\")) {\n        const as_ident = this.parseIdentifier(true);\n        if (\n          specifierTypeKind !== null &&\n          !tokenIsKeywordOrIdentifier(this.state.type)\n        ) {\n          // `import {type as ,` or `import {type as }`\n          specifier.imported = as_ident;\n          specifier.importKind = specifierTypeKind;\n          specifier.local = cloneIdentifier(as_ident);\n        } else {\n          // `import {type as foo`\n          specifier.imported = firstIdent;\n          specifier.importKind = null;\n          specifier.local = this.parseIdentifier();\n        }\n      } else {\n        if (\n          specifierTypeKind !== null &&\n          tokenIsKeywordOrIdentifier(this.state.type)\n        ) {\n          // `import {type foo`\n          specifier.imported = this.parseIdentifier(true);\n          specifier.importKind = specifierTypeKind;\n        } else {\n          if (importedIsString) {\n            /*:: invariant(firstIdent instanceof N.StringLiteral) */\n            throw this.raise(Errors.ImportBindingIsString, {\n              at: specifier,\n              importName: firstIdent.value,\n            });\n          }\n          /*:: invariant(firstIdent instanceof N.Node) */\n          specifier.imported = firstIdent;\n          specifier.importKind = null;\n        }\n\n        if (this.eatContextual(tt._as)) {\n          specifier.local = this.parseIdentifier();\n        } else {\n          isBinding = true;\n          specifier.local = cloneIdentifier(specifier.imported);\n        }\n      }\n\n      const specifierIsTypeImport = hasTypeImportKind(specifier);\n\n      if (isInTypeOnlyImport && specifierIsTypeImport) {\n        this.raise(FlowErrors.ImportTypeShorthandOnlyInPureImport, {\n          at: specifier,\n        });\n      }\n\n      if (isInTypeOnlyImport || specifierIsTypeImport) {\n        this.checkReservedType(\n          specifier.local.name,\n          specifier.local.loc.start,\n          /* declaration */ true,\n        );\n      }\n\n      if (isBinding && !isInTypeOnlyImport && !specifierIsTypeImport) {\n        this.checkReservedWord(\n          specifier.local.name,\n          specifier.loc.start,\n          true,\n          true,\n        );\n      }\n\n      return this.finishImportSpecifier(specifier, \"ImportSpecifier\");\n    }\n\n    parseBindingAtom(): N.Pattern {\n      switch (this.state.type) {\n        case tt._this:\n          // \"this\" may be the name of a parameter, so allow it.\n          return this.parseIdentifier(/* liberal */ true);\n        default:\n          return super.parseBindingAtom();\n      }\n    }\n\n    // parse function type parameters - function foo<T>() {}\n    parseFunctionParams(\n      node: Undone<N.Function>,\n      isConstructor: boolean,\n    ): void {\n      // @ts-expect-error kind may not index node\n      const kind = node.kind;\n      if (kind !== \"get\" && kind !== \"set\" && this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n      super.parseFunctionParams(node, isConstructor);\n    }\n\n    // parse flow type annotations on variable declarator heads - let foo: string = bar\n    parseVarId(\n      decl: N.VariableDeclarator,\n      kind: \"var\" | \"let\" | \"const\",\n    ): void {\n      super.parseVarId(decl, kind);\n      if (this.match(tt.colon)) {\n        // @ts-expect-error: refine typings\n        decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(decl.id); // set end position to end of type\n      }\n    }\n\n    // parse the return type of an async arrow function - let foo = (async (): number => {});\n    parseAsyncArrowFromCallExpression(\n      node: N.ArrowFunctionExpression,\n      call: N.CallExpression,\n    ): N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        // @ts-expect-error refine typings\n        node.returnType = this.flowParseTypeAnnotation();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      }\n\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    // todo description\n    shouldParseAsyncArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseAsyncArrow();\n    }\n\n    // We need to support type parameter declarations for arrow functions. This\n    // is tricky. There are three situations we need to handle\n    //\n    // 1. This is either JSX or an arrow function. We'll try JSX first. If that\n    //    fails, we'll try an arrow function. If that fails, we'll throw the JSX\n    //    error.\n    // 2. This is an arrow function. We'll parse the type parameter declaration,\n    //    parse the rest, make sure the rest is an arrow function, and go from\n    //    there\n    // 3. This is neither. Just call the super method\n    parseMaybeAssign(\n      refExpressionErrors?: ExpressionErrors | null,\n      afterLeftParse?: Function,\n    ): N.Expression {\n      let state = null;\n\n      let jsx;\n\n      if (\n        this.hasPlugin(\"jsx\") &&\n        (this.match(tt.jsxTagStart) || this.match(tt.lt))\n      ) {\n        state = this.state.clone();\n\n        jsx = this.tryParse(\n          () => super.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n          state,\n        );\n\n        /*:: invariant(!jsx.aborted) */\n        /*:: invariant(jsx.node != null) */\n        if (!jsx.error) return jsx.node;\n\n        // Remove `tc.j_expr` and `tc.j_oTag` from context added\n        // by parsing `jsxTagStart` to stop the JSX plugin from\n        // messing with the tokens\n        const { context } = this.state;\n        const currentContext = context[context.length - 1];\n        if (currentContext === tc.j_oTag || currentContext === tc.j_expr) {\n          context.pop();\n        }\n      }\n\n      if (jsx?.error || this.match(tt.lt)) {\n        state = state || this.state.clone();\n\n        let typeParameters: N.TypeParameterDeclaration;\n\n        const arrow = this.tryParse(abort => {\n          typeParameters = this.flowParseTypeParameterDeclaration();\n\n          const arrowExpression = this.forwardNoArrowParamsConversionAt(\n            typeParameters,\n            () => {\n              const result = super.parseMaybeAssign(\n                refExpressionErrors,\n                afterLeftParse,\n              );\n\n              this.resetStartLocationFromNode(result, typeParameters);\n\n              return result;\n            },\n          );\n\n          // <T>(() => {});\n          // <T>(() => {}: any);\n          if (arrowExpression.extra?.parenthesized) abort();\n\n          // The above can return a TypeCastExpression when the arrow\n          // expression is not wrapped in parens. See also `this.parseParenItem`.\n          // (<T>() => {}: any);\n          const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n\n          if (expr.type !== \"ArrowFunctionExpression\") abort();\n\n          expr.typeParameters = typeParameters;\n          this.resetStartLocationFromNode(expr, typeParameters);\n\n          return arrowExpression;\n        }, state);\n\n        let arrowExpression:\n          | N.ArrowFunctionExpression\n          | N.TypeCastExpression\n          | undefined\n          | null = null;\n\n        if (\n          arrow.node &&\n          // @ts-expect-error: refine tryParse typings\n          this.maybeUnwrapTypeCastExpression(arrow.node).type ===\n            \"ArrowFunctionExpression\"\n        ) {\n          if (!arrow.error && !arrow.aborted) {\n            // <T> async () => {}\n            // @ts-expect-error: refine tryParse typings\n            if (arrow.node.async) {\n              /*:: invariant(typeParameters) */\n              this.raise(\n                FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction,\n                { at: typeParameters },\n              );\n            }\n            // @ts-expect-error: refine tryParse typings\n            return arrow.node;\n          }\n\n          // @ts-expect-error: refine typings\n          arrowExpression = arrow.node;\n        }\n\n        // If we are here, both JSX and Flow parsing attempts failed.\n        // Give the precedence to the JSX error, except if JSX had an\n        // unrecoverable error while Flow didn't.\n        // If the error is recoverable, we can only re-report it if there is\n        // a node we can return.\n\n        if (jsx?.node) {\n          /*:: invariant(jsx.failState) */\n          this.state = jsx.failState;\n          return jsx.node;\n        }\n\n        if (arrowExpression) {\n          /*:: invariant(arrow.failState) */\n          this.state = arrow.failState;\n          return arrowExpression;\n        }\n\n        if (jsx?.thrown) throw jsx.error;\n        if (arrow.thrown) throw arrow.error;\n\n        /*:: invariant(typeParameters) */\n        throw this.raise(FlowErrors.UnexpectedTokenAfterTypeParameter, {\n          at: typeParameters,\n        });\n      }\n\n      return super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n    }\n\n    // handle return types for arrow functions\n    parseArrow(\n      node: Undone<N.ArrowFunctionExpression>,\n    ): Undone<N.ArrowFunctionExpression> | undefined | null {\n      if (this.match(tt.colon)) {\n        // @ts-expect-error todo(flow->ts)\n        const result = this.tryParse(() => {\n          const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n          this.state.noAnonFunctionType = true;\n\n          const typeNode = this.startNode<N.TypeAnnotation>();\n\n          [\n            typeNode.typeAnnotation,\n            // @ts-expect-error (destructuring not supported yet)\n            node.predicate,\n          ] = this.flowParseTypeAndPredicateInitialiser();\n\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n          if (this.canInsertSemicolon()) this.unexpected();\n          if (!this.match(tt.arrow)) this.unexpected();\n\n          return typeNode;\n        });\n\n        if (result.thrown) return null;\n        /*:: invariant(result.node) */\n\n        if (result.error) this.state = result.failState;\n\n        // assign after it is clear it is an arrow\n        // @ts-expect-error todo(flow->ts)\n        node.returnType = result.node.typeAnnotation\n          ? this.finishNode(result.node, \"TypeAnnotation\")\n          : null;\n      }\n\n      return super.parseArrow(node);\n    }\n\n    shouldParseArrow(params: Array<N.Node>): boolean {\n      return this.match(tt.colon) || super.shouldParseArrow(params);\n    }\n\n    setArrowFunctionParameters(\n      node: N.ArrowFunctionExpression,\n      params: N.Pattern[],\n    ): void {\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        node.params = params;\n      } else {\n        super.setArrowFunctionParameters(node, params);\n      }\n    }\n\n    checkParams(\n      node: N.Function,\n      allowDuplicates: boolean,\n      isArrowFunction?: boolean | null,\n      strictModeChanged: boolean = true,\n    ): void {\n      if (\n        isArrowFunction &&\n        this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1\n      ) {\n        return;\n      }\n\n      // ensure the `this` param is first, if it exists\n      for (let i = 0; i < node.params.length; i++) {\n        if (this.isThisParam(node.params[i]) && i > 0) {\n          this.raise(FlowErrors.ThisParamMustBeFirst, { at: node.params[i] });\n        }\n      }\n\n      super.checkParams(\n        node,\n        allowDuplicates,\n        isArrowFunction,\n        strictModeChanged,\n      );\n    }\n\n    parseParenAndDistinguishExpression(canBeArrow: boolean): N.Expression {\n      return super.parseParenAndDistinguishExpression(\n        canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1,\n      );\n    }\n\n    parseSubscripts(\n      base: N.Expression,\n\n      startLoc: Position,\n      noCalls?: boolean | null,\n    ): N.Expression {\n      if (\n        base.type === \"Identifier\" &&\n        base.name === \"async\" &&\n        this.state.noArrowAt.indexOf(startLoc.index) !== -1\n      ) {\n        this.next();\n\n        const node = this.startNodeAt(startLoc);\n        node.callee = base;\n        node.arguments = super.parseCallExpressionArguments(tt.parenR, false);\n        base = this.finishNode(node, \"CallExpression\");\n      } else if (\n        base.type === \"Identifier\" &&\n        base.name === \"async\" &&\n        this.match(tt.lt)\n      ) {\n        const state = this.state.clone();\n        const arrow = this.tryParse(\n          abort => this.parseAsyncArrowWithTypeParameters(startLoc) || abort(),\n          state,\n        );\n\n        /*:: invariant(arrow.node != null) */\n        // @ts-expect-error: refine tryParse typings\n        if (!arrow.error && !arrow.aborted) return arrow.node;\n\n        const result = this.tryParse(\n          () => super.parseSubscripts(base, startLoc, noCalls),\n          state,\n        );\n\n        if (result.node && !result.error) return result.node;\n\n        if (arrow.node) {\n          this.state = arrow.failState;\n          // @ts-expect-error: refine tryParse typings\n          return arrow.node;\n        }\n\n        if (result.node) {\n          this.state = result.failState;\n          return result.node;\n        }\n\n        throw arrow.error || result.error;\n      }\n\n      return super.parseSubscripts(base, startLoc, noCalls);\n    }\n\n    parseSubscript(\n      base: N.Expression,\n\n      startLoc: Position,\n      noCalls: boolean | undefined | null,\n      subscriptState: N.ParseSubscriptState,\n    ): N.Expression {\n      if (this.match(tt.questionDot) && this.isLookaheadToken_lt()) {\n        subscriptState.optionalChainMember = true;\n        if (noCalls) {\n          subscriptState.stop = true;\n          return base;\n        }\n        this.next();\n        const node = this.startNodeAt<N.OptionalCallExpression>(startLoc);\n        node.callee = base;\n        node.typeArguments = this.flowParseTypeParameterInstantiation();\n        this.expect(tt.parenL);\n        node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n        node.optional = true;\n        return this.finishCallExpression(node, /* optional */ true);\n      } else if (!noCalls && this.shouldParseTypes() && this.match(tt.lt)) {\n        const node = this.startNodeAt<\n          N.OptionalCallExpression | N.CallExpression\n        >(startLoc);\n        node.callee = base;\n\n        const result = this.tryParse(() => {\n          node.typeArguments =\n            this.flowParseTypeParameterInstantiationCallOrNew();\n          this.expect(tt.parenL);\n          node.arguments = super.parseCallExpressionArguments(tt.parenR, false);\n          if (subscriptState.optionalChainMember) {\n            (node as Undone<N.OptionalCallExpression>).optional = false;\n          }\n          return this.finishCallExpression(\n            node,\n            subscriptState.optionalChainMember,\n          );\n        });\n\n        if (result.node) {\n          if (result.error) this.state = result.failState;\n          return result.node;\n        }\n      }\n\n      return super.parseSubscript(\n        base,\n\n        startLoc,\n        noCalls,\n        subscriptState,\n      );\n    }\n\n    parseNewCallee(node: N.NewExpression): void {\n      super.parseNewCallee(node);\n\n      let targs = null;\n      if (this.shouldParseTypes() && this.match(tt.lt)) {\n        targs = this.tryParse(() =>\n          this.flowParseTypeParameterInstantiationCallOrNew(),\n        ).node;\n      }\n      node.typeArguments = targs;\n    }\n\n    parseAsyncArrowWithTypeParameters(\n      startLoc: Position,\n    ): N.ArrowFunctionExpression | undefined | null {\n      const node = this.startNodeAt<N.ArrowFunctionExpression>(startLoc);\n      this.parseFunctionParams(node, false);\n      if (!this.parseArrow(node)) return;\n      return super.parseArrowExpression(\n        node,\n        /* params */ undefined,\n        /* isAsync */ true,\n      );\n    }\n\n    readToken_mult_modulo(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (\n        code === charCodes.asterisk &&\n        next === charCodes.slash &&\n        this.state.hasFlowComment\n      ) {\n        this.state.hasFlowComment = false;\n        this.state.pos += 2;\n        this.nextToken();\n        return;\n      }\n\n      super.readToken_mult_modulo(code);\n    }\n\n    readToken_pipe_amp(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (\n        code === charCodes.verticalBar &&\n        next === charCodes.rightCurlyBrace\n      ) {\n        // '|}'\n        this.finishOp(tt.braceBarR, 2);\n        return;\n      }\n\n      super.readToken_pipe_amp(code);\n    }\n\n    parseTopLevel(file: N.File, program: N.Program): N.File {\n      const fileNode = super.parseTopLevel(file, program);\n      if (this.state.hasFlowComment) {\n        this.raise(FlowErrors.UnterminatedFlowComment, {\n          at: this.state.curPosition(),\n        });\n      }\n      return fileNode;\n    }\n\n    skipBlockComment(): N.CommentBlock | undefined {\n      if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n        if (this.state.hasFlowComment) {\n          throw this.raise(FlowErrors.NestedFlowComment, {\n            at: this.state.startLoc,\n          });\n        }\n        this.hasFlowCommentCompletion();\n        const commentSkip = this.skipFlowComment();\n        if (commentSkip) {\n          this.state.pos += commentSkip;\n          this.state.hasFlowComment = true;\n        }\n        return;\n      }\n\n      return super.skipBlockComment(this.state.hasFlowComment ? \"*-/\" : \"*/\");\n    }\n\n    skipFlowComment(): number | false {\n      const { pos } = this.state;\n      let shiftToFirstNonWhiteSpace = 2;\n      while (\n        [charCodes.space, charCodes.tab].includes(\n          // @ts-expect-error testing whether a number is included\n          this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace),\n        )\n      ) {\n        shiftToFirstNonWhiteSpace++;\n      }\n\n      const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n      const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n      if (ch2 === charCodes.colon && ch3 === charCodes.colon) {\n        return shiftToFirstNonWhiteSpace + 2; // check for /*::\n      }\n      if (\n        this.input.slice(\n          shiftToFirstNonWhiteSpace + pos,\n          shiftToFirstNonWhiteSpace + pos + 12,\n        ) === \"flow-include\"\n      ) {\n        return shiftToFirstNonWhiteSpace + 12; // check for /*flow-include\n      }\n      if (ch2 === charCodes.colon && ch3 !== charCodes.colon) {\n        return shiftToFirstNonWhiteSpace; // check for /*:, advance up to :\n      }\n      return false;\n    }\n\n    hasFlowCommentCompletion(): void {\n      const end = this.input.indexOf(\"*/\", this.state.pos);\n      if (end === -1) {\n        throw this.raise(Errors.UnterminatedComment, {\n          at: this.state.curPosition(),\n        });\n      }\n    }\n\n    // Flow enum parsing\n\n    flowEnumErrorBooleanMemberNotInitialized(\n      loc: Position,\n      {\n        enumName,\n        memberName,\n      }: {\n        enumName: string;\n        memberName: string;\n      },\n    ): void {\n      this.raise(FlowErrors.EnumBooleanMemberNotInitialized, {\n        at: loc,\n        memberName,\n        enumName,\n      });\n    }\n\n    flowEnumErrorInvalidMemberInitializer(\n      loc: Position,\n      enumContext: EnumContext,\n    ) {\n      return this.raise(\n        !enumContext.explicitType\n          ? FlowErrors.EnumInvalidMemberInitializerUnknownType\n          : enumContext.explicitType === \"symbol\"\n          ? FlowErrors.EnumInvalidMemberInitializerSymbolType\n          : FlowErrors.EnumInvalidMemberInitializerPrimaryType,\n        {\n          at: loc,\n          ...enumContext,\n        },\n      );\n    }\n\n    flowEnumErrorNumberMemberNotInitialized(\n      loc: Position,\n      {\n        enumName,\n        memberName,\n      }: {\n        enumName: string;\n        memberName: string;\n      },\n    ): void {\n      this.raise(FlowErrors.EnumNumberMemberNotInitialized, {\n        at: loc,\n        enumName,\n        memberName,\n      });\n    }\n\n    flowEnumErrorStringMemberInconsistentlyInitialized(\n      node: N.Node,\n      {\n        enumName,\n      }: {\n        enumName: string;\n      },\n    ): void {\n      this.raise(FlowErrors.EnumStringMemberInconsistentlyInitialized, {\n        at: node,\n        enumName,\n      });\n    }\n\n    flowEnumMemberInit(): EnumMemberInit {\n      const startLoc = this.state.startLoc;\n      const endOfInit = () => this.match(tt.comma) || this.match(tt.braceR);\n      switch (this.state.type) {\n        case tt.num: {\n          const literal = this.parseNumericLiteral(this.state.value);\n          if (endOfInit()) {\n            return { type: \"number\", loc: literal.loc.start, value: literal };\n          }\n          return { type: \"invalid\", loc: startLoc };\n        }\n        case tt.string: {\n          const literal = this.parseStringLiteral(this.state.value);\n          if (endOfInit()) {\n            return { type: \"string\", loc: literal.loc.start, value: literal };\n          }\n          return { type: \"invalid\", loc: startLoc };\n        }\n        case tt._true:\n        case tt._false: {\n          const literal = this.parseBooleanLiteral(this.match(tt._true));\n          if (endOfInit()) {\n            return {\n              type: \"boolean\",\n              loc: literal.loc.start,\n              value: literal,\n            };\n          }\n          return { type: \"invalid\", loc: startLoc };\n        }\n        default:\n          return { type: \"invalid\", loc: startLoc };\n      }\n    }\n\n    flowEnumMemberRaw(): {\n      id: N.Node;\n      init: EnumMemberInit;\n    } {\n      const loc = this.state.startLoc;\n      const id = this.parseIdentifier(true);\n      const init = this.eat(tt.eq)\n        ? this.flowEnumMemberInit()\n        : { type: \"none\" as const, loc };\n      return { id, init };\n    }\n\n    flowEnumCheckExplicitTypeMismatch(\n      loc: Position,\n      context: EnumContext,\n      expectedType: EnumExplicitType,\n    ): void {\n      const { explicitType } = context;\n      if (explicitType === null) {\n        return;\n      }\n      if (explicitType !== expectedType) {\n        this.flowEnumErrorInvalidMemberInitializer(loc, context);\n      }\n    }\n\n    flowEnumMembers({\n      enumName,\n      explicitType,\n    }: {\n      enumName: string;\n      explicitType: EnumExplicitType;\n    }): {\n      members: {\n        booleanMembers: Array<N.Node>;\n        numberMembers: Array<N.Node>;\n        stringMembers: Array<N.Node>;\n        defaultedMembers: Array<N.Node>;\n      };\n      hasUnknownMembers: boolean;\n    } {\n      const seenNames = new Set();\n      const members = {\n        // @ts-expect-error: migrate to Babel types\n        booleanMembers: [],\n        // @ts-expect-error: migrate to Babel types\n        numberMembers: [],\n        // @ts-expect-error: migrate to Babel types\n        stringMembers: [],\n        // @ts-expect-error: migrate to Babel types\n        defaultedMembers: [],\n      };\n      let hasUnknownMembers = false;\n      while (!this.match(tt.braceR)) {\n        if (this.eat(tt.ellipsis)) {\n          hasUnknownMembers = true;\n          break;\n        }\n        const memberNode = this.startNode();\n        const { id, init } = this.flowEnumMemberRaw();\n        const memberName = id.name;\n        if (memberName === \"\") {\n          continue;\n        }\n        if (/^[a-z]/.test(memberName)) {\n          this.raise(FlowErrors.EnumInvalidMemberName, {\n            at: id,\n            memberName,\n            suggestion: memberName[0].toUpperCase() + memberName.slice(1),\n            enumName,\n          });\n        }\n        if (seenNames.has(memberName)) {\n          this.raise(FlowErrors.EnumDuplicateMemberName, {\n            at: id,\n            memberName,\n            enumName,\n          });\n        }\n        seenNames.add(memberName);\n        const context = { enumName, explicitType, memberName };\n        memberNode.id = id;\n        switch (init.type) {\n          case \"boolean\": {\n            this.flowEnumCheckExplicitTypeMismatch(\n              init.loc,\n              context,\n              \"boolean\",\n            );\n            memberNode.init = init.value;\n            members.booleanMembers.push(\n              this.finishNode(memberNode, \"EnumBooleanMember\"),\n            );\n            break;\n          }\n          case \"number\": {\n            this.flowEnumCheckExplicitTypeMismatch(init.loc, context, \"number\");\n            memberNode.init = init.value;\n            members.numberMembers.push(\n              this.finishNode(memberNode, \"EnumNumberMember\"),\n            );\n            break;\n          }\n          case \"string\": {\n            this.flowEnumCheckExplicitTypeMismatch(init.loc, context, \"string\");\n            memberNode.init = init.value;\n            members.stringMembers.push(\n              this.finishNode(memberNode, \"EnumStringMember\"),\n            );\n            break;\n          }\n          case \"invalid\": {\n            throw this.flowEnumErrorInvalidMemberInitializer(init.loc, context);\n          }\n          case \"none\": {\n            switch (explicitType) {\n              case \"boolean\":\n                this.flowEnumErrorBooleanMemberNotInitialized(\n                  init.loc,\n                  context,\n                );\n                break;\n              case \"number\":\n                this.flowEnumErrorNumberMemberNotInitialized(init.loc, context);\n                break;\n              default:\n                members.defaultedMembers.push(\n                  this.finishNode(memberNode, \"EnumDefaultedMember\"),\n                );\n            }\n          }\n        }\n\n        if (!this.match(tt.braceR)) {\n          this.expect(tt.comma);\n        }\n      }\n      return { members, hasUnknownMembers };\n    }\n\n    flowEnumStringMembers(\n      initializedMembers: Array<N.Node>,\n      defaultedMembers: Array<N.Node>,\n      {\n        enumName,\n      }: {\n        enumName: string;\n      },\n    ): Array<N.Node> {\n      if (initializedMembers.length === 0) {\n        return defaultedMembers;\n      } else if (defaultedMembers.length === 0) {\n        return initializedMembers;\n      } else if (defaultedMembers.length > initializedMembers.length) {\n        for (const member of initializedMembers) {\n          this.flowEnumErrorStringMemberInconsistentlyInitialized(member, {\n            enumName,\n          });\n        }\n        return defaultedMembers;\n      } else {\n        for (const member of defaultedMembers) {\n          this.flowEnumErrorStringMemberInconsistentlyInitialized(member, {\n            enumName,\n          });\n        }\n        return initializedMembers;\n      }\n    }\n\n    flowEnumParseExplicitType({\n      enumName,\n    }: {\n      enumName: string;\n    }): EnumExplicitType {\n      if (!this.eatContextual(tt._of)) return null;\n\n      if (!tokenIsIdentifier(this.state.type)) {\n        throw this.raise(FlowErrors.EnumInvalidExplicitTypeUnknownSupplied, {\n          at: this.state.startLoc,\n          enumName,\n        });\n      }\n\n      const { value } = this.state;\n      this.next();\n\n      if (\n        value !== \"boolean\" &&\n        value !== \"number\" &&\n        value !== \"string\" &&\n        value !== \"symbol\"\n      ) {\n        this.raise(FlowErrors.EnumInvalidExplicitType, {\n          at: this.state.startLoc,\n          enumName,\n          invalidEnumType: value,\n        });\n      }\n\n      return value;\n    }\n\n    flowEnumBody(node: Undone<N.Node>, id: N.Node): N.Node {\n      const enumName = id.name;\n      const nameLoc = id.loc.start;\n      const explicitType = this.flowEnumParseExplicitType({ enumName });\n      this.expect(tt.braceL);\n      const { members, hasUnknownMembers } = this.flowEnumMembers({\n        enumName,\n        explicitType,\n      });\n      node.hasUnknownMembers = hasUnknownMembers;\n\n      switch (explicitType) {\n        case \"boolean\":\n          node.explicitType = true;\n          node.members = members.booleanMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumBooleanBody\");\n        case \"number\":\n          node.explicitType = true;\n          node.members = members.numberMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumNumberBody\");\n        case \"string\":\n          node.explicitType = true;\n          node.members = this.flowEnumStringMembers(\n            members.stringMembers,\n            members.defaultedMembers,\n            { enumName },\n          );\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumStringBody\");\n        case \"symbol\":\n          node.members = members.defaultedMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumSymbolBody\");\n        default: {\n          // `explicitType` is `null`\n          const empty = () => {\n            node.members = [];\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          };\n          node.explicitType = false;\n\n          const boolsLen = members.booleanMembers.length;\n          const numsLen = members.numberMembers.length;\n          const strsLen = members.stringMembers.length;\n          const defaultedLen = members.defaultedMembers.length;\n\n          if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n            return empty();\n          } else if (!boolsLen && !numsLen) {\n            node.members = this.flowEnumStringMembers(\n              members.stringMembers,\n              members.defaultedMembers,\n              { enumName },\n            );\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorBooleanMemberNotInitialized(member.loc.start, {\n                enumName,\n                memberName: member.id.name,\n              });\n            }\n            node.members = members.booleanMembers;\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumBooleanBody\");\n          } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorNumberMemberNotInitialized(member.loc.start, {\n                enumName,\n                memberName: member.id.name,\n              });\n            }\n            node.members = members.numberMembers;\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumNumberBody\");\n          } else {\n            this.raise(FlowErrors.EnumInconsistentMemberValues, {\n              at: nameLoc,\n              enumName,\n            });\n            return empty();\n          }\n        }\n      }\n    }\n\n    flowParseEnumDeclaration(node: Undone<N.Node>): N.Node {\n      const id = this.parseIdentifier();\n      node.id = id;\n      node.body = this.flowEnumBody(this.startNode(), id);\n      return this.finishNode(node, \"EnumDeclaration\");\n    }\n\n    // check if the next token is a tt.lt\n    isLookaheadToken_lt(): boolean {\n      const next = this.nextTokenStart();\n      if (this.input.charCodeAt(next) === charCodes.lessThan) {\n        const afterNext = this.input.charCodeAt(next + 1);\n        return (\n          afterNext !== charCodes.lessThan && afterNext !== charCodes.equalsTo\n        );\n      }\n      return false;\n    }\n\n    maybeUnwrapTypeCastExpression(node: N.Node) {\n      return node.type === \"TypeCastExpression\" ? node.expression : node;\n    }\n  };\n","const entities: {\n  __proto__: null;\n  [name: string]: string;\n} = {\n  __proto__: null,\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\",\n} as const;\nexport default entities;\n","import * as charCodes from \"charcodes\";\n\nimport XHTMLEntities from \"./xhtml.ts\";\nimport type Parser from \"../../parser/index.ts\";\nimport type { ExpressionErrors } from \"../../parser/util.ts\";\nimport {\n  tokenComesBeforeExpression,\n  tokenIsKeyword,\n  tokenLabelName,\n  type TokenType,\n  tt,\n} from \"../../tokenizer/types.ts\";\nimport type { TokContext } from \"../../tokenizer/context.ts\";\nimport { types as tc } from \"../../tokenizer/context.ts\";\nimport type * as N from \"../../types.ts\";\nimport { isIdentifierChar, isIdentifierStart } from \"../../util/identifier.ts\";\nimport type { Position } from \"../../util/location.ts\";\nimport { isNewLine } from \"../../util/whitespace.ts\";\nimport { Errors, ParseErrorEnum } from \"../../parse-error.ts\";\nimport type { Undone } from \"../../parser/node.ts\";\n\n/* eslint sort-keys: \"error\" */\nconst JsxErrors = ParseErrorEnum`jsx`({\n  AttributeIsEmpty:\n    \"JSX attributes must only be assigned a non-empty expression.\",\n  MissingClosingTagElement: ({ openingTagName }: { openingTagName: string }) =>\n    `Expected corresponding JSX closing tag for <${openingTagName}>.`,\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>.\",\n  UnexpectedSequenceExpression:\n    \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\n  // FIXME: Unify with Errors.UnexpectedToken\n  UnexpectedToken: ({\n    unexpected,\n    HTMLEntity,\n  }: {\n    unexpected: string;\n    HTMLEntity: string;\n  }) =>\n    `Unexpected token \\`${unexpected}\\`. Did you mean \\`${HTMLEntity}\\` or \\`{'${unexpected}'}\\`?`,\n  UnsupportedJsxValue:\n    \"JSX value should be either an expression or a quoted JSX text.\",\n  UnterminatedJsxContent: \"Unterminated JSX contents.\",\n  UnwrappedAdjacentJSXElements:\n    \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\",\n});\n\n/* eslint-disable sort-keys */\n\nfunction isFragment(object?: N.JSXElement | null): boolean {\n  return object\n    ? object.type === \"JSXOpeningFragment\" ||\n        object.type === \"JSXClosingFragment\"\n    : false;\n}\n\n// Transforms JSX element name to string.\n\nfunction getQualifiedJSXName(\n  object: N.JSXIdentifier | N.JSXNamespacedName | N.JSXMemberExpression,\n): string {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return (\n      getQualifiedJSXName(object.object) +\n      \".\" +\n      getQualifiedJSXName(object.property)\n    );\n  }\n\n  // istanbul ignore next\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nexport interface IJSXParserMixin {\n  jsxParseOpeningElementAfterName(\n    node: N.JSXOpeningElement,\n  ): N.JSXOpeningElement;\n}\n\nexport default (superClass: typeof Parser) =>\n  class JSXParserMixin extends superClass implements Parser, IJSXParserMixin {\n    // Reads inline JSX contents token.\n\n    jsxReadToken(): void {\n      let out = \"\";\n      let chunkStart = this.state.pos;\n      for (;;) {\n        if (this.state.pos >= this.length) {\n          throw this.raise(JsxErrors.UnterminatedJsxContent, {\n            at: this.state.startLoc,\n          });\n        }\n\n        const ch = this.input.charCodeAt(this.state.pos);\n\n        switch (ch) {\n          case charCodes.lessThan:\n          case charCodes.leftCurlyBrace:\n            if (this.state.pos === this.state.start) {\n              if (ch === charCodes.lessThan && this.state.canStartJSXElement) {\n                ++this.state.pos;\n                this.finishToken(tt.jsxTagStart);\n              } else {\n                super.getTokenFromCode(ch);\n              }\n              return;\n            }\n            out += this.input.slice(chunkStart, this.state.pos);\n            this.finishToken(tt.jsxText, out);\n            return;\n\n          case charCodes.ampersand:\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadEntity();\n            chunkStart = this.state.pos;\n            break;\n\n          case charCodes.greaterThan:\n          case charCodes.rightCurlyBrace:\n            if (process.env.BABEL_8_BREAKING) {\n              this.raise(JsxErrors.UnexpectedToken, {\n                at: this.state.curPosition(),\n                unexpected: this.input[this.state.pos],\n                HTMLEntity:\n                  ch === charCodes.rightCurlyBrace ? \"&rbrace;\" : \"&gt;\",\n              });\n            }\n          /* falls through */\n\n          default:\n            if (isNewLine(ch)) {\n              out += this.input.slice(chunkStart, this.state.pos);\n              out += this.jsxReadNewLine(true);\n              chunkStart = this.state.pos;\n            } else {\n              ++this.state.pos;\n            }\n        }\n      }\n    }\n\n    jsxReadNewLine(normalizeCRLF: boolean): string {\n      const ch = this.input.charCodeAt(this.state.pos);\n      let out;\n      ++this.state.pos;\n      if (\n        ch === charCodes.carriageReturn &&\n        this.input.charCodeAt(this.state.pos) === charCodes.lineFeed\n      ) {\n        ++this.state.pos;\n        out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n      } else {\n        out = String.fromCharCode(ch);\n      }\n      ++this.state.curLine;\n      this.state.lineStart = this.state.pos;\n\n      return out;\n    }\n\n    jsxReadString(quote: number): void {\n      let out = \"\";\n      let chunkStart = ++this.state.pos;\n      for (;;) {\n        if (this.state.pos >= this.length) {\n          throw this.raise(Errors.UnterminatedString, {\n            at: this.state.startLoc,\n          });\n        }\n\n        const ch = this.input.charCodeAt(this.state.pos);\n        if (ch === quote) break;\n        if (ch === charCodes.ampersand) {\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n        } else if (isNewLine(ch)) {\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadNewLine(false);\n          chunkStart = this.state.pos;\n        } else {\n          ++this.state.pos;\n        }\n      }\n      out += this.input.slice(chunkStart, this.state.pos++);\n      this.finishToken(tt.string, out);\n    }\n\n    jsxReadEntity(): string {\n      const startPos = ++this.state.pos;\n      if (this.codePointAtPos(this.state.pos) === charCodes.numberSign) {\n        ++this.state.pos;\n\n        let radix = 10;\n        if (this.codePointAtPos(this.state.pos) === charCodes.lowercaseX) {\n          radix = 16;\n          ++this.state.pos;\n        }\n\n        const codePoint = this.readInt(\n          radix,\n          /* len */ undefined,\n          /* forceLen */ false,\n          /* allowNumSeparator */ \"bail\",\n        );\n        if (\n          codePoint !== null &&\n          this.codePointAtPos(this.state.pos) === charCodes.semicolon\n        ) {\n          ++this.state.pos;\n          return String.fromCodePoint(codePoint);\n        }\n      } else {\n        let count = 0;\n        let semi = false;\n        while (\n          count++ < 10 &&\n          this.state.pos < this.length &&\n          !(semi = this.codePointAtPos(this.state.pos) == charCodes.semicolon)\n        ) {\n          ++this.state.pos;\n        }\n\n        if (semi) {\n          const desc = this.input.slice(startPos, this.state.pos);\n          const entity = XHTMLEntities[desc];\n          ++this.state.pos;\n\n          if (entity) {\n            return entity;\n          }\n        }\n      }\n\n      // Not a valid entity\n      this.state.pos = startPos;\n      return \"&\";\n    }\n\n    // Read a JSX identifier (valid tag or attribute name).\n    //\n    // Optimized version since JSX identifiers can\"t contain\n    // escape characters and so can be read as single slice.\n    // Also assumes that first character was already checked\n    // by isIdentifierStart in readToken.\n\n    jsxReadWord(): void {\n      let ch;\n      const start = this.state.pos;\n      do {\n        ch = this.input.charCodeAt(++this.state.pos);\n      } while (isIdentifierChar(ch) || ch === charCodes.dash);\n      this.finishToken(tt.jsxName, this.input.slice(start, this.state.pos));\n    }\n\n    // Parse next token as JSX identifier\n\n    jsxParseIdentifier(): N.JSXIdentifier {\n      const node = this.startNode();\n      if (this.match(tt.jsxName)) {\n        node.name = this.state.value;\n      } else if (tokenIsKeyword(this.state.type)) {\n        node.name = tokenLabelName(this.state.type);\n      } else {\n        this.unexpected();\n      }\n      this.next();\n      return this.finishNode(node, \"JSXIdentifier\");\n    }\n\n    // Parse namespaced identifier.\n\n    jsxParseNamespacedName(): N.JSXNamespacedName {\n      const startLoc = this.state.startLoc;\n      const name = this.jsxParseIdentifier();\n      if (!this.eat(tt.colon)) return name;\n\n      const node = this.startNodeAt(startLoc);\n      node.namespace = name;\n      node.name = this.jsxParseIdentifier();\n      return this.finishNode(node, \"JSXNamespacedName\");\n    }\n\n    // Parses element name in any form - namespaced, member\n    // or single identifier.\n\n    jsxParseElementName():\n      | N.JSXIdentifier\n      | N.JSXNamespacedName\n      | N.JSXMemberExpression {\n      const startLoc = this.state.startLoc;\n      let node = this.jsxParseNamespacedName();\n      if (node.type === \"JSXNamespacedName\") {\n        return node;\n      }\n      while (this.eat(tt.dot)) {\n        const newNode = this.startNodeAt(startLoc);\n        newNode.object = node;\n        newNode.property = this.jsxParseIdentifier();\n        node = this.finishNode(newNode, \"JSXMemberExpression\");\n      }\n      return node;\n    }\n\n    // Parses any type of JSX attribute value.\n\n    jsxParseAttributeValue(): N.Expression {\n      let node;\n      switch (this.state.type) {\n        case tt.braceL:\n          node = this.startNode();\n          this.setContext(tc.brace);\n          this.next();\n          node = this.jsxParseExpressionContainer(node, tc.j_oTag);\n          if (node.expression.type === \"JSXEmptyExpression\") {\n            this.raise(JsxErrors.AttributeIsEmpty, { at: node });\n          }\n          return node;\n\n        case tt.jsxTagStart:\n        case tt.string:\n          return this.parseExprAtom();\n\n        default:\n          throw this.raise(JsxErrors.UnsupportedJsxValue, {\n            at: this.state.startLoc,\n          });\n      }\n    }\n\n    // JSXEmptyExpression is unique type since it doesn't actually parse anything,\n    // and so it should start at the end of last read token (left brace) and finish\n    // at the beginning of the next one (right brace).\n\n    jsxParseEmptyExpression(): N.JSXEmptyExpression {\n      const node = this.startNodeAt(this.state.lastTokEndLoc);\n      return this.finishNodeAt(node, \"JSXEmptyExpression\", this.state.startLoc);\n    }\n\n    // Parse JSX spread child\n\n    jsxParseSpreadChild(node: Undone<N.JSXSpreadChild>): N.JSXSpreadChild {\n      this.next(); // ellipsis\n      node.expression = this.parseExpression();\n      this.setContext(tc.j_expr);\n      this.state.canStartJSXElement = true;\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"JSXSpreadChild\");\n    }\n\n    // Parses JSX expression enclosed into curly brackets.\n\n    jsxParseExpressionContainer(\n      node: Undone<N.JSXExpressionContainer>,\n      previousContext: TokContext,\n    ): N.JSXExpressionContainer {\n      if (this.match(tt.braceR)) {\n        node.expression = this.jsxParseEmptyExpression();\n      } else {\n        const expression = this.parseExpression();\n\n        if (process.env.BABEL_8_BREAKING) {\n          if (\n            expression.type === \"SequenceExpression\" &&\n            !expression.extra?.parenthesized\n          ) {\n            this.raise(JsxErrors.UnexpectedSequenceExpression, {\n              at: expression.expressions[1],\n            });\n          }\n        }\n\n        node.expression = expression;\n      }\n      this.setContext(previousContext);\n      this.state.canStartJSXElement = true;\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"JSXExpressionContainer\");\n    }\n\n    // Parses following JSX attribute name-value pair.\n\n    jsxParseAttribute(): N.JSXAttribute {\n      const node = this.startNode();\n      if (this.match(tt.braceL)) {\n        this.setContext(tc.brace);\n        this.next();\n        this.expect(tt.ellipsis);\n        node.argument = this.parseMaybeAssignAllowIn();\n        this.setContext(tc.j_oTag);\n        this.state.canStartJSXElement = true;\n        this.expect(tt.braceR);\n        return this.finishNode(node, \"JSXSpreadAttribute\");\n      }\n      node.name = this.jsxParseNamespacedName();\n      node.value = this.eat(tt.eq) ? this.jsxParseAttributeValue() : null;\n      return this.finishNode(node, \"JSXAttribute\");\n    }\n\n    // Parses JSX opening tag starting after \"<\".\n\n    jsxParseOpeningElementAt(startLoc: Position): N.JSXOpeningElement {\n      const node = this.startNodeAt<N.JSXOpeningElement | N.JSXOpeningFragment>(\n        startLoc,\n      );\n      if (this.eat(tt.jsxTagEnd)) {\n        // @ts-expect-error migrate to Babel types\n        return this.finishNode(node, \"JSXOpeningFragment\");\n      }\n      node.name = this.jsxParseElementName();\n      return this.jsxParseOpeningElementAfterName(\n        node as Undone<N.JSXOpeningElement>,\n      );\n    }\n\n    jsxParseOpeningElementAfterName(\n      node: Undone<N.JSXOpeningElement>,\n    ): N.JSXOpeningElement {\n      const attributes: N.JSXAttribute[] = [];\n      while (!this.match(tt.slash) && !this.match(tt.jsxTagEnd)) {\n        attributes.push(this.jsxParseAttribute());\n      }\n      node.attributes = attributes;\n      node.selfClosing = this.eat(tt.slash);\n      this.expect(tt.jsxTagEnd);\n      return this.finishNode(node, \"JSXOpeningElement\");\n    }\n\n    // Parses JSX closing tag starting after \"</\".\n\n    jsxParseClosingElementAt(startLoc: Position): N.JSXClosingElement {\n      const node = this.startNodeAt(startLoc);\n      if (this.eat(tt.jsxTagEnd)) {\n        return this.finishNode(node, \"JSXClosingFragment\");\n      }\n      node.name = this.jsxParseElementName();\n      this.expect(tt.jsxTagEnd);\n      return this.finishNode(node, \"JSXClosingElement\");\n    }\n\n    // Parses entire JSX element, including it\"s opening tag\n    // (starting after \"<\"), attributes, contents and closing tag.\n\n    jsxParseElementAt(startLoc: Position): N.JSXElement {\n      const node = this.startNodeAt(startLoc);\n      const children = [];\n      const openingElement = this.jsxParseOpeningElementAt(startLoc);\n      let closingElement = null;\n\n      if (!openingElement.selfClosing) {\n        contents: for (;;) {\n          switch (this.state.type) {\n            case tt.jsxTagStart:\n              startLoc = this.state.startLoc;\n              this.next();\n              if (this.eat(tt.slash)) {\n                closingElement = this.jsxParseClosingElementAt(startLoc);\n                break contents;\n              }\n              children.push(this.jsxParseElementAt(startLoc));\n              break;\n\n            case tt.jsxText:\n              children.push(this.parseExprAtom());\n              break;\n\n            case tt.braceL: {\n              const node = this.startNode<\n                N.JSXSpreadChild | N.JSXExpressionContainer\n              >();\n              this.setContext(tc.brace);\n              this.next();\n              if (this.match(tt.ellipsis)) {\n                children.push(this.jsxParseSpreadChild(node));\n              } else {\n                children.push(\n                  this.jsxParseExpressionContainer(node, tc.j_expr),\n                );\n              }\n\n              break;\n            }\n            // istanbul ignore next - should never happen\n            default:\n              this.unexpected();\n          }\n        }\n\n        if (\n          isFragment(openingElement) &&\n          !isFragment(closingElement) &&\n          closingElement !== null\n        ) {\n          this.raise(JsxErrors.MissingClosingTagFragment, {\n            at: closingElement,\n          });\n        } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n          this.raise(JsxErrors.MissingClosingTagElement, {\n            at: closingElement,\n            openingTagName: getQualifiedJSXName(openingElement.name),\n          });\n        } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n          if (\n            getQualifiedJSXName(closingElement.name) !==\n            getQualifiedJSXName(openingElement.name)\n          ) {\n            this.raise(JsxErrors.MissingClosingTagElement, {\n              at: closingElement,\n              openingTagName: getQualifiedJSXName(openingElement.name),\n            });\n          }\n        }\n      }\n\n      if (isFragment(openingElement)) {\n        node.openingFragment = openingElement;\n        node.closingFragment = closingElement;\n      } else {\n        node.openingElement = openingElement;\n        node.closingElement = closingElement;\n      }\n      node.children = children;\n      if (this.match(tt.lt)) {\n        throw this.raise(JsxErrors.UnwrappedAdjacentJSXElements, {\n          at: this.state.startLoc,\n        });\n      }\n\n      return isFragment(openingElement)\n        ? this.finishNode(node, \"JSXFragment\")\n        : this.finishNode(node, \"JSXElement\");\n    }\n\n    // Parses entire JSX element from current position.\n\n    jsxParseElement(): N.JSXElement {\n      const startLoc = this.state.startLoc;\n      this.next();\n      return this.jsxParseElementAt(startLoc);\n    }\n\n    setContext(newContext: TokContext) {\n      const { context } = this.state;\n      context[context.length - 1] = newContext;\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    parseExprAtom(refExpressionErrors?: ExpressionErrors | null): N.Expression {\n      if (this.match(tt.jsxText)) {\n        return this.parseLiteral(this.state.value, \"JSXText\");\n      } else if (this.match(tt.jsxTagStart)) {\n        return this.jsxParseElement();\n      } else if (\n        this.match(tt.lt) &&\n        this.input.charCodeAt(this.state.pos) !== charCodes.exclamationMark\n      ) {\n        // In case we encounter an lt token here it will always be the start of\n        // jsx as the lt sign is not allowed in places that expect an expression\n        this.replaceToken(tt.jsxTagStart);\n        return this.jsxParseElement();\n      } else {\n        return super.parseExprAtom(refExpressionErrors);\n      }\n    }\n\n    skipSpace() {\n      const curContext = this.curContext();\n      if (!curContext.preserveSpace) super.skipSpace();\n    }\n\n    getTokenFromCode(code: number): void {\n      const context = this.curContext();\n\n      if (context === tc.j_expr) {\n        this.jsxReadToken();\n        return;\n      }\n\n      if (context === tc.j_oTag || context === tc.j_cTag) {\n        if (isIdentifierStart(code)) {\n          this.jsxReadWord();\n          return;\n        }\n\n        if (code === charCodes.greaterThan) {\n          ++this.state.pos;\n          this.finishToken(tt.jsxTagEnd);\n          return;\n        }\n\n        if (\n          (code === charCodes.quotationMark || code === charCodes.apostrophe) &&\n          context === tc.j_oTag\n        ) {\n          this.jsxReadString(code);\n          return;\n        }\n      }\n\n      if (\n        code === charCodes.lessThan &&\n        this.state.canStartJSXElement &&\n        this.input.charCodeAt(this.state.pos + 1) !== charCodes.exclamationMark\n      ) {\n        ++this.state.pos;\n        this.finishToken(tt.jsxTagStart);\n        return;\n      }\n\n      super.getTokenFromCode(code);\n    }\n\n    updateContext(prevType: TokenType): void {\n      const { context, type } = this.state;\n      if (type === tt.slash && prevType === tt.jsxTagStart) {\n        // do not consider JSX expr -> JSX open tag -> ... anymore\n        // reconsider as closing tag context\n        context.splice(-2, 2, tc.j_cTag);\n        this.state.canStartJSXElement = false;\n      } else if (type === tt.jsxTagStart) {\n        // start opening tag context\n        context.push(tc.j_oTag);\n      } else if (type === tt.jsxTagEnd) {\n        const out = context[context.length - 1];\n        if ((out === tc.j_oTag && prevType === tt.slash) || out === tc.j_cTag) {\n          context.pop();\n          this.state.canStartJSXElement =\n            context[context.length - 1] === tc.j_expr;\n        } else {\n          this.setContext(tc.j_expr);\n          this.state.canStartJSXElement = true;\n        }\n      } else {\n        this.state.canStartJSXElement = tokenComesBeforeExpression(type);\n      }\n    }\n  };\n","import type { Position } from \"../../util/location.ts\";\nimport ScopeHandler, { Scope } from \"../../util/scope.ts\";\nimport {\n  BindingFlag,\n  ScopeFlag,\n  type BindingTypes,\n} from \"../../util/scopeflags.ts\";\nimport type * as N from \"../../types.ts\";\nimport { Errors } from \"../../parse-error.ts\";\n\nclass TypeScriptScope extends Scope {\n  types: Set<string> = new Set();\n\n  // enums (which are also in .types)\n  enums: Set<string> = new Set();\n\n  // const enums (which are also in .enums and .types)\n  constEnums: Set<string> = new Set();\n\n  // classes (which are also in .lexical) and interface (which are also in .types)\n  classes: Set<string> = new Set();\n\n  // namespaces and ambient functions (or classes) are too difficult to track,\n  // especially without type analysis.\n  // We need to track them anyway, to avoid \"X is not defined\" errors\n  // when exporting them.\n  exportOnlyBindings: Set<string> = new Set();\n}\n\n// See https://github.com/babel/babel/pull/9766#discussion_r268920730 for an\n// explanation of how typescript handles scope.\n\nexport default class TypeScriptScopeHandler extends ScopeHandler<TypeScriptScope> {\n  importsStack: Set<string>[] = [];\n\n  createScope(flags: ScopeFlag): TypeScriptScope {\n    this.importsStack.push(new Set()); // Always keep the top-level scope for export checks.\n\n    return new TypeScriptScope(flags);\n  }\n\n  enter(flags: ScopeFlag): void {\n    if (flags == ScopeFlag.TS_MODULE) {\n      this.importsStack.push(new Set());\n    }\n\n    super.enter(flags);\n  }\n\n  exit() {\n    const flags = super.exit();\n\n    if (flags == ScopeFlag.TS_MODULE) {\n      this.importsStack.pop();\n    }\n\n    return flags;\n  }\n\n  hasImport(name: string, allowShadow?: boolean) {\n    const len = this.importsStack.length;\n    if (this.importsStack[len - 1].has(name)) {\n      return true;\n    }\n    if (!allowShadow && len > 1) {\n      for (let i = 0; i < len - 1; i++) {\n        if (this.importsStack[i].has(name)) return true;\n      }\n    }\n    return false;\n  }\n\n  declareName(name: string, bindingType: BindingTypes, loc: Position) {\n    if (bindingType & BindingFlag.FLAG_TS_IMPORT) {\n      if (this.hasImport(name, true)) {\n        this.parser.raise(Errors.VarRedeclaration, {\n          at: loc,\n          identifierName: name,\n        });\n      }\n      this.importsStack[this.importsStack.length - 1].add(name);\n      return;\n    }\n\n    const scope = this.currentScope();\n    if (bindingType & BindingFlag.FLAG_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.add(name);\n      return;\n    }\n\n    super.declareName(name, bindingType, loc);\n\n    if (bindingType & BindingFlag.KIND_TYPE) {\n      if (!(bindingType & BindingFlag.KIND_VALUE)) {\n        // \"Value\" bindings have already been registered by the superclass.\n        this.checkRedeclarationInScope(scope, name, bindingType, loc);\n        this.maybeExportDefined(scope, name);\n      }\n      scope.types.add(name);\n    }\n    if (bindingType & BindingFlag.FLAG_TS_ENUM) scope.enums.add(name);\n    if (bindingType & BindingFlag.FLAG_TS_CONST_ENUM) {\n      scope.constEnums.add(name);\n    }\n    if (bindingType & BindingFlag.FLAG_CLASS) scope.classes.add(name);\n  }\n\n  isRedeclaredInScope(\n    scope: TypeScriptScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (scope.enums.has(name)) {\n      if (bindingType & BindingFlag.FLAG_TS_ENUM) {\n        // Enums can be merged with other enums if they are both\n        //  const or both non-const.\n        const isConst = !!(bindingType & BindingFlag.FLAG_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.has(name);\n        return isConst !== wasConst;\n      }\n      return true;\n    }\n    if (bindingType & BindingFlag.FLAG_CLASS && scope.classes.has(name)) {\n      if (scope.lexical.has(name)) {\n        // Classes can be merged with interfaces\n        return !!(bindingType & BindingFlag.KIND_VALUE);\n      } else {\n        // Interface can be merged with other classes or interfaces\n        return false;\n      }\n    }\n    if (bindingType & BindingFlag.KIND_TYPE && scope.types.has(name)) {\n      return true;\n    }\n\n    return super.isRedeclaredInScope(scope, name, bindingType);\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    const { name } = id;\n\n    if (this.hasImport(name)) return;\n\n    const len = this.scopeStack.length;\n    for (let i = len - 1; i >= 0; i--) {\n      const scope = this.scopeStack[i];\n      if (scope.types.has(name) || scope.exportOnlyBindings.has(name)) return;\n    }\n\n    super.checkLocalExport(id);\n  }\n}\n","import * as charCodes from \"charcodes\";\nimport { tt, type TokenType } from \"../tokenizer/types.ts\";\nimport type {\n  AssignmentPattern,\n  TSParameterProperty,\n  Decorator,\n  Expression,\n  Identifier,\n  Node,\n  Pattern,\n  RestElement,\n  SpreadElement,\n  ObjectOrClassMember,\n  ClassMember,\n  ObjectMember,\n  TsNamedTypeElementBase,\n  PrivateName,\n  ObjectExpression,\n  ObjectPattern,\n  ArrayExpression,\n  ArrayPattern,\n} from \"../types.ts\";\nimport type { Pos, Position } from \"../util/location.ts\";\nimport {\n  isStrictBindOnlyReservedWord,\n  isStrictBindReservedWord,\n} from \"../util/identifier.ts\";\nimport { NodeUtils, type Undone } from \"./node.ts\";\nimport { type BindingTypes, BindingFlag } from \"../util/scopeflags.ts\";\nimport type { ExpressionErrors } from \"./util.ts\";\nimport { Errors, type LValAncestor } from \"../parse-error.ts\";\nimport type Parser from \"./index.ts\";\n\nconst getOwn = <T extends {}>(object: T, key: keyof T) =>\n  Object.hasOwnProperty.call(object, key) && object[key];\n\nconst unwrapParenthesizedExpression = (node: Node): Node => {\n  return node.type === \"ParenthesizedExpression\"\n    ? unwrapParenthesizedExpression(node.expression)\n    : node;\n};\n\nexport const enum ParseBindingListFlags {\n  ALLOW_EMPTY = 1 << 0,\n  IS_FUNCTION_PARAMS = 1 << 1,\n  IS_CONSTRUCTOR_PARAMS = 1 << 2,\n}\n\nexport default abstract class LValParser extends NodeUtils {\n  // Forward-declaration: defined in expression.js\n  abstract parseIdentifier(liberal?: boolean): Identifier;\n  abstract parseMaybeAssign(\n    refExpressionErrors?: ExpressionErrors | null,\n    afterLeftParse?: Function,\n    refNeedsArrowPos?: Pos | null,\n  ): Expression;\n\n  abstract parseMaybeAssignAllowIn(\n    refExpressionErrors?: ExpressionErrors | null,\n    afterLeftParse?: Function,\n    refNeedsArrowPos?: Pos | null,\n  ): Expression;\n\n  abstract parseObjectLike<T extends ObjectPattern | ObjectExpression>(\n    close: TokenType,\n    isPattern: boolean,\n    isRecord?: boolean,\n    refExpressionErrors?: ExpressionErrors,\n  ): T;\n  abstract parseObjPropValue(\n    prop: any,\n    startLoc: Position | null,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    isAccessor: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): void;\n  abstract parsePropertyName(\n    prop: ObjectOrClassMember | ClassMember | TsNamedTypeElementBase,\n  ): Expression | Identifier;\n  abstract parsePrivateName(): PrivateName;\n  // Forward-declaration: defined in statement.js\n  abstract parseDecorator(): Decorator;\n\n  /**\n   * Convert existing expression atom to assignable pattern\n   * if possible. Also checks invalid destructuring targets:\n   *\n   * - Parenthesized Destructuring patterns\n   * - RestElement is not the last element\n   * - Missing `=` in assignment pattern\n   *\n   * NOTE: There is a corresponding \"isAssignable\" method.\n   * When this one is updated, please check if also that one needs to be updated.\n   *\n   * @param node The expression atom\n   * @param isLHS Whether we are parsing a LeftHandSideExpression.\n   *              If isLHS is `true`, the following cases are allowed: `[(a)] = [0]`, `[(a.b)] = [0]`\n   *              If isLHS is `false`, we are in an arrow function parameters list.\n   */\n  toAssignable(node: Node, isLHS: boolean = false): void {\n    let parenthesized = undefined;\n    if (node.type === \"ParenthesizedExpression\" || node.extra?.parenthesized) {\n      parenthesized = unwrapParenthesizedExpression(node);\n      if (isLHS) {\n        // an LHS can be reinterpreted to a binding pattern but not vice versa.\n        // therefore a parenthesized identifier is ambiguous until we are sure it is an assignment expression\n        // i.e. `([(a) = []] = []) => {}`\n        // see also `recordArrowParameterBindingError` signature in packages/babel-parser/src/util/expression-scope.js\n        if (parenthesized.type === \"Identifier\") {\n          this.expressionScope.recordArrowParameterBindingError(\n            Errors.InvalidParenthesizedAssignment,\n            { at: node },\n          );\n        } else if (\n          parenthesized.type !== \"MemberExpression\" &&\n          !this.isOptionalMemberExpression(parenthesized)\n        ) {\n          // A parenthesized member expression can be in LHS but not in pattern.\n          // If the LHS is later interpreted as a pattern, `checkLVal` will throw for member expression binding\n          // i.e. `([(a.b) = []] = []) => {}`\n          this.raise(Errors.InvalidParenthesizedAssignment, { at: node });\n        }\n      } else {\n        this.raise(Errors.InvalidParenthesizedAssignment, { at: node });\n      }\n    }\n\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n        for (\n          let i = 0, length = node.properties.length, last = length - 1;\n          i < length;\n          i++\n        ) {\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n\n          if (\n            isLast &&\n            prop.type === \"RestElement\" &&\n            node.extra?.trailingCommaLoc\n          ) {\n            this.raise(Errors.RestTrailingComma, {\n              at: node.extra.trailingCommaLoc,\n            });\n          }\n        }\n        break;\n\n      case \"ObjectProperty\": {\n        const { key, value } = node;\n        if (this.isPrivateName(key)) {\n          this.classScope.usePrivateName(\n            this.getPrivateNameSV(key),\n            key.loc.start,\n          );\n        }\n        this.toAssignable(value, isLHS);\n        break;\n      }\n\n      case \"SpreadElement\": {\n        throw new Error(\n          \"Internal @babel/parser error (this is a bug, please report it).\" +\n            \" SpreadElement should be converted by .toAssignable's caller.\",\n        );\n      }\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(\n          node.elements,\n          node.extra?.trailingCommaLoc,\n          isLHS,\n        );\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(Errors.MissingEqInAssignment, { at: node.left.loc.end });\n        }\n\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isLHS);\n        break;\n\n      case \"ParenthesizedExpression\":\n        /*::invariant (parenthesized !== undefined) */\n        this.toAssignable(parenthesized, isLHS);\n        break;\n\n      default:\n      // We don't know how to deal with this node. It will\n      // be reported by a later call to checkLVal\n    }\n  }\n\n  toAssignableObjectExpressionProp(\n    prop: Node,\n    isLast: boolean,\n    isLHS: boolean,\n  ) {\n    if (prop.type === \"ObjectMethod\") {\n      this.raise(\n        prop.kind === \"get\" || prop.kind === \"set\"\n          ? Errors.PatternHasAccessor\n          : Errors.PatternHasMethod,\n        { at: prop.key },\n      );\n    } else if (prop.type === \"SpreadElement\") {\n      prop.type = \"RestElement\";\n      const arg = prop.argument;\n      this.checkToRestConversion(arg, /* allowPattern */ false);\n      this.toAssignable(arg, isLHS);\n\n      if (!isLast) {\n        this.raise(Errors.RestTrailingComma, { at: prop });\n      }\n    } else {\n      this.toAssignable(prop, isLHS);\n    }\n  }\n\n  // Convert list of expression atoms to binding list.\n\n  toAssignableList(\n    exprList: Expression[],\n    trailingCommaLoc: Position | undefined | null,\n    isLHS: boolean,\n  ): void {\n    const end = exprList.length - 1;\n\n    for (let i = 0; i <= end; i++) {\n      const elt = exprList[i];\n      if (!elt) continue;\n\n      if (elt.type === \"SpreadElement\") {\n        elt.type = \"RestElement\";\n        const arg = elt.argument;\n        this.checkToRestConversion(arg, /* allowPattern */ true);\n        this.toAssignable(arg, isLHS);\n      } else {\n        this.toAssignable(elt, isLHS);\n      }\n\n      if (elt.type === \"RestElement\") {\n        if (i < end) {\n          this.raise(Errors.RestTrailingComma, { at: elt });\n        } else if (trailingCommaLoc) {\n          this.raise(Errors.RestTrailingComma, { at: trailingCommaLoc });\n        }\n      }\n    }\n  }\n\n  isAssignable(node: Node, isBinding?: boolean): boolean {\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        return true;\n\n      case \"ObjectExpression\": {\n        const last = node.properties.length - 1;\n        return (node.properties as ObjectExpression[\"properties\"]).every(\n          (prop, i) => {\n            return (\n              prop.type !== \"ObjectMethod\" &&\n              (i === last || prop.type !== \"SpreadElement\") &&\n              this.isAssignable(prop)\n            );\n          },\n        );\n      }\n\n      case \"ObjectProperty\":\n        return this.isAssignable(node.value);\n\n      case \"SpreadElement\":\n        return this.isAssignable(node.argument);\n\n      case \"ArrayExpression\":\n        return (node as ArrayExpression).elements.every(\n          element => element === null || this.isAssignable(element),\n        );\n\n      case \"AssignmentExpression\":\n        return node.operator === \"=\";\n\n      case \"ParenthesizedExpression\":\n        return this.isAssignable(node.expression);\n\n      case \"MemberExpression\":\n      case \"OptionalMemberExpression\":\n        return !isBinding;\n\n      default:\n        return false;\n    }\n  }\n\n  // Convert list of expression atoms to a list of\n\n  toReferencedList(\n    exprList: ReadonlyArray<Expression | undefined | null>,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    isParenthesizedExpr?: boolean,\n  ): ReadonlyArray<Expression | undefined | null> {\n    return exprList;\n  }\n\n  toReferencedListDeep(\n    exprList: ReadonlyArray<Expression | undefined | null>,\n    isParenthesizedExpr?: boolean,\n  ): void {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n\n    for (const expr of exprList) {\n      if (expr?.type === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n\n  // Parses spread element.\n\n  parseSpread(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): SpreadElement {\n    const node = this.startNode<SpreadElement>();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(\n      refExpressionErrors,\n      undefined,\n    );\n    return this.finishNode(node, \"SpreadElement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingRestProperty\n  // https://tc39.es/ecma262/#prod-BindingRestElement\n  parseRestBinding(this: Parser): RestElement {\n    const node = this.startNode<RestElement>();\n    this.next(); // eat `...`\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n\n  // Parses lvalue (assignable) atom.\n  parseBindingAtom(this: Parser): Pattern {\n    // https://tc39.es/ecma262/#prod-BindingPattern\n    switch (this.state.type) {\n      case tt.bracketL: {\n        const node = this.startNode<ArrayPattern>();\n        this.next();\n        // @ts-expect-error: Fixme: TSParameterProperty can not be assigned to node.elements\n        node.elements = this.parseBindingList(\n          tt.bracketR,\n          charCodes.rightSquareBracket,\n          ParseBindingListFlags.ALLOW_EMPTY,\n        );\n        return this.finishNode(node, \"ArrayPattern\");\n      }\n\n      case tt.braceL:\n        return this.parseObjectLike(tt.braceR, true);\n    }\n\n    // https://tc39.es/ecma262/#prod-BindingIdentifier\n    return this.parseIdentifier();\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingElementList\n  parseBindingList(\n    this: Parser,\n    close: TokenType,\n    closeCharCode: (typeof charCodes)[keyof typeof charCodes],\n    flags: ParseBindingListFlags,\n  ): Array<Pattern | TSParameterProperty> {\n    const allowEmpty = flags & ParseBindingListFlags.ALLOW_EMPTY;\n\n    const elts: Array<Pattern | TSParameterProperty> = [];\n    let first = true;\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n      }\n      if (allowEmpty && this.match(tt.comma)) {\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(tt.ellipsis)) {\n        elts.push(\n          this.parseAssignableListItemTypes(this.parseRestBinding(), flags),\n        );\n        if (!this.checkCommaAfterRest(closeCharCode)) {\n          this.expect(close);\n          break;\n        }\n      } else {\n        const decorators = [];\n        if (this.match(tt.at) && this.hasPlugin(\"decorators\")) {\n          this.raise(Errors.UnsupportedParameterDecorator, {\n            at: this.state.startLoc,\n          });\n        }\n        // invariant: hasPlugin(\"decorators-legacy\")\n        while (this.match(tt.at)) {\n          decorators.push(this.parseDecorator());\n        }\n        elts.push(this.parseAssignableListItem(flags, decorators));\n      }\n    }\n    return elts;\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingRestProperty\n  parseBindingRestProperty(\n    this: Parser,\n    prop: Undone<RestElement>,\n  ): RestElement {\n    this.next(); // eat '...'\n    // Don't use parseRestBinding() as we only allow Identifier here.\n    prop.argument = this.parseIdentifier();\n    this.checkCommaAfterRest(charCodes.rightCurlyBrace);\n    return this.finishNode(prop, \"RestElement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingProperty\n  parseBindingProperty(this: Parser): ObjectMember | RestElement {\n    const prop = this.startNode<ObjectMember | RestElement>();\n    const { type, startLoc } = this.state;\n    if (type === tt.ellipsis) {\n      return this.parseBindingRestProperty(prop as Undone<RestElement>);\n    } else if (type === tt.privateName) {\n      this.expectPlugin(\"destructuringPrivate\", startLoc);\n      this.classScope.usePrivateName(this.state.value, startLoc);\n      (prop as Undone<ObjectMember>).key = this.parsePrivateName();\n    } else {\n      this.parsePropertyName(prop as Undone<ObjectMember>);\n    }\n    (prop as Undone<ObjectMember>).method = false;\n    return this.parseObjPropValue(\n      prop as Undone<ObjectMember>,\n      startLoc,\n      false /* isGenerator */,\n      false /* isAsync */,\n      true /* isPattern */,\n      false /* isAccessor */,\n    );\n  }\n\n  parseAssignableListItem(\n    this: Parser,\n    flags: ParseBindingListFlags,\n    decorators: Decorator[],\n  ): Pattern | TSParameterProperty {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left, flags);\n    const elt = this.parseMaybeDefault(left.loc.start, left);\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n    return elt;\n  }\n\n  // Used by flow/typescript plugin to add type annotations to binding elements\n  parseAssignableListItemTypes(\n    param: Pattern,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    flags: ParseBindingListFlags,\n  ): Pattern {\n    return param;\n  }\n\n  // Parses assignment pattern around given atom if possible.\n  // https://tc39.es/ecma262/#prod-BindingElement\n  parseMaybeDefault(\n    this: Parser,\n    startLoc?: Position | null,\n    left?: Pattern | null,\n  ): Pattern {\n    startLoc ??= this.state.startLoc;\n    left = left ?? this.parseBindingAtom();\n    if (!this.eat(tt.eq)) return left;\n\n    const node = this.startNodeAt<AssignmentPattern>(startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n  /**\n   * Return information use in determining whether a Node of a given type is an LVal,\n   * possibly given certain additional context information.\n   *\n   * Subclasser notes: This method has kind of a lot of mixed, but related,\n   * responsibilities. If we can definitively determine with the information\n   * provided that this either *is* or *isn't* a valid `LVal`, then the return\n   * value is easy: just return `true` or `false`. However, if it is a valid\n   * LVal *ancestor*, and thus its descendants must be subsequently visited to\n   * continue the \"investigation\", then this method should return the relevant\n   * child key as a `string`. In some special cases, you additionally want to\n   * convey that this node should be treated as if it were parenthesized. In\n   * that case, a tuple of [key: string, parenthesized: boolean] is returned.\n   * The `string`-only return option is actually just a shorthand for:\n   * `[key: string, parenthesized: false]`.\n   *\n   * @param type A Node `type` string\n   * @param isUnparenthesizedInAssign\n   *        Whether the node in question is unparenthesized and its parent\n   *        is either an assignment pattern or an assignment expression.\n   * @param binding\n   *        The binding operation that is being considered for this potential\n   *        LVal.\n   * @returns `true` or `false` if we can immediately determine whether the node\n   *          type in question can be treated as an `LVal`.\n   *          A `string` key to traverse if we must check this child.\n   *          A `[string, boolean]` tuple if we need to check this child and\n   *          treat is as parenthesized.\n   */\n  isValidLVal(\n    type: string,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    isUnparenthesizedInAssign: boolean,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    binding: BindingTypes,\n  ): string | boolean {\n    return getOwn(\n      {\n        AssignmentPattern: \"left\",\n        RestElement: \"argument\",\n        ObjectProperty: \"value\",\n        ParenthesizedExpression: \"expression\",\n        ArrayPattern: \"elements\",\n        ObjectPattern: \"properties\",\n      },\n      // @ts-expect-error refine string to enum\n      type,\n    );\n  }\n\n  // Overridden by the estree plugin\n  isOptionalMemberExpression(expression: Node) {\n    return expression.type === \"OptionalMemberExpression\";\n  }\n\n  /**\n   * Verify that a target expression is an lval (something that can be assigned to).\n   *\n   * @param expression The expression in question to check.\n   * @param options A set of options described below.\n   * @param options.in\n   *        The relevant ancestor to provide context information for the error\n   *        if the check fails.\n   * @param options.binding\n   *        The desired binding type. If the given expression is an identifier\n   *        and `binding` is not `BindingFlag.TYPE_NONE`, `checkLVal` will register binding\n   *        to the parser scope See also `src/util/scopeflags.js`\n   * @param options.checkClashes\n   *        An optional string set to check if an identifier name is included.\n   *        `checkLVal` will add checked identifier name to `checkClashes` It is\n   *        used in tracking duplicates in function parameter lists. If it is\n   *        false, `checkLVal` will skip duplicate checks\n   * @param options.strictModeChanged\n   *        Whether an identifier has been parsed in a sloppy context but should\n   *        be reinterpreted as strict-mode. e.g. `(arguments) => { \"use strict \"}`\n   * @param options.hasParenthesizedAncestor\n   *        This is only used internally during recursive calls, and you should\n   *        not have to set it yourself.\n   */\n\n  checkLVal(\n    expression: Expression | ObjectMember | RestElement,\n    {\n      in: ancestor,\n      binding = BindingFlag.TYPE_NONE,\n      checkClashes = false,\n      strictModeChanged = false,\n      hasParenthesizedAncestor = false,\n    }: {\n      in: LValAncestor;\n      binding?: BindingTypes;\n      checkClashes?: Set<string> | false;\n      strictModeChanged?: boolean;\n      hasParenthesizedAncestor?: boolean;\n    },\n  ): void {\n    const type = expression.type;\n\n    // If we find here an ObjectMethod, it's because this was originally\n    // an ObjectExpression which has then been converted.\n    // toAssignable already reported this error with a nicer message.\n    if (this.isObjectMethod(expression)) return;\n\n    const isOptionalMemberExpression =\n      this.isOptionalMemberExpression(expression);\n\n    if (isOptionalMemberExpression || type === \"MemberExpression\") {\n      if (isOptionalMemberExpression) {\n        this.expectPlugin(\"optionalChainingAssign\", expression.loc.start);\n        if (ancestor.type !== \"AssignmentExpression\") {\n          this.raise(Errors.InvalidLhsOptionalChaining, {\n            at: expression,\n            ancestor,\n          });\n        }\n      }\n\n      if (binding !== BindingFlag.TYPE_NONE) {\n        this.raise(Errors.InvalidPropertyBindingPattern, { at: expression });\n      }\n      return;\n    }\n\n    if (type === \"Identifier\") {\n      this.checkIdentifier(\n        expression as Identifier,\n        binding,\n        strictModeChanged,\n      );\n\n      const { name } = expression as Identifier;\n\n      if (checkClashes) {\n        if (checkClashes.has(name)) {\n          this.raise(Errors.ParamDupe, { at: expression });\n        } else {\n          checkClashes.add(name);\n        }\n      }\n\n      return;\n    }\n\n    const validity = this.isValidLVal(\n      type,\n      !(hasParenthesizedAncestor || expression.extra?.parenthesized) &&\n        ancestor.type === \"AssignmentExpression\",\n      binding,\n    );\n\n    if (validity === true) return;\n    if (validity === false) {\n      const ParseErrorClass =\n        binding === BindingFlag.TYPE_NONE\n          ? Errors.InvalidLhs\n          : Errors.InvalidLhsBinding;\n\n      this.raise(ParseErrorClass, { at: expression, ancestor });\n      return;\n    }\n\n    const [key, isParenthesizedExpression] = Array.isArray(validity)\n      ? validity\n      : [validity, type === \"ParenthesizedExpression\"];\n    const nextAncestor =\n      type === \"ArrayPattern\" || type === \"ObjectPattern\"\n        ? ({ type } as const)\n        : ancestor;\n\n    // @ts-expect-error key may not index expression.\n    for (const child of [].concat(expression[key])) {\n      if (child) {\n        this.checkLVal(child, {\n          in: nextAncestor,\n          binding,\n          checkClashes,\n          strictModeChanged,\n          hasParenthesizedAncestor: isParenthesizedExpression,\n        });\n      }\n    }\n  }\n\n  checkIdentifier(\n    at: Identifier,\n    bindingType: BindingTypes,\n    strictModeChanged: boolean = false,\n  ) {\n    if (\n      this.state.strict &&\n      (strictModeChanged\n        ? isStrictBindReservedWord(at.name, this.inModule)\n        : isStrictBindOnlyReservedWord(at.name))\n    ) {\n      if (bindingType === BindingFlag.TYPE_NONE) {\n        this.raise(Errors.StrictEvalArguments, { at, referenceName: at.name });\n      } else {\n        this.raise(Errors.StrictEvalArgumentsBinding, {\n          at,\n          bindingName: at.name,\n        });\n      }\n    }\n\n    if (bindingType & BindingFlag.FLAG_NO_LET_IN_LEXICAL && at.name === \"let\") {\n      this.raise(Errors.LetInLexicalBinding, { at });\n    }\n\n    if (!(bindingType & BindingFlag.TYPE_NONE)) {\n      this.declareNameFromIdentifier(at, bindingType);\n    }\n  }\n\n  declareNameFromIdentifier(identifier: Identifier, binding: BindingTypes) {\n    this.scope.declareName(identifier.name, binding, identifier.loc.start);\n  }\n\n  checkToRestConversion(node: Node, allowPattern: boolean): void {\n    switch (node.type) {\n      case \"ParenthesizedExpression\":\n        this.checkToRestConversion(node.expression, allowPattern);\n        break;\n      case \"Identifier\":\n      case \"MemberExpression\":\n        break;\n      case \"ArrayExpression\":\n      case \"ObjectExpression\":\n        if (allowPattern) break;\n      /* falls through */\n      default:\n        this.raise(Errors.InvalidRestAssignmentPattern, { at: node });\n    }\n  }\n\n  checkCommaAfterRest(\n    close: (typeof charCodes)[keyof typeof charCodes],\n  ): boolean {\n    if (!this.match(tt.comma)) {\n      return false;\n    }\n\n    this.raise(\n      this.lookaheadCharCode() === close\n        ? Errors.RestTrailingComma\n        : Errors.ElementAfterRest,\n      { at: this.state.startLoc },\n    );\n\n    return true;\n  }\n}\n","/*:: declare var invariant; */\n\nimport type State from \"../../tokenizer/state.ts\";\nimport {\n  tokenIsIdentifier,\n  tokenIsTSDeclarationStart,\n  tokenIsTSTypeOperator,\n  tokenOperatorPrecedence,\n  tokenIsKeywordOrIdentifier,\n  tt,\n  type TokenType,\n  tokenIsTemplate,\n  tokenCanStartExpression,\n} from \"../../tokenizer/types.ts\";\nimport { types as tc } from \"../../tokenizer/context.ts\";\nimport type * as N from \"../../types.ts\";\nimport type { Position } from \"../../util/location.ts\";\nimport { createPositionWithColumnOffset } from \"../../util/location.ts\";\nimport type Parser from \"../../parser/index.ts\";\nimport {\n  type BindingTypes,\n  ScopeFlag,\n  BindingFlag,\n} from \"../../util/scopeflags.ts\";\nimport TypeScriptScopeHandler from \"./scope.ts\";\nimport * as charCodes from \"charcodes\";\nimport type { ExpressionErrors } from \"../../parser/util.ts\";\nimport type { ParseStatementFlag } from \"../../parser/statement.ts\";\nimport { PARAM } from \"../../util/production-parameter.ts\";\nimport { Errors, ParseErrorEnum } from \"../../parse-error.ts\";\nimport { cloneIdentifier, type Undone } from \"../../parser/node.ts\";\nimport type { Pattern } from \"../../types.ts\";\nimport type { Expression } from \"../../types.ts\";\nimport type { IJSXParserMixin } from \"../jsx/index.ts\";\nimport { ParseBindingListFlags } from \"../../parser/lval.ts\";\n\nconst getOwn = <T extends {}>(object: T, key: keyof T) =>\n  Object.hasOwnProperty.call(object, key) && object[key];\n\ntype TsModifier =\n  | \"readonly\"\n  | \"abstract\"\n  | \"declare\"\n  | \"static\"\n  | \"override\"\n  | \"const\"\n  | N.Accessibility\n  | N.VarianceAnnotations;\n\nfunction nonNull<T>(x?: T | null): T {\n  if (x == null) {\n    throw new Error(`Unexpected ${x} value.`);\n  }\n  return x;\n}\n\nfunction assert(x: boolean): void {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\ntype ParsingContext =\n  | \"EnumMembers\"\n  | \"HeritageClauseElement\"\n  | \"TupleElementTypes\"\n  | \"TypeMembers\"\n  | \"TypeParametersOrArguments\";\n\ntype ModifierBase = {\n  accessibility?: N.Accessibility;\n} & {\n  [key in TsModifier]?: boolean | undefined | null;\n};\n\n/* eslint sort-keys: \"error\" */\nconst TSErrors = ParseErrorEnum`typescript`({\n  AbstractMethodHasImplementation: ({ methodName }: { methodName: string }) =>\n    `Method '${methodName}' cannot have an implementation because it is marked abstract.`,\n  AbstractPropertyHasInitializer: ({\n    propertyName,\n  }: {\n    propertyName: string;\n  }) =>\n    `Property '${propertyName}' cannot have an initializer because it is marked abstract.`,\n  // TODO: Accesor -> Accessor\n  AccesorCannotDeclareThisParameter:\n    \"'get' and 'set' accessors cannot declare 'this' parameters.\",\n  AccesorCannotHaveTypeParameters: \"An accessor cannot have type parameters.\",\n  AccessorCannotBeOptional:\n    \"An 'accessor' property cannot be declared optional.\",\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier.\",\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier.\",\n  ConstInitiailizerMustBeStringOrNumericLiteralOrLiteralEnumReference:\n    \"A 'const' initializer in an ambient context must be a string or numeric literal or literal enum reference.\",\n  ConstructorHasTypeParameters:\n    \"Type parameters cannot appear on a constructor declaration.\",\n  DeclareAccessor: ({ kind }: { kind: \"get\" | \"set\" }) =>\n    `'declare' is not allowed in ${kind}ters.`,\n  DeclareClassFieldHasInitializer:\n    \"Initializers are not allowed in ambient contexts.\",\n  DeclareFunctionHasImplementation:\n    \"An implementation cannot be declared in ambient contexts.\",\n  DuplicateAccessibilityModifier:\n    // `Accessibility modifier already seen: ${modifier}` would be more helpful.\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    ({ modifier }: { modifier: N.Accessibility }) =>\n      `Accessibility modifier already seen.`,\n  DuplicateModifier: ({ modifier }: { modifier: TsModifier }) =>\n    `Duplicate modifier: '${modifier}'.`,\n  // `token` matches the terminology used by typescript:\n  // https://github.com/microsoft/TypeScript/blob/main/src/compiler/types.ts#L2915\n  EmptyHeritageClauseType: ({ token }: { token: \"extends\" | \"implements\" }) =>\n    `'${token}' list cannot be empty.`,\n  EmptyTypeArguments: \"Type argument list cannot be empty.\",\n  EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n  ExpectedAmbientAfterExportDeclare:\n    \"'export declare' must be followed by an ambient declaration.\",\n  ImportAliasHasImportType: \"An import alias can not use 'import type'.\",\n  ImportReflectionHasImportType:\n    \"An `import module` declaration can not use `type` modifier\",\n  IncompatibleModifiers: ({\n    modifiers,\n  }: {\n    modifiers: [TsModifier, TsModifier];\n  }) =>\n    `'${modifiers[0]}' modifier cannot be used with '${modifiers[1]}' modifier.`,\n  IndexSignatureHasAbstract:\n    \"Index signatures cannot have the 'abstract' modifier.\",\n  IndexSignatureHasAccessibility: ({\n    modifier,\n  }: {\n    modifier: N.Accessibility;\n  }) =>\n    `Index signatures cannot have an accessibility modifier ('${modifier}').`,\n  IndexSignatureHasDeclare:\n    \"Index signatures cannot have the 'declare' modifier.\",\n  IndexSignatureHasOverride:\n    \"'override' modifier cannot appear on an index signature.\",\n  IndexSignatureHasStatic:\n    \"Index signatures cannot have the 'static' modifier.\",\n  InitializerNotAllowedInAmbientContext:\n    \"Initializers are not allowed in ambient contexts.\",\n  InvalidModifierOnTypeMember: ({ modifier }: { modifier: TsModifier }) =>\n    `'${modifier}' modifier cannot appear on a type member.`,\n  InvalidModifierOnTypeParameter: ({ modifier }: { modifier: TsModifier }) =>\n    `'${modifier}' modifier cannot appear on a type parameter.`,\n  InvalidModifierOnTypeParameterPositions: ({\n    modifier,\n  }: {\n    modifier: TsModifier;\n  }) =>\n    `'${modifier}' modifier can only appear on a type parameter of a class, interface or type alias.`,\n  InvalidModifiersOrder: ({\n    orderedModifiers,\n  }: {\n    orderedModifiers: [TsModifier, TsModifier];\n  }) =>\n    `'${orderedModifiers[0]}' modifier must precede '${orderedModifiers[1]}' modifier.`,\n  InvalidPropertyAccessAfterInstantiationExpression:\n    \"Invalid property access after an instantiation expression. \" +\n    \"You can either wrap the instantiation expression in parentheses, or delete the type arguments.\",\n  InvalidTupleMemberLabel:\n    \"Tuple members must be labeled with a simple identifier.\",\n  MissingInterfaceName:\n    \"'interface' declarations must be followed by an identifier.\",\n  NonAbstractClassHasAbstractMethod:\n    \"Abstract methods can only appear within an abstract class.\",\n  NonClassMethodPropertyHasAbstractModifer:\n    \"'abstract' modifier can only appear on a class, method, or property declaration.\",\n  OptionalTypeBeforeRequired:\n    \"A required element cannot follow an optional element.\",\n  OverrideNotInSubClass:\n    \"This member cannot have an 'override' modifier because its containing class does not extend another class.\",\n  PatternIsOptional:\n    \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  PrivateElementHasAbstract:\n    \"Private elements cannot have the 'abstract' modifier.\",\n  PrivateElementHasAccessibility: ({\n    modifier,\n  }: {\n    modifier: N.Accessibility;\n  }) =>\n    `Private elements cannot have an accessibility modifier ('${modifier}').`,\n  ReadonlyForMethodSignature:\n    \"'readonly' modifier can only appear on a property declaration or index signature.\",\n  ReservedArrowTypeParam:\n    \"This syntax is reserved in files with the .mts or .cts extension. Add a trailing comma, as in `<T,>() => ...`.\",\n  ReservedTypeAssertion:\n    \"This syntax is reserved in files with the .mts or .cts extension. Use an `as` expression instead.\",\n  // TODO: Accesor -> Accessor\n  SetAccesorCannotHaveOptionalParameter:\n    \"A 'set' accessor cannot have an optional parameter.\",\n  SetAccesorCannotHaveRestParameter:\n    \"A 'set' accessor cannot have rest parameter.\",\n  SetAccesorCannotHaveReturnType:\n    \"A 'set' accessor cannot have a return type annotation.\",\n  SingleTypeParameterWithoutTrailingComma: ({\n    typeParameterName,\n  }: {\n    typeParameterName: string;\n  }) =>\n    `Single type parameter ${typeParameterName} should have a trailing comma. Example usage: <${typeParameterName},>.`,\n  StaticBlockCannotHaveModifier:\n    \"Static class blocks cannot have any modifier.\",\n  TupleOptionalAfterType:\n    \"A labeled tuple optional element must be declared using a question mark after the name and before the colon (`name?: type`), rather than after the type (`name: type?`).\",\n  TypeAnnotationAfterAssign:\n    \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeImportCannotSpecifyDefaultAndNamed:\n    \"A type-only import can specify a default import or named bindings, but not both.\",\n  TypeModifierIsUsedInTypeExports:\n    \"The 'type' modifier cannot be used on a named export when 'export type' is used on its export statement.\",\n  TypeModifierIsUsedInTypeImports:\n    \"The 'type' modifier cannot be used on a named import when 'import type' is used on its import statement.\",\n  UnexpectedParameterModifier:\n    \"A parameter property is only allowed in a constructor implementation.\",\n  UnexpectedReadonly:\n    \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\n  UnsupportedImportTypeArgument:\n    \"Argument in a type import must be a string literal.\",\n  UnsupportedParameterPropertyKind:\n    \"A parameter property may not be declared using a binding pattern.\",\n  UnsupportedSignatureParameterKind: ({ type }: { type: string }) =>\n    `Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got ${type}.`,\n});\n\n/* eslint-disable sort-keys */\n\n// Doesn't handle \"void\" or \"null\" because those are keywords, not identifiers.\n// It also doesn't handle \"intrinsic\", since usually it's not a keyword.\nfunction keywordTypeFromName(value: string): N.TsKeywordTypeType | undefined {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n    case \"never\":\n      return \"TSNeverKeyword\";\n    case \"number\":\n      return \"TSNumberKeyword\";\n    case \"object\":\n      return \"TSObjectKeyword\";\n    case \"string\":\n      return \"TSStringKeyword\";\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n    default:\n      return undefined;\n  }\n}\n\nfunction tsIsAccessModifier(modifier: string): modifier is N.Accessibility {\n  return (\n    modifier === \"private\" || modifier === \"public\" || modifier === \"protected\"\n  );\n}\n\nfunction tsIsVarianceAnnotations(\n  modifier: string,\n): modifier is N.VarianceAnnotations {\n  return modifier === \"in\" || modifier === \"out\";\n}\n\ntype ClassWithMixin<\n  T extends new (...args: any) => any,\n  M extends object,\n> = T extends new (...args: infer P) => infer I\n  ? new (...args: P) => I & M\n  : never;\n\nexport default (superClass: ClassWithMixin<typeof Parser, IJSXParserMixin>) =>\n  class TypeScriptParserMixin extends superClass implements Parser {\n    getScopeHandler(): {\n      new (...args: any): TypeScriptScopeHandler;\n    } {\n      return TypeScriptScopeHandler;\n    }\n\n    tsIsIdentifier(): boolean {\n      // TODO: actually a bit more complex in TypeScript, but shouldn't matter.\n      // See https://github.com/Microsoft/TypeScript/issues/15008\n      return tokenIsIdentifier(this.state.type);\n    }\n\n    tsTokenCanFollowModifier() {\n      return (\n        (this.match(tt.bracketL) ||\n          this.match(tt.braceL) ||\n          this.match(tt.star) ||\n          this.match(tt.ellipsis) ||\n          this.match(tt.privateName) ||\n          this.isLiteralPropertyName()) &&\n        !this.hasPrecedingLineBreak()\n      );\n    }\n\n    tsNextTokenCanFollowModifier() {\n      // Note: TypeScript's implementation is much more complicated because\n      // more things are considered modifiers there.\n      // This implementation only handles modifiers not handled by @babel/parser itself. And \"static\".\n      // TODO: Would be nice to avoid lookahead. Want a hasLineBreakUpNext() method...\n      this.next();\n      return this.tsTokenCanFollowModifier();\n    }\n\n    /** Parses a modifier matching one the given modifier names. */\n    tsParseModifier<T extends TsModifier>(\n      allowedModifiers: T[],\n      stopOnStartOfClassStaticBlock?: boolean,\n    ): T | undefined | null {\n      if (\n        !tokenIsIdentifier(this.state.type) &&\n        this.state.type !== tt._in &&\n        this.state.type !== tt._const\n      ) {\n        return undefined;\n      }\n\n      const modifier = this.state.value;\n      if (allowedModifiers.indexOf(modifier) !== -1) {\n        if (stopOnStartOfClassStaticBlock && this.tsIsStartOfStaticBlocks()) {\n          return undefined;\n        }\n        if (this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))) {\n          return modifier;\n        }\n      }\n      return undefined;\n    }\n\n    /** Parses a list of modifiers, in any order.\n     *  If you need a specific order, you must call this function multiple times:\n     *    this.tsParseModifiers({ modified: node, allowedModifiers: [\"public\"] });\n     *    this.tsParseModifiers({ modified: node, allowedModifiers: [\"abstract\", \"readonly\"] });\n     */\n    tsParseModifiers<N extends ModifierBase>(\n      {\n        allowedModifiers,\n        disallowedModifiers,\n        stopOnStartOfClassStaticBlock,\n        errorTemplate = TSErrors.InvalidModifierOnTypeMember,\n      }: {\n        allowedModifiers: readonly TsModifier[];\n        disallowedModifiers?: TsModifier[];\n        stopOnStartOfClassStaticBlock?: boolean;\n        errorTemplate?: typeof TSErrors.InvalidModifierOnTypeMember;\n      },\n      modified: N,\n    ): void {\n      const enforceOrder = (\n        loc: Position,\n        modifier: TsModifier,\n        before: TsModifier,\n        after: TsModifier,\n      ) => {\n        if (modifier === before && modified[after]) {\n          this.raise(TSErrors.InvalidModifiersOrder, {\n            at: loc,\n            orderedModifiers: [before, after],\n          });\n        }\n      };\n      const incompatible = (\n        loc: Position,\n        modifier: TsModifier,\n        mod1: TsModifier,\n        mod2: TsModifier,\n      ) => {\n        if (\n          (modified[mod1] && modifier === mod2) ||\n          (modified[mod2] && modifier === mod1)\n        ) {\n          this.raise(TSErrors.IncompatibleModifiers, {\n            at: loc,\n            modifiers: [mod1, mod2],\n          });\n        }\n      };\n\n      for (;;) {\n        const { startLoc } = this.state;\n        const modifier: TsModifier | undefined | null = this.tsParseModifier(\n          allowedModifiers.concat(disallowedModifiers ?? []),\n          stopOnStartOfClassStaticBlock,\n        );\n\n        if (!modifier) break;\n\n        if (tsIsAccessModifier(modifier)) {\n          if (modified.accessibility) {\n            this.raise(TSErrors.DuplicateAccessibilityModifier, {\n              at: startLoc,\n              modifier,\n            });\n          } else {\n            enforceOrder(startLoc, modifier, modifier, \"override\");\n            enforceOrder(startLoc, modifier, modifier, \"static\");\n            enforceOrder(startLoc, modifier, modifier, \"readonly\");\n\n            modified.accessibility = modifier;\n          }\n        } else if (tsIsVarianceAnnotations(modifier)) {\n          if (modified[modifier]) {\n            this.raise(TSErrors.DuplicateModifier, { at: startLoc, modifier });\n          }\n          modified[modifier] = true;\n\n          enforceOrder(startLoc, modifier, \"in\", \"out\");\n        } else {\n          if (Object.hasOwnProperty.call(modified, modifier)) {\n            this.raise(TSErrors.DuplicateModifier, { at: startLoc, modifier });\n          } else {\n            enforceOrder(startLoc, modifier, \"static\", \"readonly\");\n            enforceOrder(startLoc, modifier, \"static\", \"override\");\n            enforceOrder(startLoc, modifier, \"override\", \"readonly\");\n            enforceOrder(startLoc, modifier, \"abstract\", \"override\");\n\n            incompatible(startLoc, modifier, \"declare\", \"override\");\n            incompatible(startLoc, modifier, \"static\", \"abstract\");\n          }\n          modified[modifier] = true;\n        }\n\n        if (disallowedModifiers?.includes(modifier)) {\n          this.raise(errorTemplate, {\n            at: startLoc,\n            modifier,\n          });\n        }\n      }\n    }\n\n    tsIsListTerminator(kind: ParsingContext): boolean {\n      switch (kind) {\n        case \"EnumMembers\":\n        case \"TypeMembers\":\n          return this.match(tt.braceR);\n        case \"HeritageClauseElement\":\n          return this.match(tt.braceL);\n        case \"TupleElementTypes\":\n          return this.match(tt.bracketR);\n        case \"TypeParametersOrArguments\":\n          return this.match(tt.gt);\n      }\n    }\n\n    tsParseList<T extends N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T,\n    ): T[] {\n      const result: T[] = [];\n      while (!this.tsIsListTerminator(kind)) {\n        // Skipping \"parseListElement\" from the TS source since that's just for error handling.\n        result.push(parseElement());\n      }\n      return result;\n    }\n\n    tsParseDelimitedList<T extends N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T,\n      refTrailingCommaPos?: {\n        value: number;\n      },\n    ): T[] {\n      return nonNull(\n        this.tsParseDelimitedListWorker(\n          kind,\n          parseElement,\n          /* expectSuccess */ true,\n          refTrailingCommaPos,\n        ),\n      );\n    }\n\n    /**\n     * If !expectSuccess, returns undefined instead of failing to parse.\n     * If expectSuccess, parseElement should always return a defined value.\n     */\n    tsParseDelimitedListWorker<T extends N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T | undefined | null,\n      expectSuccess: boolean,\n      refTrailingCommaPos?: {\n        value: number;\n      },\n    ): T[] | undefined | null {\n      const result = [];\n      let trailingCommaPos = -1;\n\n      for (;;) {\n        if (this.tsIsListTerminator(kind)) {\n          break;\n        }\n        trailingCommaPos = -1;\n\n        const element = parseElement();\n        if (element == null) {\n          return undefined;\n        }\n        result.push(element);\n\n        if (this.eat(tt.comma)) {\n          trailingCommaPos = this.state.lastTokStart;\n          continue;\n        }\n\n        if (this.tsIsListTerminator(kind)) {\n          break;\n        }\n\n        if (expectSuccess) {\n          // This will fail with an error about a missing comma\n          this.expect(tt.comma);\n        }\n        return undefined;\n      }\n\n      if (refTrailingCommaPos) {\n        refTrailingCommaPos.value = trailingCommaPos;\n      }\n\n      return result;\n    }\n\n    tsParseBracketedList<T extends N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T,\n      bracket: boolean,\n      skipFirstToken: boolean,\n      refTrailingCommaPos?: {\n        value: number;\n      },\n    ): T[] {\n      if (!skipFirstToken) {\n        if (bracket) {\n          this.expect(tt.bracketL);\n        } else {\n          this.expect(tt.lt);\n        }\n      }\n\n      const result = this.tsParseDelimitedList(\n        kind,\n        parseElement,\n        refTrailingCommaPos,\n      );\n\n      if (bracket) {\n        this.expect(tt.bracketR);\n      } else {\n        this.expect(tt.gt);\n      }\n\n      return result;\n    }\n\n    tsParseImportType(): N.TsImportType {\n      const node = this.startNode<N.TsImportType>();\n      this.expect(tt._import);\n      this.expect(tt.parenL);\n      if (!this.match(tt.string)) {\n        this.raise(TSErrors.UnsupportedImportTypeArgument, {\n          at: this.state.startLoc,\n        });\n      }\n\n      // For compatibility to estree we cannot call parseLiteral directly here\n      node.argument = super.parseExprAtom() as N.StringLiteral;\n      this.expect(tt.parenR);\n\n      if (this.eat(tt.dot)) {\n        // In this instance, the entity name will actually itself be a\n        // qualifier, so allow it to be a reserved word as well.\n        node.qualifier = this.tsParseEntityName();\n      }\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSImportType\");\n    }\n\n    tsParseEntityName(allowReservedWords: boolean = true): N.TsEntityName {\n      let entity: N.TsEntityName = this.parseIdentifier(allowReservedWords);\n      while (this.eat(tt.dot)) {\n        const node: Undone<N.TsQualifiedName> =\n          this.startNodeAtNode<N.TsQualifiedName>(entity);\n        node.left = entity;\n        node.right = this.parseIdentifier(allowReservedWords);\n        entity = this.finishNode(node, \"TSQualifiedName\");\n      }\n      return entity;\n    }\n\n    tsParseTypeReference(): N.TsTypeReference {\n      const node = this.startNode<N.TsTypeReference>();\n      node.typeName = this.tsParseEntityName();\n      if (!this.hasPrecedingLineBreak() && this.match(tt.lt)) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSTypeReference\");\n    }\n\n    tsParseThisTypePredicate(lhs: N.TsThisType): N.TsTypePredicate {\n      this.next();\n      const node = this.startNodeAtNode<N.TsTypePredicate>(lhs);\n      node.parameterName = lhs;\n      node.typeAnnotation = this.tsParseTypeAnnotation(/* eatColon */ false);\n      node.asserts = false;\n      return this.finishNode(node, \"TSTypePredicate\");\n    }\n\n    tsParseThisTypeNode(): N.TsThisType {\n      const node = this.startNode<N.TsThisType>();\n      this.next();\n      return this.finishNode(node, \"TSThisType\");\n    }\n\n    tsParseTypeQuery(): N.TsTypeQuery {\n      const node = this.startNode<N.TsTypeQuery>();\n      this.expect(tt._typeof);\n      if (this.match(tt._import)) {\n        node.exprName = this.tsParseImportType();\n      } else {\n        node.exprName = this.tsParseEntityName();\n      }\n      if (!this.hasPrecedingLineBreak() && this.match(tt.lt)) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSTypeQuery\");\n    }\n\n    tsParseInOutModifiers = this.tsParseModifiers.bind(this, {\n      allowedModifiers: [\"in\", \"out\"],\n      disallowedModifiers: [\n        \"const\",\n        \"public\",\n        \"private\",\n        \"protected\",\n        \"readonly\",\n        \"declare\",\n        \"abstract\",\n        \"override\",\n      ],\n      errorTemplate: TSErrors.InvalidModifierOnTypeParameter,\n    });\n\n    tsParseConstModifier = this.tsParseModifiers.bind(this, {\n      allowedModifiers: [\"const\"],\n      // for better error recovery\n      disallowedModifiers: [\"in\", \"out\"],\n      errorTemplate: TSErrors.InvalidModifierOnTypeParameterPositions,\n    });\n\n    tsParseInOutConstModifiers = this.tsParseModifiers.bind(this, {\n      allowedModifiers: [\"in\", \"out\", \"const\"],\n      disallowedModifiers: [\n        \"public\",\n        \"private\",\n        \"protected\",\n        \"readonly\",\n        \"declare\",\n        \"abstract\",\n        \"override\",\n      ],\n      errorTemplate: TSErrors.InvalidModifierOnTypeParameter,\n    });\n\n    tsParseTypeParameter(\n      parseModifiers: (node: Undone<N.TsTypeParameter>) => void,\n    ): N.TsTypeParameter {\n      const node = this.startNode<N.TsTypeParameter>();\n\n      parseModifiers(node);\n\n      node.name = this.tsParseTypeParameterName();\n      node.constraint = this.tsEatThenParseType(tt._extends);\n      node.default = this.tsEatThenParseType(tt.eq);\n      return this.finishNode(node, \"TSTypeParameter\");\n    }\n\n    tsTryParseTypeParameters(\n      parseModifiers: (node: N.TsTypeParameter) => void,\n    ): N.TsTypeParameterDeclaration | undefined | null {\n      if (this.match(tt.lt)) {\n        return this.tsParseTypeParameters(parseModifiers);\n      }\n    }\n\n    tsParseTypeParameters(parseModifiers: (node: N.TsTypeParameter) => void) {\n      const node = this.startNode<N.TsTypeParameterDeclaration>();\n\n      if (this.match(tt.lt) || this.match(tt.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      const refTrailingCommaPos = { value: -1 };\n\n      node.params = this.tsParseBracketedList(\n        \"TypeParametersOrArguments\",\n        // @ts-expect-error refine typings\n        this.tsParseTypeParameter.bind(this, parseModifiers),\n        /* bracket */ false,\n        /* skipFirstToken */ true,\n        refTrailingCommaPos,\n      );\n      if (node.params.length === 0) {\n        this.raise(TSErrors.EmptyTypeParameters, { at: node });\n      }\n      if (refTrailingCommaPos.value !== -1) {\n        this.addExtra(node, \"trailingComma\", refTrailingCommaPos.value);\n      }\n      return this.finishNode(node, \"TSTypeParameterDeclaration\");\n    }\n\n    // Note: In TypeScript implementation we must provide `yieldContext` and `awaitContext`,\n    // but here it's always false, because this is only used for types.\n    tsFillSignature(\n      returnToken: TokenType,\n      signature: Undone<N.TsSignatureDeclaration>,\n    ): void {\n      // Arrow fns *must* have return token (`=>`). Normal functions can omit it.\n      const returnTokenRequired = returnToken === tt.arrow;\n\n      // https://github.com/babel/babel/issues/9231\n      const paramsKey = process.env.BABEL_8_BREAKING ? \"params\" : \"parameters\";\n      const returnTypeKey = process.env.BABEL_8_BREAKING\n        ? \"returnType\"\n        : \"typeAnnotation\";\n\n      signature.typeParameters = this.tsTryParseTypeParameters(\n        this.tsParseConstModifier,\n      );\n      this.expect(tt.parenL);\n      signature[paramsKey] = this.tsParseBindingListForSignature();\n      if (returnTokenRequired) {\n        signature[returnTypeKey] =\n          this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n      } else if (this.match(returnToken)) {\n        signature[returnTypeKey] =\n          this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n      }\n    }\n\n    tsParseBindingListForSignature(): Array<\n      N.Identifier | N.RestElement | N.ObjectPattern | N.ArrayPattern\n    > {\n      const list = super.parseBindingList(\n        tt.parenR,\n        charCodes.rightParenthesis,\n        ParseBindingListFlags.IS_FUNCTION_PARAMS,\n      );\n      for (const pattern of list) {\n        const { type } = pattern;\n        if (type === \"AssignmentPattern\" || type === \"TSParameterProperty\") {\n          this.raise(TSErrors.UnsupportedSignatureParameterKind, {\n            at: pattern,\n            type,\n          });\n        }\n      }\n      return list as Exclude<\n        (typeof list)[0],\n        N.AssignmentPattern | N.TSParameterProperty\n      >[];\n    }\n\n    tsParseTypeMemberSemicolon(): void {\n      if (!this.eat(tt.comma) && !this.isLineTerminator()) {\n        this.expect(tt.semi);\n      }\n    }\n\n    tsParseSignatureMember(\n      kind: \"TSCallSignatureDeclaration\" | \"TSConstructSignatureDeclaration\",\n      node: Undone<\n        N.TsCallSignatureDeclaration | N.TsConstructSignatureDeclaration\n      >,\n    ): N.TsCallSignatureDeclaration | N.TsConstructSignatureDeclaration {\n      this.tsFillSignature(tt.colon, node);\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(node, kind);\n    }\n\n    tsIsUnambiguouslyIndexSignature() {\n      this.next(); // Skip '{'\n      if (tokenIsIdentifier(this.state.type)) {\n        this.next();\n        return this.match(tt.colon);\n      }\n      return false;\n    }\n\n    tsTryParseIndexSignature(\n      node: Undone<N.TsIndexSignature>,\n    ): N.TsIndexSignature | undefined {\n      if (\n        !(\n          this.match(tt.bracketL) &&\n          this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this))\n        )\n      ) {\n        return;\n      }\n\n      this.expect(tt.bracketL);\n      const id = this.parseIdentifier();\n      id.typeAnnotation = this.tsParseTypeAnnotation();\n      this.resetEndLocation(id); // set end position to end of type\n\n      this.expect(tt.bracketR);\n      node.parameters = [id];\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) node.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(node, \"TSIndexSignature\");\n    }\n\n    tsParsePropertyOrMethodSignature(\n      node: N.TsPropertySignature | N.TsMethodSignature,\n      readonly: boolean,\n    ): N.TsPropertySignature | N.TsMethodSignature {\n      if (this.eat(tt.question)) node.optional = true;\n      const nodeAny: any = node;\n\n      if (this.match(tt.parenL) || this.match(tt.lt)) {\n        if (readonly) {\n          this.raise(TSErrors.ReadonlyForMethodSignature, { at: node });\n        }\n        const method: N.TsMethodSignature = nodeAny;\n        if (method.kind && this.match(tt.lt)) {\n          this.raise(TSErrors.AccesorCannotHaveTypeParameters, {\n            at: this.state.curPosition(),\n          });\n        }\n        this.tsFillSignature(tt.colon, method);\n        this.tsParseTypeMemberSemicolon();\n        const paramsKey = process.env.BABEL_8_BREAKING\n          ? \"params\"\n          : \"parameters\";\n        const returnTypeKey = process.env.BABEL_8_BREAKING\n          ? \"returnType\"\n          : \"typeAnnotation\";\n        if (method.kind === \"get\") {\n          if (method[paramsKey].length > 0) {\n            this.raise(Errors.BadGetterArity, { at: this.state.curPosition() });\n            if (this.isThisParam(method[paramsKey][0])) {\n              this.raise(TSErrors.AccesorCannotDeclareThisParameter, {\n                at: this.state.curPosition(),\n              });\n            }\n          }\n        } else if (method.kind === \"set\") {\n          if (method[paramsKey].length !== 1) {\n            this.raise(Errors.BadSetterArity, { at: this.state.curPosition() });\n          } else {\n            const firstParameter = method[paramsKey][0];\n            if (this.isThisParam(firstParameter)) {\n              this.raise(TSErrors.AccesorCannotDeclareThisParameter, {\n                at: this.state.curPosition(),\n              });\n            }\n            if (\n              firstParameter.type === \"Identifier\" &&\n              firstParameter.optional\n            ) {\n              this.raise(TSErrors.SetAccesorCannotHaveOptionalParameter, {\n                at: this.state.curPosition(),\n              });\n            }\n            if (firstParameter.type === \"RestElement\") {\n              this.raise(TSErrors.SetAccesorCannotHaveRestParameter, {\n                at: this.state.curPosition(),\n              });\n            }\n          }\n          if (method[returnTypeKey]) {\n            this.raise(TSErrors.SetAccesorCannotHaveReturnType, {\n              at: method[returnTypeKey],\n            });\n          }\n        } else {\n          method.kind = \"method\";\n        }\n        return this.finishNode(method, \"TSMethodSignature\");\n      } else {\n        const property: N.TsPropertySignature = nodeAny;\n        if (readonly) property.readonly = true;\n        const type = this.tsTryParseTypeAnnotation();\n        if (type) property.typeAnnotation = type;\n        this.tsParseTypeMemberSemicolon();\n        return this.finishNode(property, \"TSPropertySignature\");\n      }\n    }\n\n    tsParseTypeMember(): N.TsTypeElement {\n      const node: any = this.startNode();\n\n      if (this.match(tt.parenL) || this.match(tt.lt)) {\n        return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n      }\n\n      if (this.match(tt._new)) {\n        const id = this.startNode<N.Identifier>();\n        this.next();\n        if (this.match(tt.parenL) || this.match(tt.lt)) {\n          return this.tsParseSignatureMember(\n            \"TSConstructSignatureDeclaration\",\n            node,\n          );\n        } else {\n          node.key = this.createIdentifier(id, \"new\");\n          return this.tsParsePropertyOrMethodSignature(node, false);\n        }\n      }\n\n      this.tsParseModifiers(\n        {\n          allowedModifiers: [\"readonly\"],\n          disallowedModifiers: [\n            \"declare\",\n            \"abstract\",\n            \"private\",\n            \"protected\",\n            \"public\",\n            \"static\",\n            \"override\",\n          ],\n        },\n        node,\n      );\n\n      const idx = this.tsTryParseIndexSignature(node);\n      if (idx) {\n        return idx;\n      }\n\n      super.parsePropertyName(node);\n      if (\n        !node.computed &&\n        node.key.type === \"Identifier\" &&\n        (node.key.name === \"get\" || node.key.name === \"set\") &&\n        this.tsTokenCanFollowModifier()\n      ) {\n        node.kind = node.key.name;\n        super.parsePropertyName(node);\n      }\n      return this.tsParsePropertyOrMethodSignature(node, !!node.readonly);\n    }\n\n    tsParseTypeLiteral(): N.TsTypeLiteral {\n      const node = this.startNode<N.TsTypeLiteral>();\n      node.members = this.tsParseObjectTypeMembers();\n      return this.finishNode(node, \"TSTypeLiteral\");\n    }\n\n    tsParseObjectTypeMembers(): Array<N.TsTypeElement> {\n      this.expect(tt.braceL);\n      const members = this.tsParseList(\n        \"TypeMembers\",\n        this.tsParseTypeMember.bind(this),\n      );\n      this.expect(tt.braceR);\n      return members;\n    }\n\n    tsIsStartOfMappedType(): boolean {\n      this.next();\n      if (this.eat(tt.plusMin)) {\n        return this.isContextual(tt._readonly);\n      }\n      if (this.isContextual(tt._readonly)) {\n        this.next();\n      }\n      if (!this.match(tt.bracketL)) {\n        return false;\n      }\n      this.next();\n      if (!this.tsIsIdentifier()) {\n        return false;\n      }\n      this.next();\n      return this.match(tt._in);\n    }\n\n    tsParseMappedTypeParameter(): N.TsTypeParameter {\n      const node = this.startNode<N.TsTypeParameter>();\n      node.name = this.tsParseTypeParameterName();\n      node.constraint = this.tsExpectThenParseType(tt._in);\n      return this.finishNode(node, \"TSTypeParameter\");\n    }\n\n    tsParseMappedType(): N.TsMappedType {\n      const node = this.startNode<N.TsMappedType>();\n\n      this.expect(tt.braceL);\n\n      if (this.match(tt.plusMin)) {\n        node.readonly = this.state.value;\n        this.next();\n        this.expectContextual(tt._readonly);\n      } else if (this.eatContextual(tt._readonly)) {\n        node.readonly = true;\n      }\n\n      this.expect(tt.bracketL);\n      node.typeParameter = this.tsParseMappedTypeParameter();\n      node.nameType = this.eatContextual(tt._as) ? this.tsParseType() : null;\n\n      this.expect(tt.bracketR);\n\n      if (this.match(tt.plusMin)) {\n        node.optional = this.state.value;\n        this.next();\n        this.expect(tt.question);\n      } else if (this.eat(tt.question)) {\n        node.optional = true;\n      }\n\n      node.typeAnnotation = this.tsTryParseType();\n      this.semicolon();\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"TSMappedType\");\n    }\n\n    tsParseTupleType(): N.TsTupleType {\n      const node = this.startNode<N.TsTupleType>();\n      node.elementTypes = this.tsParseBracketedList(\n        \"TupleElementTypes\",\n        this.tsParseTupleElementType.bind(this),\n        /* bracket */ true,\n        /* skipFirstToken */ false,\n      );\n\n      // Validate the elementTypes to ensure that no mandatory elements\n      // follow optional elements\n      let seenOptionalElement = false;\n      node.elementTypes.forEach(elementNode => {\n        const { type } = elementNode;\n\n        if (\n          seenOptionalElement &&\n          type !== \"TSRestType\" &&\n          type !== \"TSOptionalType\" &&\n          !(type === \"TSNamedTupleMember\" && elementNode.optional)\n        ) {\n          this.raise(TSErrors.OptionalTypeBeforeRequired, {\n            at: elementNode,\n          });\n        }\n\n        seenOptionalElement ||=\n          (type === \"TSNamedTupleMember\" && elementNode.optional) ||\n          type === \"TSOptionalType\";\n      });\n\n      return this.finishNode(node, \"TSTupleType\");\n    }\n\n    tsParseTupleElementType(): N.TsNamedTupleMember | N.TsType {\n      // parses `...TsType[]`\n\n      const { startLoc } = this.state;\n\n      const rest = this.eat(tt.ellipsis);\n\n      let labeled: boolean;\n      let label: N.Identifier;\n      let optional: boolean;\n      let type: N.TsNamedTupleMember | N.TsType;\n\n      const isWord = tokenIsKeywordOrIdentifier(this.state.type);\n      const chAfterWord = isWord ? this.lookaheadCharCode() : null;\n      if (chAfterWord === charCodes.colon) {\n        labeled = true;\n        optional = false;\n        label = this.parseIdentifier(true);\n        this.expect(tt.colon);\n        type = this.tsParseType();\n      } else if (chAfterWord === charCodes.questionMark) {\n        optional = true;\n        const startLoc = this.state.startLoc;\n        const wordName = this.state.value;\n        const typeOrLabel = this.tsParseNonArrayType();\n\n        if (this.lookaheadCharCode() === charCodes.colon) {\n          labeled = true;\n          label = this.createIdentifier(\n            this.startNodeAt<N.Identifier>(startLoc),\n            wordName,\n          );\n          this.expect(tt.question);\n          this.expect(tt.colon);\n          type = this.tsParseType();\n        } else {\n          labeled = false;\n          type = typeOrLabel;\n          this.expect(tt.question);\n        }\n      } else {\n        type = this.tsParseType();\n        optional = this.eat(tt.question);\n        // In this case (labeled === true) could be only in invalid label.\n        // E.g. [x.y:type]\n        // An error is raised while processing node.\n        labeled = this.eat(tt.colon);\n      }\n\n      if (labeled) {\n        let labeledNode: Undone<N.TsNamedTupleMember>;\n        if (label) {\n          labeledNode = this.startNodeAtNode<N.TsNamedTupleMember>(label);\n          labeledNode.optional = optional;\n          labeledNode.label = label;\n          labeledNode.elementType = type;\n\n          if (this.eat(tt.question)) {\n            labeledNode.optional = true;\n            this.raise(TSErrors.TupleOptionalAfterType, {\n              at: this.state.lastTokStartLoc,\n            });\n          }\n        } else {\n          labeledNode = this.startNodeAtNode<N.TsNamedTupleMember>(type);\n          labeledNode.optional = optional;\n          this.raise(TSErrors.InvalidTupleMemberLabel, { at: type });\n          // @ts-expect-error This produces an invalid AST, but at least we don't drop\n          // nodes representing the invalid source.\n          labeledNode.label = type;\n          labeledNode.elementType = this.tsParseType();\n        }\n        type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n      } else if (optional) {\n        const optionalTypeNode = this.startNodeAtNode<N.TsOptionalType>(type);\n        optionalTypeNode.typeAnnotation = type;\n        type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n      }\n\n      if (rest) {\n        const restNode = this.startNodeAt<N.TsRestType>(startLoc);\n        restNode.typeAnnotation = type;\n        type = this.finishNode(restNode, \"TSRestType\");\n      }\n\n      return type;\n    }\n\n    tsParseParenthesizedType(): N.TsParenthesizedType {\n      const node = this.startNode<N.TsParenthesizedType>();\n      this.expect(tt.parenL);\n      node.typeAnnotation = this.tsParseType();\n      this.expect(tt.parenR);\n      return this.finishNode(node, \"TSParenthesizedType\");\n    }\n\n    tsParseFunctionOrConstructorType(\n      type: \"TSFunctionType\" | \"TSConstructorType\",\n      abstract?: boolean,\n    ): N.TsFunctionOrConstructorType {\n      const node = this.startNode<\n        N.TsFunctionOrConstructorType | N.TsConstructorType\n      >();\n      if (type === \"TSConstructorType\") {\n        (node as Undone<N.TsConstructorType>).abstract = !!abstract;\n        if (abstract) this.next();\n        this.next(); // eat `new`\n      }\n      this.tsInAllowConditionalTypesContext(() =>\n        this.tsFillSignature(tt.arrow, node),\n      );\n      return this.finishNode(node, type);\n    }\n\n    tsParseLiteralTypeNode(): N.TsLiteralType {\n      const node = this.startNode<N.TsLiteralType>();\n      switch (this.state.type) {\n        case tt.num:\n        case tt.bigint:\n        case tt.string:\n        case tt._true:\n        case tt._false:\n          // For compatibility to estree we cannot call parseLiteral directly here\n          // @ts-expect-error refine typings\n          node.literal = super.parseExprAtom();\n          break;\n        default:\n          this.unexpected();\n      }\n      return this.finishNode(node, \"TSLiteralType\");\n    }\n\n    tsParseTemplateLiteralType(): N.TsType {\n      const node = this.startNode<N.TsLiteralType>();\n      node.literal = super.parseTemplate(false);\n      return this.finishNode(node, \"TSLiteralType\");\n    }\n\n    parseTemplateSubstitution(): N.TsType | N.Node {\n      if (this.state.inType) return this.tsParseType();\n      return super.parseTemplateSubstitution();\n    }\n\n    tsParseThisTypeOrThisTypePredicate(): N.TsThisType | N.TsTypePredicate {\n      const thisKeyword = this.tsParseThisTypeNode();\n      if (this.isContextual(tt._is) && !this.hasPrecedingLineBreak()) {\n        return this.tsParseThisTypePredicate(thisKeyword);\n      } else {\n        return thisKeyword;\n      }\n    }\n\n    tsParseNonArrayType(): N.TsType {\n      switch (this.state.type) {\n        case tt.string:\n        case tt.num:\n        case tt.bigint:\n        case tt._true:\n        case tt._false:\n          return this.tsParseLiteralTypeNode();\n        case tt.plusMin:\n          if (this.state.value === \"-\") {\n            const node = this.startNode<N.TsLiteralType>();\n            const nextToken = this.lookahead();\n            if (nextToken.type !== tt.num && nextToken.type !== tt.bigint) {\n              this.unexpected();\n            }\n            // @ts-expect-error: parseMaybeUnary must returns unary expression\n            node.literal = this.parseMaybeUnary();\n            return this.finishNode(node, \"TSLiteralType\");\n          }\n          break;\n        case tt._this:\n          return this.tsParseThisTypeOrThisTypePredicate();\n        case tt._typeof:\n          return this.tsParseTypeQuery();\n        case tt._import:\n          return this.tsParseImportType();\n        case tt.braceL:\n          return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this))\n            ? this.tsParseMappedType()\n            : this.tsParseTypeLiteral();\n        case tt.bracketL:\n          return this.tsParseTupleType();\n        case tt.parenL:\n          if (process.env.BABEL_8_BREAKING) {\n            if (!this.options.createParenthesizedExpressions) {\n              const startLoc = this.state.startLoc;\n              this.next();\n              const type = this.tsParseType();\n              this.expect(tt.parenR);\n              this.addExtra(type, \"parenthesized\", true);\n              this.addExtra(type, \"parenStart\", startLoc.index);\n              return type;\n            }\n          }\n\n          return this.tsParseParenthesizedType();\n        case tt.templateNonTail:\n        case tt.templateTail:\n          return this.tsParseTemplateLiteralType();\n        default: {\n          const { type } = this.state;\n          if (\n            tokenIsIdentifier(type) ||\n            type === tt._void ||\n            type === tt._null\n          ) {\n            const nodeType =\n              type === tt._void\n                ? \"TSVoidKeyword\"\n                : type === tt._null\n                ? \"TSNullKeyword\"\n                : keywordTypeFromName(this.state.value);\n            if (\n              nodeType !== undefined &&\n              this.lookaheadCharCode() !== charCodes.dot\n            ) {\n              const node = this.startNode<N.TsKeywordType>();\n              this.next();\n              return this.finishNode(node, nodeType);\n            }\n            return this.tsParseTypeReference();\n          }\n        }\n      }\n\n      this.unexpected();\n    }\n\n    tsParseArrayTypeOrHigher(): N.TsType {\n      let type = this.tsParseNonArrayType();\n      while (!this.hasPrecedingLineBreak() && this.eat(tt.bracketL)) {\n        if (this.match(tt.bracketR)) {\n          const node = this.startNodeAtNode<N.TsArrayType>(type);\n          node.elementType = type;\n          this.expect(tt.bracketR);\n          type = this.finishNode(node, \"TSArrayType\");\n        } else {\n          const node = this.startNodeAtNode<N.TsIndexedAccessType>(type);\n          node.objectType = type;\n          node.indexType = this.tsParseType();\n          this.expect(tt.bracketR);\n          type = this.finishNode(node, \"TSIndexedAccessType\");\n        }\n      }\n      return type;\n    }\n\n    tsParseTypeOperator(): N.TsTypeOperator {\n      const node = this.startNode<N.TsTypeOperator>();\n      const operator = this.state.value;\n      this.next(); // eat operator\n      node.operator = operator;\n      node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n      if (operator === \"readonly\") {\n        this.tsCheckTypeAnnotationForReadOnly(\n          // @ts-expect-error todo(flow->ts)\n          node,\n        );\n      }\n\n      return this.finishNode(node, \"TSTypeOperator\");\n    }\n\n    tsCheckTypeAnnotationForReadOnly(node: N.Node) {\n      switch (node.typeAnnotation.type) {\n        case \"TSTupleType\":\n        case \"TSArrayType\":\n          return;\n        default:\n          this.raise(TSErrors.UnexpectedReadonly, { at: node });\n      }\n    }\n\n    tsParseInferType(): N.TsInferType {\n      const node = this.startNode<N.TsInferType>();\n      this.expectContextual(tt._infer);\n      const typeParameter = this.startNode<N.TsTypeParameter>();\n      typeParameter.name = this.tsParseTypeParameterName();\n      typeParameter.constraint = this.tsTryParse(() =>\n        this.tsParseConstraintForInferType(),\n      );\n      node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n      return this.finishNode(node, \"TSInferType\");\n    }\n\n    tsParseConstraintForInferType() {\n      if (this.eat(tt._extends)) {\n        const constraint = this.tsInDisallowConditionalTypesContext(() =>\n          this.tsParseType(),\n        );\n        if (\n          this.state.inDisallowConditionalTypesContext ||\n          !this.match(tt.question)\n        ) {\n          return constraint;\n        }\n      }\n    }\n\n    tsParseTypeOperatorOrHigher(): N.TsType {\n      const isTypeOperator =\n        tokenIsTSTypeOperator(this.state.type) && !this.state.containsEsc;\n      return isTypeOperator\n        ? this.tsParseTypeOperator()\n        : this.isContextual(tt._infer)\n        ? this.tsParseInferType()\n        : this.tsInAllowConditionalTypesContext(() =>\n            this.tsParseArrayTypeOrHigher(),\n          );\n    }\n\n    tsParseUnionOrIntersectionType(\n      kind: \"TSUnionType\" | \"TSIntersectionType\",\n      parseConstituentType: () => N.TsType,\n      operator: TokenType,\n    ): N.TsType {\n      const node = this.startNode<N.TsUnionType | N.TsIntersectionType>();\n      const hasLeadingOperator = this.eat(operator);\n      const types = [];\n      do {\n        types.push(parseConstituentType());\n      } while (this.eat(operator));\n      if (types.length === 1 && !hasLeadingOperator) {\n        return types[0];\n      }\n      node.types = types;\n      return this.finishNode(node, kind);\n    }\n\n    tsParseIntersectionTypeOrHigher(): N.TsType {\n      return this.tsParseUnionOrIntersectionType(\n        \"TSIntersectionType\",\n        this.tsParseTypeOperatorOrHigher.bind(this),\n        tt.bitwiseAND,\n      );\n    }\n\n    tsParseUnionTypeOrHigher() {\n      return this.tsParseUnionOrIntersectionType(\n        \"TSUnionType\",\n        this.tsParseIntersectionTypeOrHigher.bind(this),\n        tt.bitwiseOR,\n      );\n    }\n\n    tsIsStartOfFunctionType() {\n      if (this.match(tt.lt)) {\n        return true;\n      }\n      return (\n        this.match(tt.parenL) &&\n        this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this))\n      );\n    }\n\n    tsSkipParameterStart(): boolean {\n      if (tokenIsIdentifier(this.state.type) || this.match(tt._this)) {\n        this.next();\n        return true;\n      }\n\n      if (this.match(tt.braceL)) {\n        // Return true if we can parse an object pattern without errors\n        const { errors } = this.state;\n        const previousErrorCount = errors.length;\n        try {\n          this.parseObjectLike(tt.braceR, true);\n          return errors.length === previousErrorCount;\n        } catch {\n          return false;\n        }\n      }\n\n      if (this.match(tt.bracketL)) {\n        this.next();\n        // Return true if we can parse an array pattern without errors\n        const { errors } = this.state;\n        const previousErrorCount = errors.length;\n        try {\n          super.parseBindingList(\n            tt.bracketR,\n            charCodes.rightSquareBracket,\n            ParseBindingListFlags.ALLOW_EMPTY,\n          );\n          return errors.length === previousErrorCount;\n        } catch {\n          return false;\n        }\n      }\n\n      return false;\n    }\n\n    tsIsUnambiguouslyStartOfFunctionType(): boolean {\n      this.next();\n      if (this.match(tt.parenR) || this.match(tt.ellipsis)) {\n        // ( )\n        // ( ...\n        return true;\n      }\n      if (this.tsSkipParameterStart()) {\n        if (\n          this.match(tt.colon) ||\n          this.match(tt.comma) ||\n          this.match(tt.question) ||\n          this.match(tt.eq)\n        ) {\n          // ( xxx :\n          // ( xxx ,\n          // ( xxx ?\n          // ( xxx =\n          return true;\n        }\n        if (this.match(tt.parenR)) {\n          this.next();\n          if (this.match(tt.arrow)) {\n            // ( xxx ) =>\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n\n    tsParseTypeOrTypePredicateAnnotation(\n      returnToken: TokenType,\n    ): N.TsTypeAnnotation {\n      return this.tsInType(() => {\n        const t = this.startNode<N.TsTypeAnnotation>();\n        this.expect(returnToken);\n\n        const node = this.startNode<N.TsTypePredicate>();\n\n        const asserts = !!this.tsTryParse(\n          this.tsParseTypePredicateAsserts.bind(this),\n        );\n\n        if (asserts && this.match(tt._this)) {\n          // When asserts is false, thisKeyword is handled by tsParseNonArrayType\n          // : asserts this is type\n          let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n          // if it turns out to be a `TSThisType`, wrap it with `TSTypePredicate`\n          // : asserts this\n          if (thisTypePredicate.type === \"TSThisType\") {\n            node.parameterName = thisTypePredicate;\n            node.asserts = true;\n            (node as N.TsTypePredicate).typeAnnotation = null;\n            thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n          } else {\n            this.resetStartLocationFromNode(thisTypePredicate, node);\n            thisTypePredicate.asserts = true;\n          }\n          t.typeAnnotation = thisTypePredicate;\n          return this.finishNode(t, \"TSTypeAnnotation\");\n        }\n\n        const typePredicateVariable =\n          this.tsIsIdentifier() &&\n          this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n\n        if (!typePredicateVariable) {\n          if (!asserts) {\n            // : type\n            return this.tsParseTypeAnnotation(/* eatColon */ false, t);\n          }\n\n          // : asserts foo\n          node.parameterName = this.parseIdentifier();\n          node.asserts = asserts;\n          (node as N.TsTypePredicate).typeAnnotation = null;\n          t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n          return this.finishNode(t, \"TSTypeAnnotation\");\n        }\n\n        // : asserts foo is type\n        const type = this.tsParseTypeAnnotation(/* eatColon */ false);\n        node.parameterName = typePredicateVariable;\n        node.typeAnnotation = type;\n        node.asserts = asserts;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      });\n    }\n\n    tsTryParseTypeOrTypePredicateAnnotation(): N.TsTypeAnnotation | undefined {\n      if (this.match(tt.colon)) {\n        return this.tsParseTypeOrTypePredicateAnnotation(tt.colon);\n      }\n    }\n\n    tsTryParseTypeAnnotation(): N.TsTypeAnnotation | undefined {\n      if (this.match(tt.colon)) {\n        return this.tsParseTypeAnnotation();\n      }\n    }\n\n    tsTryParseType(): N.TsType | undefined {\n      return this.tsEatThenParseType(tt.colon);\n    }\n\n    tsParseTypePredicatePrefix(): N.Identifier | undefined {\n      const id = this.parseIdentifier();\n      if (this.isContextual(tt._is) && !this.hasPrecedingLineBreak()) {\n        this.next();\n        return id;\n      }\n    }\n\n    tsParseTypePredicateAsserts(): boolean {\n      if (this.state.type !== tt._asserts) {\n        return false;\n      }\n      const containsEsc = this.state.containsEsc;\n      this.next();\n      if (!tokenIsIdentifier(this.state.type) && !this.match(tt._this)) {\n        return false;\n      }\n\n      if (containsEsc) {\n        this.raise(Errors.InvalidEscapedReservedWord, {\n          at: this.state.lastTokStartLoc,\n          reservedWord: \"asserts\",\n        });\n      }\n\n      return true;\n    }\n\n    tsParseTypeAnnotation(\n      eatColon = true,\n      t: Undone<N.TsTypeAnnotation> = this.startNode<N.TsTypeAnnotation>(),\n    ): N.TsTypeAnnotation {\n      this.tsInType(() => {\n        if (eatColon) this.expect(tt.colon);\n        t.typeAnnotation = this.tsParseType();\n      });\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    }\n\n    /** Be sure to be in a type context before calling this, using `tsInType`. */\n    tsParseType(): N.TsType {\n      // Need to set `state.inType` so that we don't parse JSX in a type context.\n      assert(this.state.inType);\n      const type = this.tsParseNonConditionalType();\n\n      if (\n        this.state.inDisallowConditionalTypesContext ||\n        this.hasPrecedingLineBreak() ||\n        !this.eat(tt._extends)\n      ) {\n        return type;\n      }\n      const node = this.startNodeAtNode<N.TsConditionalType>(type);\n      node.checkType = type;\n\n      node.extendsType = this.tsInDisallowConditionalTypesContext(() =>\n        this.tsParseNonConditionalType(),\n      );\n\n      this.expect(tt.question);\n      node.trueType = this.tsInAllowConditionalTypesContext(() =>\n        this.tsParseType(),\n      );\n\n      this.expect(tt.colon);\n      node.falseType = this.tsInAllowConditionalTypesContext(() =>\n        this.tsParseType(),\n      );\n\n      return this.finishNode(node, \"TSConditionalType\");\n    }\n\n    isAbstractConstructorSignature(): boolean {\n      return (\n        this.isContextual(tt._abstract) && this.lookahead().type === tt._new\n      );\n    }\n\n    tsParseNonConditionalType(): N.TsType {\n      if (this.tsIsStartOfFunctionType()) {\n        return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n      }\n      if (this.match(tt._new)) {\n        // As in `new () => Date`\n        return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n      } else if (this.isAbstractConstructorSignature()) {\n        // As in `abstract new () => Date`\n        return this.tsParseFunctionOrConstructorType(\n          \"TSConstructorType\",\n          /* abstract */ true,\n        );\n      }\n      return this.tsParseUnionTypeOrHigher();\n    }\n\n    tsParseTypeAssertion(): N.TsTypeAssertion {\n      if (this.getPluginOption(\"typescript\", \"disallowAmbiguousJSXLike\")) {\n        this.raise(TSErrors.ReservedTypeAssertion, { at: this.state.startLoc });\n      }\n\n      const node = this.startNode<N.TsTypeAssertion>();\n      node.typeAnnotation = this.tsInType(() => {\n        this.next(); // \"<\"\n        return this.match(tt._const)\n          ? this.tsParseTypeReference()\n          : this.tsParseType();\n      });\n      this.expect(tt.gt);\n      node.expression = this.parseMaybeUnary();\n      return this.finishNode(node, \"TSTypeAssertion\");\n    }\n\n    tsParseHeritageClause(\n      token: \"extends\" | \"implements\",\n    ): Array<N.TsExpressionWithTypeArguments> {\n      const originalStartLoc = this.state.startLoc;\n\n      const delimitedList = this.tsParseDelimitedList(\n        \"HeritageClauseElement\",\n        () => {\n          const node = this.startNode<N.TsExpressionWithTypeArguments>();\n          node.expression = this.tsParseEntityName();\n          if (this.match(tt.lt)) {\n            node.typeParameters = this.tsParseTypeArguments();\n          }\n\n          return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n        },\n      );\n\n      if (!delimitedList.length) {\n        this.raise(TSErrors.EmptyHeritageClauseType, {\n          at: originalStartLoc,\n          token,\n        });\n      }\n\n      return delimitedList;\n    }\n\n    tsParseInterfaceDeclaration(\n      node: Undone<N.TsInterfaceDeclaration>,\n      properties: {\n        declare?: true;\n      } = {},\n    ): N.TsInterfaceDeclaration | null {\n      if (this.hasFollowingLineBreak()) return null;\n      this.expectContextual(tt._interface);\n      if (properties.declare) node.declare = true;\n      if (tokenIsIdentifier(this.state.type)) {\n        node.id = this.parseIdentifier();\n        this.checkIdentifier(node.id, BindingFlag.TYPE_TS_INTERFACE);\n      } else {\n        node.id = null;\n        this.raise(TSErrors.MissingInterfaceName, { at: this.state.startLoc });\n      }\n\n      node.typeParameters = this.tsTryParseTypeParameters(\n        this.tsParseInOutConstModifiers,\n      );\n      if (this.eat(tt._extends)) {\n        node.extends = this.tsParseHeritageClause(\"extends\");\n      }\n      const body = this.startNode<N.TSInterfaceBody>();\n      body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n      node.body = this.finishNode(body, \"TSInterfaceBody\");\n      return this.finishNode(node, \"TSInterfaceDeclaration\");\n    }\n\n    tsParseTypeAliasDeclaration(\n      node: N.TsTypeAliasDeclaration,\n    ): N.TsTypeAliasDeclaration {\n      node.id = this.parseIdentifier();\n      this.checkIdentifier(node.id, BindingFlag.TYPE_TS_TYPE);\n\n      node.typeAnnotation = this.tsInType(() => {\n        node.typeParameters = this.tsTryParseTypeParameters(\n          this.tsParseInOutModifiers,\n        );\n\n        this.expect(tt.eq);\n\n        if (\n          this.isContextual(tt._intrinsic) &&\n          this.lookahead().type !== tt.dot\n        ) {\n          const node = this.startNode<N.TsKeywordType>();\n          this.next();\n          return this.finishNode(node, \"TSIntrinsicKeyword\");\n        }\n\n        return this.tsParseType();\n      });\n\n      this.semicolon();\n      return this.finishNode(node, \"TSTypeAliasDeclaration\");\n    }\n\n    tsInNoContext<T>(cb: () => T): T {\n      const oldContext = this.state.context;\n      this.state.context = [oldContext[0]];\n      try {\n        return cb();\n      } finally {\n        this.state.context = oldContext;\n      }\n    }\n\n    /**\n     * Runs `cb` in a type context.\n     * This should be called one token *before* the first type token,\n     * so that the call to `next()` is run in type context.\n     */\n    tsInType<T>(cb: () => T): T {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      try {\n        return cb();\n      } finally {\n        this.state.inType = oldInType;\n      }\n    }\n\n    tsInDisallowConditionalTypesContext<T>(cb: () => T): T {\n      const oldInDisallowConditionalTypesContext =\n        this.state.inDisallowConditionalTypesContext;\n      this.state.inDisallowConditionalTypesContext = true;\n      try {\n        return cb();\n      } finally {\n        this.state.inDisallowConditionalTypesContext =\n          oldInDisallowConditionalTypesContext;\n      }\n    }\n\n    tsInAllowConditionalTypesContext<T>(cb: () => T): T {\n      const oldInDisallowConditionalTypesContext =\n        this.state.inDisallowConditionalTypesContext;\n      this.state.inDisallowConditionalTypesContext = false;\n      try {\n        return cb();\n      } finally {\n        this.state.inDisallowConditionalTypesContext =\n          oldInDisallowConditionalTypesContext;\n      }\n    }\n\n    tsEatThenParseType(token: TokenType): N.TsType | undefined {\n      if (this.match(token)) {\n        return this.tsNextThenParseType();\n      }\n    }\n\n    tsExpectThenParseType(token: TokenType): N.TsType {\n      return this.tsInType(() => {\n        this.expect(token);\n        return this.tsParseType();\n      });\n    }\n\n    tsNextThenParseType(): N.TsType {\n      return this.tsInType(() => {\n        this.next();\n        return this.tsParseType();\n      });\n    }\n\n    tsParseEnumMember(): N.TsEnumMember {\n      const node = this.startNode<N.TsEnumMember>();\n      // Computed property names are grammar errors in an enum, so accept just string literal or identifier.\n      node.id = this.match(tt.string)\n        ? super.parseStringLiteral(this.state.value)\n        : this.parseIdentifier(/* liberal */ true);\n      if (this.eat(tt.eq)) {\n        node.initializer = super.parseMaybeAssignAllowIn();\n      }\n      return this.finishNode(node, \"TSEnumMember\");\n    }\n\n    tsParseEnumDeclaration(\n      node: Undone<N.TsEnumDeclaration>,\n      properties: {\n        const?: true;\n        declare?: true;\n      } = {},\n    ): N.TsEnumDeclaration {\n      if (properties.const) node.const = true;\n      if (properties.declare) node.declare = true;\n      this.expectContextual(tt._enum);\n      node.id = this.parseIdentifier();\n      this.checkIdentifier(\n        node.id,\n        node.const ? BindingFlag.TYPE_TS_CONST_ENUM : BindingFlag.TYPE_TS_ENUM,\n      );\n\n      this.expect(tt.braceL);\n      node.members = this.tsParseDelimitedList(\n        \"EnumMembers\",\n        this.tsParseEnumMember.bind(this),\n      );\n      this.expect(tt.braceR);\n      return this.finishNode(node, \"TSEnumDeclaration\");\n    }\n\n    tsParseModuleBlock(): N.TsModuleBlock {\n      const node = this.startNode<N.TsModuleBlock>();\n      this.scope.enter(ScopeFlag.OTHER);\n\n      this.expect(tt.braceL);\n      // Inside of a module block is considered \"top-level\", meaning it can have imports and exports.\n      super.parseBlockOrModuleBlockBody(\n        (node.body = []),\n        /* directives */ undefined,\n        /* topLevel */ true,\n        /* end */ tt.braceR,\n      );\n      this.scope.exit();\n      return this.finishNode(node, \"TSModuleBlock\");\n    }\n\n    tsParseModuleOrNamespaceDeclaration(\n      node: Undone<N.TsModuleDeclaration>,\n      nested: boolean = false,\n    ): N.TsModuleDeclaration {\n      node.id = this.parseIdentifier();\n\n      if (!nested) {\n        this.checkIdentifier(node.id, BindingFlag.TYPE_TS_NAMESPACE);\n      }\n\n      if (this.eat(tt.dot)) {\n        const inner = this.startNode<N.TsModuleDeclaration>();\n        this.tsParseModuleOrNamespaceDeclaration(inner, true);\n        // @ts-expect-error Fixme: refine typings\n        node.body = inner;\n      } else {\n        this.scope.enter(ScopeFlag.TS_MODULE);\n        this.prodParam.enter(PARAM);\n        node.body = this.tsParseModuleBlock();\n        this.prodParam.exit();\n        this.scope.exit();\n      }\n      return this.finishNode(node, \"TSModuleDeclaration\");\n    }\n\n    tsParseAmbientExternalModuleDeclaration(\n      node: N.TsModuleDeclaration,\n    ): N.TsModuleDeclaration {\n      if (this.isContextual(tt._global)) {\n        node.global = true;\n        node.id = this.parseIdentifier();\n      } else if (this.match(tt.string)) {\n        node.id = super.parseStringLiteral(this.state.value);\n      } else {\n        this.unexpected();\n      }\n      if (this.match(tt.braceL)) {\n        this.scope.enter(ScopeFlag.TS_MODULE);\n        this.prodParam.enter(PARAM);\n        node.body = this.tsParseModuleBlock();\n        this.prodParam.exit();\n        this.scope.exit();\n      } else {\n        this.semicolon();\n      }\n\n      return this.finishNode(node, \"TSModuleDeclaration\");\n    }\n\n    tsParseImportEqualsDeclaration(\n      node: Undone<N.TsImportEqualsDeclaration>,\n      maybeDefaultIdentifier?: N.Identifier | null,\n      isExport?: boolean,\n    ): N.TsImportEqualsDeclaration {\n      node.isExport = isExport || false;\n      node.id = maybeDefaultIdentifier || this.parseIdentifier();\n      this.checkIdentifier(node.id, BindingFlag.TYPE_TS_VALUE_IMPORT);\n      this.expect(tt.eq);\n      const moduleReference = this.tsParseModuleReference();\n      if (\n        node.importKind === \"type\" &&\n        moduleReference.type !== \"TSExternalModuleReference\"\n      ) {\n        this.raise(TSErrors.ImportAliasHasImportType, {\n          at: moduleReference,\n        });\n      }\n      node.moduleReference = moduleReference;\n      this.semicolon();\n      return this.finishNode(node, \"TSImportEqualsDeclaration\");\n    }\n\n    tsIsExternalModuleReference(): boolean {\n      return (\n        this.isContextual(tt._require) &&\n        this.lookaheadCharCode() === charCodes.leftParenthesis\n      );\n    }\n\n    tsParseModuleReference(): N.TsModuleReference {\n      return this.tsIsExternalModuleReference()\n        ? this.tsParseExternalModuleReference()\n        : this.tsParseEntityName(/* allowReservedWords */ false);\n    }\n\n    tsParseExternalModuleReference(): N.TsExternalModuleReference {\n      const node = this.startNode<N.TsExternalModuleReference>();\n      this.expectContextual(tt._require);\n      this.expect(tt.parenL);\n      if (!this.match(tt.string)) {\n        this.unexpected();\n      }\n      // For compatibility to estree we cannot call parseLiteral directly here\n      node.expression = super.parseExprAtom() as N.StringLiteral;\n      this.expect(tt.parenR);\n      this.sawUnambiguousESM = true;\n      return this.finishNode(node, \"TSExternalModuleReference\");\n    }\n\n    // Utilities\n\n    tsLookAhead<T>(f: () => T): T {\n      const state = this.state.clone();\n      const res = f();\n      this.state = state;\n      return res;\n    }\n\n    tsTryParseAndCatch<T extends N.NodeBase | undefined | null>(\n      f: () => T,\n    ): T | undefined | null {\n      const result = this.tryParse(\n        abort =>\n          // @ts-expect-error todo(flow->ts)\n          f() || abort(),\n      );\n\n      if (result.aborted || !result.node) return;\n      if (result.error) this.state = result.failState;\n      // @ts-expect-error refine typings\n      return result.node;\n    }\n\n    tsTryParse<T>(f: () => T | undefined | false): T | undefined {\n      const state = this.state.clone();\n      const result = f();\n      if (result !== undefined && result !== false) {\n        return result;\n      }\n      this.state = state;\n    }\n\n    tsTryParseDeclare(nany: any): N.Declaration | undefined {\n      if (this.isLineTerminator()) {\n        return;\n      }\n      let startType = this.state.type;\n      let kind: \"let\" | null;\n\n      if (this.isContextual(tt._let)) {\n        startType = tt._var;\n        kind = \"let\";\n      }\n\n      // @ts-expect-error refine typings\n      return this.tsInAmbientContext(() => {\n        switch (startType) {\n          case tt._function:\n            nany.declare = true;\n            return super.parseFunctionStatement(\n              nany,\n              /* async */ false,\n              /* isHangingDeclaration */ false,\n            );\n          case tt._class:\n            // While this is also set by tsParseExpressionStatement, we need to set it\n            // before parsing the class declaration to know how to register it in the scope.\n            nany.declare = true;\n            return this.parseClass(\n              nany,\n              /* isStatement */ true,\n              /* optionalId */ false,\n            );\n          case tt._enum:\n            return this.tsParseEnumDeclaration(nany, { declare: true });\n          case tt._global:\n            return this.tsParseAmbientExternalModuleDeclaration(nany);\n          case tt._const:\n          case tt._var:\n            if (!this.match(tt._const) || !this.isLookaheadContextual(\"enum\")) {\n              nany.declare = true;\n              return this.parseVarStatement(\n                nany,\n                kind || this.state.value,\n                true,\n              );\n            }\n\n            // `const enum = 0;` not allowed because \"enum\" is a strict mode reserved word.\n            this.expect(tt._const);\n            return this.tsParseEnumDeclaration(nany, {\n              const: true,\n              declare: true,\n            });\n          case tt._interface: {\n            const result = this.tsParseInterfaceDeclaration(nany, {\n              declare: true,\n            });\n            if (result) return result;\n          }\n          // fallthrough\n          default:\n            if (tokenIsIdentifier(startType)) {\n              return this.tsParseDeclaration(\n                nany,\n                this.state.value,\n                /* next */ true,\n                /* decorators */ null,\n              );\n            }\n        }\n      });\n    }\n\n    // Note: this won't be called unless the keyword is allowed in `shouldParseExportDeclaration`.\n    tsTryParseExportDeclaration(): N.Declaration | undefined {\n      return this.tsParseDeclaration(\n        this.startNode(),\n        this.state.value,\n        /* next */ true,\n        /* decorators */ null,\n      );\n    }\n\n    tsParseExpressionStatement(\n      node: Undone<N.TsModuleDeclaration>,\n      expr: N.Identifier,\n      decorators: N.Decorator[] | null,\n    ): N.Declaration | undefined {\n      switch (expr.name) {\n        case \"declare\": {\n          const declaration = this.tsTryParseDeclare(node);\n          if (declaration) {\n            declaration.declare = true;\n          }\n          return declaration;\n        }\n        case \"global\":\n          // `global { }` (with no `declare`) may appear inside an ambient module declaration.\n          // Would like to use tsParseAmbientExternalModuleDeclaration here, but already ran past \"global\".\n          if (this.match(tt.braceL)) {\n            this.scope.enter(ScopeFlag.TS_MODULE);\n            this.prodParam.enter(PARAM);\n            const mod = node;\n            mod.global = true;\n            mod.id = expr;\n            mod.body = this.tsParseModuleBlock();\n            this.scope.exit();\n            this.prodParam.exit();\n            return this.finishNode(mod, \"TSModuleDeclaration\");\n          }\n          break;\n\n        default:\n          return this.tsParseDeclaration(\n            node,\n            expr.name,\n            /* next */ false,\n            decorators,\n          );\n      }\n    }\n\n    // Common to tsTryParseDeclare, tsTryParseExportDeclaration, and tsParseExpressionStatement.\n    tsParseDeclaration(\n      node: any,\n      value: string,\n      next: boolean,\n      decorators: N.Decorator[] | null,\n    ): N.Declaration | undefined | null {\n      // no declaration apart from enum can be followed by a line break.\n      switch (value) {\n        case \"abstract\":\n          if (\n            this.tsCheckLineTerminator(next) &&\n            (this.match(tt._class) || tokenIsIdentifier(this.state.type))\n          ) {\n            return this.tsParseAbstractDeclaration(node, decorators);\n          }\n          break;\n\n        case \"module\":\n          if (this.tsCheckLineTerminator(next)) {\n            if (this.match(tt.string)) {\n              return this.tsParseAmbientExternalModuleDeclaration(node);\n            } else if (tokenIsIdentifier(this.state.type)) {\n              return this.tsParseModuleOrNamespaceDeclaration(node);\n            }\n          }\n          break;\n\n        case \"namespace\":\n          if (\n            this.tsCheckLineTerminator(next) &&\n            tokenIsIdentifier(this.state.type)\n          ) {\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n          break;\n\n        case \"type\":\n          if (\n            this.tsCheckLineTerminator(next) &&\n            tokenIsIdentifier(this.state.type)\n          ) {\n            return this.tsParseTypeAliasDeclaration(node);\n          }\n          break;\n      }\n    }\n\n    tsCheckLineTerminator(next: boolean) {\n      if (next) {\n        if (this.hasFollowingLineBreak()) return false;\n        this.next();\n        return true;\n      }\n      return !this.isLineTerminator();\n    }\n\n    tsTryParseGenericAsyncArrowFunction(\n      startLoc: Position,\n    ): N.ArrowFunctionExpression | undefined {\n      if (!this.match(tt.lt)) return;\n\n      const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n      this.state.maybeInArrowParameters = true;\n\n      const res: Undone<N.ArrowFunctionExpression> | undefined =\n        this.tsTryParseAndCatch(() => {\n          const node = this.startNodeAt<N.ArrowFunctionExpression>(startLoc);\n          node.typeParameters = this.tsParseTypeParameters(\n            this.tsParseConstModifier,\n          );\n          // Don't use overloaded parseFunctionParams which would look for \"<\" again.\n          super.parseFunctionParams(node);\n          node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n          this.expect(tt.arrow);\n          return node;\n        });\n\n      this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n      if (!res) return;\n\n      return super.parseArrowExpression(\n        res,\n        /* params are already set */ null,\n        /* async */ true,\n      );\n    }\n\n    // Used when parsing type arguments from ES productions, where the first token\n    // has been created without state.inType. Thus we need to rescan the lt token.\n    tsParseTypeArgumentsInExpression(): N.TsTypeParameterInstantiation | void {\n      if (this.reScan_lt() !== tt.lt) return;\n      return this.tsParseTypeArguments();\n    }\n\n    tsParseTypeArguments(): N.TsTypeParameterInstantiation {\n      const node = this.startNode<N.TsTypeParameterInstantiation>();\n      node.params = this.tsInType(() =>\n        // Temporarily remove a JSX parsing context, which makes us scan different tokens.\n        this.tsInNoContext(() => {\n          this.expect(tt.lt);\n          return this.tsParseDelimitedList(\n            \"TypeParametersOrArguments\",\n            this.tsParseType.bind(this),\n          );\n        }),\n      );\n      if (node.params.length === 0) {\n        this.raise(TSErrors.EmptyTypeArguments, { at: node });\n      } else if (!this.state.inType && this.curContext() === tc.brace) {\n        // rescan `>` when we are no longer in type context and JSX parsing context\n        // since it was tokenized when `inType` is `true`.\n        this.reScan_lt_gt();\n      }\n      this.expect(tt.gt);\n      return this.finishNode(node, \"TSTypeParameterInstantiation\");\n    }\n\n    tsIsDeclarationStart(): boolean {\n      return tokenIsTSDeclarationStart(this.state.type);\n    }\n\n    // ======================================================\n    // OVERRIDES\n    // ======================================================\n\n    isExportDefaultSpecifier(): boolean {\n      if (this.tsIsDeclarationStart()) return false;\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseAssignableListItem(\n      flags: ParseBindingListFlags,\n      decorators: N.Decorator[],\n    ): N.Pattern | N.TSParameterProperty {\n      // Store original location to include modifiers in range\n      const startLoc = this.state.startLoc;\n\n      const modified: ModifierBase = {};\n      this.tsParseModifiers(\n        {\n          allowedModifiers: [\n            \"public\",\n            \"private\",\n            \"protected\",\n            \"override\",\n            \"readonly\",\n          ],\n        },\n        modified,\n      );\n      const accessibility = modified.accessibility;\n      const override = modified.override;\n      const readonly = modified.readonly;\n      if (\n        !(flags & ParseBindingListFlags.IS_CONSTRUCTOR_PARAMS) &&\n        (accessibility || readonly || override)\n      ) {\n        this.raise(TSErrors.UnexpectedParameterModifier, { at: startLoc });\n      }\n\n      const left = this.parseMaybeDefault();\n      this.parseAssignableListItemTypes(left, flags);\n      const elt = this.parseMaybeDefault(left.loc.start, left);\n      if (accessibility || readonly || override) {\n        const pp = this.startNodeAt<N.TSParameterProperty>(startLoc);\n        if (decorators.length) {\n          pp.decorators = decorators;\n        }\n        if (accessibility) pp.accessibility = accessibility;\n        if (readonly) pp.readonly = readonly;\n        if (override) pp.override = override;\n        if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n          this.raise(TSErrors.UnsupportedParameterPropertyKind, { at: pp });\n        }\n        pp.parameter = elt as any as N.Identifier | N.AssignmentPattern;\n        return this.finishNode(pp, \"TSParameterProperty\");\n      }\n\n      if (decorators.length) {\n        left.decorators = decorators;\n      }\n\n      return elt;\n    }\n\n    isSimpleParameter(node: N.Pattern | N.TSParameterProperty) {\n      return (\n        (node.type === \"TSParameterProperty\" &&\n          super.isSimpleParameter(node.parameter)) ||\n        super.isSimpleParameter(node)\n      );\n    }\n\n    tsDisallowOptionalPattern(node: Undone<N.Function>) {\n      for (const param of node.params) {\n        if (\n          param.type !== \"Identifier\" &&\n          (param as any).optional &&\n          !this.state.isAmbientContext\n        ) {\n          this.raise(TSErrors.PatternIsOptional, { at: param });\n        }\n      }\n    }\n\n    setArrowFunctionParameters(\n      node: Undone<N.ArrowFunctionExpression>,\n      params: N.Expression[],\n      trailingCommaLoc?: Position | null,\n    ): void {\n      super.setArrowFunctionParameters(node, params, trailingCommaLoc);\n      this.tsDisallowOptionalPattern(node);\n    }\n\n    parseFunctionBodyAndFinish<\n      T extends\n        | N.Function\n        | N.TSDeclareMethod\n        | N.TSDeclareFunction\n        | N.ClassPrivateMethod,\n    >(node: Undone<T>, type: T[\"type\"], isMethod: boolean = false): T {\n      if (this.match(tt.colon)) {\n        node.returnType = this.tsParseTypeOrTypePredicateAnnotation(tt.colon);\n      }\n\n      const bodilessType =\n        type === \"FunctionDeclaration\"\n          ? \"TSDeclareFunction\"\n          : type === \"ClassMethod\" || type === \"ClassPrivateMethod\"\n          ? \"TSDeclareMethod\"\n          : undefined;\n      if (bodilessType && !this.match(tt.braceL) && this.isLineTerminator()) {\n        return this.finishNode(node, bodilessType);\n      }\n      if (bodilessType === \"TSDeclareFunction\" && this.state.isAmbientContext) {\n        this.raise(TSErrors.DeclareFunctionHasImplementation, { at: node });\n        if ((node as Undone<N.FunctionDeclaration>).declare) {\n          return super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n        }\n      }\n      this.tsDisallowOptionalPattern(node);\n\n      return super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    registerFunctionStatementId(node: N.Function): void {\n      if (!node.body && node.id) {\n        // Function ids are validated after parsing their body.\n        // For bodiless function, we need to do it here.\n        this.checkIdentifier(node.id, BindingFlag.TYPE_TS_AMBIENT);\n      } else {\n        super.registerFunctionStatementId(node);\n      }\n    }\n\n    tsCheckForInvalidTypeCasts(items: Array<N.Expression | undefined | null>) {\n      items.forEach(node => {\n        if (node?.type === \"TSTypeCastExpression\") {\n          this.raise(TSErrors.UnexpectedTypeAnnotation, {\n            at: node.typeAnnotation,\n          });\n        }\n      });\n    }\n\n    toReferencedList(\n      exprList: Array<N.Expression | undefined | null>,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      isInParens?: boolean,\n    ): Array<N.Expression | undefined | null> {\n      // Handles invalid scenarios like: `f(a:b)`, `(a:b);`, and `(a:b,c:d)`.\n      //\n      // Note that `f<T>(a:b)` goes through a different path and is handled\n      // in `parseSubscript` directly.\n      this.tsCheckForInvalidTypeCasts(exprList);\n      return exprList;\n    }\n\n    parseArrayLike(\n      close: TokenType,\n      canBePattern: boolean,\n      isTuple: boolean,\n      refExpressionErrors?: ExpressionErrors | null,\n    ): N.ArrayExpression | N.TupleExpression {\n      const node = super.parseArrayLike(\n        close,\n        canBePattern,\n        isTuple,\n        refExpressionErrors,\n      );\n\n      if (node.type === \"ArrayExpression\") {\n        this.tsCheckForInvalidTypeCasts(node.elements);\n      }\n\n      return node;\n    }\n\n    parseSubscript(\n      base: N.Expression,\n\n      startLoc: Position,\n      noCalls: boolean | undefined | null,\n      state: N.ParseSubscriptState,\n    ): N.Expression {\n      if (!this.hasPrecedingLineBreak() && this.match(tt.bang)) {\n        // When ! is consumed as a postfix operator (non-null assertion),\n        // disallow JSX tag forming after. e.g. When parsing `p! < n.p!`\n        // `<n.p` can not be a start of JSX tag\n        this.state.canStartJSXElement = false;\n        this.next();\n\n        const nonNullExpression =\n          this.startNodeAt<N.TsNonNullExpression>(startLoc);\n        nonNullExpression.expression = base;\n        return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n      }\n\n      let isOptionalCall = false;\n      if (\n        this.match(tt.questionDot) &&\n        this.lookaheadCharCode() === charCodes.lessThan\n      ) {\n        if (noCalls) {\n          state.stop = true;\n          return base;\n        }\n        state.optionalChainMember = isOptionalCall = true;\n        this.next();\n      }\n\n      // handles 'f<<T>'\n      if (this.match(tt.lt) || this.match(tt.bitShiftL)) {\n        let missingParenErrorLoc;\n        // tsTryParseAndCatch is expensive, so avoid if not necessary.\n        // There are number of things we are going to \"maybe\" parse, like type arguments on\n        // tagged template expressions. If any of them fail, walk it back and continue.\n        const result = this.tsTryParseAndCatch(() => {\n          if (!noCalls && this.atPossibleAsyncArrow(base)) {\n            // Almost certainly this is a generic async function `async <T>() => ...\n            // But it might be a call with a type argument `async<T>();`\n            const asyncArrowFn =\n              this.tsTryParseGenericAsyncArrowFunction(startLoc);\n            if (asyncArrowFn) {\n              return asyncArrowFn;\n            }\n          }\n\n          const typeArguments = this.tsParseTypeArgumentsInExpression();\n          if (!typeArguments) return;\n\n          if (isOptionalCall && !this.match(tt.parenL)) {\n            missingParenErrorLoc = this.state.curPosition();\n            return;\n          }\n\n          if (tokenIsTemplate(this.state.type)) {\n            const result = super.parseTaggedTemplateExpression(\n              base,\n\n              startLoc,\n              state,\n            );\n            result.typeParameters = typeArguments;\n            return result;\n          }\n\n          if (!noCalls && this.eat(tt.parenL)) {\n            const node = this.startNodeAt<\n              N.CallExpression | N.OptionalCallExpression\n            >(startLoc);\n            node.callee = base;\n            // possibleAsync always false here, because we would have handled it above.\n            // @ts-expect-error (won't be any undefined arguments)\n            node.arguments = this.parseCallExpressionArguments(\n              tt.parenR,\n              /* possibleAsync */ false,\n            );\n\n            // Handles invalid case: `f<T>(a:b)`\n            this.tsCheckForInvalidTypeCasts(node.arguments);\n\n            node.typeParameters = typeArguments;\n            if (state.optionalChainMember) {\n              (node as Undone<N.OptionalCallExpression>).optional =\n                isOptionalCall;\n            }\n\n            return this.finishCallExpression(node, state.optionalChainMember);\n          }\n\n          const tokenType = this.state.type;\n          if (\n            // a<b>>c is not (a<b>)>c, but a<(b>>c)\n            tokenType === tt.gt ||\n            // a<b>>>c is not (a<b>)>>c, but a<(b>>>c)\n            tokenType === tt.bitShiftR ||\n            // a<b>c is (a<b)>c\n            (tokenType !== tt.parenL &&\n              tokenCanStartExpression(tokenType) &&\n              !this.hasPrecedingLineBreak())\n          ) {\n            // Bail out.\n            return;\n          }\n\n          const node = this.startNodeAt<N.TsInstantiationExpression>(startLoc);\n          node.expression = base;\n          node.typeParameters = typeArguments;\n          return this.finishNode(node, \"TSInstantiationExpression\");\n        });\n\n        if (missingParenErrorLoc) {\n          this.unexpected(missingParenErrorLoc, tt.parenL);\n        }\n\n        if (result) {\n          if (\n            result.type === \"TSInstantiationExpression\" &&\n            (this.match(tt.dot) ||\n              (this.match(tt.questionDot) &&\n                this.lookaheadCharCode() !== charCodes.leftParenthesis))\n          ) {\n            this.raise(\n              TSErrors.InvalidPropertyAccessAfterInstantiationExpression,\n              { at: this.state.startLoc },\n            );\n          }\n          return result;\n        }\n      }\n\n      return super.parseSubscript(base, startLoc, noCalls, state);\n    }\n\n    parseNewCallee(node: N.NewExpression): void {\n      super.parseNewCallee(node);\n\n      const { callee } = node;\n      if (\n        callee.type === \"TSInstantiationExpression\" &&\n        !callee.extra?.parenthesized\n      ) {\n        node.typeParameters = callee.typeParameters;\n        node.callee = callee.expression;\n      }\n    }\n\n    parseExprOp(\n      left: N.Expression,\n      leftStartLoc: Position,\n      minPrec: number,\n    ): N.Expression {\n      let isSatisfies: boolean;\n      if (\n        tokenOperatorPrecedence(tt._in) > minPrec &&\n        !this.hasPrecedingLineBreak() &&\n        (this.isContextual(tt._as) ||\n          (isSatisfies = this.isContextual(tt._satisfies)))\n      ) {\n        const node = this.startNodeAt<\n          N.TsAsExpression | N.TsSatisfiesExpression\n        >(leftStartLoc);\n        node.expression = left;\n        node.typeAnnotation = this.tsInType(() => {\n          this.next(); // \"as\" or \"satisfies\"\n          if (this.match(tt._const)) {\n            if (isSatisfies) {\n              this.raise(Errors.UnexpectedKeyword, {\n                at: this.state.startLoc,\n                keyword: \"const\",\n              });\n            }\n            return this.tsParseTypeReference();\n          }\n\n          return this.tsParseType();\n        });\n        this.finishNode(\n          node,\n          isSatisfies ? \"TSSatisfiesExpression\" : \"TSAsExpression\",\n        );\n        // rescan `<`, `>` because they were scanned when this.state.inType was true\n        this.reScan_lt_gt();\n        return this.parseExprOp(\n          // @ts-expect-error todo(flow->ts)\n          node,\n          leftStartLoc,\n          minPrec,\n        );\n      }\n\n      return super.parseExprOp(left, leftStartLoc, minPrec);\n    }\n\n    checkReservedWord(\n      word: string,\n      startLoc: Position,\n      checkKeywords: boolean,\n      isBinding: boolean,\n    ): void {\n      // Strict mode words may be allowed as in `declare namespace N { const static: number; }`.\n      // And we have a type checker anyway, so don't bother having the parser do it.\n      if (!this.state.isAmbientContext) {\n        super.checkReservedWord(word, startLoc, checkKeywords, isBinding);\n      }\n    }\n\n    checkImportReflection(node: Undone<N.ImportDeclaration>) {\n      super.checkImportReflection(node);\n      if (node.module && node.importKind !== \"value\") {\n        this.raise(TSErrors.ImportReflectionHasImportType, {\n          at: node.specifiers[0].loc.start,\n        });\n      }\n    }\n\n    /*\n    Don't bother doing this check in TypeScript code because:\n    1. We may have a nested export statement with the same name:\n      export const x = 0;\n      export namespace N {\n        export const x = 1;\n      }\n    2. We have a type checker to warn us about this sort of thing.\n    */\n    checkDuplicateExports() {}\n\n    isPotentialImportPhase(isExport: boolean): boolean {\n      if (super.isPotentialImportPhase(isExport)) return true;\n      if (this.isContextual(tt._type)) {\n        const ch = this.lookaheadCharCode();\n        return isExport\n          ? ch === charCodes.leftCurlyBrace || ch === charCodes.asterisk\n          : ch !== charCodes.equalsTo;\n      }\n      return !isExport && this.isContextual(tt._typeof);\n    }\n\n    applyImportPhase(\n      node: Undone<N.ImportDeclaration | N.ExportNamedDeclaration>,\n      isExport: boolean,\n      phase: string | null,\n      loc?: Position,\n    ): void {\n      super.applyImportPhase(node, isExport, phase, loc);\n      if (isExport) {\n        (node as N.ExportNamedDeclaration).exportKind =\n          phase === \"type\" ? \"type\" : \"value\";\n      } else {\n        (node as N.ImportDeclaration).importKind =\n          phase === \"type\" || phase === \"typeof\" ? phase : \"value\";\n      }\n    }\n\n    parseImport(\n      node: Undone<N.ImportDeclaration | N.TsImportEqualsDeclaration>,\n    ): N.AnyImport {\n      if (this.match(tt.string)) {\n        node.importKind = \"value\";\n        return super.parseImport(node as Undone<N.ImportDeclaration>);\n      }\n\n      let importNode;\n      if (\n        tokenIsIdentifier(this.state.type) &&\n        this.lookaheadCharCode() === charCodes.equalsTo\n      ) {\n        node.importKind = \"value\";\n        return this.tsParseImportEqualsDeclaration(\n          node as Undone<N.TsImportEqualsDeclaration>,\n        );\n      } else if (this.isContextual(tt._type)) {\n        const maybeDefaultIdentifier = this.parseMaybeImportPhase(\n          node as Undone<N.ImportDeclaration>,\n          /* isExport */ false,\n        );\n        if (this.lookaheadCharCode() === charCodes.equalsTo) {\n          return this.tsParseImportEqualsDeclaration(\n            node as Undone<N.TsImportEqualsDeclaration>,\n            maybeDefaultIdentifier,\n          );\n        } else {\n          importNode = super.parseImportSpecifiersAndAfter(\n            node as Undone<N.ImportDeclaration>,\n            maybeDefaultIdentifier,\n          );\n        }\n      } else {\n        importNode = super.parseImport(node as Undone<N.ImportDeclaration>);\n      }\n\n      // `import type` can only be used on imports with named imports or with a\n      // default import - but not both\n      if (\n        importNode.importKind === \"type\" &&\n        // @ts-expect-error refine typings\n        importNode.specifiers.length > 1 &&\n        // @ts-expect-error refine typings\n        importNode.specifiers[0].type === \"ImportDefaultSpecifier\"\n      ) {\n        this.raise(TSErrors.TypeImportCannotSpecifyDefaultAndNamed, {\n          at: importNode,\n        });\n      }\n\n      return importNode;\n    }\n\n    parseExport(\n      node: Undone<N.Node>,\n      decorators: N.Decorator[] | null,\n    ): N.AnyExport {\n      if (this.match(tt._import)) {\n        // `export import A = B;`\n        this.next(); // eat `tt._import`\n        let maybeDefaultIdentifier: N.Identifier | null = null;\n        if (\n          this.isContextual(tt._type) &&\n          // We pass false here, because we are parsing an `import ... =`\n          this.isPotentialImportPhase(/* isExport */ false)\n        ) {\n          maybeDefaultIdentifier = this.parseMaybeImportPhase(\n            node as Undone<N.TsImportEqualsDeclaration>,\n            /* isExport */ false,\n          );\n        } else {\n          node.importKind = \"value\";\n        }\n        return this.tsParseImportEqualsDeclaration(\n          node as Undone<N.TsImportEqualsDeclaration>,\n          maybeDefaultIdentifier,\n          /* isExport */ true,\n        );\n      } else if (this.eat(tt.eq)) {\n        // `export = x;`\n        const assign = node as Undone<N.TsExportAssignment>;\n        assign.expression = super.parseExpression();\n        this.semicolon();\n        this.sawUnambiguousESM = true;\n        return this.finishNode(assign, \"TSExportAssignment\");\n      } else if (this.eatContextual(tt._as)) {\n        // `export as namespace A;`\n        const decl = node as Undone<N.TsNamespaceExportDeclaration>;\n        // See `parseNamespaceExportDeclaration` in TypeScript's own parser\n        this.expectContextual(tt._namespace);\n        decl.id = this.parseIdentifier();\n        this.semicolon();\n        return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n      } else {\n        return super.parseExport(\n          node as Undone<N.ExportAllDeclaration | N.ExportDefaultDeclaration>,\n          decorators,\n        );\n      }\n    }\n\n    isAbstractClass(): boolean {\n      return (\n        this.isContextual(tt._abstract) && this.lookahead().type === tt._class\n      );\n    }\n\n    parseExportDefaultExpression(): N.Expression | N.Declaration {\n      if (this.isAbstractClass()) {\n        const cls = this.startNode<N.Class>();\n        this.next(); // Skip \"abstract\"\n        cls.abstract = true;\n        return this.parseClass(cls, true, true);\n      }\n\n      // export default interface allowed in:\n      // https://github.com/Microsoft/TypeScript/pull/16040\n      if (this.match(tt._interface)) {\n        const result = this.tsParseInterfaceDeclaration(\n          this.startNode<N.TsInterfaceDeclaration>(),\n        );\n        if (result) return result;\n      }\n\n      return super.parseExportDefaultExpression();\n    }\n\n    parseVarStatement(\n      node: N.VariableDeclaration,\n      kind: \"var\" | \"let\" | \"const\" | \"using\",\n      allowMissingInitializer: boolean = false,\n    ) {\n      const { isAmbientContext } = this.state;\n      const declaration = super.parseVarStatement(\n        node,\n        kind,\n        allowMissingInitializer || isAmbientContext,\n      );\n\n      if (!isAmbientContext) return declaration;\n\n      for (const { id, init } of declaration.declarations) {\n        // Empty initializer is the easy case that we want.\n        if (!init) continue;\n\n        // var and let aren't ever allowed initializers.\n        if (kind !== \"const\" || !!id.typeAnnotation) {\n          this.raise(TSErrors.InitializerNotAllowedInAmbientContext, {\n            at: init,\n          });\n        } else if (\n          !isValidAmbientConstInitializer(init, this.hasPlugin(\"estree\"))\n        ) {\n          this.raise(\n            TSErrors.ConstInitiailizerMustBeStringOrNumericLiteralOrLiteralEnumReference,\n            { at: init },\n          );\n        }\n      }\n\n      return declaration;\n    }\n\n    parseStatementContent(\n      flags: ParseStatementFlag,\n      decorators?: N.Decorator[] | null,\n    ): N.Statement {\n      if (this.match(tt._const) && this.isLookaheadContextual(\"enum\")) {\n        const node = this.startNode<N.TsEnumDeclaration>();\n        this.expect(tt._const); // eat 'const'\n        return this.tsParseEnumDeclaration(node, { const: true });\n      }\n\n      if (this.isContextual(tt._enum)) {\n        return this.tsParseEnumDeclaration(\n          this.startNode<N.TsEnumDeclaration>(),\n        );\n      }\n\n      if (this.isContextual(tt._interface)) {\n        const result = this.tsParseInterfaceDeclaration(this.startNode());\n        if (result) return result;\n      }\n\n      return super.parseStatementContent(flags, decorators);\n    }\n\n    parseAccessModifier(): N.Accessibility | undefined | null {\n      return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n    }\n\n    tsHasSomeModifiers(member: any, modifiers: readonly TsModifier[]): boolean {\n      return modifiers.some(modifier => {\n        if (tsIsAccessModifier(modifier)) {\n          return member.accessibility === modifier;\n        }\n        return !!member[modifier];\n      });\n    }\n\n    tsIsStartOfStaticBlocks() {\n      return (\n        this.isContextual(tt._static) &&\n        this.lookaheadCharCode() === charCodes.leftCurlyBrace\n      );\n    }\n\n    parseClassMember(\n      classBody: N.ClassBody,\n      member: any,\n      state: N.ParseClassMemberState,\n    ): void {\n      const modifiers = [\n        \"declare\",\n        \"private\",\n        \"public\",\n        \"protected\",\n        \"override\",\n        \"abstract\",\n        \"readonly\",\n        \"static\",\n      ] as const;\n      this.tsParseModifiers(\n        {\n          allowedModifiers: modifiers,\n          disallowedModifiers: [\"in\", \"out\"],\n          stopOnStartOfClassStaticBlock: true,\n          errorTemplate: TSErrors.InvalidModifierOnTypeParameterPositions,\n        },\n        member,\n      );\n\n      const callParseClassMemberWithIsStatic = () => {\n        if (this.tsIsStartOfStaticBlocks()) {\n          this.next(); // eat \"static\"\n          this.next(); // eat \"{\"\n          if (this.tsHasSomeModifiers(member, modifiers)) {\n            this.raise(TSErrors.StaticBlockCannotHaveModifier, {\n              at: this.state.curPosition(),\n            });\n          }\n          super.parseClassStaticBlock(classBody, member as N.StaticBlock);\n        } else {\n          this.parseClassMemberWithIsStatic(\n            classBody,\n            member,\n            state,\n            !!member.static,\n          );\n        }\n      };\n      if (member.declare) {\n        this.tsInAmbientContext(callParseClassMemberWithIsStatic);\n      } else {\n        callParseClassMemberWithIsStatic();\n      }\n    }\n\n    parseClassMemberWithIsStatic(\n      classBody: N.ClassBody,\n      member: Undone<N.ClassMember | N.TsIndexSignature>,\n      state: N.ParseClassMemberState,\n      isStatic: boolean,\n    ): void {\n      const idx = this.tsTryParseIndexSignature(\n        member as Undone<N.TsIndexSignature>,\n      );\n      if (idx) {\n        classBody.body.push(idx);\n\n        if ((member as any).abstract) {\n          this.raise(TSErrors.IndexSignatureHasAbstract, { at: member });\n        }\n        if ((member as any).accessibility) {\n          this.raise(TSErrors.IndexSignatureHasAccessibility, {\n            at: member,\n            modifier: (member as any).accessibility,\n          });\n        }\n        if ((member as any).declare) {\n          this.raise(TSErrors.IndexSignatureHasDeclare, { at: member });\n        }\n        if ((member as any).override) {\n          this.raise(TSErrors.IndexSignatureHasOverride, { at: member });\n        }\n\n        return;\n      }\n\n      if (!this.state.inAbstractClass && (member as any).abstract) {\n        this.raise(TSErrors.NonAbstractClassHasAbstractMethod, {\n          at: member,\n        });\n      }\n\n      if ((member as any).override) {\n        if (!state.hadSuperClass) {\n          this.raise(TSErrors.OverrideNotInSubClass, { at: member });\n        }\n      }\n\n      /*:: invariant(member.type !== \"TSIndexSignature\") */\n\n      super.parseClassMemberWithIsStatic(\n        classBody,\n        member as Undone<N.ClassMember>,\n        state,\n        isStatic,\n      );\n    }\n\n    parsePostMemberNameModifiers(\n      methodOrProp: N.ClassMethod | N.ClassProperty | N.ClassPrivateProperty,\n    ): void {\n      const optional = this.eat(tt.question);\n      if (optional) methodOrProp.optional = true;\n\n      if ((methodOrProp as any).readonly && this.match(tt.parenL)) {\n        this.raise(TSErrors.ClassMethodHasReadonly, { at: methodOrProp });\n      }\n\n      if ((methodOrProp as any).declare && this.match(tt.parenL)) {\n        this.raise(TSErrors.ClassMethodHasDeclare, { at: methodOrProp });\n      }\n    }\n\n    // Note: The reason we do this in `parseExpressionStatement` and not `parseStatement`\n    // is that e.g. `type()` is valid JS, so we must try parsing that first.\n    // If it's really a type, we will parse `type` as the statement, and can correct it here\n    // by parsing the rest.\n    // @ts-expect-error plugin overrides interfaces\n    parseExpressionStatement(\n      node: Undone<N.ExpressionStatement>,\n      expr: N.Expression,\n      decorators: N.Decorator[] | null,\n    ): N.Statement {\n      const decl =\n        expr.type === \"Identifier\"\n          ? // @ts-expect-error refine typings\n            this.tsParseExpressionStatement(node, expr, decorators)\n          : undefined;\n      return decl || super.parseExpressionStatement(node, expr, decorators);\n    }\n\n    // export type\n    // Should be true for anything parsed by `tsTryParseExportDeclaration`.\n    shouldParseExportDeclaration(): boolean {\n      if (this.tsIsDeclarationStart()) return true;\n      return super.shouldParseExportDeclaration();\n    }\n\n    // An apparent conditional expression could actually be an optional parameter in an arrow function.\n    parseConditional(\n      expr: N.Expression,\n\n      startLoc: Position,\n      refExpressionErrors?: ExpressionErrors | null,\n    ): N.Expression {\n      // only do the expensive clone if there is a question mark\n      // and if we come from inside parens\n      if (!this.state.maybeInArrowParameters || !this.match(tt.question)) {\n        return super.parseConditional(\n          expr,\n\n          startLoc,\n          refExpressionErrors,\n        );\n      }\n\n      const result = this.tryParse(() =>\n        super.parseConditional(expr, startLoc),\n      );\n\n      if (!result.node) {\n        if (result.error) {\n          /*:: invariant(refExpressionErrors != null) */\n          super.setOptionalParametersError(refExpressionErrors, result.error);\n        }\n\n        return expr;\n      }\n      if (result.error) this.state = result.failState;\n      return result.node;\n    }\n\n    // Note: These \"type casts\" are *not* valid TS expressions.\n    // But we parse them here and change them when completing the arrow function.\n    parseParenItem(\n      node: N.Expression,\n\n      startLoc: Position,\n    ): N.Expression {\n      node = super.parseParenItem(node, startLoc);\n      if (this.eat(tt.question)) {\n        node.optional = true;\n        // Include questionmark in location of node\n        // Don't use this.finishNode() as otherwise we might process comments twice and\n        // include already consumed parens\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(tt.colon)) {\n        const typeCastNode = this.startNodeAt<N.TsTypeCastExpression>(startLoc);\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n\n        return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    parseExportDeclaration(\n      node: N.ExportNamedDeclaration,\n    ): N.Declaration | undefined | null {\n      if (!this.state.isAmbientContext && this.isContextual(tt._declare)) {\n        return this.tsInAmbientContext(() => this.parseExportDeclaration(node));\n      }\n\n      // Store original location\n      const startLoc = this.state.startLoc;\n\n      const isDeclare = this.eatContextual(tt._declare);\n\n      if (\n        isDeclare &&\n        (this.isContextual(tt._declare) || !this.shouldParseExportDeclaration())\n      ) {\n        throw this.raise(TSErrors.ExpectedAmbientAfterExportDeclare, {\n          at: this.state.startLoc,\n        });\n      }\n\n      const isIdentifier = tokenIsIdentifier(this.state.type);\n      const declaration: N.Declaration | undefined | null =\n        (isIdentifier && this.tsTryParseExportDeclaration()) ||\n        super.parseExportDeclaration(node);\n\n      if (!declaration) return null;\n\n      if (\n        declaration.type === \"TSInterfaceDeclaration\" ||\n        declaration.type === \"TSTypeAliasDeclaration\" ||\n        isDeclare\n      ) {\n        node.exportKind = \"type\";\n      }\n\n      if (isDeclare) {\n        // Reset location to include `declare` in range\n        this.resetStartLocation(declaration, startLoc);\n\n        declaration.declare = true;\n      }\n\n      return declaration;\n    }\n\n    parseClassId(\n      node: N.Class,\n      isStatement: boolean,\n      optionalId?: boolean | null,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      bindingType?: BindingTypes,\n    ): void {\n      if ((!isStatement || optionalId) && this.isContextual(tt._implements)) {\n        return;\n      }\n\n      super.parseClassId(\n        node,\n        isStatement,\n        optionalId,\n        (node as any).declare\n          ? BindingFlag.TYPE_TS_AMBIENT\n          : BindingFlag.TYPE_CLASS,\n      );\n      const typeParameters = this.tsTryParseTypeParameters(\n        this.tsParseInOutConstModifiers,\n      );\n      if (typeParameters) node.typeParameters = typeParameters;\n    }\n\n    parseClassPropertyAnnotation(\n      node: N.ClassProperty | N.ClassPrivateProperty | N.ClassAccessorProperty,\n    ): void {\n      if (!node.optional) {\n        if (this.eat(tt.bang)) {\n          node.definite = true;\n        } else if (this.eat(tt.question)) {\n          node.optional = true;\n        }\n      }\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) node.typeAnnotation = type;\n    }\n\n    parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n      this.parseClassPropertyAnnotation(node);\n\n      if (\n        this.state.isAmbientContext &&\n        !(node.readonly && !node.typeAnnotation) &&\n        this.match(tt.eq)\n      ) {\n        this.raise(TSErrors.DeclareClassFieldHasInitializer, {\n          at: this.state.startLoc,\n        });\n      }\n      if (node.abstract && this.match(tt.eq)) {\n        const { key } = node;\n        this.raise(TSErrors.AbstractPropertyHasInitializer, {\n          at: this.state.startLoc,\n          propertyName:\n            key.type === \"Identifier\" && !node.computed\n              ? key.name\n              : `[${this.input.slice(key.start, key.end)}]`,\n        });\n      }\n\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(\n      node: N.ClassPrivateProperty,\n    ): N.ClassPrivateProperty {\n      // @ts-expect-error abstract may not index node\n      if (node.abstract) {\n        this.raise(TSErrors.PrivateElementHasAbstract, { at: node });\n      }\n\n      // @ts-expect-error accessibility may not index node\n      if (node.accessibility) {\n        this.raise(TSErrors.PrivateElementHasAccessibility, {\n          at: node,\n          // @ts-expect-error refine typings\n          modifier: node.accessibility,\n        });\n      }\n\n      this.parseClassPropertyAnnotation(node);\n      return super.parseClassPrivateProperty(node);\n    }\n\n    parseClassAccessorProperty(\n      node: N.ClassAccessorProperty,\n    ): N.ClassAccessorProperty {\n      this.parseClassPropertyAnnotation(node);\n      if (node.optional) {\n        this.raise(TSErrors.AccessorCannotBeOptional, { at: node });\n      }\n      return super.parseClassAccessorProperty(node);\n    }\n\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      const typeParameters = this.tsTryParseTypeParameters(\n        this.tsParseConstModifier,\n      );\n      if (typeParameters && isConstructor) {\n        this.raise(TSErrors.ConstructorHasTypeParameters, {\n          at: typeParameters,\n        });\n      }\n\n      // @ts-expect-error declare does not exist in ClassMethod\n      const { declare = false, kind } = method;\n\n      if (declare && (kind === \"get\" || kind === \"set\")) {\n        this.raise(TSErrors.DeclareAccessor, { at: method, kind });\n      }\n      if (typeParameters) method.typeParameters = typeParameters;\n      super.pushClassMethod(\n        classBody,\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n      );\n    }\n\n    pushClassPrivateMethod(\n      classBody: N.ClassBody,\n      method: N.ClassPrivateMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n    ): void {\n      const typeParameters = this.tsTryParseTypeParameters(\n        this.tsParseConstModifier,\n      );\n      if (typeParameters) method.typeParameters = typeParameters;\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    declareClassPrivateMethodInScope(\n      node: N.ClassPrivateMethod | N.EstreeMethodDefinition | N.TSDeclareMethod,\n      kind: number,\n    ) {\n      if (node.type === \"TSDeclareMethod\") return;\n      // This happens when using the \"estree\" plugin.\n      if (node.type === \"MethodDefinition\" && !node.value.body) return;\n\n      super.declareClassPrivateMethodInScope(node, kind);\n    }\n\n    parseClassSuper(node: N.Class): void {\n      super.parseClassSuper(node);\n      // handle `extends f<<T>\n      if (node.superClass && (this.match(tt.lt) || this.match(tt.bitShiftL))) {\n        // @ts-expect-error refine typings\n        node.superTypeParameters = this.tsParseTypeArgumentsInExpression();\n      }\n      if (this.eatContextual(tt._implements)) {\n        node.implements = this.tsParseHeritageClause(\"implements\");\n      }\n    }\n\n    parseObjPropValue(\n      prop: Undone<N.ObjectMethod | N.ObjectProperty>,\n      startLoc: Position | undefined | null,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isPattern: boolean,\n      isAccessor: boolean,\n      refExpressionErrors?: ExpressionErrors | null,\n    ) {\n      const typeParameters = this.tsTryParseTypeParameters(\n        this.tsParseConstModifier,\n      );\n      if (typeParameters) prop.typeParameters = typeParameters;\n\n      return super.parseObjPropValue(\n        prop,\n\n        startLoc,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n        refExpressionErrors,\n      );\n    }\n\n    parseFunctionParams(node: N.Function, isConstructor: boolean): void {\n      const typeParameters = this.tsTryParseTypeParameters(\n        this.tsParseConstModifier,\n      );\n      if (typeParameters) node.typeParameters = typeParameters;\n      super.parseFunctionParams(node, isConstructor);\n    }\n\n    // `let x: number;`\n    parseVarId(\n      decl: N.VariableDeclarator,\n      kind: \"var\" | \"let\" | \"const\" | \"using\",\n    ): void {\n      super.parseVarId(decl, kind);\n      if (\n        decl.id.type === \"Identifier\" &&\n        !this.hasPrecedingLineBreak() &&\n        this.eat(tt.bang)\n      ) {\n        decl.definite = true;\n      }\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) {\n        decl.id.typeAnnotation = type;\n        this.resetEndLocation(decl.id); // set end position to end of type\n      }\n    }\n\n    // parse the return type of an async arrow function - let foo = (async (): number => {});\n    parseAsyncArrowFromCallExpression(\n      node: N.ArrowFunctionExpression,\n      call: N.CallExpression,\n    ): N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        node.returnType = this.tsParseTypeAnnotation();\n      }\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    parseMaybeAssign(\n      refExpressionErrors?: ExpressionErrors | null,\n      afterLeftParse?: Function,\n    ): N.Expression {\n      // Note: When the JSX plugin is on, type assertions (`<T> x`) aren't valid syntax.\n\n      let state: State | undefined | null;\n      let jsx;\n      let typeCast;\n\n      if (\n        this.hasPlugin(\"jsx\") &&\n        (this.match(tt.jsxTagStart) || this.match(tt.lt))\n      ) {\n        // Prefer to parse JSX if possible. But may be an arrow fn.\n        state = this.state.clone();\n\n        jsx = this.tryParse(\n          () => super.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n          state,\n        );\n\n        /*:: invariant(!jsx.aborted) */\n        /*:: invariant(jsx.node != null) */\n        if (!jsx.error) return jsx.node;\n\n        // Remove `tc.j_expr` or `tc.j_oTag` from context added\n        // by parsing `jsxTagStart` to stop the JSX plugin from\n        // messing with the tokens\n        const { context } = this.state;\n        const currentContext = context[context.length - 1];\n        if (currentContext === tc.j_oTag || currentContext === tc.j_expr) {\n          context.pop();\n        }\n      }\n\n      if (!jsx?.error && !this.match(tt.lt)) {\n        return super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n      }\n\n      // Either way, we're looking at a '<': tt.jsxTagStart or relational.\n\n      // If the state was cloned in the JSX parsing branch above but there\n      // have been any error in the tryParse call, this.state is set to state\n      // so we still need to clone it.\n      if (!state || state === this.state) state = this.state.clone();\n\n      let typeParameters: N.TsTypeParameterDeclaration | undefined | null;\n      const arrow = this.tryParse(abort => {\n        // This is similar to TypeScript's `tryParseParenthesizedArrowFunctionExpression`.\n        typeParameters = this.tsParseTypeParameters(this.tsParseConstModifier);\n        const expr = super.parseMaybeAssign(\n          refExpressionErrors,\n          afterLeftParse,\n        );\n\n        if (\n          expr.type !== \"ArrowFunctionExpression\" ||\n          expr.extra?.parenthesized\n        ) {\n          abort();\n        }\n\n        // Correct TypeScript code should have at least 1 type parameter, but don't crash on bad code.\n        if (typeParameters?.params.length !== 0) {\n          this.resetStartLocationFromNode(expr, typeParameters);\n        }\n        expr.typeParameters = typeParameters;\n\n        if (process.env.BABEL_8_BREAKING) {\n          if (\n            this.hasPlugin(\"jsx\") &&\n            expr.typeParameters.params.length === 1 &&\n            !expr.typeParameters.extra?.trailingComma\n          ) {\n            // report error if single type parameter used without trailing comma.\n            const parameter = expr.typeParameters.params[0];\n            if (!parameter.constraint) {\n              // A single type parameter must either have constraints\n              // or a trailing comma, otherwise it's ambiguous with JSX.\n              this.raise(TSErrors.SingleTypeParameterWithoutTrailingComma, {\n                at: createPositionWithColumnOffset(parameter.loc.end, 1),\n                typeParameterName: parameter.name.name,\n              });\n            }\n          }\n        }\n\n        return expr;\n      }, state);\n\n      /*:: invariant(arrow.node != null) */\n      if (!arrow.error && !arrow.aborted) {\n        // This error is reported outside of the this.tryParse call so that\n        // in case of <T>(x) => 2, we don't consider <T>(x) as a type assertion\n        // because of this error.\n        if (typeParameters) this.reportReservedArrowTypeParam(typeParameters);\n        // @ts-expect-error refine typings\n        return arrow.node;\n      }\n\n      if (!jsx) {\n        // Try parsing a type cast instead of an arrow function.\n        // This will never happen outside of JSX.\n        // (Because in JSX the '<' should be a jsxTagStart and not a relational.\n        assert(!this.hasPlugin(\"jsx\"));\n\n        // This will start with a type assertion (via parseMaybeUnary).\n        // But don't directly call `this.tsParseTypeAssertion` because we want to handle any binary after it.\n        typeCast = this.tryParse(\n          () => super.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n          state,\n        );\n        /*:: invariant(!typeCast.aborted) */\n        /*:: invariant(typeCast.node != null) */\n        if (!typeCast.error) return typeCast.node;\n      }\n\n      if (jsx?.node) {\n        /*:: invariant(jsx.failState) */\n        this.state = jsx.failState;\n        return jsx.node;\n      }\n\n      if (arrow.node) {\n        /*:: invariant(arrow.failState) */\n        this.state = arrow.failState;\n        if (typeParameters) this.reportReservedArrowTypeParam(typeParameters);\n        // @ts-expect-error refine typings\n        return arrow.node;\n      }\n\n      if (typeCast?.node) {\n        /*:: invariant(typeCast.failState) */\n        this.state = typeCast.failState;\n        return typeCast.node;\n      }\n\n      throw jsx?.error || arrow.error || typeCast?.error;\n    }\n\n    reportReservedArrowTypeParam(node: any) {\n      if (\n        node.params.length === 1 &&\n        !node.params[0].constraint &&\n        !node.extra?.trailingComma &&\n        this.getPluginOption(\"typescript\", \"disallowAmbiguousJSXLike\")\n      ) {\n        this.raise(TSErrors.ReservedArrowTypeParam, { at: node });\n      }\n    }\n\n    // Handle type assertions\n    parseMaybeUnary(\n      refExpressionErrors?: ExpressionErrors | null,\n      sawUnary?: boolean,\n    ): N.Expression {\n      if (!this.hasPlugin(\"jsx\") && this.match(tt.lt)) {\n        return this.tsParseTypeAssertion();\n      }\n      return super.parseMaybeUnary(refExpressionErrors, sawUnary);\n    }\n\n    parseArrow(\n      node: Undone<N.ArrowFunctionExpression>,\n    ): Undone<N.ArrowFunctionExpression> | undefined | null {\n      if (this.match(tt.colon)) {\n        // This is different from how the TS parser does it.\n        // TS uses lookahead. The Babel Parser parses it as a parenthesized expression and converts.\n\n        const result = this.tryParse(abort => {\n          const returnType = this.tsParseTypeOrTypePredicateAnnotation(\n            tt.colon,\n          );\n          if (this.canInsertSemicolon() || !this.match(tt.arrow)) abort();\n          return returnType;\n        });\n\n        if (result.aborted) return;\n\n        if (!result.thrown) {\n          if (result.error) this.state = result.failState;\n          // @ts-expect-error refine typings\n          node.returnType = result.node;\n        }\n      }\n\n      return super.parseArrow(node);\n    }\n\n    // Allow type annotations inside of a parameter list.\n    parseAssignableListItemTypes(\n      param: N.Pattern,\n      flags: ParseBindingListFlags,\n    ) {\n      if (!(flags & ParseBindingListFlags.IS_FUNCTION_PARAMS)) return param;\n\n      if (this.eat(tt.question)) {\n        (param as any as N.Identifier).optional = true;\n      }\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) param.typeAnnotation = type;\n      this.resetEndLocation(param);\n\n      return param;\n    }\n\n    isAssignable(node: N.Node, isBinding?: boolean): boolean {\n      switch (node.type) {\n        case \"TSTypeCastExpression\":\n          return this.isAssignable(node.expression, isBinding);\n        case \"TSParameterProperty\":\n          return true;\n        default:\n          return super.isAssignable(node, isBinding);\n      }\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): void {\n      switch (node.type) {\n        case \"ParenthesizedExpression\":\n          this.toAssignableParenthesizedExpression(node, isLHS);\n          break;\n        case \"TSAsExpression\":\n        case \"TSSatisfiesExpression\":\n        case \"TSNonNullExpression\":\n        case \"TSTypeAssertion\":\n          if (isLHS) {\n            this.expressionScope.recordArrowParameterBindingError(\n              TSErrors.UnexpectedTypeCastInParameter,\n              { at: node },\n            );\n          } else {\n            this.raise(TSErrors.UnexpectedTypeCastInParameter, { at: node });\n          }\n          this.toAssignable(node.expression, isLHS);\n          break;\n        case \"AssignmentExpression\":\n          if (!isLHS && node.left.type === \"TSTypeCastExpression\") {\n            node.left = this.typeCastToParameter(node.left);\n          }\n        /* fall through */\n        default:\n          super.toAssignable(node, isLHS);\n      }\n    }\n\n    toAssignableParenthesizedExpression(node: N.Node, isLHS: boolean): void {\n      switch (node.expression.type) {\n        case \"TSAsExpression\":\n        case \"TSSatisfiesExpression\":\n        case \"TSNonNullExpression\":\n        case \"TSTypeAssertion\":\n        case \"ParenthesizedExpression\":\n          this.toAssignable(node.expression, isLHS);\n          break;\n        default:\n          super.toAssignable(node, isLHS);\n      }\n    }\n\n    checkToRestConversion(node: N.Node, allowPattern: boolean): void {\n      switch (node.type) {\n        case \"TSAsExpression\":\n        case \"TSSatisfiesExpression\":\n        case \"TSTypeAssertion\":\n        case \"TSNonNullExpression\":\n          this.checkToRestConversion(node.expression, false);\n          break;\n        default:\n          super.checkToRestConversion(node, allowPattern);\n      }\n    }\n\n    // @ts-expect-error plugin overrides interfaces\n    isValidLVal(\n      type:\n        | \"TSTypeCastExpression\"\n        | \"TSParameterProperty\"\n        | \"TSNonNullExpression\"\n        | \"TSAsExpression\"\n        | \"TSSatisfiesExpression\"\n        | \"TSTypeAssertion\",\n      isUnparenthesizedInAssign: boolean,\n      binding: BindingTypes,\n    ) {\n      return (\n        getOwn(\n          {\n            // Allow \"typecasts\" to appear on the left of assignment expressions,\n            // because it may be in an arrow function.\n            // e.g. `const f = (foo: number = 0) => foo;`\n            TSTypeCastExpression: true,\n            TSParameterProperty: \"parameter\",\n            TSNonNullExpression: \"expression\",\n            TSAsExpression: (binding !== BindingFlag.TYPE_NONE ||\n              !isUnparenthesizedInAssign) && [\"expression\", true],\n            TSSatisfiesExpression: (binding !== BindingFlag.TYPE_NONE ||\n              !isUnparenthesizedInAssign) && [\"expression\", true],\n            TSTypeAssertion: (binding !== BindingFlag.TYPE_NONE ||\n              !isUnparenthesizedInAssign) && [\"expression\", true],\n          },\n          type,\n        ) || super.isValidLVal(type, isUnparenthesizedInAssign, binding)\n      );\n    }\n\n    parseBindingAtom(): N.Pattern {\n      if (this.state.type === tt._this) {\n        return this.parseIdentifier(/* liberal */ true);\n      }\n      return super.parseBindingAtom();\n    }\n\n    parseMaybeDecoratorArguments(expr: N.Expression): N.Expression {\n      // handles `@f<<T>`\n      if (this.match(tt.lt) || this.match(tt.bitShiftL)) {\n        const typeArguments = this.tsParseTypeArgumentsInExpression();\n\n        if (this.match(tt.parenL)) {\n          const call = super.parseMaybeDecoratorArguments(expr);\n          call.typeParameters = typeArguments;\n          return call;\n        }\n\n        this.unexpected(null, tt.parenL);\n      }\n\n      return super.parseMaybeDecoratorArguments(expr);\n    }\n\n    checkCommaAfterRest(\n      close: (typeof charCodes)[keyof typeof charCodes],\n    ): boolean {\n      if (\n        this.state.isAmbientContext &&\n        this.match(tt.comma) &&\n        this.lookaheadCharCode() === close\n      ) {\n        this.next();\n        return false;\n      }\n      return super.checkCommaAfterRest(close);\n    }\n\n    // === === === === === === === === === === === === === === === ===\n    // Note: All below methods are duplicates of something in flow.js.\n    // Not sure what the best way to combine these is.\n    // === === === === === === === === === === === === === === === ===\n\n    isClassMethod(): boolean {\n      return this.match(tt.lt) || super.isClassMethod();\n    }\n\n    isClassProperty(): boolean {\n      return (\n        this.match(tt.bang) || this.match(tt.colon) || super.isClassProperty()\n      );\n    }\n\n    parseMaybeDefault(\n      startLoc?: Position | null,\n      left?: Pattern | null,\n    ): N.Pattern {\n      const node = super.parseMaybeDefault(startLoc, left);\n\n      if (\n        node.type === \"AssignmentPattern\" &&\n        node.typeAnnotation &&\n        node.right.start < node.typeAnnotation.start\n      ) {\n        this.raise(TSErrors.TypeAnnotationAfterAssign, {\n          at: node.typeAnnotation,\n        });\n      }\n\n      return node;\n    }\n\n    // ensure that inside types, we bypass the jsx parser plugin\n    getTokenFromCode(code: number): void {\n      if (this.state.inType) {\n        if (code === charCodes.greaterThan) {\n          this.finishOp(tt.gt, 1);\n          return;\n        }\n        if (code === charCodes.lessThan) {\n          this.finishOp(tt.lt, 1);\n          return;\n        }\n      }\n      super.getTokenFromCode(code);\n    }\n\n    // used after we have finished parsing types\n    reScan_lt_gt() {\n      const { type } = this.state;\n      if (type === tt.lt) {\n        this.state.pos -= 1;\n        this.readToken_lt();\n      } else if (type === tt.gt) {\n        this.state.pos -= 1;\n        this.readToken_gt();\n      }\n    }\n\n    reScan_lt() {\n      const { type } = this.state;\n      if (type === tt.bitShiftL) {\n        this.state.pos -= 2;\n        this.finishOp(tt.lt, 1);\n        return tt.lt;\n      }\n      return type;\n    }\n\n    toAssignableList(\n      exprList: Expression[],\n      trailingCommaLoc: Position | undefined | null,\n      isLHS: boolean,\n    ): void {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (expr?.type === \"TSTypeCastExpression\") {\n          exprList[i] = this.typeCastToParameter(\n            expr as N.TsTypeCastExpression,\n          );\n        }\n      }\n      super.toAssignableList(exprList, trailingCommaLoc, isLHS);\n    }\n\n    typeCastToParameter(node: N.TsTypeCastExpression): N.Node {\n      node.expression.typeAnnotation = node.typeAnnotation;\n\n      this.resetEndLocation(node.expression, node.typeAnnotation.loc.end);\n\n      return node.expression;\n    }\n\n    shouldParseArrow(params: Array<N.Node>) {\n      if (this.match(tt.colon)) {\n        return params.every(expr => this.isAssignable(expr, true));\n      }\n      return super.shouldParseArrow(params);\n    }\n\n    shouldParseAsyncArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseAsyncArrow();\n    }\n\n    canHaveLeadingDecorator() {\n      // Avoid unnecessary lookahead in checking for abstract class unless needed!\n      return super.canHaveLeadingDecorator() || this.isAbstractClass();\n    }\n\n    jsxParseOpeningElementAfterName(\n      node: N.JSXOpeningElement,\n    ): N.JSXOpeningElement {\n      // handles `<Component<<T>`\n      if (this.match(tt.lt) || this.match(tt.bitShiftL)) {\n        const typeArguments = this.tsTryParseAndCatch(() =>\n          // @ts-expect-error: refine typings\n          this.tsParseTypeArgumentsInExpression(),\n        );\n        // @ts-expect-error: refine typings\n        if (typeArguments) node.typeParameters = typeArguments;\n      }\n      return super.jsxParseOpeningElementAfterName(node);\n    }\n\n    getGetterSetterExpectedParamCount(\n      method: N.ObjectMethod | N.ClassMethod,\n    ): number {\n      const baseCount = super.getGetterSetterExpectedParamCount(method);\n      const params = this.getObjectOrClassMethodParams(method);\n      const firstParam = params[0];\n      const hasContextParam = firstParam && this.isThisParam(firstParam);\n\n      return hasContextParam ? baseCount + 1 : baseCount;\n    }\n\n    parseCatchClauseParam(): N.Pattern {\n      const param = super.parseCatchClauseParam();\n      const type = this.tsTryParseTypeAnnotation();\n\n      if (type) {\n        param.typeAnnotation = type;\n        this.resetEndLocation(param);\n      }\n\n      return param;\n    }\n\n    tsInAmbientContext<T>(cb: () => T): T {\n      const oldIsAmbientContext = this.state.isAmbientContext;\n      this.state.isAmbientContext = true;\n      try {\n        return cb();\n      } finally {\n        this.state.isAmbientContext = oldIsAmbientContext;\n      }\n    }\n\n    parseClass<T extends N.Class>(\n      node: Undone<T>,\n      isStatement: boolean,\n      optionalId?: boolean,\n    ): T {\n      const oldInAbstractClass = this.state.inAbstractClass;\n      this.state.inAbstractClass = !!(node as any).abstract;\n      try {\n        return super.parseClass(node, isStatement, optionalId);\n      } finally {\n        this.state.inAbstractClass = oldInAbstractClass;\n      }\n    }\n\n    tsParseAbstractDeclaration(\n      node: any,\n      decorators: N.Decorator[] | null,\n    ): N.ClassDeclaration | N.TsInterfaceDeclaration | undefined | null {\n      if (this.match(tt._class)) {\n        node.abstract = true;\n        return this.maybeTakeDecorators(\n          decorators,\n          this.parseClass<N.ClassDeclaration>(\n            node as N.ClassDeclaration,\n            /* isStatement */ true,\n            /* optionalId */ false,\n          ),\n        );\n      } else if (this.isContextual(tt._interface)) {\n        // for invalid abstract interface\n\n        // To avoid\n        //   abstract interface\n        //   Foo {}\n        if (!this.hasFollowingLineBreak()) {\n          node.abstract = true;\n          this.raise(TSErrors.NonClassMethodPropertyHasAbstractModifer, {\n            at: node,\n          });\n          return this.tsParseInterfaceDeclaration(\n            node as N.TsInterfaceDeclaration,\n          );\n        }\n      } else {\n        this.unexpected(null, tt._class);\n      }\n    }\n\n    parseMethod<\n      T extends N.ObjectMethod | N.ClassMethod | N.ClassPrivateMethod,\n    >(\n      node: Undone<T>,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowDirectSuper: boolean,\n      type: T[\"type\"],\n      inClassScope?: boolean,\n    ) {\n      const method = super.parseMethod<T>(\n        node,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowDirectSuper,\n        type,\n        inClassScope,\n      );\n      // @ts-expect-error todo(flow->ts) property not defined for all types in union\n      if (method.abstract) {\n        const hasBody = this.hasPlugin(\"estree\")\n          ? // @ts-expect-error estree typings\n            !!method.value.body\n          : !!method.body;\n        if (hasBody) {\n          const { key } = method;\n          this.raise(TSErrors.AbstractMethodHasImplementation, {\n            at: method,\n            methodName:\n              key.type === \"Identifier\" && !method.computed\n                ? key.name\n                : `[${this.input.slice(key.start, key.end)}]`,\n          });\n        }\n      }\n      return method;\n    }\n\n    tsParseTypeParameterName(): N.Identifier | string {\n      const typeName: N.Identifier = this.parseIdentifier();\n      return process.env.BABEL_8_BREAKING ? typeName : typeName.name;\n    }\n\n    shouldParseAsAmbientContext(): boolean {\n      return !!this.getPluginOption(\"typescript\", \"dts\");\n    }\n\n    parse() {\n      if (this.shouldParseAsAmbientContext()) {\n        this.state.isAmbientContext = true;\n      }\n      return super.parse();\n    }\n\n    getExpression() {\n      if (this.shouldParseAsAmbientContext()) {\n        this.state.isAmbientContext = true;\n      }\n      return super.getExpression();\n    }\n\n    parseExportSpecifier(\n      node: Undone<N.ExportSpecifier>,\n      isString: boolean,\n      isInTypeExport: boolean,\n      isMaybeTypeOnly: boolean,\n    ) {\n      if (!isString && isMaybeTypeOnly) {\n        this.parseTypeOnlyImportExportSpecifier(\n          node,\n          /* isImport */ false,\n          isInTypeExport,\n        );\n        return this.finishNode<N.ExportSpecifier>(node, \"ExportSpecifier\");\n      }\n      node.exportKind = \"value\";\n      return super.parseExportSpecifier(\n        node,\n        isString,\n        isInTypeExport,\n        isMaybeTypeOnly,\n      );\n    }\n\n    parseImportSpecifier(\n      specifier: Undone<N.ImportSpecifier>,\n      importedIsString: boolean,\n      isInTypeOnlyImport: boolean,\n      isMaybeTypeOnly: boolean,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      bindingType: BindingTypes | undefined,\n    ): N.ImportSpecifier {\n      if (!importedIsString && isMaybeTypeOnly) {\n        this.parseTypeOnlyImportExportSpecifier(\n          specifier,\n          /* isImport */ true,\n          isInTypeOnlyImport,\n        );\n        return this.finishNode<N.ImportSpecifier>(specifier, \"ImportSpecifier\");\n      }\n      specifier.importKind = \"value\";\n      return super.parseImportSpecifier(\n        specifier,\n        importedIsString,\n        isInTypeOnlyImport,\n        isMaybeTypeOnly,\n        isInTypeOnlyImport\n          ? BindingFlag.TYPE_TS_TYPE_IMPORT\n          : BindingFlag.TYPE_TS_VALUE_IMPORT,\n      );\n    }\n\n    parseTypeOnlyImportExportSpecifier(\n      node: any,\n      isImport: boolean,\n      isInTypeOnlyImportExport: boolean,\n    ): void {\n      const leftOfAsKey = isImport ? \"imported\" : \"local\";\n      const rightOfAsKey = isImport ? \"local\" : \"exported\";\n\n      let leftOfAs = node[leftOfAsKey];\n      let rightOfAs;\n\n      let hasTypeSpecifier = false;\n      let canParseAsKeyword = true;\n\n      const loc = leftOfAs.loc.start;\n\n      // https://github.com/microsoft/TypeScript/blob/fc4f9d83d5939047aa6bb2a43965c6e9bbfbc35b/src/compiler/parser.ts#L7411-L7456\n      // import { type } from \"mod\";          - hasTypeSpecifier: false, leftOfAs: type\n      // import { type as } from \"mod\";       - hasTypeSpecifier: true,  leftOfAs: as\n      // import { type as as } from \"mod\";    - hasTypeSpecifier: false, leftOfAs: type, rightOfAs: as\n      // import { type as as as } from \"mod\"; - hasTypeSpecifier: true,  leftOfAs: as,   rightOfAs: as\n      if (this.isContextual(tt._as)) {\n        // { type as ...? }\n        const firstAs = this.parseIdentifier();\n        if (this.isContextual(tt._as)) {\n          // { type as as ...? }\n          const secondAs = this.parseIdentifier();\n          if (tokenIsKeywordOrIdentifier(this.state.type)) {\n            // { type as as something }\n            hasTypeSpecifier = true;\n            leftOfAs = firstAs;\n            rightOfAs = isImport\n              ? this.parseIdentifier()\n              : this.parseModuleExportName();\n            canParseAsKeyword = false;\n          } else {\n            // { type as as }\n            rightOfAs = secondAs;\n            canParseAsKeyword = false;\n          }\n        } else if (tokenIsKeywordOrIdentifier(this.state.type)) {\n          // { type as something }\n          canParseAsKeyword = false;\n          rightOfAs = isImport\n            ? this.parseIdentifier()\n            : this.parseModuleExportName();\n        } else {\n          // { type as }\n          hasTypeSpecifier = true;\n          leftOfAs = firstAs;\n        }\n      } else if (tokenIsKeywordOrIdentifier(this.state.type)) {\n        // { type something ...? }\n        hasTypeSpecifier = true;\n        if (isImport) {\n          leftOfAs = this.parseIdentifier(true);\n          if (!this.isContextual(tt._as)) {\n            this.checkReservedWord(\n              leftOfAs.name,\n              leftOfAs.loc.start,\n              true,\n              true,\n            );\n          }\n        } else {\n          leftOfAs = this.parseModuleExportName();\n        }\n      }\n      if (hasTypeSpecifier && isInTypeOnlyImportExport) {\n        this.raise(\n          isImport\n            ? TSErrors.TypeModifierIsUsedInTypeImports\n            : TSErrors.TypeModifierIsUsedInTypeExports,\n          { at: loc },\n        );\n      }\n\n      node[leftOfAsKey] = leftOfAs;\n      node[rightOfAsKey] = rightOfAs;\n\n      const kindKey = isImport ? \"importKind\" : \"exportKind\";\n      node[kindKey] = hasTypeSpecifier ? \"type\" : \"value\";\n\n      if (canParseAsKeyword && this.eatContextual(tt._as)) {\n        node[rightOfAsKey] = isImport\n          ? this.parseIdentifier()\n          : this.parseModuleExportName();\n      }\n      if (!node[rightOfAsKey]) {\n        node[rightOfAsKey] = cloneIdentifier(node[leftOfAsKey]);\n      }\n      if (isImport) {\n        this.checkIdentifier(\n          node[rightOfAsKey],\n          hasTypeSpecifier\n            ? BindingFlag.TYPE_TS_TYPE_IMPORT\n            : BindingFlag.TYPE_TS_VALUE_IMPORT,\n        );\n      }\n    }\n  };\n\nfunction isPossiblyLiteralEnum(expression: N.Expression): boolean {\n  if (expression.type !== \"MemberExpression\") return false;\n\n  const { computed, property } = expression;\n\n  if (\n    computed &&\n    property.type !== \"StringLiteral\" &&\n    (property.type !== \"TemplateLiteral\" || property.expressions.length > 0)\n  ) {\n    return false;\n  }\n\n  return isUncomputedMemberExpressionChain(expression.object);\n}\n\n// If a const declaration has no type annotation and is initialized to\n// a string literal, numeric literal, or enum reference, then it is\n// allowed. In an ideal world, we'd check whether init was *actually* an\n// enum reference, but we allow anything that \"could be\" a literal enum\n// in `isPossiblyLiteralEnum` since we don't have all the information\n// that the typescript compiler has.\nfunction isValidAmbientConstInitializer(\n  expression: N.Expression,\n  estree: boolean,\n): boolean {\n  const { type } = expression;\n  if (expression.extra?.parenthesized) {\n    return false;\n  }\n  if (estree) {\n    if (type === \"Literal\") {\n      const { value } = expression;\n      if (typeof value === \"string\" || typeof value === \"boolean\") {\n        return true;\n      }\n    }\n  } else {\n    if (type === \"StringLiteral\" || type === \"BooleanLiteral\") {\n      return true;\n    }\n  }\n  if (isNumber(expression, estree) || isNegativeNumber(expression, estree)) {\n    return true;\n  }\n  if (type === \"TemplateLiteral\" && expression.expressions.length === 0) {\n    return true;\n  }\n  if (isPossiblyLiteralEnum(expression)) {\n    return true;\n  }\n  return false;\n}\n\nfunction isNumber(expression: N.Expression, estree: boolean): boolean {\n  if (estree) {\n    return (\n      expression.type === \"Literal\" &&\n      (typeof expression.value === \"number\" || \"bigint\" in expression)\n    );\n  }\n  return (\n    expression.type === \"NumericLiteral\" || expression.type === \"BigIntLiteral\"\n  );\n}\n\nfunction isNegativeNumber(expression: N.Expression, estree: boolean): boolean {\n  if (expression.type === \"UnaryExpression\") {\n    const { operator, argument } = expression as N.UnaryExpression;\n    if (operator === \"-\" && isNumber(argument, estree)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction isUncomputedMemberExpressionChain(expression: N.Expression): boolean {\n  if (expression.type === \"Identifier\") return true;\n  if (expression.type !== \"MemberExpression\" || expression.computed) {\n    return false;\n  }\n\n  return isUncomputedMemberExpressionChain(expression.object);\n}\n","import * as charCodes from \"charcodes\";\n\nimport { tokenLabelName, tt } from \"../tokenizer/types.ts\";\nimport type Parser from \"../parser/index.ts\";\nimport type * as N from \"../types.ts\";\nimport { ParseErrorEnum } from \"../parse-error.ts\";\nimport type { Undone } from \"../parser/node.ts\";\nimport type { ExpressionErrors } from \"../parser/util.ts\";\nimport type { BindingTypes } from \"../util/scopeflags.ts\";\nimport type { Position } from \"../util/location.ts\";\n\ntype PossiblePlaceholders = {\n  Identifier: N.Identifier;\n  StringLiteral: N.StringLiteral;\n  Expression: N.Expression;\n  Statement: N.Statement;\n  Declaration: N.Declaration;\n  BlockStatement: N.BlockStatement;\n  ClassBody: N.ClassBody;\n  Pattern: N.Pattern;\n};\nexport type PlaceholderTypes = keyof PossiblePlaceholders;\n\ntype NodeOf<T extends keyof PossiblePlaceholders> = PossiblePlaceholders[T];\n// todo: when there  is proper union type for Node\n// type NodeOf<T extends PlaceholderTypes> = Extract<N.Node, { type: T }>;\n\n// todo: Placeholder<T> breaks everything, because its type is incompatible with\n// the substituted nodes.\ntype MaybePlaceholder<T extends PlaceholderTypes> = NodeOf<T>; // | Placeholder<T>\n\n/* eslint sort-keys: \"error\" */\nconst PlaceholderErrors = ParseErrorEnum`placeholders`({\n  ClassNameIsRequired: \"A class name is required.\",\n  UnexpectedSpace: \"Unexpected space in placeholder.\",\n});\n\n/* eslint-disable sort-keys */\n\nexport default (superClass: typeof Parser) =>\n  class PlaceholdersParserMixin extends superClass implements Parser {\n    parsePlaceholder<T extends PlaceholderTypes>(\n      expectedNode: T,\n    ): /*?N.Placeholder<T>*/ MaybePlaceholder<T> | undefined | null {\n      if (this.match(tt.placeholder)) {\n        const node = this.startNode();\n        this.next();\n        this.assertNoSpace();\n\n        // We can't use this.parseIdentifier because\n        // we don't want nested placeholders.\n        node.name = super.parseIdentifier(/* liberal */ true);\n\n        this.assertNoSpace();\n        this.expect(tt.placeholder);\n        // @ts-expect-error placeholder typings\n        return this.finishPlaceholder(node, expectedNode);\n      }\n    }\n\n    finishPlaceholder<T extends PlaceholderTypes>(\n      node: N.Node,\n      expectedNode: T,\n    ): /*N.Placeholder<T>*/ MaybePlaceholder<T> {\n      const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n      node.expectedNode = expectedNode;\n\n      // @ts-expect-error todo(flow->ts)\n      return isFinished ? node : this.finishNode(node, \"Placeholder\");\n    }\n\n    /* ============================================================ *\n     * tokenizer/index.js                                           *\n     * ============================================================ */\n\n    getTokenFromCode(code: number) {\n      if (\n        code === charCodes.percentSign &&\n        this.input.charCodeAt(this.state.pos + 1) === charCodes.percentSign\n      ) {\n        this.finishOp(tt.placeholder, 2);\n      } else {\n        super.getTokenFromCode(code);\n      }\n    }\n\n    /* ============================================================ *\n     * parser/expression.js                                         *\n     * ============================================================ */\n\n    parseExprAtom(\n      refExpressionErrors?: ExpressionErrors | null,\n    ): MaybePlaceholder<\"Expression\"> {\n      return (\n        this.parsePlaceholder(\"Expression\") ||\n        super.parseExprAtom(refExpressionErrors)\n      );\n    }\n\n    parseIdentifier(liberal?: boolean): MaybePlaceholder<\"Identifier\"> {\n      // NOTE: This function only handles identifiers outside of\n      // expressions and binding patterns, since they are already\n      // handled by the parseExprAtom and parseBindingAtom functions.\n      // This is needed, for example, to parse \"class %%NAME%% {}\".\n      return (\n        this.parsePlaceholder(\"Identifier\") || super.parseIdentifier(liberal)\n      );\n    }\n\n    checkReservedWord(\n      word: string,\n      startLoc: Position,\n      checkKeywords: boolean,\n      isBinding: boolean,\n    ) {\n      // Sometimes we call #checkReservedWord(node.name), expecting\n      // that node is an Identifier. If it is a Placeholder, name\n      // will be undefined.\n      if (word !== undefined) {\n        super.checkReservedWord(word, startLoc, checkKeywords, isBinding);\n      }\n    }\n\n    /* ============================================================ *\n     * parser/lval.js                                               *\n     * ============================================================ */\n\n    parseBindingAtom(): MaybePlaceholder<\"Pattern\"> {\n      return this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom();\n    }\n\n    isValidLVal(type: string, isParenthesized: boolean, binding: BindingTypes) {\n      return (\n        type === \"Placeholder\" ||\n        super.isValidLVal(type, isParenthesized, binding)\n      );\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean): void {\n      if (\n        node &&\n        node.type === \"Placeholder\" &&\n        node.expectedNode === \"Expression\"\n      ) {\n        node.expectedNode = \"Pattern\";\n      } else {\n        super.toAssignable(node, isLHS);\n      }\n    }\n\n    /* ============================================================ *\n     * parser/statement.js                                          *\n     * ============================================================ */\n\n    chStartsBindingIdentifier(ch: number, pos: number): boolean {\n      if (super.chStartsBindingIdentifier(ch, pos)) {\n        return true;\n      }\n\n      // Accept \"let %%\" as the start of \"let %%placeholder%%\", as though the\n      // placeholder were an identifier.\n      const nextToken = this.lookahead();\n      if (nextToken.type === tt.placeholder) {\n        return true;\n      }\n\n      return false;\n    }\n\n    verifyBreakContinue(\n      node: N.BreakStatement | N.ContinueStatement,\n      isBreak: boolean,\n    ) {\n      // @ts-expect-error: node.label could be Placeholder\n      if (node.label && node.label.type === \"Placeholder\") return;\n      super.verifyBreakContinue(node, isBreak);\n    }\n\n    // @ts-expect-error Plugin will override parser interface\n    parseExpressionStatement(\n      node: MaybePlaceholder<\"Statement\">,\n      expr: N.Expression,\n    ): MaybePlaceholder<\"Statement\"> {\n      if (expr.type !== \"Placeholder\" || expr.extra?.parenthesized) {\n        // @ts-expect-error placeholder typings\n        return super.parseExpressionStatement(node, expr);\n      }\n\n      if (this.match(tt.colon)) {\n        // @ts-expect-error placeholder typings\n        const stmt: N.LabeledStatement = node;\n        stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n        this.next();\n        stmt.body = super.parseStatementOrSloppyAnnexBFunctionDeclaration();\n        return this.finishNode(stmt, \"LabeledStatement\");\n      }\n\n      this.semicolon();\n      node.name = expr.name;\n      return this.finishPlaceholder(node, \"Statement\");\n    }\n\n    parseBlock(\n      allowDirectives?: boolean,\n      createNewLexicalScope?: boolean,\n      afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n    ): MaybePlaceholder<\"BlockStatement\"> {\n      return (\n        this.parsePlaceholder(\"BlockStatement\") ||\n        super.parseBlock(\n          allowDirectives,\n          createNewLexicalScope,\n          afterBlockParse,\n        )\n      );\n    }\n\n    parseFunctionId(\n      requireId?: boolean,\n    ): MaybePlaceholder<\"Identifier\"> | undefined | null {\n      return (\n        this.parsePlaceholder(\"Identifier\") || super.parseFunctionId(requireId)\n      );\n    }\n    // @ts-expect-error Plugin will override parser interface\n    parseClass<T extends N.Class>(\n      node: T,\n      isStatement: /* T === ClassDeclaration */ boolean,\n      optionalId?: boolean,\n    ): T {\n      const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n\n      this.next();\n      const oldStrict = this.state.strict;\n\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (placeholder) {\n        if (\n          this.match(tt._extends) ||\n          this.match(tt.placeholder) ||\n          this.match(tt.braceL)\n        ) {\n          node.id = placeholder;\n        } else if (optionalId || !isStatement) {\n          node.id = null;\n          node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n          return this.finishNode(node, type);\n        } else {\n          throw this.raise(PlaceholderErrors.ClassNameIsRequired, {\n            at: this.state.startLoc,\n          });\n        }\n      } else {\n        this.parseClassId(node, isStatement, optionalId);\n      }\n\n      super.parseClassSuper(node);\n      node.body =\n        this.parsePlaceholder(\"ClassBody\") ||\n        super.parseClassBody(!!node.superClass, oldStrict);\n      return this.finishNode(node, type);\n    }\n\n    parseExport(node: N.Node, decorators: N.Decorator[] | null): N.AnyExport {\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (!placeholder) return super.parseExport(node, decorators);\n\n      if (!this.isContextual(tt._from) && !this.match(tt.comma)) {\n        // export %%DECL%%;\n        node.specifiers = [];\n        node.source = null;\n        node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n        return this.finishNode(node, \"ExportNamedDeclaration\");\n      }\n\n      // export %%NAME%% from \"foo\";\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = placeholder;\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n\n      return super.parseExport(node, decorators);\n    }\n\n    isExportDefaultSpecifier(): boolean {\n      if (this.match(tt._default)) {\n        const next = this.nextTokenStart();\n        if (this.isUnparsedContextual(next, \"from\")) {\n          if (\n            this.input.startsWith(\n              tokenLabelName(tt.placeholder),\n              this.nextTokenStartSince(next + 4),\n            )\n          ) {\n            return true;\n          }\n        }\n      }\n      return super.isExportDefaultSpecifier();\n    }\n\n    maybeParseExportDefaultSpecifier(\n      node: Undone<\n        | N.ExportDefaultDeclaration\n        | N.ExportAllDeclaration\n        | N.ExportNamedDeclaration\n      >,\n      maybeDefaultIdentifier: N.Identifier | null,\n    ): node is Undone<N.ExportNamedDeclaration> {\n      if ((node as N.ExportNamedDeclaration).specifiers?.length) {\n        // \"export %%NAME%%\" has already been parsed by #parseExport.\n        return true;\n      }\n      return super.maybeParseExportDefaultSpecifier(\n        node,\n        maybeDefaultIdentifier,\n      );\n    }\n\n    checkExport(node: N.ExportNamedDeclaration): void {\n      const { specifiers } = node;\n      if (specifiers?.length) {\n        node.specifiers = specifiers.filter(\n          // @ts-expect-error placeholder typings\n          node => node.exported.type === \"Placeholder\",\n        );\n      }\n      super.checkExport(node);\n      node.specifiers = specifiers;\n    }\n\n    parseImport(\n      node: Undone<N.ImportDeclaration>,\n    ): N.ImportDeclaration | N.TsImportEqualsDeclaration {\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (!placeholder) return super.parseImport(node);\n\n      node.specifiers = [];\n\n      if (!this.isContextual(tt._from) && !this.match(tt.comma)) {\n        // import %%STRING%%;\n        node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n        this.semicolon();\n        return this.finishNode(node, \"ImportDeclaration\");\n      }\n\n      // import %%DEFAULT%% ...\n      const specifier =\n        this.startNodeAtNode<N.ImportDefaultSpecifier>(placeholder);\n      specifier.local = placeholder;\n      node.specifiers.push(\n        this.finishNode(specifier, \"ImportDefaultSpecifier\"),\n      );\n\n      if (this.eat(tt.comma)) {\n        // import %%DEFAULT%%, * as ...\n        const hasStarImport = this.maybeParseStarImportSpecifier(node);\n\n        // import %%DEFAULT%%, { ...\n        if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n      }\n\n      this.expectContextual(tt._from);\n      node.source = this.parseImportSource();\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n\n    parseImportSource(): MaybePlaceholder<\"StringLiteral\"> {\n      // import ... from %%STRING%%;\n\n      return (\n        this.parsePlaceholder(\"StringLiteral\") || super.parseImportSource()\n      );\n    }\n\n    // Throws if the current token and the prev one are separated by a space.\n    assertNoSpace(): void {\n      if (this.state.start > this.state.lastTokEndLoc.index) {\n        this.raise(PlaceholderErrors.UnexpectedSpace, {\n          at: this.state.lastTokEndLoc,\n        });\n      }\n    }\n  };\n","import type Parser from \"../parser/index.ts\";\nimport { tokenIsIdentifier, tt } from \"../tokenizer/types.ts\";\nimport type * as N from \"../types.ts\";\nimport type { ExpressionErrors } from \"../parser/util.ts\";\n\nexport default (superClass: typeof Parser) =>\n  class V8IntrinsicMixin extends superClass implements Parser {\n    parseV8Intrinsic(): N.Expression {\n      if (this.match(tt.modulo)) {\n        const v8IntrinsicStartLoc = this.state.startLoc;\n        // let the `loc` of Identifier starts from `%`\n        const node = this.startNode<N.Identifier>();\n        this.next(); // eat '%'\n        if (tokenIsIdentifier(this.state.type)) {\n          const name = this.parseIdentifierName();\n          const identifier = this.createIdentifier(node, name);\n          // @ts-expect-error: avoid mutating AST types\n          identifier.type = \"V8IntrinsicIdentifier\";\n          if (this.match(tt.parenL)) {\n            return identifier;\n          }\n        }\n        this.unexpected(v8IntrinsicStartLoc);\n      }\n    }\n\n    /* ============================================================ *\n     * parser/expression.js                                         *\n     * ============================================================ */\n\n    parseExprAtom(refExpressionErrors?: ExpressionErrors | null): N.Expression {\n      return (\n        this.parseV8Intrinsic() || super.parseExprAtom(refExpressionErrors)\n      );\n    }\n  };\n","import type Parser from \"./parser/index.ts\";\nimport type {\n  ParserPluginWithOptions,\n  PluginConfig,\n  PluginOptions,\n} from \"./typings.ts\";\n\nexport type Plugin = PluginConfig;\n\nexport type PluginList = PluginConfig[];\n\nexport type MixinPlugin = (superClass: { new (...args: any): Parser }) => {\n  new (...args: any): Parser;\n};\n\n// This function’s second parameter accepts either a string (plugin name) or an\n// array pair (plugin name and options object). If an options object is given,\n// then each value is non-recursively checked for identity with the actual\n// option value of each plugin in the first argument (which is an array of\n// plugin names or array pairs).\nexport function hasPlugin(\n  plugins: PluginList,\n  expectedConfig: PluginConfig,\n): boolean {\n  // The expectedOptions object is by default an empty object if the given\n  // expectedConfig argument does not give an options object (i.e., if it is a\n  // string).\n  const [expectedName, expectedOptions] =\n    typeof expectedConfig === \"string\" ? [expectedConfig, {}] : expectedConfig;\n\n  const expectedKeys = Object.keys(expectedOptions);\n\n  const expectedOptionsIsEmpty = expectedKeys.length === 0;\n\n  return plugins.some(p => {\n    if (typeof p === \"string\") {\n      return expectedOptionsIsEmpty && p === expectedName;\n    } else {\n      const [pluginName, pluginOptions] = p;\n      if (pluginName !== expectedName) {\n        return false;\n      }\n      for (const key of expectedKeys) {\n        // @ts-expect-error key may not exist in plugin options\n        if (pluginOptions[key] !== expectedOptions[key]) {\n          return false;\n        }\n      }\n      return true;\n    }\n  });\n}\n\nexport function getPluginOption<\n  PluginName extends ParserPluginWithOptions[0],\n  OptionName extends keyof PluginOptions<PluginName>,\n>(plugins: PluginList, name: PluginName, option: OptionName) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n\n  if (plugin && Array.isArray(plugin) && plugin.length > 1) {\n    return (plugin[1] as PluginOptions<PluginName>)[option];\n  }\n\n  return null;\n}\n\nconst PIPELINE_PROPOSALS = [\"minimal\", \"fsharp\", \"hack\", \"smart\"];\nconst TOPIC_TOKENS = [\"^^\", \"@@\", \"^\", \"%\", \"#\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\n\nexport function validatePlugins(plugins: PluginList) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\n        \"Cannot use the decorators and decorators-legacy plugin together\",\n      );\n    }\n\n    const decoratorsBeforeExport = getPluginOption(\n      plugins,\n      \"decorators\",\n      \"decoratorsBeforeExport\",\n    );\n    if (\n      decoratorsBeforeExport != null &&\n      typeof decoratorsBeforeExport !== \"boolean\"\n    ) {\n      throw new Error(\n        \"'decoratorsBeforeExport' must be a boolean, if specified.\",\n      );\n    }\n\n    const allowCallParenthesized = getPluginOption(\n      plugins,\n      \"decorators\",\n      \"allowCallParenthesized\",\n    );\n    if (\n      allowCallParenthesized != null &&\n      typeof allowCallParenthesized !== \"boolean\"\n    ) {\n      throw new Error(\"'allowCallParenthesized' must be a boolean.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"pipelineOperator\")) {\n    const proposal = getPluginOption(plugins, \"pipelineOperator\", \"proposal\");\n\n    if (!PIPELINE_PROPOSALS.includes(proposal)) {\n      const proposalList = PIPELINE_PROPOSALS.map(p => `\"${p}\"`).join(\", \");\n      throw new Error(\n        `\"pipelineOperator\" requires \"proposal\" option whose value must be one of: ${proposalList}.`,\n      );\n    }\n\n    const tupleSyntaxIsHash = hasPlugin(plugins, [\n      \"recordAndTuple\",\n      { syntaxType: \"hash\" },\n    ]);\n\n    if (proposal === \"hack\") {\n      if (hasPlugin(plugins, \"placeholders\")) {\n        throw new Error(\n          \"Cannot combine placeholders plugin and Hack-style pipes.\",\n        );\n      }\n\n      if (hasPlugin(plugins, \"v8intrinsic\")) {\n        throw new Error(\n          \"Cannot combine v8intrinsic plugin and Hack-style pipes.\",\n        );\n      }\n\n      const topicToken = getPluginOption(\n        plugins,\n        \"pipelineOperator\",\n        \"topicToken\",\n      );\n\n      if (!TOPIC_TOKENS.includes(topicToken)) {\n        const tokenList = TOPIC_TOKENS.map(t => `\"${t}\"`).join(\", \");\n\n        throw new Error(\n          `\"pipelineOperator\" in \"proposal\": \"hack\" mode also requires a \"topicToken\" option whose value must be one of: ${tokenList}.`,\n        );\n      }\n\n      if (topicToken === \"#\" && tupleSyntaxIsHash) {\n        throw new Error(\n          'Plugin conflict between `[\"pipelineOperator\", { proposal: \"hack\", topicToken: \"#\" }]` and `[\"recordAndtuple\", { syntaxType: \"hash\"}]`.',\n        );\n      }\n    } else if (proposal === \"smart\" && tupleSyntaxIsHash) {\n      throw new Error(\n        'Plugin conflict between `[\"pipelineOperator\", { proposal: \"smart\" }]` and `[\"recordAndtuple\", { syntaxType: \"hash\"}]`.',\n      );\n    }\n  }\n\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    if (process.env.BABEL_8_BREAKING) {\n      throw new Error(\n        \"`moduleAttributes` has been removed in Babel 8, please use `importAttributes` parser plugin, or `@babel/plugin-syntax-import-attributes`.\",\n      );\n    } else {\n      if (\n        hasPlugin(plugins, \"importAssertions\") ||\n        hasPlugin(plugins, \"importAttributes\")\n      ) {\n        throw new Error(\n          \"Cannot combine importAssertions, importAttributes and moduleAttributes plugins.\",\n        );\n      }\n      const moduleAttributesVersionPluginOption = getPluginOption(\n        plugins,\n        \"moduleAttributes\",\n        \"version\",\n      );\n      if (moduleAttributesVersionPluginOption !== \"may-2020\") {\n        throw new Error(\n          \"The 'moduleAttributes' plugin requires a 'version' option,\" +\n            \" representing the last proposal update. Currently, the\" +\n            \" only supported value is 'may-2020'.\",\n        );\n      }\n    }\n  }\n  if (\n    hasPlugin(plugins, \"importAssertions\") &&\n    hasPlugin(plugins, \"importAttributes\")\n  ) {\n    throw new Error(\n      \"Cannot combine importAssertions and importAttributes plugins.\",\n    );\n  }\n\n  if (\n    hasPlugin(plugins, \"recordAndTuple\") &&\n    getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\") != null &&\n    !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(\n      getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"),\n    )\n  ) {\n    throw new Error(\n      \"The 'syntaxType' option of the 'recordAndTuple' plugin must be one of: \" +\n        RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"),\n    );\n  }\n\n  if (\n    hasPlugin(plugins, \"asyncDoExpressions\") &&\n    !hasPlugin(plugins, \"doExpressions\")\n  ) {\n    const error = new Error(\n      \"'asyncDoExpressions' requires 'doExpressions', please add 'doExpressions' to parser plugins.\",\n    );\n    // @ts-expect-error so @babel/core can provide better error message\n    error.missingPlugins = \"doExpressions\";\n    throw error;\n  }\n\n  if (\n    hasPlugin(plugins, \"optionalChainingAssign\") &&\n    getPluginOption(plugins, \"optionalChainingAssign\", \"version\") !== \"2023-07\"\n  ) {\n    throw new Error(\n      \"The 'optionalChainingAssign' plugin requires a 'version' option,\" +\n        \" representing the last proposal update. Currently, the\" +\n        \" only supported value is '2023-07'.\",\n    );\n  }\n}\n\n// These plugins are defined using a mixin which extends the parser class.\n\nimport estree from \"./plugins/estree.ts\";\nimport flow from \"./plugins/flow/index.ts\";\nimport jsx from \"./plugins/jsx/index.ts\";\nimport typescript from \"./plugins/typescript/index.ts\";\nimport placeholders from \"./plugins/placeholders.ts\";\nimport v8intrinsic from \"./plugins/v8intrinsic.ts\";\n\n// NOTE: order is important. estree must come first; placeholders must come last.\nexport const mixinPlugins = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders,\n};\n\nexport const mixinPluginNames = Object.keys(mixinPlugins) as ReadonlyArray<\n  \"estree\" | \"jsx\" | \"flow\" | \"typescript\" | \"v8intrinsic\" | \"placeholders\"\n>;\n","import type { PluginList } from \"./plugin-utils.ts\";\n\n// A second optional argument can be given to further configure\n// the parser process. These options are recognized:\n\nexport type SourceType = \"script\" | \"module\" | \"unambiguous\";\n\nexport type Options = {\n  sourceType: SourceType;\n  sourceFilename?: string;\n  startColumn: number;\n  startLine: number;\n  allowAwaitOutsideFunction: boolean;\n  allowReturnOutsideFunction: boolean;\n  allowNewTargetOutsideFunction: boolean;\n  allowImportExportEverywhere: boolean;\n  allowSuperOutsideMethod: boolean;\n  allowUndeclaredExports: boolean;\n  plugins: PluginList;\n  strictMode: boolean | undefined | null;\n  ranges: boolean;\n  tokens: boolean;\n  createImportExpressions: boolean;\n  createParenthesizedExpressions: boolean;\n  errorRecovery: boolean;\n  attachComment: boolean;\n  annexB: boolean;\n};\n\nexport const defaultOptions: Options = {\n  // Source type (\"script\" or \"module\") for different semantics\n  sourceType: \"script\",\n  // Source filename.\n  sourceFilename: undefined,\n  // Column (0-based) from which to start counting source. Useful for\n  // integration with other tools.\n  startColumn: 0,\n  // Line (1-based) from which to start counting source. Useful for\n  // integration with other tools.\n  startLine: 1,\n  // When enabled, await at the top level is not considered an\n  // error.\n  allowAwaitOutsideFunction: false,\n  // When enabled, a return at the top level is not considered an\n  // error.\n  allowReturnOutsideFunction: false,\n  // When enabled, new.target outside a function or class is not\n  // considered an error.\n  allowNewTargetOutsideFunction: false,\n  // When enabled, import/export statements are not constrained to\n  // appearing at the top of the program.\n  allowImportExportEverywhere: false,\n  // TODO\n  allowSuperOutsideMethod: false,\n  // When enabled, export statements can reference undeclared variables.\n  allowUndeclaredExports: false,\n  // An array of plugins to enable\n  plugins: [],\n  // TODO\n  strictMode: null,\n  // Nodes have their start and end characters offsets recorded in\n  // `start` and `end` properties (directly on the node, rather than\n  // the `loc` object, which holds line/column data. To also add a\n  // [semi-standardized][range] `range` property holding a `[start,\n  // end]` array with the same numbers, set the `ranges` option to\n  // `true`.\n  //\n  // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n  ranges: false,\n  // Adds all parsed tokens to a `tokens` property on the `File` node\n  tokens: false,\n  // Whether to create ImportExpression AST nodes (if false\n  // `import(foo)` will be parsed as CallExpression(Import, [Identifier(foo)])\n  createImportExpressions: false,\n  // Whether to create ParenthesizedExpression AST nodes (if false\n  // the parser sets extra.parenthesized on the expression nodes instead).\n  createParenthesizedExpressions: false,\n  // When enabled, errors are attached to the AST instead of being directly thrown.\n  // Some errors will still throw, because @babel/parser can't always recover.\n  errorRecovery: false,\n  // When enabled, comments will be attached to adjacent AST nodes as one of\n  // `leadingComments`, `trailingComments` and `innerComments`. The comment attachment\n  // is vital to preserve comments after transform. If you don't print AST back,\n  // consider set this option to `false` for performance\n  attachComment: true,\n  // When enabled, the parser will support Annex B syntax.\n  // https://tc39.es/ecma262/#sec-additional-ecmascript-features-for-web-browsers\n  annexB: true,\n};\n\n// Interpret and default an options object\n\nexport function getOptions(opts?: Options | null): Options {\n  if (opts == null) {\n    return { ...defaultOptions };\n  }\n  if (opts.annexB != null && opts.annexB !== false) {\n    throw new Error(\"The `annexB` option can only be set to `false`.\");\n  }\n\n  const options: any = {};\n  for (const key of Object.keys(defaultOptions) as (keyof Options)[]) {\n    options[key] = opts[key] ?? defaultOptions[key];\n  }\n  return options;\n}\n","// A recursive descent parser operates by defining functions for all\n// syntactic elements, and recursively calling those, each function\n// advancing the input stream and returning an AST node. Precedence\n// of constructs (for example, the fact that `!x[1]` means `!(x[1])`\n// instead of `(!x)[1]` is handled by the fact that the parser\n// function that parses unary prefix operators is called first, and\n// in turn calls the function that parses `[]` subscripts — that\n// way, it'll receive the node for `x[1]` already parsed, and wraps\n// *that* in the unary operator node.\n//\n// Acorn uses an [operator precedence parser][opp] to handle binary\n// operator precedence, because it is much more compact than using\n// the technique outlined above, which uses different, nesting\n// functions to specify precedence, for all of the ten binary\n// precedence levels that JavaScript defines.\n//\n// [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser\n\nimport {\n  tokenCanStartExpression,\n  tokenIsAssignment,\n  tokenIsIdentifier,\n  tokenIsKeywordOrIdentifier,\n  tokenIsOperator,\n  tokenIsPostfix,\n  tokenIsPrefix,\n  tokenIsRightAssociative,\n  tokenIsTemplate,\n  tokenKeywordOrIdentifierIsKeyword,\n  tokenLabelName,\n  tokenOperatorPrecedence,\n  tt,\n  type TokenType,\n} from \"../tokenizer/types.ts\";\nimport type * as N from \"../types.ts\";\nimport LValParser from \"./lval.ts\";\nimport {\n  isKeyword,\n  isReservedWord,\n  isStrictReservedWord,\n  isStrictBindReservedWord,\n  isIdentifierStart,\n  canBeReservedWord,\n} from \"../util/identifier.ts\";\nimport {\n  type Position,\n  createPositionWithColumnOffset,\n} from \"../util/location.ts\";\nimport * as charCodes from \"charcodes\";\nimport { ScopeFlag, BindingFlag } from \"../util/scopeflags.ts\";\nimport { ExpressionErrors } from \"./util.ts\";\nimport {\n  PARAM_AWAIT,\n  PARAM_IN,\n  PARAM_RETURN,\n  functionFlags,\n} from \"../util/production-parameter.ts\";\nimport {\n  newArrowHeadScope,\n  newAsyncArrowScope,\n  newExpressionScope,\n} from \"../util/expression-scope.ts\";\nimport { Errors, type ParseError } from \"../parse-error.ts\";\nimport { UnparenthesizedPipeBodyDescriptions } from \"../parse-error/pipeline-operator-errors.ts\";\nimport { setInnerComments } from \"./comments.ts\";\nimport { cloneIdentifier, type Undone } from \"./node.ts\";\nimport type Parser from \"./index.ts\";\n\nimport type { SourceType } from \"../options.ts\";\n\nexport default abstract class ExpressionParser extends LValParser {\n  // Forward-declaration: defined in statement.js\n  abstract parseBlock(\n    allowDirectives?: boolean,\n    createNewLexicalScope?: boolean,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): N.BlockStatement;\n  abstract parseClass(\n    node: N.Class,\n    isStatement: boolean,\n    optionalId?: boolean,\n  ): N.Class;\n  abstract parseDecorators(allowExport?: boolean): void;\n  abstract parseFunction<T extends N.NormalFunction>(\n    node: T,\n    statement?: number,\n    allowExpressionBody?: boolean,\n    isAsync?: boolean,\n  ): T;\n  abstract parseFunctionParams(node: N.Function, isConstructor?: boolean): void;\n  abstract parseBlockOrModuleBlockBody(\n    body: N.Statement[],\n    directives: N.Directive[] | null | undefined,\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): void;\n  abstract parseProgram(\n    program: N.Program,\n    end: TokenType,\n    sourceType?: SourceType,\n  ): N.Program;\n\n  // For object literal, check if property __proto__ has been used more than once.\n  // If the expression is a destructuring assignment, then __proto__ may appear\n  // multiple times. Otherwise, __proto__ is a duplicated key.\n\n  // For record expression, check if property __proto__ exists\n\n  checkProto(\n    prop: N.ObjectMember | N.SpreadElement,\n    isRecord: boolean | undefined | null,\n    protoRef: {\n      used: boolean;\n    },\n    refExpressionErrors?: ExpressionErrors | null,\n  ): void {\n    if (\n      prop.type === \"SpreadElement\" ||\n      this.isObjectMethod(prop) ||\n      prop.computed ||\n      // @ts-expect-error prop must be an ObjectProperty\n      prop.shorthand\n    ) {\n      return;\n    }\n\n    const key = prop.key;\n    // It is either an Identifier or a String/NumericLiteral\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(Errors.RecordNoProto, { at: key });\n        return;\n      }\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          // Store the first redefinition's position, otherwise ignore because\n          // we are parsing ambiguous pattern\n          if (refExpressionErrors.doubleProtoLoc === null) {\n            refExpressionErrors.doubleProtoLoc = key.loc.start;\n          }\n        } else {\n          this.raise(Errors.DuplicateProto, { at: key });\n        }\n      }\n\n      protoRef.used = true;\n    }\n  }\n\n  shouldExitDescending(expr: N.Expression, potentialArrowAt: number): boolean {\n    return (\n      expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt\n    );\n  }\n\n  // Convenience method to parse an Expression only\n  getExpression(this: Parser): N.Expression & N.ParserOutput {\n    this.enterInitialScopes();\n    this.nextToken();\n    const expr = this.parseExpression();\n    if (!this.match(tt.eof)) {\n      this.unexpected();\n    }\n    // Unlike parseTopLevel, we need to drain remaining commentStacks\n    // because the top level node is _not_ Program.\n    this.finalizeRemainingComments();\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n    if (this.options.tokens) {\n      expr.tokens = this.tokens;\n    }\n    // @ts-expect-error fixme: refine types\n    return expr;\n  }\n\n  // ### Expression parsing\n\n  // These nest, from the most general expression type at the top to\n  // 'atomic', nondivisible expression types at the bottom. Most of\n  // the functions will simply let the function (s) below them parse,\n  // and, *if* the syntactic construct they handle is present, wrap\n  // the AST node that the inner parser gave them in another node.\n\n  // Parse a full expression.\n  // - `disallowIn`\n  //   is used to forbid the `in` operator (in for loops initialization expressions)\n  //   When `disallowIn` is true, the production parameter [In] is not present.\n\n  // - `refExpressionErrors `\n  //   provides reference for storing '=' operator inside shorthand\n  //   property assignment in contexts where both object expression\n  //   and object pattern might appear (so it's possible to raise\n  //   delayed syntax error at correct position).\n\n  parseExpression(\n    this: Parser,\n    disallowIn?: boolean,\n    refExpressionErrors?: ExpressionErrors,\n  ): N.Expression {\n    if (disallowIn) {\n      return this.disallowInAnd(() =>\n        this.parseExpressionBase(refExpressionErrors),\n      );\n    }\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n\n  // https://tc39.es/ecma262/#prod-Expression\n  parseExpressionBase(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors,\n  ): N.Expression {\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n    if (this.match(tt.comma)) {\n      const node = this.startNodeAt(startLoc);\n      node.expressions = [expr];\n      while (this.eat(tt.comma)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n    return expr;\n  }\n\n  // Set [~In] parameter for assignment expression\n  parseMaybeAssignDisallowIn(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n    afterLeftParse?: Function,\n  ) {\n    return this.disallowInAnd(() =>\n      this.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n    );\n  }\n\n  // Set [+In] parameter for assignment expression\n  parseMaybeAssignAllowIn(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n    afterLeftParse?: Function,\n  ) {\n    return this.allowInAnd(() =>\n      this.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n    );\n  }\n\n  // This method is only used by\n  // the typescript and flow plugins.\n  setOptionalParametersError(\n    refExpressionErrors: ExpressionErrors,\n    resultError?: ParseError<any>,\n  ) {\n    refExpressionErrors.optionalParametersLoc =\n      resultError?.loc ?? this.state.startLoc;\n  }\n\n  // Parse an assignment expression. This includes applications of\n  // operators like `+=`.\n  // https://tc39.es/ecma262/#prod-AssignmentExpression\n  parseMaybeAssign(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n    afterLeftParse?: Function,\n  ): N.Expression {\n    const startLoc = this.state.startLoc;\n    if (this.isContextual(tt._yield)) {\n      if (this.prodParam.hasYield) {\n        let left = this.parseYield();\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startLoc);\n        }\n        return left;\n      }\n    }\n\n    let ownExpressionErrors;\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n    const { type } = this.state;\n\n    if (type === tt.parenL || tokenIsIdentifier(type)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n\n    let left = this.parseMaybeConditional(refExpressionErrors);\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startLoc);\n    }\n    if (tokenIsAssignment(this.state.type)) {\n      const node = this.startNodeAt<N.AssignmentExpression>(startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n\n      if (this.match(tt.eq)) {\n        this.toAssignable(left, /* isLHS */ true);\n        node.left = left;\n\n        const startIndex = startLoc.index;\n        if (\n          refExpressionErrors.doubleProtoLoc != null &&\n          refExpressionErrors.doubleProtoLoc.index >= startIndex\n        ) {\n          refExpressionErrors.doubleProtoLoc = null; // reset because double __proto__ is valid in assignment expression\n        }\n        if (\n          refExpressionErrors.shorthandAssignLoc != null &&\n          refExpressionErrors.shorthandAssignLoc.index >= startIndex\n        ) {\n          refExpressionErrors.shorthandAssignLoc = null; // reset because shorthand default was used correctly\n        }\n        if (\n          refExpressionErrors.privateKeyLoc != null &&\n          refExpressionErrors.privateKeyLoc.index >= startIndex\n        ) {\n          this.checkDestructuringPrivate(refExpressionErrors);\n          refExpressionErrors.privateKeyLoc = null; // reset because `({ #x: x })` is an assignable pattern\n        }\n      } else {\n        node.left = left;\n      }\n\n      this.next();\n      node.right = this.parseMaybeAssign();\n      this.checkLVal(left, {\n        in: this.finishNode(node, \"AssignmentExpression\"),\n      });\n      // @ts-expect-error todo(flow->ts) improve node types\n      return node;\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    return left;\n  }\n\n  // Parse a ternary conditional (`?:`) operator.\n  // https://tc39.es/ecma262/#prod-ConditionalExpression\n\n  parseMaybeConditional(\n    this: Parser,\n    refExpressionErrors: ExpressionErrors,\n  ): N.Expression {\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseConditional(expr, startLoc, refExpressionErrors);\n  }\n\n  parseConditional(\n    this: Parser,\n    expr: N.Expression,\n    startLoc: Position,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.Expression {\n    if (this.eat(tt.question)) {\n      const node = this.startNodeAt(startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(tt.colon);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n    return expr;\n  }\n\n  parseMaybeUnaryOrPrivate(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors,\n  ): N.Expression | N.PrivateName {\n    return this.match(tt.privateName)\n      ? this.parsePrivateName()\n      : this.parseMaybeUnary(refExpressionErrors);\n  }\n\n  // Start the precedence parser.\n  // https://tc39.es/ecma262/#prod-ShortCircuitExpression\n\n  parseExprOps(\n    this: Parser,\n    refExpressionErrors: ExpressionErrors,\n  ): N.Expression {\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnaryOrPrivate(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseExprOp(expr, startLoc, -1);\n  }\n\n  // Parse binary operators with the operator precedence parsing\n  // algorithm. `left` is the left-hand side of the operator.\n  // `minPrec` provides context that allows the function to stop and\n  // defer further parser to one of its callers when it encounters an\n  // operator that has a lower precedence than the set it is parsing.\n\n  parseExprOp(\n    this: Parser,\n    left: N.Expression | N.PrivateName,\n    leftStartLoc: Position,\n    minPrec: number,\n  ): N.Expression {\n    if (this.isPrivateName(left)) {\n      // https://tc39.es/ecma262/#prod-RelationalExpression\n      // RelationalExpression [In, Yield, Await]\n      //   [+In] PrivateIdentifier in ShiftExpression[?Yield, ?Await]\n\n      const value = this.getPrivateNameSV(left);\n\n      if (\n        minPrec >= tokenOperatorPrecedence(tt._in) ||\n        !this.prodParam.hasIn ||\n        !this.match(tt._in)\n      ) {\n        this.raise(Errors.PrivateInExpectedIn, {\n          at: left,\n          identifierName: value,\n        });\n      }\n\n      this.classScope.usePrivateName(value, left.loc.start);\n    }\n\n    const op = this.state.type;\n    if (tokenIsOperator(op) && (this.prodParam.hasIn || !this.match(tt._in))) {\n      let prec = tokenOperatorPrecedence(op);\n      if (prec > minPrec) {\n        if (op === tt.pipeline) {\n          this.expectPlugin(\"pipelineOperator\");\n          if (this.state.inFSharpPipelineDirectBody) {\n            return left;\n          }\n          this.checkPipelineAtInfixOperator(left, leftStartLoc);\n        }\n        const node = this.startNodeAt<N.LogicalExpression | N.BinaryExpression>(\n          leftStartLoc,\n        );\n        node.left = left;\n        node.operator = this.state.value;\n\n        const logical = op === tt.logicalOR || op === tt.logicalAND;\n        const coalesce = op === tt.nullishCoalescing;\n\n        if (coalesce) {\n          // Handle the precedence of `tt.coalesce` as equal to the range of logical expressions.\n          // In other words, `node.right` shouldn't contain logical expressions in order to check the mixed error.\n          prec = tokenOperatorPrecedence(tt.logicalAND);\n        }\n\n        this.next();\n\n        if (\n          op === tt.pipeline &&\n          this.hasPlugin([\"pipelineOperator\", { proposal: \"minimal\" }])\n        ) {\n          if (this.state.type === tt._await && this.prodParam.hasAwait) {\n            throw this.raise(Errors.UnexpectedAwaitAfterPipelineBody, {\n              at: this.state.startLoc,\n            });\n          }\n        }\n\n        node.right = this.parseExprOpRightExpr(op, prec);\n        const finishedNode = this.finishNode(\n          node,\n          logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\",\n        );\n        /* this check is for all ?? operators\n         * a ?? b && c for this example\n         * when op is coalesce and nextOp is logical (&&), throw at the pos of nextOp that it can not be mixed.\n         * Symmetrically it also throws when op is logical and nextOp is coalesce\n         */\n        const nextOp = this.state.type;\n        if (\n          (coalesce && (nextOp === tt.logicalOR || nextOp === tt.logicalAND)) ||\n          (logical && nextOp === tt.nullishCoalescing)\n        ) {\n          throw this.raise(Errors.MixingCoalesceWithLogical, {\n            at: this.state.startLoc,\n          });\n        }\n\n        return this.parseExprOp(finishedNode, leftStartLoc, minPrec);\n      }\n    }\n    return left;\n  }\n\n  // Helper function for `parseExprOp`. Parse the right-hand side of binary-\n  // operator expressions, then apply any operator-specific functions.\n\n  parseExprOpRightExpr(\n    this: Parser,\n    op: TokenType,\n    prec: number,\n  ): N.Expression {\n    const startLoc = this.state.startLoc;\n    switch (op) {\n      case tt.pipeline:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"hack\":\n            return this.withTopicBindingContext(() => {\n              return this.parseHackPipeBody();\n            });\n\n          case \"smart\":\n            return this.withTopicBindingContext(() => {\n              if (this.prodParam.hasYield && this.isContextual(tt._yield)) {\n                throw this.raise(Errors.PipeBodyIsTighter, {\n                  at: this.state.startLoc,\n                });\n              }\n              return this.parseSmartPipelineBodyInStyle(\n                this.parseExprOpBaseRightExpr(op, prec),\n                startLoc,\n              );\n            });\n\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n\n      // Falls through.\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  // Helper function for `parseExprOpRightExpr`. Parse the right-hand side of\n  // binary-operator expressions without applying any operator-specific functions.\n\n  parseExprOpBaseRightExpr(\n    this: Parser,\n    op: TokenType,\n    prec: number,\n  ): N.Expression {\n    const startLoc = this.state.startLoc;\n\n    return this.parseExprOp(\n      this.parseMaybeUnaryOrPrivate(),\n      startLoc,\n      tokenIsRightAssociative(op) ? prec - 1 : prec,\n    );\n  }\n\n  parseHackPipeBody(this: Parser): N.Expression {\n    const { startLoc } = this.state;\n    const body = this.parseMaybeAssign();\n    const requiredParentheses = UnparenthesizedPipeBodyDescriptions.has(\n      // @ts-expect-error TS2345: Argument of type 'string' is not assignable to parameter of type '\"ArrowFunctionExpression\" | \"YieldExpression\" | \"AssignmentExpression\" | \"ConditionalExpression\"'.\n      body.type,\n    );\n\n    // TODO: Check how to handle type casts in Flow and TS once they are supported\n    if (requiredParentheses && !body.extra?.parenthesized) {\n      this.raise(Errors.PipeUnparenthesizedBody, {\n        at: startLoc,\n        // @ts-expect-error TS2322: Type 'string' is not assignable to type '\"AssignmentExpression\" | \"ArrowFunctionExpression\" | \"ConditionalExpression\" | \"YieldExpression\"'.\n        type: body.type,\n      });\n    }\n    if (!this.topicReferenceWasUsedInCurrentContext()) {\n      // A Hack pipe body must use the topic reference at least once.\n      this.raise(Errors.PipeTopicUnused, { at: startLoc });\n    }\n\n    return body;\n  }\n\n  checkExponentialAfterUnary(\n    node: N.AwaitExpression | Undone<N.UnaryExpression>,\n  ) {\n    if (this.match(tt.exponent)) {\n      this.raise(Errors.UnexpectedTokenUnaryExponentiation, {\n        at: node.argument,\n      });\n    }\n  }\n\n  // Parse unary operators, both prefix and postfix.\n  // https://tc39.es/ecma262/#prod-UnaryExpression\n  parseMaybeUnary(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n    sawUnary?: boolean,\n  ): N.Expression {\n    const startLoc = this.state.startLoc;\n    const isAwait = this.isContextual(tt._await);\n\n    if (isAwait && this.isAwaitAllowed()) {\n      this.next();\n      const expr = this.parseAwait(startLoc);\n      if (!sawUnary) this.checkExponentialAfterUnary(expr);\n      return expr;\n    }\n    const update = this.match(tt.incDec);\n    const node = this.startNode<N.UnaryExpression | N.UpdateExpression>();\n    if (tokenIsPrefix(this.state.type)) {\n      node.operator = this.state.value;\n      node.prefix = true;\n\n      if (this.match(tt._throw)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n      const isDelete = this.match(tt._delete);\n      this.next();\n\n      node.argument = this.parseMaybeUnary(null, true);\n\n      this.checkExpressionErrors(refExpressionErrors, true);\n\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n\n        if (arg.type === \"Identifier\") {\n          this.raise(Errors.StrictDelete, { at: node });\n        } else if (this.hasPropertyAsPrivateName(arg)) {\n          this.raise(Errors.DeletePrivateField, { at: node });\n        }\n      }\n\n      if (!update) {\n        if (!sawUnary) {\n          this.checkExponentialAfterUnary(node as Undone<N.UnaryExpression>);\n        }\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n\n    const expr = this.parseUpdate(\n      // @ts-expect-error using \"Undone\" node as \"done\"\n      node,\n      update,\n      refExpressionErrors,\n    );\n\n    if (isAwait) {\n      const { type } = this.state;\n      const startsExpr = this.hasPlugin(\"v8intrinsic\")\n        ? tokenCanStartExpression(type)\n        : tokenCanStartExpression(type) && !this.match(tt.modulo);\n      if (startsExpr && !this.isAmbiguousAwait()) {\n        this.raiseOverwrite(Errors.AwaitNotInAsyncContext, { at: startLoc });\n        return this.parseAwait(startLoc);\n      }\n    }\n\n    return expr;\n  }\n\n  // https://tc39.es/ecma262/#prod-UpdateExpression\n  parseUpdate(\n    this: Parser,\n    node: N.Expression,\n    update: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.Expression {\n    if (update) {\n      // @ts-expect-error Type 'Node' is missing the following properties from type 'Undone<UpdateExpression>': prefix, operator, argument\n      const updateExpressionNode = node as Undone<N.UpdateExpression>;\n      this.checkLVal(updateExpressionNode.argument, {\n        in: this.finishNode(updateExpressionNode, \"UpdateExpression\"),\n      });\n      return node;\n    }\n\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n    while (tokenIsPostfix(this.state.type) && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt<N.UpdateExpression>(startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.next();\n      this.checkLVal(expr, {\n        in: (expr = this.finishNode(node, \"UpdateExpression\")),\n      });\n    }\n    return expr;\n  }\n\n  // Parse call, dot, and `[]`-subscript expressions.\n  // https://tc39.es/ecma262/#prod-LeftHandSideExpression\n  parseExprSubscripts(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.Expression {\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseSubscripts(expr, startLoc);\n  }\n\n  parseSubscripts(\n    this: Parser,\n    base: N.Expression,\n    startLoc: Position,\n    noCalls?: boolean | null,\n  ): N.Expression {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false,\n    };\n    do {\n      base = this.parseSubscript(base, startLoc, noCalls, state);\n\n      // After parsing a subscript, this isn't \"async\" for sure.\n      state.maybeAsyncArrow = false;\n    } while (!state.stop);\n    return base;\n  }\n\n  /**\n   * @param state Set 'state.stop = true' to indicate that we should stop parsing subscripts.\n   *   state.optionalChainMember to indicate that the member is currently in OptionalChain\n   */\n  parseSubscript(\n    this: Parser,\n    base: N.Expression,\n    startLoc: Position,\n    noCalls: boolean | undefined | null,\n    state: N.ParseSubscriptState,\n  ): N.Expression {\n    const { type } = this.state;\n    if (!noCalls && type === tt.doubleColon) {\n      return this.parseBind(base, startLoc, noCalls, state);\n    } else if (tokenIsTemplate(type)) {\n      return this.parseTaggedTemplateExpression(base, startLoc, state);\n    }\n\n    let optional = false;\n\n    if (type === tt.questionDot) {\n      if (noCalls) {\n        this.raise(Errors.OptionalChainingNoNew, {\n          at: this.state.startLoc,\n        });\n        if (this.lookaheadCharCode() === charCodes.leftParenthesis) {\n          // stop at `?.` when parsing `new a?.()`\n          state.stop = true;\n          return base;\n        }\n      }\n      state.optionalChainMember = optional = true;\n      this.next();\n    }\n\n    if (!noCalls && this.match(tt.parenL)) {\n      return this.parseCoverCallAndAsyncArrowHead(\n        base,\n        startLoc,\n        state,\n        optional,\n      );\n    } else {\n      const computed = this.eat(tt.bracketL);\n      if (computed || optional || this.eat(tt.dot)) {\n        return this.parseMember(base, startLoc, state, computed, optional);\n      } else {\n        state.stop = true;\n        return base;\n      }\n    }\n  }\n\n  // base[?Yield, ?Await] [ Expression[+In, ?Yield, ?Await] ]\n  // base[?Yield, ?Await] . IdentifierName\n  // base[?Yield, ?Await] . PrivateIdentifier\n  //   where `base` is one of CallExpression, MemberExpression and OptionalChain\n  parseMember(\n    this: Parser,\n    base: N.Expression,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n    computed: boolean,\n    optional: boolean,\n  ): N.OptionalMemberExpression | N.MemberExpression {\n    const node = this.startNodeAt<\n      N.OptionalMemberExpression | N.MemberExpression\n    >(startLoc);\n    node.object = base;\n    node.computed = computed;\n    if (computed) {\n      node.property = this.parseExpression();\n      this.expect(tt.bracketR);\n    } else if (this.match(tt.privateName)) {\n      if (base.type === \"Super\") {\n        this.raise(Errors.SuperPrivateField, { at: startLoc });\n      }\n      this.classScope.usePrivateName(this.state.value, this.state.startLoc);\n      node.property = this.parsePrivateName();\n    } else {\n      node.property = this.parseIdentifier(true);\n    }\n\n    if (state.optionalChainMember) {\n      (node as N.OptionalMemberExpression).optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n\n  // https://github.com/tc39/proposal-bind-operator#syntax\n  parseBind(\n    this: Parser,\n    base: N.Expression,\n    startLoc: Position,\n    noCalls: boolean | undefined | null,\n    state: N.ParseSubscriptState,\n  ): N.Expression {\n    const node = this.startNodeAt(startLoc);\n    node.object = base;\n    this.next(); // eat '::'\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(\n      this.finishNode(node, \"BindExpression\"),\n      startLoc,\n      noCalls,\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-CoverCallExpressionAndAsyncArrowHead\n  // CoverCallExpressionAndAsyncArrowHead\n  // CallExpression[?Yield, ?Await] Arguments[?Yield, ?Await]\n  // OptionalChain[?Yield, ?Await] Arguments[?Yield, ?Await]\n  parseCoverCallAndAsyncArrowHead(\n    this: Parser,\n    base: N.Expression,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n    optional: boolean,\n  ): N.Expression {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    let refExpressionErrors: ExpressionErrors | null = null;\n\n    this.state.maybeInArrowParameters = true;\n    this.next(); // eat `(`\n\n    const node = this.startNodeAt<N.CallExpression | N.OptionalCallExpression>(\n      startLoc,\n    );\n    node.callee = base;\n    const { maybeAsyncArrow, optionalChainMember } = state;\n\n    if (maybeAsyncArrow) {\n      this.expressionScope.enter(newAsyncArrowScope());\n      refExpressionErrors = new ExpressionErrors();\n    }\n\n    if (optionalChainMember) {\n      // @ts-expect-error when optionalChainMember is true, node must be an optional call\n      node.optional = optional;\n    }\n\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(tt.parenR);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(\n        tt.parenR,\n        base.type === \"Import\",\n        base.type !== \"Super\",\n        // @ts-expect-error todo(flow->ts)\n        node,\n        refExpressionErrors,\n      );\n    }\n    let finishedNode:\n      | N.CallExpression\n      | N.OptionalCallExpression\n      | N.ArrowFunctionExpression = this.finishCallExpression(\n      node,\n      optionalChainMember,\n    );\n\n    if (maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      /*:: invariant(refExpressionErrors != null) */\n      state.stop = true;\n      this.checkDestructuringPrivate(refExpressionErrors);\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      finishedNode = this.parseAsyncArrowFromCallExpression(\n        this.startNodeAt<N.ArrowFunctionExpression>(startLoc),\n        finishedNode as N.CallExpression,\n      );\n    } else {\n      if (maybeAsyncArrow) {\n        this.checkExpressionErrors(refExpressionErrors, true);\n        this.expressionScope.exit();\n      }\n      this.toReferencedArguments(finishedNode);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    return finishedNode;\n  }\n\n  toReferencedArguments(\n    node: N.CallExpression | N.OptionalCallExpression,\n    isParenthesizedExpr?: boolean,\n  ) {\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n  }\n\n  // MemberExpression [?Yield, ?Await] TemplateLiteral[?Yield, ?Await, +Tagged]\n  // CallExpression [?Yield, ?Await] TemplateLiteral[?Yield, ?Await, +Tagged]\n  parseTaggedTemplateExpression(\n    this: Parser,\n    base: N.Expression,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n  ): N.TaggedTemplateExpression {\n    const node = this.startNodeAt<N.TaggedTemplateExpression>(startLoc);\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n    if (state.optionalChainMember) {\n      this.raise(Errors.OptionalChainingNoTemplate, { at: startLoc });\n    }\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n\n  atPossibleAsyncArrow(base: N.Expression): boolean {\n    return (\n      base.type === \"Identifier\" &&\n      base.name === \"async\" &&\n      this.state.lastTokEndLoc.index === base.end &&\n      !this.canInsertSemicolon() &&\n      // check there are no escape sequences, such as \\u{61}sync\n      base.end - base.start === 5 &&\n      base.start === this.state.potentialArrowAt\n    );\n  }\n\n  expectImportAttributesPlugin() {\n    if (!this.hasPlugin(\"importAssertions\")) {\n      this.expectPlugin(\"importAttributes\");\n    }\n  }\n\n  finishCallExpression<T extends N.CallExpression | N.OptionalCallExpression>(\n    node: Undone<T>,\n    optional: boolean,\n  ): T {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        if (process.env.BABEL_8_BREAKING) {\n          this.expectImportAttributesPlugin();\n        } else {\n          if (!this.hasPlugin(\"moduleAttributes\")) {\n            this.expectImportAttributesPlugin();\n          }\n        }\n      }\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(Errors.ImportCallArity, {\n          at: node,\n          maxArgumentCount:\n            this.hasPlugin(\"importAttributes\") ||\n            this.hasPlugin(\"importAssertions\") ||\n            this.hasPlugin(\"moduleAttributes\")\n              ? 2\n              : 1,\n        });\n      } else {\n        for (const arg of node.arguments) {\n          if (arg.type === \"SpreadElement\") {\n            this.raise(Errors.ImportCallSpreadArgument, { at: arg });\n          }\n        }\n      }\n    }\n    return this.finishNode(\n      node,\n      optional ? \"OptionalCallExpression\" : \"CallExpression\",\n    );\n  }\n\n  parseCallExpressionArguments(\n    this: Parser,\n    close: TokenType,\n    dynamicImport?: boolean,\n    allowPlaceholder?: boolean,\n    nodeForExtra?: N.Node | null,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): Array<N.Expression | undefined | null> {\n    const elts: N.Expression[] = [];\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          if (\n            dynamicImport &&\n            !this.hasPlugin(\"importAttributes\") &&\n            !this.hasPlugin(\"importAssertions\") &&\n            !this.hasPlugin(\"moduleAttributes\")\n          ) {\n            this.raise(Errors.ImportCallArgumentTrailingComma, {\n              at: this.state.lastTokStartLoc,\n            });\n          }\n          if (nodeForExtra) {\n            this.addTrailingCommaExtraToNode(nodeForExtra);\n          }\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(\n        this.parseExprListItem(false, refExpressionErrors, allowPlaceholder),\n      );\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    return elts;\n  }\n\n  shouldParseAsyncArrow(): boolean {\n    return this.match(tt.arrow) && !this.canInsertSemicolon();\n  }\n\n  parseAsyncArrowFromCallExpression(\n    this: Parser,\n    node: Undone<N.ArrowFunctionExpression>,\n    call: N.CallExpression,\n  ): N.ArrowFunctionExpression {\n    this.resetPreviousNodeTrailingComments(call);\n    this.expect(tt.arrow);\n    this.parseArrowExpression(\n      node,\n      call.arguments,\n      true,\n      call.extra?.trailingCommaLoc,\n    );\n    // mark inner comments of `async()` as inner comments of `async () =>`\n    if (call.innerComments) {\n      setInnerComments(node, call.innerComments);\n    }\n    // mark trailing comments of `async` to be inner comments\n    if (call.callee.trailingComments) {\n      setInnerComments(node, call.callee.trailingComments);\n    }\n    return node as N.ArrowFunctionExpression;\n  }\n\n  // Parse a no-call expression (like argument of `new` or `::` operators).\n  // https://tc39.es/ecma262/#prod-MemberExpression\n  parseNoCallExpr(this: Parser): N.Expression {\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startLoc, true);\n  }\n\n  // Parse an atomic expression — either a single token that is an\n  // expression, an expression started by a keyword like `function` or\n  // `new`, or an expression wrapped in punctuation like `()`, `[]`,\n  // or `{}`.\n\n  // https://tc39.es/ecma262/#prod-PrimaryExpression\n  // https://tc39.es/ecma262/#prod-AsyncArrowFunction\n  // PrimaryExpression\n  // Super\n  // Import\n  // AsyncArrowFunction\n\n  parseExprAtom(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.Expression {\n    let node;\n    let decorators: N.Decorator[] | null = null;\n\n    const { type } = this.state;\n    switch (type) {\n      case tt._super:\n        return this.parseSuper();\n\n      case tt._import:\n        node = this.startNode<N.MetaProperty | N.Import | N.ImportExpression>();\n        this.next();\n\n        if (this.match(tt.dot)) {\n          return this.parseImportMetaProperty(node as Undone<N.MetaProperty>);\n        }\n\n        if (this.match(tt.parenL)) {\n          if (this.options.createImportExpressions) {\n            return this.parseImportCall(node as Undone<N.ImportExpression>);\n          } else {\n            return this.finishNode(node, \"Import\");\n          }\n        } else {\n          this.raise(Errors.UnsupportedImport, {\n            at: this.state.lastTokStartLoc,\n          });\n          return this.finishNode(node, \"Import\");\n        }\n\n      case tt._this:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case tt._do: {\n        return this.parseDo(this.startNode(), false);\n      }\n\n      case tt.slash:\n      case tt.slashAssign: {\n        this.readRegexp();\n        return this.parseRegExpLiteral(this.state.value);\n      }\n\n      case tt.num:\n        return this.parseNumericLiteral(this.state.value);\n\n      case tt.bigint:\n        return this.parseBigIntLiteral(this.state.value);\n\n      case tt.decimal:\n        return this.parseDecimalLiteral(this.state.value);\n\n      case tt.string:\n        return this.parseStringLiteral(this.state.value);\n\n      case tt._null:\n        return this.parseNullLiteral();\n\n      case tt._true:\n        return this.parseBooleanLiteral(true);\n      case tt._false:\n        return this.parseBooleanLiteral(false);\n\n      case tt.parenL: {\n        const canBeArrow = this.state.potentialArrowAt === this.state.start;\n        return this.parseParenAndDistinguishExpression(canBeArrow);\n      }\n\n      case tt.bracketBarL:\n      case tt.bracketHashL: {\n        return this.parseArrayLike(\n          this.state.type === tt.bracketBarL ? tt.bracketBarR : tt.bracketR,\n          /* canBePattern */ false,\n          /* isTuple */ true,\n        );\n      }\n      case tt.bracketL: {\n        return this.parseArrayLike(\n          tt.bracketR,\n          /* canBePattern */ true,\n          /* isTuple */ false,\n          refExpressionErrors,\n        );\n      }\n      case tt.braceBarL:\n      case tt.braceHashL: {\n        return this.parseObjectLike(\n          this.state.type === tt.braceBarL ? tt.braceBarR : tt.braceR,\n          /* isPattern */ false,\n          /* isRecord */ true,\n        );\n      }\n      case tt.braceL: {\n        return this.parseObjectLike(\n          tt.braceR,\n          /* isPattern */ false,\n          /* isRecord */ false,\n          refExpressionErrors,\n        );\n      }\n      case tt._function:\n        return this.parseFunctionOrFunctionSent();\n\n      case tt.at:\n        decorators = this.parseDecorators();\n      // fall through\n      case tt._class:\n        return this.parseClass(\n          this.maybeTakeDecorators(decorators, this.startNode()),\n          false,\n        );\n\n      case tt._new:\n        return this.parseNewOrNewTarget();\n\n      case tt.templateNonTail:\n      case tt.templateTail:\n        return this.parseTemplate(false);\n\n      // BindExpression[Yield]\n      //   :: MemberExpression[?Yield]\n      case tt.doubleColon: {\n        node = this.startNode();\n        this.next();\n        node.object = null;\n        const callee = (node.callee = this.parseNoCallExpr());\n        if (callee.type === \"MemberExpression\") {\n          return this.finishNode(node, \"BindExpression\");\n        } else {\n          throw this.raise(Errors.UnsupportedBind, { at: callee });\n        }\n      }\n\n      case tt.privateName: {\n        // Standalone private names are only allowed in \"#x in obj\"\n        // expressions, and they are directly handled by callers of\n        // parseExprOp. If we reach this, the input is always invalid.\n        // We can throw a better error message and recover, rather than\n        // just throwing \"Unexpected token\" (which is the default\n        // behavior of this big switch statement).\n        this.raise(Errors.PrivateInExpectedIn, {\n          at: this.state.startLoc,\n          identifierName: this.state.value,\n        });\n        return this.parsePrivateName();\n      }\n\n      case tt.moduloAssign: {\n        return this.parseTopicReferenceThenEqualsSign(tt.modulo, \"%\");\n      }\n\n      case tt.xorAssign: {\n        return this.parseTopicReferenceThenEqualsSign(tt.bitwiseXOR, \"^\");\n      }\n\n      case tt.doubleCaret:\n      case tt.doubleAt: {\n        return this.parseTopicReference(\"hack\");\n      }\n\n      case tt.bitwiseXOR:\n      case tt.modulo:\n      case tt.hash: {\n        const pipeProposal = this.getPluginOption(\n          \"pipelineOperator\",\n          \"proposal\",\n        );\n\n        if (pipeProposal) {\n          return this.parseTopicReference(pipeProposal);\n        }\n        this.unexpected();\n        break;\n      }\n\n      case tt.lt: {\n        const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n        if (\n          isIdentifierStart(lookaheadCh) || // Element/Type Parameter <foo>\n          lookaheadCh === charCodes.greaterThan // Fragment <>\n        ) {\n          this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n        } else {\n          this.unexpected();\n        }\n        break;\n      }\n\n      default:\n        if (tokenIsIdentifier(type)) {\n          if (\n            this.isContextual(tt._module) &&\n            this.lookaheadInLineCharCode() === charCodes.leftCurlyBrace\n          ) {\n            return this.parseModuleExpression();\n          }\n          const canBeArrow = this.state.potentialArrowAt === this.state.start;\n          const containsEsc = this.state.containsEsc;\n          const id = this.parseIdentifier();\n\n          if (\n            !containsEsc &&\n            id.name === \"async\" &&\n            !this.canInsertSemicolon()\n          ) {\n            const { type } = this.state;\n            if (type === tt._function) {\n              this.resetPreviousNodeTrailingComments(id);\n              this.next();\n              return this.parseAsyncFunctionExpression(\n                this.startNodeAtNode(id),\n              );\n            } else if (tokenIsIdentifier(type)) {\n              // If the next token begins with \"=\", commit to parsing an async\n              // arrow function. (Peeking ahead for \"=\" lets us avoid a more\n              // expensive full-token lookahead on this common path.)\n              if (this.lookaheadCharCode() === charCodes.equalsTo) {\n                // although `id` is not used in async arrow unary function,\n                // we don't need to reset `async`'s trailing comments because\n                // it will be attached to the upcoming async arrow binding identifier\n                return this.parseAsyncArrowUnaryFunction(\n                  this.startNodeAtNode(id),\n                );\n              } else {\n                // Otherwise, treat \"async\" as an identifier and let calling code\n                // deal with the current tt.name token.\n                return id;\n              }\n            } else if (type === tt._do) {\n              this.resetPreviousNodeTrailingComments(id);\n              return this.parseDo(this.startNodeAtNode(id), true);\n            }\n          }\n\n          if (\n            canBeArrow &&\n            this.match(tt.arrow) &&\n            !this.canInsertSemicolon()\n          ) {\n            this.next();\n            return this.parseArrowExpression(\n              this.startNodeAtNode(id),\n              [id],\n              false,\n            );\n          }\n\n          return id;\n        } else {\n          this.unexpected();\n        }\n    }\n  }\n\n  // This helper method should only be called\n  // when the parser has reached a potential Hack pipe topic token\n  // that is followed by an equals sign.\n  // See <https://github.com/js-choi/proposal-hack-pipes>.\n  // If we find ^= or %= in an expression position\n  // (i.e., the tt.moduloAssign or tt.xorAssign token types), and if the\n  // Hack-pipes proposal is active with ^ or % as its topicToken, then the ^ or\n  // % could be the topic token (e.g., in x |> ^==y or x |> ^===y), and so we\n  // reparse the current token as ^ or %.\n  // Otherwise, this throws an unexpected-token error.\n  parseTopicReferenceThenEqualsSign(\n    topicTokenType: TokenType,\n    topicTokenValue: string,\n  ): N.Expression {\n    const pipeProposal = this.getPluginOption(\"pipelineOperator\", \"proposal\");\n\n    if (pipeProposal) {\n      // Set the most-recent token to be a topic token\n      // given by the tokenType and tokenValue.\n      // Now the next readToken() call (in parseTopicReference)\n      // will consume that “topic token”.\n      this.state.type = topicTokenType;\n      this.state.value = topicTokenValue;\n      // Rewind the tokenizer to the end of the “topic token”, so that the\n      // following token starts at the equals sign after that topic token.\n      this.state.pos--;\n      this.state.end--;\n      // This is safe to do since the preceding character was either ^ or %, and\n      // thus not a newline.\n      this.state.endLoc = createPositionWithColumnOffset(this.state.endLoc, -1);\n      // Now actually consume the topic token.\n      return this.parseTopicReference(pipeProposal);\n    } else {\n      this.unexpected();\n    }\n  }\n\n  // This helper method should only be called\n  // when the proposal-pipeline-operator plugin is active,\n  // and when the parser has reached a potential Hack pipe topic token.\n  // Although a pipe-operator proposal is assumed to be active,\n  // its configuration might not match the current token’s type.\n  // See <https://github.com/js-choi/proposal-hack-pipes>.\n  parseTopicReference(pipeProposal: string): N.Expression {\n    const node = this.startNode<N.TopicReference>();\n    const startLoc = this.state.startLoc;\n    const tokenType = this.state.type;\n\n    // Consume the current token.\n    this.next();\n\n    // If the pipe-operator plugin’s configuration matches the current token’s type,\n    // then this will return `node`, will have been finished as a topic reference.\n    // Otherwise, this will throw a `PipeTopicUnconfiguredToken` error.\n    return this.finishTopicReference(node, startLoc, pipeProposal, tokenType);\n  }\n\n  // This helper method attempts to finish the given `node`\n  // into a topic-reference node for the given `pipeProposal`.\n  // See <https://github.com/js-choi/proposal-hack-pipes>.\n  //\n  // The method assumes that any topic token was consumed before it was called.\n  //\n  // If the `pipelineOperator` plugin is active,\n  // and if the given `tokenType` matches the plugin’s configuration,\n  // then this method will return the finished `node`.\n  //\n  // If the `pipelineOperator` plugin is active,\n  // but if the given `tokenType` does not match the plugin’s configuration,\n  // then this method will throw a `PipeTopicUnconfiguredToken` error.\n  finishTopicReference(\n    node: Undone<N.Node>,\n    startLoc: Position,\n    pipeProposal: string,\n    tokenType: TokenType,\n  ): N.Expression {\n    if (\n      this.testTopicReferenceConfiguration(pipeProposal, startLoc, tokenType)\n    ) {\n      // The token matches the plugin’s configuration.\n      // The token is therefore a topic reference.\n\n      // Determine the node type for the topic reference\n      // that is appropriate for the active pipe-operator proposal.\n      const nodeType =\n        pipeProposal === \"smart\"\n          ? \"PipelinePrimaryTopicReference\"\n          : // The proposal must otherwise be \"hack\",\n            // as enforced by testTopicReferenceConfiguration.\n            \"TopicReference\";\n\n      if (!this.topicReferenceIsAllowedInCurrentContext()) {\n        this.raise(\n          // The topic reference is not allowed in the current context:\n          // it is outside of a pipe body.\n          // Raise recoverable errors.\n          pipeProposal === \"smart\"\n            ? Errors.PrimaryTopicNotAllowed\n            : // In this case, `pipeProposal === \"hack\"` is true.\n              Errors.PipeTopicUnbound,\n          { at: startLoc },\n        );\n      }\n\n      // Register the topic reference so that its pipe body knows\n      // that its topic was used at least once.\n      this.registerTopicReference();\n\n      return this.finishNode(node, nodeType);\n    } else {\n      // The token does not match the plugin’s configuration.\n      throw this.raise(Errors.PipeTopicUnconfiguredToken, {\n        at: startLoc,\n        token: tokenLabelName(tokenType),\n      });\n    }\n  }\n\n  // This helper method tests whether the given token type\n  // matches the pipelineOperator parser plugin’s configuration.\n  // If the active pipe proposal is Hack style,\n  // and if the given token is the same as the plugin configuration’s `topicToken`,\n  // then this is a valid topic reference.\n  // If the active pipe proposal is smart mix,\n  // then the topic token must always be `#`.\n  // If the active pipe proposal is neither (e.g., \"minimal\" or \"fsharp\"),\n  // then an error is thrown.\n  testTopicReferenceConfiguration(\n    pipeProposal: string,\n    startLoc: Position,\n    tokenType: TokenType,\n  ): boolean {\n    switch (pipeProposal) {\n      case \"hack\": {\n        return this.hasPlugin([\n          \"pipelineOperator\",\n          {\n            // @ts-expect-error token must have a label\n            topicToken: tokenLabelName(tokenType),\n          },\n        ]);\n      }\n      case \"smart\":\n        return tokenType === tt.hash;\n      default:\n        throw this.raise(Errors.PipeTopicRequiresHackPipes, { at: startLoc });\n    }\n  }\n\n  // async [no LineTerminator here] AsyncArrowBindingIdentifier[?Yield] [no LineTerminator here] => AsyncConciseBody[?In]\n  parseAsyncArrowUnaryFunction(\n    this: Parser,\n    node: Undone<N.ArrowFunctionExpression>,\n  ): N.ArrowFunctionExpression {\n    // We don't need to push a new ParameterDeclarationScope here since we are sure\n    // 1) it is an async arrow, 2) no biding pattern is allowed in params\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n    const params = [this.parseIdentifier()];\n    this.prodParam.exit();\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(Errors.LineTerminatorBeforeArrow, {\n        at: this.state.curPosition(),\n      });\n    }\n    this.expect(tt.arrow);\n    // let foo = async bar => {};\n    return this.parseArrowExpression(node, params, true);\n  }\n\n  // https://github.com/tc39/proposal-do-expressions\n  // https://github.com/tc39/proposal-async-do-expressions\n  parseDo(\n    this: Parser,\n    node: Undone<N.DoExpression>,\n    isAsync: boolean,\n  ): N.DoExpression {\n    this.expectPlugin(\"doExpressions\");\n    if (isAsync) {\n      this.expectPlugin(\"asyncDoExpressions\");\n    }\n    node.async = isAsync;\n    this.next(); // eat `do`\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    if (isAsync) {\n      // AsyncDoExpression :\n      // async [no LineTerminator here] do Block[~Yield, +Await, ~Return]\n      this.prodParam.enter(PARAM_AWAIT);\n      node.body = this.parseBlock();\n      this.prodParam.exit();\n    } else {\n      node.body = this.parseBlock();\n    }\n\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n\n  // Parse the `super` keyword\n  parseSuper(): N.Super {\n    const node = this.startNode<N.Super>();\n    this.next(); // eat `super`\n    if (\n      this.match(tt.parenL) &&\n      !this.scope.allowDirectSuper &&\n      !this.options.allowSuperOutsideMethod\n    ) {\n      this.raise(Errors.SuperNotAllowed, { at: node });\n    } else if (\n      !this.scope.allowSuper &&\n      !this.options.allowSuperOutsideMethod\n    ) {\n      this.raise(Errors.UnexpectedSuper, { at: node });\n    }\n\n    if (\n      !this.match(tt.parenL) &&\n      !this.match(tt.bracketL) &&\n      !this.match(tt.dot)\n    ) {\n      this.raise(Errors.UnsupportedSuper, { at: node });\n    }\n\n    return this.finishNode(node, \"Super\");\n  }\n\n  parsePrivateName(): N.PrivateName {\n    const node = this.startNode<N.PrivateName>();\n    const id = this.startNodeAt<N.Identifier>(\n      // The position is hardcoded because we merge `#` and name into a single\n      // tt.privateName token\n      createPositionWithColumnOffset(this.state.startLoc, 1),\n    );\n    const name = this.state.value;\n    this.next(); // eat #name;\n    node.id = this.createIdentifier(id, name);\n    return this.finishNode(node, \"PrivateName\");\n  }\n\n  parseFunctionOrFunctionSent(\n    this: Parser,\n  ): N.FunctionExpression | N.MetaProperty {\n    const node = this.startNode<N.FunctionExpression | N.MetaProperty>();\n\n    // We do not do parseIdentifier here because when parseFunctionOrFunctionSent\n    // is called we already know that the current token is a \"name\" with the value \"function\"\n    // This will improve perf a tiny little bit as we do not do validation but more importantly\n    // here is that parseIdentifier will remove an item from the expression stack\n    // if \"function\" or \"class\" is parsed as identifier (in objects e.g.), which should not happen here.\n    this.next(); // eat `function`\n\n    if (this.prodParam.hasYield && this.match(tt.dot)) {\n      const meta = this.createIdentifier(\n        this.startNodeAtNode<N.Identifier>(node),\n        \"function\",\n      );\n      this.next(); // eat `.`\n      // https://github.com/tc39/proposal-function.sent#syntax-1\n      if (this.match(tt._sent)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        // The code wasn't `function.sent` but just `function.`, so a simple error is less confusing.\n        this.unexpected();\n      }\n      return this.parseMetaProperty(\n        node as Undone<N.MetaProperty>,\n        meta,\n        \"sent\",\n      );\n    }\n    return this.parseFunction(node as Undone<N.FunctionExpression>);\n  }\n\n  parseMetaProperty(\n    node: Undone<N.MetaProperty>,\n    meta: N.Identifier,\n    propertyName: string,\n  ): N.MetaProperty {\n    node.meta = meta;\n\n    const containsEsc = this.state.containsEsc;\n\n    node.property = this.parseIdentifier(true);\n\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(Errors.UnsupportedMetaProperty, {\n        at: node.property,\n        target: meta.name,\n        onlyValidPropertyName: propertyName,\n      });\n    }\n\n    return this.finishNode(node, \"MetaProperty\");\n  }\n\n  // https://tc39.es/ecma262/#prod-ImportMeta\n  parseImportMetaProperty(\n    this: Parser,\n    node: Undone<N.MetaProperty | N.ImportExpression>,\n  ): N.MetaProperty | N.ImportExpression {\n    const id = this.createIdentifier(\n      this.startNodeAtNode<N.Identifier>(node),\n      \"import\",\n    );\n    this.next(); // eat `.`\n\n    if (this.isContextual(tt._meta)) {\n      if (!this.inModule) {\n        this.raise(Errors.ImportMetaOutsideModule, { at: id });\n      }\n      this.sawUnambiguousESM = true;\n    } else if (this.isContextual(tt._source) || this.isContextual(tt._defer)) {\n      const isSource = this.isContextual(tt._source);\n\n      // TODO: The proposal doesn't mention import.defer yet because it was\n      // pending on a decision for import.source. Wait to enable it until it's\n      // included in the proposal.\n      if (!isSource) this.unexpected();\n\n      this.expectPlugin(\n        isSource ? \"sourcePhaseImports\" : \"deferredImportEvaluation\",\n      );\n      if (!this.options.createImportExpressions) {\n        throw this.raise(Errors.DynamicImportPhaseRequiresImportExpressions, {\n          at: this.state.startLoc,\n          phase: this.state.value,\n        });\n      }\n      this.next();\n      (node as Undone<N.ImportExpression>).phase = isSource\n        ? \"source\"\n        : \"defer\";\n      return this.parseImportCall(node as Undone<N.ImportExpression>);\n    }\n\n    return this.parseMetaProperty(node as Undone<N.MetaProperty>, id, \"meta\");\n  }\n\n  parseLiteralAtNode<T extends N.Node>(\n    value: any,\n    type: T[\"type\"],\n    node: any,\n  ): T {\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(node.start, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode<T>(node, type);\n  }\n\n  parseLiteral<T extends N.Node>(value: any, type: T[\"type\"]): T {\n    const node = this.startNode();\n    return this.parseLiteralAtNode(value, type, node);\n  }\n\n  parseStringLiteral(value: any) {\n    return this.parseLiteral<N.StringLiteral>(value, \"StringLiteral\");\n  }\n\n  parseNumericLiteral(value: any) {\n    return this.parseLiteral<N.NumericLiteral>(value, \"NumericLiteral\");\n  }\n\n  parseBigIntLiteral(value: any) {\n    return this.parseLiteral<N.BigIntLiteral>(value, \"BigIntLiteral\");\n  }\n\n  parseDecimalLiteral(value: any) {\n    return this.parseLiteral<N.DecimalLiteral>(value, \"DecimalLiteral\");\n  }\n\n  parseRegExpLiteral(value: {\n    value: any;\n    pattern: string;\n    flags: N.RegExpLiteral[\"flags\"];\n  }) {\n    const node = this.parseLiteral<N.RegExpLiteral>(\n      value.value,\n      \"RegExpLiteral\",\n    );\n    node.pattern = value.pattern;\n    node.flags = value.flags;\n    return node;\n  }\n\n  parseBooleanLiteral(value: boolean) {\n    const node = this.startNode<N.BooleanLiteral>();\n    node.value = value;\n    this.next();\n    return this.finishNode(node, \"BooleanLiteral\");\n  }\n\n  parseNullLiteral() {\n    const node = this.startNode<N.NullLiteral>();\n    this.next();\n    return this.finishNode(node, \"NullLiteral\");\n  }\n\n  // https://tc39.es/ecma262/#prod-CoverParenthesizedExpressionAndArrowParameterList\n  parseParenAndDistinguishExpression(\n    this: Parser,\n    canBeArrow: boolean,\n  ): N.Expression {\n    const startLoc = this.state.startLoc;\n\n    let val;\n    this.next(); // eat `(`\n    this.expressionScope.enter(newArrowHeadScope());\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    const innerStartLoc = this.state.startLoc;\n    const exprList: N.Expression[] = [];\n    const refExpressionErrors = new ExpressionErrors();\n    let first = true;\n    let spreadStartLoc;\n    let optionalCommaStartLoc;\n\n    while (!this.match(tt.parenR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(\n          tt.comma,\n          refExpressionErrors.optionalParametersLoc === null\n            ? null\n            : refExpressionErrors.optionalParametersLoc,\n        );\n        if (this.match(tt.parenR)) {\n          optionalCommaStartLoc = this.state.startLoc;\n          break;\n        }\n      }\n\n      if (this.match(tt.ellipsis)) {\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStartLoc = this.state.startLoc;\n        exprList.push(\n          this.parseParenItem(this.parseRestBinding(), spreadNodeStartLoc),\n        );\n\n        if (!this.checkCommaAfterRest(charCodes.rightParenthesis)) {\n          break;\n        }\n      } else {\n        exprList.push(\n          this.parseMaybeAssignAllowIn(\n            refExpressionErrors,\n            this.parseParenItem,\n          ),\n        );\n      }\n    }\n\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(tt.parenR);\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    let arrowNode = this.startNodeAt<N.ArrowFunctionExpression>(startLoc);\n    if (\n      canBeArrow &&\n      this.shouldParseArrow(exprList) &&\n      (arrowNode = this.parseArrow(arrowNode))\n    ) {\n      this.checkDestructuringPrivate(refExpressionErrors);\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      this.parseArrowExpression(arrowNode, exprList, false);\n      // @ts-expect-error todo(flow->ts) improve node types\n      return arrowNode;\n    }\n    this.expressionScope.exit();\n\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStartLoc);\n    }\n    if (optionalCommaStartLoc) this.unexpected(optionalCommaStartLoc);\n    if (spreadStartLoc) this.unexpected(spreadStartLoc);\n    this.checkExpressionErrors(refExpressionErrors, true);\n\n    this.toReferencedListDeep(exprList, /* isParenthesizedExpr */ true);\n    if (exprList.length > 1) {\n      val = this.startNodeAt<N.SequenceExpression>(innerStartLoc);\n      val.expressions = exprList;\n      // finish node at current location so it can pick up comments after `)`\n      this.finishNode(val, \"SequenceExpression\");\n      this.resetEndLocation(val, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n\n    return this.wrapParenthesis(\n      startLoc,\n      // @ts-expect-error todo(flow->ts)\n      val,\n    );\n  }\n\n  wrapParenthesis(startLoc: Position, expression: N.Expression): N.Expression {\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(expression, \"parenthesized\", true);\n      this.addExtra(expression, \"parenStart\", startLoc.index);\n\n      this.takeSurroundingComments(\n        expression,\n        startLoc.index,\n        this.state.lastTokEndLoc.index,\n      );\n\n      return expression;\n    }\n\n    const parenExpression =\n      this.startNodeAt<N.ParenthesizedExpression>(startLoc);\n    parenExpression.expression = expression;\n    return this.finishNode(parenExpression, \"ParenthesizedExpression\");\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars -- `params` is used in typescript plugin\n  shouldParseArrow(params: Array<N.Node>): boolean {\n    return !this.canInsertSemicolon();\n  }\n\n  parseArrow(\n    node: Undone<N.ArrowFunctionExpression>,\n  ): Undone<N.ArrowFunctionExpression> | undefined {\n    if (this.eat(tt.arrow)) {\n      return node;\n    }\n  }\n\n  parseParenItem(\n    node: N.Expression,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    startLoc: Position,\n  ): N.Expression {\n    return node;\n  }\n\n  parseNewOrNewTarget(this: Parser): N.NewExpression | N.MetaProperty {\n    const node = this.startNode<N.NewExpression | N.MetaProperty>();\n    this.next();\n    if (this.match(tt.dot)) {\n      // https://tc39.es/ecma262/#prod-NewTarget\n      const meta = this.createIdentifier(\n        this.startNodeAtNode<N.Identifier>(node),\n        \"new\",\n      );\n      this.next();\n      const metaProp = this.parseMetaProperty(\n        node as Undone<N.MetaProperty>,\n        meta,\n        \"target\",\n      );\n\n      if (\n        !this.scope.inNonArrowFunction &&\n        !this.scope.inClass &&\n        !this.options.allowNewTargetOutsideFunction\n      ) {\n        this.raise(Errors.UnexpectedNewTarget, { at: metaProp });\n      }\n\n      return metaProp;\n    }\n\n    return this.parseNew(node as Undone<N.NewExpression>);\n  }\n\n  // New's precedence is slightly tricky. It must allow its argument to\n  // be a `[]` or dot subscript expression, but not a call — at least,\n  // not without wrapping it in parentheses. Thus, it uses the noCalls\n  // argument to parseSubscripts to prevent it from consuming the\n  // argument list.\n  // https://tc39.es/ecma262/#prod-NewExpression\n  parseNew(this: Parser, node: Undone<N.NewExpression>): N.NewExpression {\n    this.parseNewCallee(node);\n\n    if (this.eat(tt.parenL)) {\n      const args = this.parseExprList(tt.parenR);\n      this.toReferencedList(args);\n      // (parseExprList should be all non-null in this case)\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n\n    return this.finishNode(node, \"NewExpression\");\n  }\n\n  parseNewCallee(this: Parser, node: Undone<N.NewExpression>): void {\n    const isImport = this.match(tt._import);\n    const callee = this.parseNoCallExpr();\n    node.callee = callee;\n    if (\n      isImport &&\n      (callee.type === \"Import\" || callee.type === \"ImportExpression\")\n    ) {\n      this.raise(Errors.ImportCallNotNewExpression, { at: callee });\n    }\n  }\n\n  // Parse template expression.\n\n  parseTemplateElement(isTagged: boolean): N.TemplateElement {\n    const { start, startLoc, end, value } = this.state;\n    const elemStart = start + 1;\n    const elem = this.startNodeAt<N.TemplateElement>(\n      createPositionWithColumnOffset(startLoc, 1),\n    );\n    if (value === null) {\n      if (!isTagged) {\n        this.raise(Errors.InvalidEscapeSequenceTemplate, {\n          // FIXME: Adding 1 is probably wrong.\n          at: createPositionWithColumnOffset(\n            this.state.firstInvalidTemplateEscapePos,\n            1,\n          ),\n        });\n      }\n    }\n\n    const isTail = this.match(tt.templateTail);\n    const endOffset = isTail ? -1 : -2;\n    const elemEnd = end + endOffset;\n    elem.value = {\n      raw: this.input.slice(elemStart, elemEnd).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: value === null ? null : value.slice(1, endOffset),\n    };\n    elem.tail = isTail;\n    this.next();\n    const finishedNode = this.finishNode(elem, \"TemplateElement\");\n    this.resetEndLocation(\n      finishedNode,\n      createPositionWithColumnOffset(this.state.lastTokEndLoc, endOffset),\n    );\n    return finishedNode;\n  }\n\n  // https://tc39.es/ecma262/#prod-TemplateLiteral\n  parseTemplate(this: Parser, isTagged: boolean): N.TemplateLiteral {\n    const node = this.startNode<N.TemplateLiteral>();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n    while (!curElt.tail) {\n      node.expressions.push(this.parseTemplateSubstitution());\n      this.readTemplateContinuation();\n      node.quasis.push((curElt = this.parseTemplateElement(isTagged)));\n    }\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n\n  // This is overwritten by the TypeScript plugin to parse template types\n  parseTemplateSubstitution(this: Parser): N.Expression {\n    return this.parseExpression();\n  }\n\n  // Parse an object literal, binding pattern, or record.\n\n  parseObjectLike(\n    close: TokenType,\n    isPattern: true,\n    isRecord?: boolean | null,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.ObjectPattern;\n  parseObjectLike(\n    close: TokenType,\n    isPattern: false,\n    isRecord?: false | null,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.ObjectExpression;\n  parseObjectLike(\n    close: TokenType,\n    isPattern: false,\n    isRecord?: true,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.RecordExpression;\n  parseObjectLike<T extends N.ObjectPattern | N.ObjectExpression>(\n    this: Parser,\n    close: TokenType,\n    isPattern: boolean,\n    isRecord?: boolean | null,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): T {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash: any = Object.create(null);\n    let first = true;\n    const node = this.startNode<\n      N.ObjectExpression | N.ObjectPattern | N.RecordExpression\n    >();\n\n    node.properties = [];\n    this.next();\n\n    while (!this.match(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          this.addTrailingCommaExtraToNode(\n            // @ts-expect-error todo(flow->ts) improve node types\n            node,\n          );\n          break;\n        }\n      }\n\n      let prop;\n      if (isPattern) {\n        prop = this.parseBindingProperty();\n      } else {\n        prop = this.parsePropertyDefinition(refExpressionErrors);\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n\n      if (\n        isRecord &&\n        !this.isObjectProperty(prop) &&\n        prop.type !== \"SpreadElement\"\n      ) {\n        this.raise(Errors.InvalidRecordProperty, { at: prop });\n      }\n\n      // @ts-expect-error shorthand may not index prop\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n\n      // @ts-expect-error Fixme: refine typings\n      node.properties.push(prop);\n    }\n\n    this.next();\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n    // @ts-expect-error type is well defined\n    return this.finishNode(node, type);\n  }\n\n  addTrailingCommaExtraToNode(node: N.Node): void {\n    this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n    this.addExtra(node, \"trailingCommaLoc\", this.state.lastTokStartLoc, false);\n  }\n\n  // Check grammar production:\n  //   IdentifierName *_opt PropertyName\n  // It is used in `parsePropertyDefinition` to detect AsyncMethod and Accessors\n  maybeAsyncOrAccessorProp(prop: Undone<N.ObjectProperty>): boolean {\n    return (\n      !prop.computed &&\n      prop.key.type === \"Identifier\" &&\n      (this.isLiteralPropertyName() ||\n        this.match(tt.bracketL) ||\n        this.match(tt.star))\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-PropertyDefinition\n  parsePropertyDefinition(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.ObjectMember | N.SpreadElement {\n    let decorators = [];\n    if (this.match(tt.at)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(Errors.UnsupportedPropertyDecorator, {\n          at: this.state.startLoc,\n        });\n      }\n\n      // we needn't check if decorators (stage 0) plugin is enabled since it's checked by\n      // the call to this.parseDecorator\n      while (this.match(tt.at)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n\n    const prop = this.startNode<N.ObjectProperty>();\n    let isAsync = false;\n    let isAccessor = false;\n    let startLoc;\n\n    if (this.match(tt.ellipsis)) {\n      if (decorators.length) this.unexpected();\n      return this.parseSpread();\n    }\n\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    prop.method = false;\n\n    if (refExpressionErrors) {\n      startLoc = this.state.startLoc;\n    }\n\n    let isGenerator = this.eat(tt.star);\n    this.parsePropertyNamePrefixOperator(prop);\n    const containsEsc = this.state.containsEsc;\n    const key = this.parsePropertyName(prop, refExpressionErrors);\n\n    if (!isGenerator && !containsEsc && this.maybeAsyncOrAccessorProp(prop)) {\n      const keyName = key.name;\n      // https://tc39.es/ecma262/#prod-AsyncMethod\n      // https://tc39.es/ecma262/#prod-AsyncGeneratorMethod\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        this.resetPreviousNodeTrailingComments(key);\n        isGenerator = this.eat(tt.star);\n        this.parsePropertyName(prop);\n      }\n      // get PropertyName[?Yield, ?Await] () { FunctionBody[~Yield, ~Await] }\n      // set PropertyName[?Yield, ?Await] ( PropertySetParameterList ) { FunctionBody[~Yield, ~Await] }\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        this.resetPreviousNodeTrailingComments(key);\n        prop.kind = keyName;\n        if (this.match(tt.star)) {\n          isGenerator = true;\n          this.raise(Errors.AccessorIsGenerator, {\n            at: this.state.curPosition(),\n            kind: keyName,\n          });\n          this.next();\n        }\n        this.parsePropertyName(prop);\n      }\n    }\n\n    return this.parseObjPropValue(\n      prop,\n      startLoc,\n      isGenerator,\n      isAsync,\n      false /* isPattern */,\n      isAccessor,\n      refExpressionErrors,\n    );\n  }\n\n  getGetterSetterExpectedParamCount(\n    method: N.ObjectMethod | N.ClassMethod,\n  ): number {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n\n  // This exists so we can override within the ESTree plugin\n  getObjectOrClassMethodParams(method: N.ObjectMethod | N.ClassMethod) {\n    return method.params;\n  }\n\n  // get methods aren't allowed to have any parameters\n  // set methods must have exactly 1 parameter which is not a rest parameter\n  checkGetterSetterParams(method: N.ObjectMethod | N.ClassMethod): void {\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n\n    if (params.length !== paramCount) {\n      this.raise(\n        method.kind === \"get\" ? Errors.BadGetterArity : Errors.BadSetterArity,\n        { at: method },\n      );\n    }\n\n    if (\n      method.kind === \"set\" &&\n      params[params.length - 1]?.type === \"RestElement\"\n    ) {\n      this.raise(Errors.BadSetterRestParameter, { at: method });\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-MethodDefinition\n  parseObjectMethod(\n    this: Parser,\n    prop: Undone<N.ObjectMethod>,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    isAccessor: boolean,\n  ): N.ObjectMethod | undefined | null {\n    if (isAccessor) {\n      // isAccessor implies isAsync: false, isPattern: false, isGenerator: false\n      const finishedProp = this.parseMethod(\n        prop,\n        // This _should_ be false, but with error recovery, we allow it to be\n        // set for informational purposes\n        isGenerator,\n        /* isAsync */ false,\n        /* isConstructor */ false,\n        false,\n        \"ObjectMethod\",\n      );\n      this.checkGetterSetterParams(finishedProp);\n      return finishedProp;\n    }\n\n    if (isAsync || isGenerator || this.match(tt.parenL)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        /* isConstructor */ false,\n        false,\n        \"ObjectMethod\",\n      );\n    }\n  }\n\n  // if `isPattern` is true, parse https://tc39.es/ecma262/#prod-BindingProperty\n  // else https://tc39.es/ecma262/#prod-PropertyDefinition\n  parseObjectProperty(\n    this: Parser,\n    prop: Undone<N.ObjectProperty>,\n    startLoc: Position | undefined | null,\n    isPattern: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.ObjectProperty | undefined | null {\n    prop.shorthand = false;\n\n    if (this.eat(tt.colon)) {\n      prop.value = isPattern\n        ? this.parseMaybeDefault(this.state.startLoc)\n        : this.parseMaybeAssignAllowIn(refExpressionErrors);\n\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      // PropertyDefinition:\n      //   IdentifierReference\n      //   CoverInitializedName\n      // Note: `{ eval } = {}` will be checked in `checkLVal` later.\n      this.checkReservedWord(prop.key.name, prop.key.loc.start, true, false);\n\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(\n          startLoc,\n          cloneIdentifier(prop.key),\n        );\n      } else if (this.match(tt.eq)) {\n        const shorthandAssignLoc = this.state.startLoc;\n        if (refExpressionErrors != null) {\n          if (refExpressionErrors.shorthandAssignLoc === null) {\n            refExpressionErrors.shorthandAssignLoc = shorthandAssignLoc;\n          }\n        } else {\n          this.raise(Errors.InvalidCoverInitializedName, {\n            at: shorthandAssignLoc,\n          });\n        }\n        prop.value = this.parseMaybeDefault(\n          startLoc,\n          cloneIdentifier(prop.key),\n        );\n      } else {\n        prop.value = cloneIdentifier(prop.key);\n      }\n      prop.shorthand = true;\n\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n\n  parseObjPropValue(\n    this: Parser,\n    prop: Undone<N.ObjectMethod | N.ObjectProperty>,\n    startLoc: Position | undefined | null,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    isAccessor: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.ObjectMethod | N.ObjectProperty {\n    const node =\n      this.parseObjectMethod(\n        prop as Undone<N.ObjectMethod>,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n      ) ||\n      this.parseObjectProperty(\n        prop as Undone<N.ObjectProperty>,\n        startLoc,\n        isPattern,\n        refExpressionErrors,\n      );\n\n    if (!node) this.unexpected();\n\n    return node;\n  }\n\n  // https://tc39.es/ecma262/#prod-PropertyName\n  // when refExpressionErrors presents, it will parse private name\n  // and record the position of the first private name\n  parsePropertyName(\n    this: Parser,\n    prop:\n      | Undone<N.ObjectOrClassMember | N.ClassMember>\n      | N.TsNamedTypeElementBase,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.Expression | N.Identifier {\n    if (this.eat(tt.bracketL)) {\n      (prop as Undone<N.ObjectOrClassMember>).computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(tt.bracketR);\n    } else {\n      // We check if it's valid for it to be a private name when we push it.\n      const { type, value } = this.state;\n      let key;\n      // most un-computed property names are identifiers\n      if (tokenIsKeywordOrIdentifier(type)) {\n        key = this.parseIdentifier(true);\n      } else {\n        switch (type) {\n          case tt.num:\n            key = this.parseNumericLiteral(value);\n            break;\n          case tt.string:\n            key = this.parseStringLiteral(value);\n            break;\n          case tt.bigint:\n            key = this.parseBigIntLiteral(value);\n            break;\n          case tt.decimal:\n            key = this.parseDecimalLiteral(value);\n            break;\n          case tt.privateName: {\n            // the class private key has been handled in parseClassElementName\n            const privateKeyLoc = this.state.startLoc;\n            if (refExpressionErrors != null) {\n              if (refExpressionErrors.privateKeyLoc === null) {\n                refExpressionErrors.privateKeyLoc = privateKeyLoc;\n              }\n            } else {\n              this.raise(Errors.UnexpectedPrivateField, {\n                at: privateKeyLoc,\n              });\n            }\n            key = this.parsePrivateName();\n            break;\n          }\n          default:\n            this.unexpected();\n        }\n      }\n      (prop as any).key = key;\n      if (type !== tt.privateName) {\n        // ClassPrivateProperty is never computed, so we don't assign in that case.\n        prop.computed = false;\n      }\n    }\n\n    return prop.key;\n  }\n\n  // Initialize empty function node.\n\n  initFunction(node: N.BodilessFunctionOrMethodBase, isAsync: boolean): void {\n    node.id = null;\n    node.generator = false;\n    node.async = isAsync;\n  }\n\n  // Parse object or class method.\n\n  parseMethod<T extends N.ObjectMethod | N.ClassMethod | N.ClassPrivateMethod>(\n    this: Parser,\n    node: Undone<T>,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isConstructor: boolean,\n    allowDirectSuper: boolean,\n    type: T[\"type\"],\n    inClassScope: boolean = false,\n  ): T {\n    this.initFunction(node, isAsync);\n    node.generator = isGenerator;\n    this.scope.enter(\n      ScopeFlag.FUNCTION |\n        ScopeFlag.SUPER |\n        (inClassScope ? ScopeFlag.CLASS : 0) |\n        (allowDirectSuper ? ScopeFlag.DIRECT_SUPER : 0),\n    );\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams(node, isConstructor);\n    const finishedNode = this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n\n    return finishedNode;\n  }\n\n  // parse an array literal or tuple literal\n  // https://tc39.es/ecma262/#prod-ArrayLiteral\n  // https://tc39.es/proposal-record-tuple/#prod-TupleLiteral\n  parseArrayLike(\n    this: Parser,\n    close: TokenType,\n    canBePattern: boolean,\n    isTuple: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.ArrayExpression | N.TupleExpression {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode<N.ArrayExpression | N.TupleExpression>();\n    this.next();\n    node.elements = this.parseExprList(\n      close,\n      /* allowEmpty */ !isTuple,\n      refExpressionErrors,\n      // @ts-expect-error todo(flow->ts)\n      node,\n    );\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(\n      node,\n      isTuple ? \"TupleExpression\" : \"ArrayExpression\",\n    );\n  }\n\n  // Parse arrow function expression.\n  // If the parameters are provided, they will be converted to an\n  // assignable list.\n  parseArrowExpression(\n    this: Parser,\n    node: Undone<N.ArrowFunctionExpression>,\n    params: N.Expression[] | undefined | null,\n    isAsync: boolean,\n    trailingCommaLoc?: Position | null,\n  ): N.ArrowFunctionExpression {\n    this.scope.enter(ScopeFlag.FUNCTION | ScopeFlag.ARROW);\n    let flags = functionFlags(isAsync, false);\n    // ConciseBody[In] :\n    //   [lookahead ≠ {] ExpressionBody[?In, ~Await]\n    //   { FunctionBody[~Yield, ~Await] }\n    if (!this.match(tt.braceL) && this.prodParam.hasIn) {\n      flags |= PARAM_IN;\n    }\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaLoc);\n    }\n    this.state.maybeInArrowParameters = false;\n    this.parseFunctionBody(node, true);\n\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n\n  setArrowFunctionParameters(\n    node: Undone<N.ArrowFunctionExpression>,\n    params: N.Expression[],\n    trailingCommaLoc?: Position | null,\n  ): void {\n    this.toAssignableList(params, trailingCommaLoc, false);\n    node.params = params as (N.Pattern | N.TSParameterProperty)[];\n  }\n\n  parseFunctionBodyAndFinish<\n    T extends\n      | N.Function\n      | N.TSDeclareMethod\n      | N.TSDeclareFunction\n      | N.ClassPrivateMethod,\n  >(node: Undone<T>, type: T[\"type\"], isMethod: boolean = false): T {\n    // @ts-expect-error (node is not bodiless if we get here)\n    this.parseFunctionBody(node, false, isMethod);\n    return this.finishNode(node, type);\n  }\n\n  // Parse function body and check parameters.\n  parseFunctionBody(\n    this: Parser,\n    node: Undone<N.Function>,\n    allowExpression?: boolean | null,\n    isMethod: boolean = false,\n  ): void {\n    const isExpression = allowExpression && !this.match(tt.braceL);\n    this.expressionScope.enter(newExpressionScope());\n\n    if (isExpression) {\n      // https://tc39.es/ecma262/#prod-ExpressionBody\n      (node as Undone<N.ArrowFunctionExpression>).body =\n        this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      // Start a new scope with regard to labels\n      // flag (restore them to their old value afterwards).\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n\n      // FunctionBody[Yield, Await]:\n      //   StatementList[?Yield, ?Await, +Return] opt\n      this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\n      node.body = this.parseBlock(\n        true,\n        false,\n        // Strict mode function checks after we parse the statements in the function body.\n        (hasStrictModeDirective: boolean) => {\n          const nonSimple = !this.isSimpleParamList(node.params);\n\n          if (hasStrictModeDirective && nonSimple) {\n            // This logic is here to align the error location with the ESTree plugin.\n            this.raise(Errors.IllegalLanguageModeDirective, {\n              at:\n                // @ts-expect-error kind may not index node\n                (node.kind === \"method\" || node.kind === \"constructor\") &&\n                // @ts-expect-error key may not index node\n                !!node.key\n                  ? // @ts-expect-error node.key has been guarded\n                    node.key.loc.end\n                  : node,\n            });\n          }\n\n          const strictModeChanged = !oldStrict && this.state.strict;\n\n          // Add the params to varDeclaredNames to ensure that an error is thrown\n          // if a let/const declaration in the function clashes with one of the params.\n          this.checkParams(\n            node,\n            !this.state.strict && !allowExpression && !isMethod && !nonSimple,\n            allowExpression,\n            strictModeChanged,\n          );\n\n          // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'\n          if (this.state.strict && node.id) {\n            this.checkIdentifier(\n              node.id,\n              BindingFlag.TYPE_OUTSIDE,\n              strictModeChanged,\n            );\n          }\n        },\n      );\n      this.prodParam.exit();\n      this.state.labels = oldLabels;\n    }\n    this.expressionScope.exit();\n  }\n\n  isSimpleParameter(node: N.Pattern | N.TSParameterProperty) {\n    return node.type === \"Identifier\";\n  }\n\n  isSimpleParamList(\n    params: ReadonlyArray<N.Pattern | N.TSParameterProperty>,\n  ): boolean {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (!this.isSimpleParameter(params[i])) return false;\n    }\n    return true;\n  }\n\n  checkParams(\n    node: Undone<N.Function>,\n    allowDuplicates: boolean,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    isArrowFunction?: boolean | null,\n    strictModeChanged: boolean = true,\n  ): void {\n    const checkClashes = !allowDuplicates && new Set<string>();\n    // We create a fake node with the \"ephemeral\" type `FormalParameters`[1]\n    // since we just store an array of parameters. Perhaps someday we can have\n    // something like class FormalParameters extends Array { ... }, which would\n    // also be helpful when traversing this node.\n    //\n    // 1. https://tc39.es/ecma262/#prod-FormalParameters\n    const formalParameters = { type: \"FormalParameters\" } as const;\n    for (const param of node.params) {\n      this.checkLVal(param, {\n        in: formalParameters,\n        binding: BindingFlag.TYPE_VAR,\n        checkClashes,\n        strictModeChanged,\n      });\n    }\n  }\n\n  // Parses a comma-separated list of expressions, and returns them as\n  // an array. `close` is the token type that ends the list, and\n  // `allowEmpty` can be turned on to allow subsequent commas with\n  // nothing in between them to be parsed as `null` (which is needed\n  // for array literals).\n\n  parseExprList(\n    this: Parser,\n    close: TokenType,\n    allowEmpty?: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n    nodeForExtra?: N.Node | null,\n  ): (N.Expression | null)[] {\n    const elts: (N.Expression | null)[] = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addTrailingCommaExtraToNode(nodeForExtra);\n          }\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n    return elts;\n  }\n\n  parseExprListItem(\n    this: Parser,\n    allowEmpty?: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n    allowPlaceholder?: boolean | null,\n  ): N.Expression | null;\n  parseExprListItem(\n    this: Parser,\n    allowEmpty?: false,\n    refExpressionErrors?: ExpressionErrors | null,\n    allowPlaceholder?: boolean | null,\n  ): N.Expression;\n  parseExprListItem(\n    this: Parser,\n    allowEmpty?: boolean | null,\n    refExpressionErrors?: ExpressionErrors | null,\n    allowPlaceholder?: boolean | null,\n  ): N.Expression | null {\n    let elt;\n    if (this.match(tt.comma)) {\n      if (!allowEmpty) {\n        this.raise(Errors.UnexpectedToken, {\n          at: this.state.curPosition(),\n          unexpected: \",\",\n        });\n      }\n      elt = null;\n    } else if (this.match(tt.ellipsis)) {\n      const spreadNodeStartLoc = this.state.startLoc;\n\n      elt = this.parseParenItem(\n        this.parseSpread(refExpressionErrors),\n        spreadNodeStartLoc,\n      );\n    } else if (this.match(tt.question)) {\n      this.expectPlugin(\"partialApplication\");\n      if (!allowPlaceholder) {\n        this.raise(Errors.UnexpectedArgumentPlaceholder, {\n          at: this.state.startLoc,\n        });\n      }\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(\n        refExpressionErrors,\n        this.parseParenItem,\n      );\n    }\n    return elt;\n  }\n\n  // Parse the next token as an identifier. If `liberal` is true (used\n  // when parsing properties), it will also convert keywords into\n  // identifiers.\n  // This shouldn't be used to parse the keywords of meta properties, since they\n  // are not identifiers and cannot contain escape sequences.\n\n  parseIdentifier(liberal?: boolean): N.Identifier {\n    const node = this.startNode<N.Identifier>();\n    const name = this.parseIdentifierName(liberal);\n\n    return this.createIdentifier(node, name);\n  }\n\n  createIdentifier(\n    node: Omit<N.Identifier, \"type\">,\n    name: string,\n  ): N.Identifier {\n    node.name = name;\n    node.loc.identifierName = name;\n\n    return this.finishNode(node, \"Identifier\");\n  }\n\n  parseIdentifierName(liberal?: boolean): string {\n    let name: string;\n\n    const { startLoc, type } = this.state;\n\n    if (tokenIsKeywordOrIdentifier(type)) {\n      name = this.state.value;\n    } else {\n      this.unexpected();\n    }\n\n    const tokenIsKeyword = tokenKeywordOrIdentifierIsKeyword(type);\n\n    if (liberal) {\n      // If the current token is not used as a keyword, set its type to \"tt.name\".\n      // This will prevent this.next() from throwing about unexpected escapes.\n      if (tokenIsKeyword) {\n        this.replaceToken(tt.name);\n      }\n    } else {\n      this.checkReservedWord(name, startLoc, tokenIsKeyword, false);\n    }\n\n    this.next();\n\n    return name;\n  }\n\n  checkReservedWord(\n    word: string,\n    startLoc: Position,\n    checkKeywords: boolean,\n    isBinding: boolean,\n  ): void {\n    // Every JavaScript reserved word is 10 characters or less.\n    if (word.length > 10) {\n      return;\n    }\n    // Most identifiers are not reservedWord-like, they don't need special\n    // treatments afterward, which very likely ends up throwing errors\n    if (!canBeReservedWord(word)) {\n      return;\n    }\n\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(Errors.UnexpectedKeyword, {\n        at: startLoc,\n        keyword: word,\n      });\n      return;\n    }\n\n    const reservedTest = !this.state.strict\n      ? isReservedWord\n      : isBinding\n      ? isStrictBindReservedWord\n      : isStrictReservedWord;\n\n    if (reservedTest(word, this.inModule)) {\n      this.raise(Errors.UnexpectedReservedWord, {\n        at: startLoc,\n        reservedWord: word,\n      });\n      return;\n    } else if (word === \"yield\") {\n      if (this.prodParam.hasYield) {\n        this.raise(Errors.YieldBindingIdentifier, { at: startLoc });\n        return;\n      }\n    } else if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(Errors.AwaitBindingIdentifier, { at: startLoc });\n        return;\n      }\n\n      if (this.scope.inStaticBlock) {\n        this.raise(Errors.AwaitBindingIdentifierInStaticBlock, {\n          at: startLoc,\n        });\n        return;\n      }\n\n      this.expressionScope.recordAsyncArrowParametersError({ at: startLoc });\n    } else if (word === \"arguments\") {\n      if (this.scope.inClassAndNotInNonArrowFunction) {\n        this.raise(Errors.ArgumentsInClass, { at: startLoc });\n        return;\n      }\n    }\n  }\n\n  isAwaitAllowed(): boolean {\n    if (this.prodParam.hasAwait) return true;\n    if (this.options.allowAwaitOutsideFunction && !this.scope.inFunction) {\n      return true;\n    }\n    return false;\n  }\n\n  // Parses await expression inside async function.\n\n  parseAwait(this: Parser, startLoc: Position): N.AwaitExpression {\n    const node = this.startNodeAt<N.AwaitExpression>(startLoc);\n\n    this.expressionScope.recordParameterInitializerError(\n      Errors.AwaitExpressionFormalParameter,\n      {\n        // @ts-expect-error todo(flow->ts)\n        at: node,\n      },\n    );\n\n    if (this.eat(tt.star)) {\n      this.raise(Errors.ObsoleteAwaitStar, { at: node });\n    }\n\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (this.isAmbiguousAwait()) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary(null, true);\n    }\n\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n\n  isAmbiguousAwait(): boolean {\n    if (this.hasPrecedingLineBreak()) return true;\n    const { type } = this.state;\n    return (\n      // All the following expressions are ambiguous:\n      //   await + 0, await - 0, await ( 0 ), await [ 0 ], await / 0 /u, await ``, await of []\n      type === tt.plusMin ||\n      type === tt.parenL ||\n      type === tt.bracketL ||\n      tokenIsTemplate(type) ||\n      (type === tt._of && !this.state.containsEsc) ||\n      // Sometimes the tokenizer generates tt.slash for regexps, and this is\n      // handler by parseExprAtom\n      type === tt.regexp ||\n      type === tt.slash ||\n      // This code could be parsed both as a modulo operator or as an intrinsic:\n      //   await %x(0)\n      (this.hasPlugin(\"v8intrinsic\") && type === tt.modulo)\n    );\n  }\n\n  // Parses yield expression inside generator.\n\n  parseYield(this: Parser): N.YieldExpression {\n    const node = this.startNode<N.YieldExpression>();\n\n    this.expressionScope.recordParameterInitializerError(\n      Errors.YieldInParameter,\n      {\n        // @ts-expect-error todo(flow->ts)\n        at: node,\n      },\n    );\n\n    this.next();\n    let delegating = false;\n    let argument: N.Expression | null = null;\n    if (!this.hasPrecedingLineBreak()) {\n      delegating = this.eat(tt.star);\n      switch (this.state.type) {\n        case tt.semi:\n        case tt.eof:\n        case tt.braceR:\n        case tt.parenR:\n        case tt.bracketR:\n        case tt.braceBarR:\n        case tt.colon:\n        case tt.comma:\n          // The above is the complete set of tokens that can\n          // follow an AssignmentExpression, and none of them\n          // can start an AssignmentExpression\n          if (!delegating) break;\n        /* fallthrough */\n        default:\n          argument = this.parseMaybeAssign();\n      }\n    }\n    node.delegate = delegating;\n    node.argument = argument;\n    return this.finishNode(node, \"YieldExpression\");\n  }\n\n  // https://tc39.es/ecma262/#prod-ImportCall\n  parseImportCall(\n    this: Parser,\n    node: Undone<N.ImportExpression>,\n  ): N.ImportExpression {\n    this.next(); // eat tt.parenL\n    node.source = this.parseMaybeAssignAllowIn();\n    if (\n      this.hasPlugin(\"importAttributes\") ||\n      this.hasPlugin(\"importAssertions\")\n    ) {\n      node.options = null;\n    }\n    if (this.eat(tt.comma)) {\n      this.expectImportAttributesPlugin();\n      if (!this.match(tt.parenR)) {\n        node.options = this.parseMaybeAssignAllowIn();\n        this.eat(tt.comma);\n      }\n    }\n    this.expect(tt.parenR);\n    return this.finishNode(node, \"ImportExpression\");\n  }\n\n  // Validates a pipeline (for any of the pipeline Babylon plugins) at the point\n  // of the infix operator `|>`.\n\n  checkPipelineAtInfixOperator(left: N.Expression, leftStartLoc: Position) {\n    if (this.hasPlugin([\"pipelineOperator\", { proposal: \"smart\" }])) {\n      if (left.type === \"SequenceExpression\") {\n        // Ensure that the pipeline head is not a comma-delimited\n        // sequence expression.\n        this.raise(Errors.PipelineHeadSequenceExpression, {\n          at: leftStartLoc,\n        });\n      }\n    }\n  }\n\n  parseSmartPipelineBodyInStyle(childExpr: N.Expression, startLoc: Position) {\n    if (this.isSimpleReference(childExpr)) {\n      const bodyNode = this.startNodeAt<N.PipelineBareFunction>(startLoc);\n      bodyNode.callee = childExpr;\n      return this.finishNode(bodyNode, \"PipelineBareFunction\");\n    } else {\n      const bodyNode = this.startNodeAt<N.PipelineTopicExpression>(startLoc);\n      this.checkSmartPipeTopicBodyEarlyErrors(startLoc);\n      bodyNode.expression = childExpr;\n      return this.finishNode(bodyNode, \"PipelineTopicExpression\");\n    }\n  }\n\n  isSimpleReference(expression: N.Expression): boolean {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return (\n          !expression.computed && this.isSimpleReference(expression.object)\n        );\n      case \"Identifier\":\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  // This helper method is to be called immediately\n  // after a topic-style smart-mix pipe body is parsed.\n  // The `startLoc` is the starting position of the pipe body.\n\n  checkSmartPipeTopicBodyEarlyErrors(startLoc: Position): void {\n    // If the following token is invalidly `=>`, then throw a human-friendly error\n    // instead of something like 'Unexpected token, expected \";\"'.\n    // For example, `x => x |> y => #` (assuming `#` is the topic reference)\n    // groups into `x => (x |> y) => #`,\n    // and `(x |> y) => #` is an invalid arrow function.\n    // This is because smart-mix `|>` has tighter precedence than `=>`.\n    if (this.match(tt.arrow)) {\n      throw this.raise(Errors.PipelineBodyNoArrow, { at: this.state.startLoc });\n    }\n\n    // A topic-style smart-mix pipe body must use the topic reference at least once.\n    if (!this.topicReferenceWasUsedInCurrentContext()) {\n      this.raise(Errors.PipelineTopicUnused, { at: startLoc });\n    }\n  }\n\n  // Enable topic references from outer contexts within Hack-style pipe bodies.\n  // The function modifies the parser's topic-context state to enable or disable\n  // the use of topic references.\n  // The function then calls a callback, then resets the parser\n  // to the old topic-context state that it had before the function was called.\n\n  withTopicBindingContext<T>(callback: () => T): T {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      // Enable the use of the primary topic reference.\n      maxNumOfResolvableTopics: 1,\n      // Hide the use of any topic references from outer contexts.\n      maxTopicIndex: null,\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  // This helper method is used only with the deprecated smart-mix pipe proposal.\n  // Disables topic references from outer contexts within syntax constructs\n  // such as the bodies of iteration statements.\n  // The function modifies the parser's topic-context state to enable or disable\n  // the use of topic references with the smartPipelines plugin. They then run a\n  // callback, then they reset the parser to the old topic-context state that it\n  // had before the function was called.\n\n  withSmartMixTopicForbiddingContext<T>(callback: () => T): T {\n    if (this.hasPlugin([\"pipelineOperator\", { proposal: \"smart\" }])) {\n      // Reset the parser’s topic context only if the smart-mix pipe proposal is active.\n      const outerContextTopicState = this.state.topicContext;\n      this.state.topicContext = {\n        // Disable the use of the primary topic reference.\n        maxNumOfResolvableTopics: 0,\n        // Hide the use of any topic references from outer contexts.\n        maxTopicIndex: null,\n      };\n\n      try {\n        return callback();\n      } finally {\n        this.state.topicContext = outerContextTopicState;\n      }\n    } else {\n      // If the pipe proposal is \"minimal\", \"fsharp\", or \"hack\",\n      // or if no pipe proposal is active,\n      // then the callback result is returned\n      // without touching any extra parser state.\n      return callback();\n    }\n  }\n\n  withSoloAwaitPermittingContext<T>(callback: () => T): T {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n\n  allowInAnd<T>(callback: () => T): T {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = PARAM_IN & ~flags;\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | PARAM_IN);\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n    return callback();\n  }\n\n  disallowInAnd<T>(callback: () => T): T {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = PARAM_IN & flags;\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~PARAM_IN);\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n    return callback();\n  }\n\n  // Register the use of a topic reference within the current\n  // topic-binding context.\n  registerTopicReference(): void {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n\n  topicReferenceIsAllowedInCurrentContext(): boolean {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n\n  topicReferenceWasUsedInCurrentContext(): boolean {\n    return (\n      this.state.topicContext.maxTopicIndex != null &&\n      this.state.topicContext.maxTopicIndex >= 0\n    );\n  }\n\n  parseFSharpPipelineBody(this: Parser, prec: number): N.Expression {\n    const startLoc = this.state.startLoc;\n\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n\n    const ret = this.parseExprOp(\n      this.parseMaybeUnaryOrPrivate(),\n      startLoc,\n      prec,\n    );\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    return ret;\n  }\n\n  // https://github.com/tc39/proposal-js-module-blocks\n  parseModuleExpression(this: Parser): N.ModuleExpression {\n    this.expectPlugin(\"moduleBlocks\");\n    const node = this.startNode<N.ModuleExpression>();\n    this.next(); // eat \"module\"\n    if (!this.match(tt.braceL)) {\n      this.unexpected(null, tt.braceL);\n    }\n    // start program node immediately after `{`\n    const program = this.startNodeAt<N.Program>(this.state.endLoc);\n    this.next(); // eat `{`\n\n    const revertScopes = this.initializeScopes(/** inModule */ true);\n    this.enterInitialScopes();\n\n    try {\n      node.body = this.parseProgram(program, tt.braceR, \"module\");\n    } finally {\n      revertScopes();\n    }\n    return this.finishNode<N.ModuleExpression>(node, \"ModuleExpression\");\n  }\n\n  // Used in Flow plugin\n  parsePropertyNamePrefixOperator(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    prop: Undone<N.ObjectOrClassMember | N.ClassMember>,\n  ): void {}\n}\n","import type * as N from \"../types.ts\";\nimport {\n  tokenIsIdentifier,\n  tokenIsKeywordOrIdentifier,\n  tokenIsLoop,\n  tokenIsTemplate,\n  tt,\n  type TokenType,\n  getExportedToken,\n} from \"../tokenizer/types.ts\";\nimport ExpressionParser from \"./expression.ts\";\nimport { Errors } from \"../parse-error.ts\";\nimport { isIdentifierChar, isIdentifierStart } from \"../util/identifier.ts\";\nimport * as charCodes from \"charcodes\";\nimport {\n  ScopeFlag,\n  ClassElementType,\n  type BindingTypes,\n  BindingFlag,\n} from \"../util/scopeflags.ts\";\nimport { ExpressionErrors } from \"./util.ts\";\nimport { PARAM, functionFlags } from \"../util/production-parameter.ts\";\nimport {\n  newExpressionScope,\n  newParameterDeclarationScope,\n} from \"../util/expression-scope.ts\";\nimport type { SourceType } from \"../options.ts\";\nimport { Token } from \"../tokenizer/index.ts\";\nimport type { Position } from \"../util/location.ts\";\nimport { createPositionWithColumnOffset } from \"../util/location.ts\";\nimport { cloneStringLiteral, cloneIdentifier, type Undone } from \"./node.ts\";\nimport type Parser from \"./index.ts\";\nimport { ParseBindingListFlags } from \"./lval.ts\";\n\nconst loopLabel = { kind: \"loop\" } as const,\n  switchLabel = { kind: \"switch\" } as const;\n\nexport const enum ParseFunctionFlag {\n  Expression = 0b0000,\n  Declaration = 0b0001,\n  HangingDeclaration = 0b0010,\n  NullableId = 0b0100,\n  Async = 0b1000,\n}\n\nexport const enum ParseStatementFlag {\n  StatementOnly = 0b0000,\n  AllowImportExport = 0b0001,\n  AllowDeclaration = 0b0010,\n  AllowFunctionDeclaration = 0b0100,\n  AllowLabeledFunction = 0b1000,\n}\n\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\n\nconst keywordRelationalOperator = /in(?:stanceof)?/y;\n\n/**\n * Convert tokens for backward Babel 7 compat.\n * tt.privateName => tt.hash + tt.name\n * tt.templateTail => tt.backquote/tt.braceR + tt.template + tt.backquote\n * tt.templateNonTail => tt.backquote/tt.braceR + tt.template + tt.dollarBraceL\n * For performance reasons this routine mutates `tokens`, it is okay\n * here since we execute `parseTopLevel` once for every file.\n */\nfunction babel7CompatTokens(tokens: (Token | N.Comment)[], input: string) {\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n    const { type } = token;\n    if (typeof type === \"number\") {\n      if (!process.env.BABEL_8_BREAKING) {\n        if (type === tt.privateName) {\n          const { loc, start, value, end } = token;\n          const hashEndPos = start + 1;\n          const hashEndLoc = createPositionWithColumnOffset(loc.start, 1);\n          tokens.splice(\n            i,\n            1,\n            new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.hash),\n              value: \"#\",\n              start: start,\n              end: hashEndPos,\n              startLoc: loc.start,\n              endLoc: hashEndLoc,\n            }),\n            new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.name),\n              value: value,\n              start: hashEndPos,\n              end: end,\n              startLoc: hashEndLoc,\n              endLoc: loc.end,\n            }),\n          );\n          i++;\n          continue;\n        }\n\n        if (tokenIsTemplate(type)) {\n          const { loc, start, value, end } = token;\n          const backquoteEnd = start + 1;\n          const backquoteEndLoc = createPositionWithColumnOffset(loc.start, 1);\n          let startToken;\n          if (input.charCodeAt(start) === charCodes.graveAccent) {\n            startToken = new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.backQuote),\n              value: \"`\",\n              start: start,\n              end: backquoteEnd,\n              startLoc: loc.start,\n              endLoc: backquoteEndLoc,\n            });\n          } else {\n            startToken = new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.braceR),\n              value: \"}\",\n              start: start,\n              end: backquoteEnd,\n              startLoc: loc.start,\n              endLoc: backquoteEndLoc,\n            });\n          }\n          let templateValue,\n            templateElementEnd,\n            templateElementEndLoc,\n            endToken;\n          if (type === tt.templateTail) {\n            // ends with '`'\n            templateElementEnd = end - 1;\n            templateElementEndLoc = createPositionWithColumnOffset(loc.end, -1);\n            templateValue = value === null ? null : value.slice(1, -1);\n            endToken = new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.backQuote),\n              value: \"`\",\n              start: templateElementEnd,\n              end: end,\n              startLoc: templateElementEndLoc,\n              endLoc: loc.end,\n            });\n          } else {\n            // ends with `${`\n            templateElementEnd = end - 2;\n            templateElementEndLoc = createPositionWithColumnOffset(loc.end, -2);\n            templateValue = value === null ? null : value.slice(1, -2);\n            endToken = new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.dollarBraceL),\n              value: \"${\",\n              start: templateElementEnd,\n              end: end,\n              startLoc: templateElementEndLoc,\n              endLoc: loc.end,\n            });\n          }\n          tokens.splice(\n            i,\n            1,\n            startToken,\n            new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.template),\n              value: templateValue,\n              start: backquoteEnd,\n              end: templateElementEnd,\n              startLoc: backquoteEndLoc,\n              endLoc: templateElementEndLoc,\n            }),\n            endToken,\n          );\n          i += 2;\n          continue;\n        }\n      }\n      // @ts-expect-error: we manipulate `token` for performance reasons\n      token.type = getExportedToken(type);\n    }\n  }\n  return tokens;\n}\nexport default abstract class StatementParser extends ExpressionParser {\n  // ### Statement parsing\n\n  // Parse a program. Initializes the parser, reads any number of\n  // statements, and wraps them in a Program node.  Optionally takes a\n  // `program` argument.  If present, the statements will be appended\n  // to its body instead of creating a new node.\n\n  parseTopLevel(this: Parser, file: N.File, program: N.Program): N.File {\n    file.program = this.parseProgram(program);\n    file.comments = this.state.comments;\n\n    if (this.options.tokens) {\n      file.tokens = babel7CompatTokens(this.tokens, this.input);\n    }\n\n    return this.finishNode(file, \"File\");\n  }\n\n  parseProgram(\n    this: Parser,\n    program: Undone<N.Program>,\n    end: TokenType = tt.eof,\n    sourceType: SourceType = this.options.sourceType,\n  ): N.Program {\n    program.sourceType = sourceType;\n    program.interpreter = this.parseInterpreterDirective();\n    this.parseBlockBody(program, true, true, end);\n    if (\n      this.inModule &&\n      !this.options.allowUndeclaredExports &&\n      this.scope.undefinedExports.size > 0\n    ) {\n      for (const [localName, at] of Array.from(this.scope.undefinedExports)) {\n        this.raise(Errors.ModuleExportUndefined, { at, localName });\n      }\n    }\n    let finishedProgram: N.Program;\n    if (end === tt.eof) {\n      // finish at eof for top level program\n      finishedProgram = this.finishNode(program, \"Program\");\n    } else {\n      // finish immediately before the end token\n      finishedProgram = this.finishNodeAt(\n        program,\n        \"Program\",\n        createPositionWithColumnOffset(this.state.startLoc, -1),\n      );\n    }\n    return finishedProgram;\n  }\n\n  /**\n   * cast a Statement to a Directive. This method mutates input statement.\n   */\n  stmtToDirective(stmt: N.Statement): N.Directive {\n    const directive = stmt as any;\n    directive.type = \"Directive\";\n    directive.value = directive.expression;\n    delete directive.expression;\n\n    const directiveLiteral = directive.value;\n    const expressionValue = directiveLiteral.value;\n    const raw = this.input.slice(directiveLiteral.start, directiveLiteral.end);\n    const val = (directiveLiteral.value = raw.slice(1, -1)); // remove quotes\n\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n    this.addExtra(directiveLiteral, \"expressionValue\", expressionValue);\n\n    directiveLiteral.type = \"DirectiveLiteral\";\n\n    return directive;\n  }\n\n  parseInterpreterDirective(): N.InterpreterDirective | null {\n    if (!this.match(tt.interpreterDirective)) {\n      return null;\n    }\n\n    const node = this.startNode<N.InterpreterDirective>();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n\n  isLet(): boolean {\n    if (!this.isContextual(tt._let)) {\n      return false;\n    }\n    return this.hasFollowingBindingAtom();\n  }\n\n  chStartsBindingIdentifier(ch: number, pos: number) {\n    if (isIdentifierStart(ch)) {\n      keywordRelationalOperator.lastIndex = pos;\n      if (keywordRelationalOperator.test(this.input)) {\n        // We have seen `in` or `instanceof` so far, now check if the identifier\n        // ends here\n        const endCh = this.codePointAtPos(keywordRelationalOperator.lastIndex);\n        if (!isIdentifierChar(endCh) && endCh !== charCodes.backslash) {\n          return false;\n        }\n      }\n      return true;\n    } else if (ch === charCodes.backslash) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  chStartsBindingPattern(ch: number) {\n    return (\n      ch === charCodes.leftSquareBracket || ch === charCodes.leftCurlyBrace\n    );\n  }\n\n  /**\n   * Assuming we have seen a contextual `let` and declaration is allowed, check if it\n   * starts a variable declaration so that it should be interpreted as a keyword.\n   */\n  hasFollowingBindingAtom(): boolean {\n    const next = this.nextTokenStart();\n    const nextCh = this.codePointAtPos(next);\n    return (\n      this.chStartsBindingPattern(nextCh) ||\n      this.chStartsBindingIdentifier(nextCh, next)\n    );\n  }\n\n  /**\n   * Assuming we have seen a contextual `using` and declaration is allowed, check if it\n   * starts a variable declaration in the same line so that it should be interpreted as\n   * a keyword.\n   */\n  hasInLineFollowingBindingIdentifier(): boolean {\n    const next = this.nextTokenInLineStart();\n    const nextCh = this.codePointAtPos(next);\n    return this.chStartsBindingIdentifier(nextCh, next);\n  }\n\n  startsUsingForOf(): boolean {\n    const { type, containsEsc } = this.lookahead();\n    if (type === tt._of && !containsEsc) {\n      // `using of` must start a for-lhs-of statement\n      return false;\n    } else if (tokenIsIdentifier(type) && !this.hasFollowingLineBreak()) {\n      this.expectPlugin(\"explicitResourceManagement\");\n      return true;\n    }\n  }\n\n  startsAwaitUsing(): boolean {\n    let next = this.nextTokenInLineStart();\n    if (this.isUnparsedContextual(next, \"using\")) {\n      next = this.nextTokenInLineStartSince(next + 5);\n      const nextCh = this.codePointAtPos(next);\n      if (this.chStartsBindingIdentifier(nextCh, next)) {\n        this.expectPlugin(\"explicitResourceManagement\");\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // https://tc39.es/ecma262/#prod-ModuleItem\n  parseModuleItem(this: Parser) {\n    return this.parseStatementLike(\n      ParseStatementFlag.AllowImportExport |\n        ParseStatementFlag.AllowDeclaration |\n        ParseStatementFlag.AllowFunctionDeclaration |\n        // This function is actually also used to parse StatementItems,\n        // which with Annex B enabled allows labeled functions.\n        ParseStatementFlag.AllowLabeledFunction,\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-StatementListItem\n  parseStatementListItem(this: Parser) {\n    return this.parseStatementLike(\n      ParseStatementFlag.AllowDeclaration |\n        ParseStatementFlag.AllowFunctionDeclaration |\n        (!this.options.annexB || this.state.strict\n          ? 0\n          : ParseStatementFlag.AllowLabeledFunction),\n    );\n  }\n\n  parseStatementOrSloppyAnnexBFunctionDeclaration(\n    this: Parser,\n    allowLabeledFunction: boolean = false,\n  ) {\n    let flags: ParseStatementFlag = ParseStatementFlag.StatementOnly;\n    if (this.options.annexB && !this.state.strict) {\n      flags |= ParseStatementFlag.AllowFunctionDeclaration;\n      if (allowLabeledFunction) {\n        flags |= ParseStatementFlag.AllowLabeledFunction;\n      }\n    }\n    return this.parseStatementLike(flags);\n  }\n\n  // Parse a single statement.\n  //\n  // If expecting a statement and finding a slash operator, parse a\n  // regular expression literal. This is to handle cases like\n  // `if (foo) /blah/.exec(foo)`, where looking at the previous token\n  // does not help.\n  // https://tc39.es/ecma262/#prod-Statement\n  parseStatement(this: Parser) {\n    return this.parseStatementLike(ParseStatementFlag.StatementOnly);\n  }\n\n  // ImportDeclaration and ExportDeclaration are also handled here so we can throw recoverable errors\n  // when they are not at the top level\n  parseStatementLike(\n    this: Parser,\n    flags: ParseStatementFlag,\n  ):\n    | N.Statement\n    | N.Declaration\n    | N.ImportDeclaration\n    | N.ExportDefaultDeclaration\n    | N.ExportNamedDeclaration\n    | N.ExportAllDeclaration {\n    let decorators: N.Decorator[] | null = null;\n\n    if (this.match(tt.at)) {\n      decorators = this.parseDecorators(true);\n    }\n    return this.parseStatementContent(flags, decorators);\n  }\n\n  parseStatementContent(\n    this: Parser,\n    flags: ParseStatementFlag,\n    decorators?: N.Decorator[] | null,\n  ): N.Statement {\n    const starttype = this.state.type;\n    const node = this.startNode();\n    const allowDeclaration = !!(flags & ParseStatementFlag.AllowDeclaration);\n    const allowFunctionDeclaration = !!(\n      flags & ParseStatementFlag.AllowFunctionDeclaration\n    );\n    const topLevel = flags & ParseStatementFlag.AllowImportExport;\n\n    // Most types of statements are recognized by the keyword they\n    // start with. Many are trivial to parse, some require a bit of\n    // complexity.\n\n    switch (starttype) {\n      case tt._break:\n        return this.parseBreakContinueStatement(node, /* isBreak */ true);\n      case tt._continue:\n        return this.parseBreakContinueStatement(node, /* isBreak */ false);\n      case tt._debugger:\n        return this.parseDebuggerStatement(node as Undone<N.DebuggerStatement>);\n      case tt._do:\n        return this.parseDoWhileStatement(node as Undone<N.DoWhileStatement>);\n      case tt._for:\n        return this.parseForStatement(node as Undone<N.ForStatement>);\n      case tt._function:\n        if (this.lookaheadCharCode() === charCodes.dot) break;\n        if (!allowFunctionDeclaration) {\n          this.raise(\n            this.state.strict\n              ? Errors.StrictFunction\n              : this.options.annexB\n              ? Errors.SloppyFunctionAnnexB\n              : Errors.SloppyFunction,\n            { at: this.state.startLoc },\n          );\n        }\n        return this.parseFunctionStatement(\n          node as Undone<N.FunctionDeclaration>,\n          false,\n          !allowDeclaration && allowFunctionDeclaration,\n        );\n      case tt._class:\n        if (!allowDeclaration) this.unexpected();\n        return this.parseClass(\n          this.maybeTakeDecorators(\n            decorators,\n            node as Undone<N.ClassDeclaration>,\n          ),\n          true,\n        );\n\n      case tt._if:\n        return this.parseIfStatement(node as Undone<N.IfStatement>);\n      case tt._return:\n        return this.parseReturnStatement(node as Undone<N.ReturnStatement>);\n      case tt._switch:\n        return this.parseSwitchStatement(node as Undone<N.SwitchStatement>);\n      case tt._throw:\n        return this.parseThrowStatement(node as Undone<N.ThrowStatement>);\n      case tt._try:\n        return this.parseTryStatement(node as Undone<N.TryStatement>);\n\n      case tt._await:\n        // [+Await] await [no LineTerminator here] using [no LineTerminator here] BindingList[+Using]\n        if (!this.state.containsEsc && this.startsAwaitUsing()) {\n          if (!this.isAwaitAllowed()) {\n            this.raise(Errors.AwaitUsingNotInAsyncContext, { at: node });\n          } else if (!allowDeclaration) {\n            this.raise(Errors.UnexpectedLexicalDeclaration, {\n              at: node,\n            });\n          }\n          this.next(); // eat 'await'\n          return this.parseVarStatement(\n            node as Undone<N.VariableDeclaration>,\n            \"await using\",\n          );\n        }\n        break;\n      case tt._using:\n        // using [no LineTerminator here] BindingList[+Using]\n        if (\n          this.state.containsEsc ||\n          !this.hasInLineFollowingBindingIdentifier()\n        ) {\n          break;\n        }\n        this.expectPlugin(\"explicitResourceManagement\");\n        if (!this.scope.inModule && this.scope.inTopLevel) {\n          this.raise(Errors.UnexpectedUsingDeclaration, {\n            at: this.state.startLoc,\n          });\n        } else if (!allowDeclaration) {\n          this.raise(Errors.UnexpectedLexicalDeclaration, {\n            at: this.state.startLoc,\n          });\n        }\n        return this.parseVarStatement(\n          node as Undone<N.VariableDeclaration>,\n          \"using\",\n        );\n      case tt._let: {\n        if (this.state.containsEsc) {\n          break;\n        }\n        // `let [` is an explicit negative lookahead for\n        // ExpressionStatement, so special-case it first.\n        const next = this.nextTokenStart();\n        const nextCh = this.codePointAtPos(next);\n        if (nextCh !== charCodes.leftSquareBracket) {\n          if (!allowDeclaration && this.hasFollowingLineBreak()) break;\n          if (\n            !this.chStartsBindingIdentifier(nextCh, next) &&\n            nextCh !== charCodes.leftCurlyBrace\n          ) {\n            break;\n          }\n        }\n      }\n      // fall through\n      case tt._const: {\n        if (!allowDeclaration) {\n          this.raise(Errors.UnexpectedLexicalDeclaration, {\n            at: this.state.startLoc,\n          });\n        }\n      }\n      // fall through\n      case tt._var: {\n        const kind = this.state.value;\n        return this.parseVarStatement(\n          node as Undone<N.VariableDeclaration>,\n          kind,\n        );\n      }\n      case tt._while:\n        return this.parseWhileStatement(node as Undone<N.WhileStatement>);\n      case tt._with:\n        return this.parseWithStatement(node as Undone<N.WithStatement>);\n      case tt.braceL:\n        return this.parseBlock();\n      case tt.semi:\n        return this.parseEmptyStatement(node as Undone<N.EmptyStatement>);\n      case tt._import: {\n        const nextTokenCharCode = this.lookaheadCharCode();\n        if (\n          nextTokenCharCode === charCodes.leftParenthesis || // import()\n          nextTokenCharCode === charCodes.dot // import.meta\n        ) {\n          break;\n        }\n      }\n      // fall through\n      case tt._export: {\n        if (!this.options.allowImportExportEverywhere && !topLevel) {\n          this.raise(Errors.UnexpectedImportExport, {\n            at: this.state.startLoc,\n          });\n        }\n\n        this.next(); // eat `import`/`export`\n\n        let result;\n        if (starttype === tt._import) {\n          result = this.parseImport(node as Undone<N.ImportDeclaration>);\n\n          if (\n            result.type === \"ImportDeclaration\" &&\n            (!result.importKind || result.importKind === \"value\")\n          ) {\n            this.sawUnambiguousESM = true;\n          }\n        } else {\n          result = this.parseExport(\n            node as Undone<\n              | N.ExportAllDeclaration\n              | N.ExportDefaultDeclaration\n              | N.ExportDefaultDeclaration\n            >,\n            decorators,\n          );\n\n          if (\n            (result.type === \"ExportNamedDeclaration\" &&\n              (!result.exportKind || result.exportKind === \"value\")) ||\n            (result.type === \"ExportAllDeclaration\" &&\n              (!result.exportKind || result.exportKind === \"value\")) ||\n            result.type === \"ExportDefaultDeclaration\"\n          ) {\n            this.sawUnambiguousESM = true;\n          }\n        }\n\n        this.assertModuleNodeAllowed(result);\n\n        return result;\n      }\n\n      default: {\n        if (this.isAsyncFunction()) {\n          if (!allowDeclaration) {\n            this.raise(Errors.AsyncFunctionInSingleStatementContext, {\n              at: this.state.startLoc,\n            });\n          }\n          this.next(); // eat 'async'\n          return this.parseFunctionStatement(\n            node as Undone<N.FunctionDeclaration>,\n            true,\n            !allowDeclaration && allowFunctionDeclaration,\n          );\n        }\n      }\n    }\n\n    // If the statement does not start with a statement keyword or a\n    // brace, it's an ExpressionStatement or LabeledStatement. We\n    // simply start parsing an expression, and afterwards, if the\n    // next token is a colon and the expression was a simple\n    // Identifier node, we switch to interpreting it as a label.\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n\n    if (\n      tokenIsIdentifier(starttype) &&\n      expr.type === \"Identifier\" &&\n      this.eat(tt.colon)\n    ) {\n      return this.parseLabeledStatement(\n        node as Undone<N.LabeledStatement>,\n        maybeName,\n        // @ts-expect-error migrate to Babel types\n        expr,\n        flags,\n      );\n    } else {\n      return this.parseExpressionStatement(\n        node as Undone<N.ExpressionStatement>,\n        expr,\n        decorators,\n      );\n    }\n  }\n\n  assertModuleNodeAllowed(node: N.Node): void {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raise(Errors.ImportOutsideModule, { at: node });\n    }\n  }\n\n  decoratorsEnabledBeforeExport(): boolean {\n    if (this.hasPlugin(\"decorators-legacy\")) return true;\n    return (\n      this.hasPlugin(\"decorators\") &&\n      this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\") !== false\n    );\n  }\n\n  // Attach the decorators to the given class.\n  // NOTE: This method changes the .start location of the class, and thus\n  // can affect comment attachment. Calling it before or after finalizing\n  // the class node (and thus finalizing its comments) changes how comments\n  // before the `class` keyword or before the final .start location of the\n  // class are attached.\n  maybeTakeDecorators<T extends Undone<N.Class>>(\n    maybeDecorators: N.Decorator[] | null,\n    classNode: T,\n    exportNode?: Undone<N.ExportDefaultDeclaration | N.ExportNamedDeclaration>,\n  ): T {\n    if (maybeDecorators) {\n      if (classNode.decorators && classNode.decorators.length > 0) {\n        // Note: decorators attachment is only attempred multiple times\n        // when the class is part of an export declaration.\n        if (\n          typeof this.getPluginOption(\n            \"decorators\",\n            \"decoratorsBeforeExport\",\n          ) !== \"boolean\"\n        ) {\n          // If `decoratorsBeforeExport` was set to `true` or `false`, we\n          // already threw an error about decorators not being in a valid\n          // position.\n          this.raise(Errors.DecoratorsBeforeAfterExport, {\n            at: classNode.decorators[0],\n          });\n        }\n        classNode.decorators.unshift(...maybeDecorators);\n      } else {\n        classNode.decorators = maybeDecorators;\n      }\n      this.resetStartLocationFromNode(classNode, maybeDecorators[0]);\n      if (exportNode) this.resetStartLocationFromNode(exportNode, classNode);\n    }\n    return classNode;\n  }\n\n  canHaveLeadingDecorator(): boolean {\n    return this.match(tt._class);\n  }\n\n  parseDecorators(this: Parser, allowExport?: boolean): N.Decorator[] {\n    const decorators = [];\n    do {\n      decorators.push(this.parseDecorator());\n    } while (this.match(tt.at));\n\n    if (this.match(tt._export)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n\n      if (!this.decoratorsEnabledBeforeExport()) {\n        this.raise(Errors.DecoratorExportClass, { at: this.state.startLoc });\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(Errors.UnexpectedLeadingDecorator, {\n        at: this.state.startLoc,\n      });\n    }\n\n    return decorators;\n  }\n\n  parseDecorator(this: Parser): N.Decorator {\n    this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n\n    const node = this.startNode<N.Decorator>();\n    this.next();\n\n    if (this.hasPlugin(\"decorators\")) {\n      const startLoc = this.state.startLoc;\n      let expr: N.Expression;\n\n      if (this.match(tt.parenL)) {\n        const startLoc = this.state.startLoc;\n        this.next(); // eat '('\n        expr = this.parseExpression();\n        this.expect(tt.parenR);\n        expr = this.wrapParenthesis(startLoc, expr);\n\n        const paramsStartLoc = this.state.startLoc;\n        node.expression = this.parseMaybeDecoratorArguments(expr);\n        if (\n          this.getPluginOption(\"decorators\", \"allowCallParenthesized\") ===\n            false &&\n          node.expression !== expr\n        ) {\n          this.raise(Errors.DecoratorArgumentsOutsideParentheses, {\n            at: paramsStartLoc,\n          });\n        }\n      } else {\n        expr = this.parseIdentifier(false);\n\n        while (this.eat(tt.dot)) {\n          const node = this.startNodeAt(startLoc);\n          node.object = expr;\n          if (this.match(tt.privateName)) {\n            this.classScope.usePrivateName(\n              this.state.value,\n              this.state.startLoc,\n            );\n            node.property = this.parsePrivateName();\n          } else {\n            node.property = this.parseIdentifier(true);\n          }\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n\n        node.expression = this.parseMaybeDecoratorArguments(expr);\n      }\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n    return this.finishNode(node, \"Decorator\");\n  }\n\n  parseMaybeDecoratorArguments(this: Parser, expr: N.Expression): N.Expression {\n    if (this.eat(tt.parenL)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n\n    return expr;\n  }\n\n  parseBreakContinueStatement(\n    node: Undone<N.Node>,\n    isBreak: true,\n  ): N.BreakStatement;\n  parseBreakContinueStatement(\n    node: Undone<N.Node>,\n    isBreak: false,\n  ): N.ContinueStatement;\n  parseBreakContinueStatement(\n    node: Undone<N.BreakStatement | N.ContinueStatement>,\n    isBreak: boolean,\n  ): N.BreakStatement | N.ContinueStatement {\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n\n    this.verifyBreakContinue(node, isBreak);\n\n    return this.finishNode(\n      node,\n      isBreak ? \"BreakStatement\" : \"ContinueStatement\",\n    );\n  }\n\n  verifyBreakContinue(\n    node: Undone<N.BreakStatement | N.ContinueStatement>,\n    isBreak: boolean,\n  ) {\n    let i;\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n    if (i === this.state.labels.length) {\n      const type = isBreak ? \"BreakStatement\" : \"ContinueStatement\";\n      this.raise(Errors.IllegalBreakContinue, { at: node, type });\n    }\n  }\n\n  parseDebuggerStatement(\n    node: Undone<N.DebuggerStatement>,\n  ): N.DebuggerStatement {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n\n  parseHeaderExpression(this: Parser): N.Expression {\n    this.expect(tt.parenL);\n    const val = this.parseExpression();\n    this.expect(tt.parenR);\n    return val;\n  }\n\n  // https://tc39.es/ecma262/#prod-DoWhileStatement\n  parseDoWhileStatement(\n    this: Parser,\n    node: Undone<N.DoWhileStatement>,\n  ): N.DoWhileStatement {\n    this.next();\n    this.state.labels.push(loopLabel);\n\n    // Parse the loop body's body.\n    node.body =\n      // For the smartPipelines plugin: Disable topic references from outer\n      // contexts within the loop body. They are permitted in test expressions,\n      // outside of the loop body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse the loop body's body.\n        this.parseStatement(),\n      );\n\n    this.state.labels.pop();\n\n    this.expect(tt._while);\n    node.test = this.parseHeaderExpression();\n    this.eat(tt.semi);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n\n  // Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n  // loop is non-trivial. Basically, we have to parse the init `var`\n  // statement or expression, disallowing the `in` operator (see\n  // the second parameter to `parseExpression`), and then check\n  // whether the next token is `in` or `of`. When there is no init\n  // part (semicolon immediately after the opening parenthesis), it\n  // is a regular `for` loop.\n\n  parseForStatement(\n    this: Parser,\n    node: Undone<N.ForStatement | N.ForInOf>,\n  ): N.ForLike {\n    this.next();\n    this.state.labels.push(loopLabel);\n\n    let awaitAt = null;\n\n    if (this.isAwaitAllowed() && this.eatContextual(tt._await)) {\n      awaitAt = this.state.lastTokStartLoc;\n    }\n    this.scope.enter(ScopeFlag.OTHER);\n    this.expect(tt.parenL);\n\n    if (this.match(tt.semi)) {\n      if (awaitAt !== null) {\n        this.unexpected(awaitAt);\n      }\n      return this.parseFor(node as Undone<N.ForStatement>, null);\n    }\n\n    const startsWithLet = this.isContextual(tt._let);\n    {\n      const startsWithAwaitUsing =\n        this.isContextual(tt._await) && this.startsAwaitUsing();\n      const starsWithUsingDeclaration =\n        startsWithAwaitUsing ||\n        (this.isContextual(tt._using) && this.startsUsingForOf());\n      const isLetOrUsing =\n        (startsWithLet && this.hasFollowingBindingAtom()) ||\n        starsWithUsingDeclaration;\n\n      if (this.match(tt._var) || this.match(tt._const) || isLetOrUsing) {\n        const initNode = this.startNode<N.VariableDeclaration>();\n        let kind;\n        if (startsWithAwaitUsing) {\n          kind = \"await using\";\n          if (!this.isAwaitAllowed()) {\n            this.raise(Errors.AwaitUsingNotInAsyncContext, {\n              at: this.state.startLoc,\n            });\n          }\n          this.next(); // eat 'await'\n        } else {\n          kind = this.state.value;\n        }\n        this.next();\n        this.parseVar(initNode, true, kind);\n        const init = this.finishNode(initNode, \"VariableDeclaration\");\n\n        const isForIn = this.match(tt._in);\n        if (isForIn && starsWithUsingDeclaration) {\n          this.raise(Errors.ForInUsing, { at: init });\n        }\n        if (\n          (isForIn || this.isContextual(tt._of)) &&\n          init.declarations.length === 1\n        ) {\n          return this.parseForIn(node as Undone<N.ForInOf>, init, awaitAt);\n        }\n        if (awaitAt !== null) {\n          this.unexpected(awaitAt);\n        }\n        return this.parseFor(node as Undone<N.ForStatement>, init);\n      }\n    }\n\n    // Check whether the first token is possibly a contextual keyword, so that\n    // we can forbid `for (async of` if this turns out to be a for-of loop.\n    const startsWithAsync = this.isContextual(tt._async);\n\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n    const isForOf = this.isContextual(tt._of);\n    if (isForOf) {\n      // Check for leading tokens that are forbidden in for-of loops:\n      if (startsWithLet) {\n        this.raise(Errors.ForOfLet, { at: init });\n      }\n\n      if (\n        // `for await (async of []);` is allowed.\n        awaitAt === null &&\n        startsWithAsync &&\n        init.type === \"Identifier\"\n      ) {\n        // This catches the case where the `async` in `for (async of` was\n        // parsed as an identifier. If it was parsed as the start of an async\n        // arrow function (e.g. `for (async of => {} of []);`), the LVal check\n        // further down will raise a more appropriate error.\n        this.raise(Errors.ForOfAsync, { at: init });\n      }\n    }\n    if (isForOf || this.match(tt._in)) {\n      this.checkDestructuringPrivate(refExpressionErrors);\n      this.toAssignable(init, /* isLHS */ true);\n      const type = isForOf ? \"ForOfStatement\" : \"ForInStatement\";\n      this.checkLVal(init, { in: { type } });\n      return this.parseForIn(\n        node as Undone<N.ForInStatement | N.ForOfStatement>,\n        // @ts-expect-error init has been transformed to an assignable\n        init,\n        awaitAt,\n      );\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n    if (awaitAt !== null) {\n      this.unexpected(awaitAt);\n    }\n    return this.parseFor(node as Undone<N.ForStatement>, init);\n  }\n\n  // https://tc39.es/ecma262/#prod-HoistableDeclaration\n  parseFunctionStatement(\n    this: Parser,\n    node: Undone<N.FunctionDeclaration>,\n    isAsync: boolean,\n    isHangingDeclaration: boolean,\n  ): N.FunctionDeclaration {\n    this.next(); // eat 'function'\n    return this.parseFunction(\n      node,\n      ParseFunctionFlag.Declaration |\n        (isHangingDeclaration ? ParseFunctionFlag.HangingDeclaration : 0) |\n        (isAsync ? ParseFunctionFlag.Async : 0),\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-IfStatement\n  parseIfStatement(this: Parser, node: Undone<N.IfStatement>) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    // Annex B.3.3\n    // https://tc39.es/ecma262/#sec-functiondeclarations-in-ifstatement-statement-clauses\n    node.consequent = this.parseStatementOrSloppyAnnexBFunctionDeclaration();\n    node.alternate = this.eat(tt._else)\n      ? this.parseStatementOrSloppyAnnexBFunctionDeclaration()\n      : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n\n  parseReturnStatement(this: Parser, node: Undone<N.ReturnStatement>) {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(Errors.IllegalReturn, { at: this.state.startLoc });\n    }\n\n    this.next();\n\n    // In `return` (and `break`/`continue`), the keywords with\n    // optional arguments, we eagerly look for a semicolon or the\n    // possibility to insert one.\n\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-SwitchStatement\n  parseSwitchStatement(this: Parser, node: Undone<N.SwitchStatement>) {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases: N.SwitchStatement[\"cases\"] = (node.cases = []);\n    this.expect(tt.braceL);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(ScopeFlag.OTHER);\n\n    // Statements under must be grouped (by label) in SwitchCase\n    // nodes. `cur` is used to keep the node that we are currently\n    // adding statements to.\n\n    let cur;\n    for (let sawDefault; !this.match(tt.braceR); ) {\n      if (this.match(tt._case) || this.match(tt._default)) {\n        const isCase = this.match(tt._case);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        // @ts-expect-error Fixme\n        cases.push((cur = this.startNode()));\n        cur.consequent = [];\n        this.next();\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(Errors.MultipleDefaultsInSwitch, {\n              at: this.state.lastTokStartLoc,\n            });\n          }\n          sawDefault = true;\n          cur.test = null;\n        }\n        this.expect(tt.colon);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatementListItem());\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next(); // Closing brace\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n\n  parseThrowStatement(this: Parser, node: Undone<N.ThrowStatement>) {\n    this.next();\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(Errors.NewlineAfterThrow, { at: this.state.lastTokEndLoc });\n    }\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n\n  parseCatchClauseParam(this: Parser): N.Pattern {\n    const param = this.parseBindingAtom();\n\n    this.scope.enter(\n      this.options.annexB && param.type === \"Identifier\"\n        ? ScopeFlag.SIMPLE_CATCH\n        : 0,\n    );\n    this.checkLVal(param, {\n      in: { type: \"CatchClause\" },\n      binding: BindingFlag.TYPE_CATCH_PARAM,\n    });\n\n    return param;\n  }\n\n  parseTryStatement(\n    this: Parser,\n    node: Undone<N.TryStatement>,\n  ): N.TryStatement {\n    this.next();\n\n    node.block = this.parseBlock();\n    node.handler = null;\n\n    if (this.match(tt._catch)) {\n      const clause = this.startNode<N.CatchClause>();\n      this.next();\n      if (this.match(tt.parenL)) {\n        this.expect(tt.parenL);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(tt.parenR);\n      } else {\n        clause.param = null;\n        this.scope.enter(ScopeFlag.OTHER);\n      }\n\n      // Parse the catch clause's body.\n      clause.body =\n        // For the smartPipelines plugin: Disable topic references from outer\n        // contexts within the catch clause's body.\n        this.withSmartMixTopicForbiddingContext(() =>\n          // Parse the catch clause's body.\n          this.parseBlock(false, false),\n        );\n\n      this.scope.exit();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n\n    node.finalizer = this.eat(tt._finally) ? this.parseBlock() : null;\n\n    if (!node.handler && !node.finalizer) {\n      this.raise(Errors.NoCatchOrFinally, { at: node });\n    }\n\n    return this.finishNode(node, \"TryStatement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-VariableStatement\n  // https://tc39.es/ecma262/#prod-LexicalDeclaration\n  parseVarStatement(\n    this: Parser,\n    node: Undone<N.VariableDeclaration>,\n    kind: \"var\" | \"let\" | \"const\" | \"using\" | \"await using\",\n    allowMissingInitializer: boolean = false,\n  ): N.VariableDeclaration {\n    this.next();\n    this.parseVar(node, false, kind, allowMissingInitializer);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n\n  // https://tc39.es/ecma262/#prod-WhileStatement\n  parseWhileStatement(\n    this: Parser,\n    node: Undone<N.WhileStatement>,\n  ): N.WhileStatement {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n\n    // Parse the loop body.\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the loop body.\n      // They are permitted in test expressions, outside of the loop body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse loop body.\n        this.parseStatement(),\n      );\n\n    this.state.labels.pop();\n\n    return this.finishNode(node, \"WhileStatement\");\n  }\n\n  parseWithStatement(\n    this: Parser,\n    node: Undone<N.WithStatement>,\n  ): N.WithStatement {\n    if (this.state.strict) {\n      this.raise(Errors.StrictWith, { at: this.state.startLoc });\n    }\n    this.next();\n    node.object = this.parseHeaderExpression();\n\n    // Parse the statement body.\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the with statement's body.\n      // They are permitted in function default-parameter expressions, which are\n      // part of the outer context, outside of the with statement's body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse the statement body.\n        this.parseStatement(),\n      );\n\n    return this.finishNode(node, \"WithStatement\");\n  }\n\n  parseEmptyStatement(node: Undone<N.EmptyStatement>): N.EmptyStatement {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-LabelledStatement\n  parseLabeledStatement(\n    this: Parser,\n    node: Undone<N.LabeledStatement>,\n    maybeName: string,\n    expr: N.Identifier,\n    flags: ParseStatementFlag,\n  ): N.LabeledStatement {\n    for (const label of this.state.labels) {\n      if (label.name === maybeName) {\n        this.raise(Errors.LabelRedeclaration, {\n          at: expr,\n          labelName: maybeName,\n        });\n      }\n    }\n\n    const kind = tokenIsLoop(this.state.type)\n      ? \"loop\"\n      : this.match(tt._switch)\n      ? \"switch\"\n      : null;\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start,\n    });\n    // https://tc39.es/ecma262/#prod-LabelledItem\n    node.body =\n      flags & ParseStatementFlag.AllowLabeledFunction\n        ? this.parseStatementOrSloppyAnnexBFunctionDeclaration(true)\n        : this.parseStatement();\n\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n\n  parseExpressionStatement(\n    node: Undone<N.ExpressionStatement>,\n    expr: N.Expression,\n    /* eslint-disable-next-line @typescript-eslint/no-unused-vars -- used in TypeScript parser */\n    decorators: N.Decorator[] | null,\n  ) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n\n  // Parse a semicolon-enclosed block of statements, handling `\"use\n  // strict\"` declarations when `allowDirectives` is true (used for\n  // function bodies).\n\n  parseBlock(\n    this: Parser,\n    allowDirectives: boolean = false,\n    createNewLexicalScope: boolean = true,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): N.BlockStatement {\n    const node = this.startNode<N.BlockStatement>();\n    if (allowDirectives) {\n      this.state.strictErrors.clear();\n    }\n    this.expect(tt.braceL);\n    if (createNewLexicalScope) {\n      this.scope.enter(ScopeFlag.OTHER);\n    }\n    this.parseBlockBody(\n      node,\n      allowDirectives,\n      false,\n      tt.braceR,\n      afterBlockParse,\n    );\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n    return this.finishNode(node, \"BlockStatement\");\n  }\n\n  isValidDirective(stmt: N.Statement): boolean {\n    return (\n      stmt.type === \"ExpressionStatement\" &&\n      stmt.expression.type === \"StringLiteral\" &&\n      !stmt.expression.extra.parenthesized\n    );\n  }\n\n  parseBlockBody(\n    this: Parser,\n    node: Undone<N.BlockStatementLike>,\n    allowDirectives: boolean | undefined | null,\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): void {\n    const body: N.BlockStatementLike[\"body\"] = (node.body = []);\n    const directives: N.BlockStatementLike[\"directives\"] = (node.directives =\n      []);\n    this.parseBlockOrModuleBlockBody(\n      body,\n      allowDirectives ? directives : undefined,\n      topLevel,\n      end,\n      afterBlockParse,\n    );\n  }\n\n  // Undefined directives means that directives are not allowed.\n  // https://tc39.es/ecma262/#prod-Block\n  // https://tc39.es/ecma262/#prod-ModuleBody\n  parseBlockOrModuleBlockBody(\n    this: Parser,\n    body: N.Statement[],\n    directives: N.Directive[] | undefined | null,\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): void {\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n\n    while (!this.match(end)) {\n      const stmt = topLevel\n        ? this.parseModuleItem()\n        : this.parseStatementListItem();\n\n      if (directives && !parsedNonDirective) {\n        if (this.isValidDirective(stmt)) {\n          const directive = this.stmtToDirective(stmt);\n          directives.push(directive);\n\n          if (\n            !hasStrictModeDirective &&\n            directive.value.value === \"use strict\"\n          ) {\n            hasStrictModeDirective = true;\n            this.setStrict(true);\n          }\n\n          continue;\n        }\n        parsedNonDirective = true;\n        // clear strict errors since the strict mode will not change within the block\n        this.state.strictErrors.clear();\n      }\n      body.push(stmt);\n    }\n\n    afterBlockParse?.call(this, hasStrictModeDirective);\n\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n\n    this.next();\n  }\n\n  // Parse a regular `for` loop. The disambiguation code in\n  // `parseStatement` will already have parsed the init statement or\n  // expression.\n\n  parseFor(\n    this: Parser,\n    node: Undone<N.ForStatement>,\n    init?: N.VariableDeclaration | N.Expression | null,\n  ): N.ForStatement {\n    node.init = init;\n    this.semicolon(/* allowAsi */ false);\n    node.test = this.match(tt.semi) ? null : this.parseExpression();\n    this.semicolon(/* allowAsi */ false);\n    node.update = this.match(tt.parenR) ? null : this.parseExpression();\n    this.expect(tt.parenR);\n\n    // Parse the loop body.\n    node.body =\n      // For the smartPipelines plugin: Disable topic references from outer\n      // contexts within the loop body. They are permitted in test expressions,\n      // outside of the loop body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse the loop body.\n        this.parseStatement(),\n      );\n\n    this.scope.exit();\n    this.state.labels.pop();\n\n    return this.finishNode(node, \"ForStatement\");\n  }\n\n  // Parse a `for`/`in` and `for`/`of` loop, which are almost\n  // same from parser's perspective.\n\n  parseForIn(\n    this: Parser,\n    node: Undone<N.ForInOf>,\n    init: N.VariableDeclaration | N.AssignmentPattern,\n    awaitAt?: Position | null,\n  ): N.ForInOf {\n    const isForIn = this.match(tt._in);\n    this.next();\n\n    if (isForIn) {\n      if (awaitAt !== null) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt !== null;\n    }\n\n    if (\n      init.type === \"VariableDeclaration\" &&\n      init.declarations[0].init != null &&\n      (!isForIn ||\n        !this.options.annexB ||\n        this.state.strict ||\n        init.kind !== \"var\" ||\n        init.declarations[0].id.type !== \"Identifier\")\n    ) {\n      this.raise(Errors.ForInOfLoopInitializer, {\n        at: init,\n        type: isForIn ? \"ForInStatement\" : \"ForOfStatement\",\n      });\n    }\n\n    if (init.type === \"AssignmentPattern\") {\n      this.raise(Errors.InvalidLhs, {\n        at: init,\n        ancestor: { type: \"ForStatement\" },\n      });\n    }\n\n    node.left = init;\n    node.right = isForIn\n      ? this.parseExpression()\n      : this.parseMaybeAssignAllowIn();\n    this.expect(tt.parenR);\n\n    // Parse the loop body.\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the loop body.\n      // They are permitted in test expressions, outside of the loop body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse loop body.\n        this.parseStatement(),\n      );\n\n    this.scope.exit();\n    this.state.labels.pop();\n\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n\n  // Parse a list of variable declarations.\n\n  parseVar(\n    this: Parser,\n    node: Undone<N.VariableDeclaration>,\n    isFor: boolean,\n    kind: \"var\" | \"let\" | \"const\" | \"using\" | \"await using\",\n    allowMissingInitializer: boolean = false,\n  ): Undone<N.VariableDeclaration> {\n    const declarations: N.VariableDeclarator[] = (node.declarations = []);\n    node.kind = kind;\n    for (;;) {\n      const decl = this.startNode<N.VariableDeclarator>();\n      this.parseVarId(decl, kind);\n      decl.init = !this.eat(tt.eq)\n        ? null\n        : isFor\n        ? this.parseMaybeAssignDisallowIn()\n        : this.parseMaybeAssignAllowIn();\n\n      if (decl.init === null && !allowMissingInitializer) {\n        if (\n          decl.id.type !== \"Identifier\" &&\n          !(isFor && (this.match(tt._in) || this.isContextual(tt._of)))\n        ) {\n          this.raise(Errors.DeclarationMissingInitializer, {\n            at: this.state.lastTokEndLoc,\n            kind: \"destructuring\",\n          });\n        } else if (\n          kind === \"const\" &&\n          !(this.match(tt._in) || this.isContextual(tt._of))\n        ) {\n          this.raise(Errors.DeclarationMissingInitializer, {\n            at: this.state.lastTokEndLoc,\n            kind: \"const\",\n          });\n        }\n      }\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(tt.comma)) break;\n    }\n    return node;\n  }\n\n  parseVarId(\n    this: Parser,\n    decl: Undone<N.VariableDeclarator>,\n    kind: \"var\" | \"let\" | \"const\" | \"using\" | \"await using\",\n  ): void {\n    const id = this.parseBindingAtom();\n    this.checkLVal(id, {\n      in: { type: \"VariableDeclarator\" },\n      binding: kind === \"var\" ? BindingFlag.TYPE_VAR : BindingFlag.TYPE_LEXICAL,\n    });\n    decl.id = id;\n  }\n\n  // https://tc39.es/ecma262/#prod-AsyncFunctionExpression\n  parseAsyncFunctionExpression(\n    this: Parser,\n    node: Undone<N.FunctionExpression>,\n  ): N.FunctionExpression {\n    return this.parseFunction(node, ParseFunctionFlag.Async);\n  }\n\n  // Parse a function declaration or expression (depending on the\n  // ParseFunctionFlag.Declaration flag).\n\n  parseFunction<T extends N.NormalFunction>(\n    this: Parser,\n    node: Undone<T>,\n    flags: ParseFunctionFlag = ParseFunctionFlag.Expression,\n  ): T {\n    const hangingDeclaration = flags & ParseFunctionFlag.HangingDeclaration;\n    const isDeclaration = !!(flags & ParseFunctionFlag.Declaration);\n    const requireId = isDeclaration && !(flags & ParseFunctionFlag.NullableId);\n    const isAsync = !!(flags & ParseFunctionFlag.Async);\n\n    this.initFunction(node, isAsync);\n\n    if (this.match(tt.star)) {\n      if (hangingDeclaration) {\n        this.raise(Errors.GeneratorInSingleStatementContext, {\n          at: this.state.startLoc,\n        });\n      }\n      this.next(); // eat *\n      node.generator = true;\n    }\n\n    if (isDeclaration) {\n      node.id = this.parseFunctionId(requireId);\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = false;\n    this.scope.enter(ScopeFlag.FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n    if (!isDeclaration) {\n      node.id = this.parseFunctionId();\n    }\n\n    this.parseFunctionParams(node, /* isConstructor */ false);\n\n    // For the smartPipelines plugin: Disable topic references from outer\n    // contexts within the function body. They are permitted in function\n    // default-parameter expressions, outside of the function body.\n    this.withSmartMixTopicForbiddingContext(() => {\n      // Parse the function body.\n      this.parseFunctionBodyAndFinish(\n        node,\n        isDeclaration ? \"FunctionDeclaration\" : \"FunctionExpression\",\n      );\n    });\n\n    this.prodParam.exit();\n    this.scope.exit();\n\n    if (isDeclaration && !hangingDeclaration) {\n      // We need to register this _after_ parsing the function body\n      // because of TypeScript body-less function declarations,\n      // which shouldn't be added to the scope.\n      this.registerFunctionStatementId(node as T);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node as T;\n  }\n\n  parseFunctionId(requireId?: boolean): N.Identifier | undefined | null {\n    return requireId || tokenIsIdentifier(this.state.type)\n      ? this.parseIdentifier()\n      : null;\n  }\n\n  parseFunctionParams(\n    this: Parser,\n    node: Undone<N.Function>,\n    isConstructor?: boolean,\n  ): void {\n    this.expect(tt.parenL);\n    this.expressionScope.enter(newParameterDeclarationScope());\n    node.params = this.parseBindingList(\n      tt.parenR,\n      charCodes.rightParenthesis,\n      ParseBindingListFlags.IS_FUNCTION_PARAMS |\n        (isConstructor ? ParseBindingListFlags.IS_CONSTRUCTOR_PARAMS : 0),\n    );\n\n    this.expressionScope.exit();\n  }\n\n  registerFunctionStatementId(node: N.Function): void {\n    if (!node.id) return;\n\n    // If it is a regular function declaration in sloppy mode, then it is\n    // subject to Annex B semantics (BindingFlag.TYPE_FUNCTION). Otherwise, the binding\n    // mode depends on properties of the current scope (see\n    // treatFunctionsAsVar).\n    this.scope.declareName(\n      node.id.name,\n      !this.options.annexB || this.state.strict || node.generator || node.async\n        ? this.scope.treatFunctionsAsVar\n          ? BindingFlag.TYPE_VAR\n          : BindingFlag.TYPE_LEXICAL\n        : BindingFlag.TYPE_FUNCTION,\n      node.id.loc.start,\n    );\n  }\n\n  // Parse a class declaration or literal (depending on the\n  // `isStatement` parameter).\n\n  parseClass<T extends N.Class>(\n    this: Parser,\n    node: Undone<T>,\n    isStatement: /* T === ClassDeclaration */ boolean,\n    optionalId?: boolean,\n  ): T {\n    this.next(); // 'class'\n\n    // A class definition is always strict mode code.\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    // this.state.strict is restored in parseClassBody\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n\n    return this.finishNode(\n      node,\n      isStatement ? \"ClassDeclaration\" : \"ClassExpression\",\n    );\n  }\n\n  isClassProperty(): boolean {\n    return this.match(tt.eq) || this.match(tt.semi) || this.match(tt.braceR);\n  }\n\n  isClassMethod(): boolean {\n    return this.match(tt.parenL);\n  }\n\n  isNonstaticConstructor(method: N.ClassMethod | N.ClassProperty): boolean {\n    return (\n      !method.computed &&\n      !method.static &&\n      (method.key.name === \"constructor\" || // Identifier\n        method.key.value === \"constructor\") // String literal\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassBody\n  parseClassBody(\n    this: Parser,\n    hadSuperClass: boolean,\n    oldStrict: boolean,\n  ): N.ClassBody {\n    this.classScope.enter();\n\n    const state: N.ParseClassMemberState = {\n      hadConstructor: false,\n      hadSuperClass,\n    };\n    let decorators: N.Decorator[] = [];\n    const classBody = this.startNode<N.ClassBody>();\n    classBody.body = [];\n\n    this.expect(tt.braceL);\n\n    // For the smartPipelines plugin: Disable topic references from outer\n    // contexts within the class body.\n    this.withSmartMixTopicForbiddingContext(() => {\n      // Parse the contents within the braces.\n      while (!this.match(tt.braceR)) {\n        if (this.eat(tt.semi)) {\n          if (decorators.length > 0) {\n            throw this.raise(Errors.DecoratorSemicolon, {\n              at: this.state.lastTokEndLoc,\n            });\n          }\n          continue;\n        }\n\n        if (this.match(tt.at)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n\n        const member = this.startNode<N.ClassMember>();\n\n        // steal the decorators if there are any\n        if (decorators.length) {\n          // @ts-expect-error Fixme\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n\n        this.parseClassMember(classBody, member, state);\n\n        if (\n          // @ts-expect-error Fixme\n          member.kind === \"constructor\" &&\n          // @ts-expect-error Fixme\n          member.decorators &&\n          // @ts-expect-error Fixme\n          member.decorators.length > 0\n        ) {\n          this.raise(Errors.DecoratorConstructor, { at: member });\n        }\n      }\n    });\n\n    this.state.strict = oldStrict;\n\n    this.next(); // eat `}`\n\n    if (decorators.length) {\n      throw this.raise(Errors.TrailingDecorator, { at: this.state.startLoc });\n    }\n\n    this.classScope.exit();\n\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n\n  // returns true if the current identifier is a method/field name,\n  // false if it is a modifier\n  parseClassMemberFromModifier(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    member: Undone<N.ClassMember>,\n  ): boolean {\n    const key = this.parseIdentifier(true); // eats the modifier\n\n    if (this.isClassMethod()) {\n      const method: N.ClassMethod = member as any;\n\n      // a method named like the modifier\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(\n        classBody,\n        method,\n        false,\n        false,\n        /* isConstructor */ false,\n        false,\n      );\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop: N.ClassProperty = member as any;\n\n      // a property named like the modifier\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n    this.resetPreviousNodeTrailingComments(key);\n    return false;\n  }\n\n  parseClassMember(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    member: Undone<N.ClassMember>,\n    state: N.ParseClassMemberState,\n  ): void {\n    const isStatic = this.isContextual(tt._static);\n\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        // a class element named 'static'\n        return;\n      }\n      if (this.eat(tt.braceL)) {\n        this.parseClassStaticBlock(classBody, member as any as N.StaticBlock);\n        return;\n      }\n    }\n\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parseClassMemberWithIsStatic(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    member: Undone<N.ClassMember>,\n    state: N.ParseClassMemberState,\n    isStatic: boolean,\n  ) {\n    const publicMethod = member as N.ClassMethod;\n    const privateMethod = member as N.ClassPrivateMethod;\n    const publicProp = member as N.ClassProperty;\n    const privateProp = member as N.ClassPrivateProperty;\n    const accessorProp = member as N.ClassAccessorProperty;\n\n    const method: typeof publicMethod | typeof privateMethod = publicMethod;\n    const publicMember: typeof publicMethod | typeof publicProp = publicMethod;\n\n    member.static = isStatic;\n    this.parsePropertyNamePrefixOperator(member);\n\n    if (this.eat(tt.star)) {\n      // a generator\n      method.kind = \"method\";\n      const isPrivateName = this.match(tt.privateName);\n      this.parseClassElementName(method);\n\n      if (isPrivateName) {\n        // Private generator method\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(Errors.ConstructorIsGenerator, {\n          at: publicMethod.key,\n        });\n      }\n\n      this.pushClassMethod(\n        classBody,\n        publicMethod,\n        true,\n        false,\n        /* isConstructor */ false,\n        false,\n      );\n\n      return;\n    }\n\n    const isContextual =\n      tokenIsIdentifier(this.state.type) && !this.state.containsEsc;\n    const isPrivate = this.match(tt.privateName);\n    const key = this.parseClassElementName(member);\n    const maybeQuestionTokenStartLoc = this.state.startLoc;\n\n    this.parsePostMemberNameModifiers(publicMember);\n\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n\n      // a normal method\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n\n        // TypeScript allows multiple overloaded constructor declarations.\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(Errors.DuplicateConstructor, { at: key });\n        }\n        if (isConstructor && this.hasPlugin(\"typescript\") && member.override) {\n          this.raise(Errors.OverrideOnConstructor, { at: key });\n        }\n        state.hadConstructor = true;\n        allowsDirectSuper = state.hadSuperClass;\n      }\n\n      this.pushClassMethod(\n        classBody,\n        publicMethod,\n        false,\n        false,\n        isConstructor,\n        allowsDirectSuper,\n      );\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (\n      isContextual &&\n      key.name === \"async\" &&\n      !this.isLineTerminator()\n    ) {\n      // an async method\n      this.resetPreviousNodeTrailingComments(key);\n      const isGenerator = this.eat(tt.star);\n\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStartLoc);\n      }\n\n      method.kind = \"method\";\n      // The so-called parsed name would have been \"async\": get the real name.\n      const isPrivate = this.match(tt.privateName);\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (isPrivate) {\n        // private async method\n        this.pushClassPrivateMethod(\n          classBody,\n          privateMethod,\n          isGenerator,\n          true,\n        );\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(Errors.ConstructorIsAsync, { at: publicMethod.key });\n        }\n\n        this.pushClassMethod(\n          classBody,\n          publicMethod,\n          isGenerator,\n          true,\n          /* isConstructor */ false,\n          false,\n        );\n      }\n    } else if (\n      isContextual &&\n      (key.name === \"get\" || key.name === \"set\") &&\n      !(this.match(tt.star) && this.isLineTerminator())\n    ) {\n      // `get\\n*` is an uninitialized property named 'get' followed by a generator.\n      // a getter or setter\n      this.resetPreviousNodeTrailingComments(key);\n      method.kind = key.name;\n      // The so-called parsed name would have been \"get/set\": get the real name.\n      const isPrivate = this.match(tt.privateName);\n      this.parseClassElementName(publicMethod);\n\n      if (isPrivate) {\n        // private getter/setter\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(Errors.ConstructorIsAccessor, { at: publicMethod.key });\n        }\n        this.pushClassMethod(\n          classBody,\n          publicMethod,\n          false,\n          false,\n          /* isConstructor */ false,\n          false,\n        );\n      }\n\n      this.checkGetterSetterParams(publicMethod);\n    } else if (\n      isContextual &&\n      key.name === \"accessor\" &&\n      !this.isLineTerminator()\n    ) {\n      this.expectPlugin(\"decoratorAutoAccessors\");\n      this.resetPreviousNodeTrailingComments(key);\n\n      // The so-called parsed name would have been \"accessor\": get the real name.\n      const isPrivate = this.match(tt.privateName);\n      this.parseClassElementName(publicProp);\n      this.pushClassAccessorProperty(classBody, accessorProp, isPrivate);\n    } else if (this.isLineTerminator()) {\n      // an uninitialized class property (due to ASI, since we don't otherwise recognize the next token)\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassElementName\n  parseClassElementName(\n    this: Parser,\n    member: Undone<N.ClassMember>,\n  ): N.Expression | N.Identifier {\n    const { type, value } = this.state;\n    if (\n      (type === tt.name || type === tt.string) &&\n      member.static &&\n      value === \"prototype\"\n    ) {\n      this.raise(Errors.StaticPrototype, { at: this.state.startLoc });\n    }\n\n    if (type === tt.privateName) {\n      if (value === \"constructor\") {\n        this.raise(Errors.ConstructorClassPrivateField, {\n          at: this.state.startLoc,\n        });\n      }\n      const key = this.parsePrivateName();\n      member.key = key;\n      return key;\n    }\n\n    return this.parsePropertyName(member);\n  }\n\n  parseClassStaticBlock(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    member: Undone<\n      N.StaticBlock & {\n        decorators?: Array<N.Decorator>;\n      }\n    >,\n  ) {\n    // Start a new lexical scope\n    this.scope.enter(\n      ScopeFlag.CLASS | ScopeFlag.STATIC_BLOCK | ScopeFlag.SUPER,\n    );\n    // Start a new scope with regard to loop labels\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    // ClassStaticBlockStatementList:\n    //   StatementList[~Yield, ~Await, ~Return] opt\n    this.prodParam.enter(PARAM);\n    const body: N.Node[] = (member.body = []);\n    this.parseBlockOrModuleBlockBody(body, undefined, false, tt.braceR);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode<N.StaticBlock>(member, \"StaticBlock\"));\n    if (member.decorators?.length) {\n      this.raise(Errors.DecoratorStaticBlock, { at: member });\n    }\n  }\n\n  pushClassProperty(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    prop: N.ClassProperty,\n  ) {\n    if (\n      !prop.computed &&\n      (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")\n    ) {\n      // Non-computed field, which is either an identifier named \"constructor\"\n      // or a string literal named \"constructor\"\n      this.raise(Errors.ConstructorClassField, { at: prop.key });\n    }\n\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n\n  pushClassPrivateProperty(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    prop: Undone<N.ClassPrivateProperty>,\n  ) {\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n\n    this.classScope.declarePrivateName(\n      this.getPrivateNameSV(node.key),\n      ClassElementType.OTHER,\n      node.key.loc.start,\n    );\n  }\n\n  pushClassAccessorProperty(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    prop: N.ClassAccessorProperty,\n    isPrivate: boolean,\n  ) {\n    if (!isPrivate && !prop.computed) {\n      // Not private, so not node is not a PrivateName and we can safely cast\n      const key = prop.key as N.Expression;\n\n      if (key.name === \"constructor\" || key.value === \"constructor\") {\n        // Non-computed field, which is either an identifier named \"constructor\"\n        // or a string literal named \"constructor\"\n        this.raise(Errors.ConstructorClassField, { at: key });\n      }\n    }\n\n    const node = this.parseClassAccessorProperty(prop);\n    classBody.body.push(node);\n\n    if (isPrivate) {\n      this.classScope.declarePrivateName(\n        this.getPrivateNameSV(node.key),\n        ClassElementType.OTHER,\n        node.key.loc.start,\n      );\n    }\n  }\n\n  pushClassMethod(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    method: Undone<N.ClassMethod>,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isConstructor: boolean,\n    allowsDirectSuper: boolean,\n  ): void {\n    classBody.body.push(\n      this.parseMethod(\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n        \"ClassMethod\",\n        true,\n      ),\n    );\n  }\n\n  pushClassPrivateMethod(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    method: Undone<N.ClassPrivateMethod>,\n    isGenerator: boolean,\n    isAsync: boolean,\n  ): void {\n    const node = this.parseMethod(\n      method,\n      isGenerator,\n      isAsync,\n      /* isConstructor */ false,\n      false,\n      \"ClassPrivateMethod\",\n      true,\n    );\n    classBody.body.push(node);\n\n    const kind =\n      node.kind === \"get\"\n        ? node.static\n          ? ClassElementType.STATIC_GETTER\n          : ClassElementType.INSTANCE_GETTER\n        : node.kind === \"set\"\n        ? node.static\n          ? ClassElementType.STATIC_SETTER\n          : ClassElementType.INSTANCE_SETTER\n        : ClassElementType.OTHER;\n    this.declareClassPrivateMethodInScope(node, kind);\n  }\n\n  declareClassPrivateMethodInScope(\n    node: Undone<\n      N.ClassPrivateMethod | N.EstreeMethodDefinition | N.TSDeclareMethod\n    >,\n    kind: number,\n  ) {\n    this.classScope.declarePrivateName(\n      this.getPrivateNameSV(node.key),\n      kind,\n      node.key.loc.start,\n    );\n  }\n\n  // Overridden in typescript.js\n  parsePostMemberNameModifiers(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    methodOrProp: Undone<N.ClassMethod | N.ClassProperty>,\n  ): void {}\n\n  // https://tc39.es/ecma262/#prod-FieldDefinition\n  parseClassPrivateProperty(\n    this: Parser,\n    node: Undone<N.ClassPrivateProperty>,\n  ): N.ClassPrivateProperty {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n\n  // https://tc39.es/ecma262/#prod-FieldDefinition\n  parseClassProperty(this: Parser, node: N.ClassProperty): N.ClassProperty {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassProperty\");\n  }\n\n  parseClassAccessorProperty(\n    this: Parser,\n    node: N.ClassAccessorProperty,\n  ): N.ClassAccessorProperty {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassAccessorProperty\");\n  }\n\n  // https://tc39.es/ecma262/#prod-Initializer\n  parseInitializer(\n    this: Parser,\n    node: Undone<\n      N.ClassProperty | N.ClassPrivateProperty | N.ClassAccessorProperty\n    >,\n  ): void {\n    this.scope.enter(ScopeFlag.CLASS | ScopeFlag.SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    this.prodParam.enter(PARAM);\n    node.value = this.eat(tt.eq) ? this.parseMaybeAssignAllowIn() : null;\n    this.expressionScope.exit();\n    this.prodParam.exit();\n    this.scope.exit();\n  }\n\n  parseClassId(\n    node: Undone<N.Class>,\n    isStatement: boolean,\n    optionalId?: boolean | null,\n    bindingType: BindingTypes = BindingFlag.TYPE_CLASS,\n  ): void {\n    if (tokenIsIdentifier(this.state.type)) {\n      node.id = this.parseIdentifier();\n      if (isStatement) {\n        this.declareNameFromIdentifier(node.id, bindingType);\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        throw this.raise(Errors.MissingClassName, { at: this.state.startLoc });\n      }\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassHeritage\n  parseClassSuper(this: Parser, node: Undone<N.Class>): void {\n    node.superClass = this.eat(tt._extends) ? this.parseExprSubscripts() : null;\n  }\n\n  // Parses module export declaration.\n  // https://tc39.es/ecma262/#prod-ExportDeclaration\n\n  parseExport(\n    this: Parser,\n    node: Undone<\n      | N.ExportDefaultDeclaration\n      | N.ExportAllDeclaration\n      | N.ExportNamedDeclaration\n    >,\n    decorators: N.Decorator[] | null,\n  ): N.AnyExport {\n    const maybeDefaultIdentifier = this.parseMaybeImportPhase(\n      node,\n      /* isExport */ true,\n    );\n    const hasDefault = this.maybeParseExportDefaultSpecifier(\n      node,\n      maybeDefaultIdentifier,\n    );\n    const parseAfterDefault = !hasDefault || this.eat(tt.comma);\n    const hasStar =\n      parseAfterDefault &&\n      this.eatExportStar(\n        // @ts-expect-error todo(flow->ts)\n        node,\n      );\n    const hasNamespace =\n      hasStar &&\n      this.maybeParseExportNamespaceSpecifier(\n        // @ts-expect-error todo(flow->ts)\n        node,\n      );\n    const parseAfterNamespace =\n      parseAfterDefault && (!hasNamespace || this.eat(tt.comma));\n    const isFromRequired = hasDefault || hasStar;\n\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      if (decorators) {\n        throw this.raise(Errors.UnsupportedDecoratorExport, { at: node });\n      }\n      this.parseExportFrom(node as Undone<N.ExportNamedDeclaration>, true);\n\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(\n      // @ts-expect-error todo(flow->ts)\n      node,\n    );\n\n    if (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers) {\n      this.unexpected(null, tt.braceL);\n    }\n\n    if (hasNamespace && parseAfterNamespace) {\n      this.unexpected(null, tt._from);\n    }\n\n    let hasDeclaration;\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      if (decorators) {\n        throw this.raise(Errors.UnsupportedDecoratorExport, { at: node });\n      }\n      this.parseExportFrom(\n        node as Undone<N.ExportNamedDeclaration>,\n        isFromRequired,\n      );\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(\n        node as Undone<N.ExportNamedDeclaration>,\n      );\n    }\n\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      const node2 = node as Undone<N.ExportNamedDeclaration>;\n      this.checkExport(node2, true, false, !!node2.source);\n      if (node2.declaration?.type === \"ClassDeclaration\") {\n        this.maybeTakeDecorators(decorators, node2.declaration, node2);\n      } else if (decorators) {\n        throw this.raise(Errors.UnsupportedDecoratorExport, { at: node });\n      }\n      return this.finishNode(node2, \"ExportNamedDeclaration\");\n    }\n\n    if (this.eat(tt._default)) {\n      const node2 = node as Undone<N.ExportDefaultDeclaration>;\n      // export default ...\n      const decl = this.parseExportDefaultExpression();\n      node2.declaration = decl;\n\n      if (decl.type === \"ClassDeclaration\") {\n        this.maybeTakeDecorators(decorators, decl as N.ClassDeclaration, node2);\n      } else if (decorators) {\n        throw this.raise(Errors.UnsupportedDecoratorExport, { at: node });\n      }\n\n      this.checkExport(node2, true, true);\n\n      return this.finishNode(node2, \"ExportDefaultDeclaration\");\n    }\n\n    this.unexpected(null, tt.braceL);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  eatExportStar(node: N.Node): boolean {\n    return this.eat(tt.star);\n  }\n\n  maybeParseExportDefaultSpecifier(\n    node: Undone<\n      | N.ExportDefaultDeclaration\n      | N.ExportAllDeclaration\n      | N.ExportNamedDeclaration\n    >,\n    maybeDefaultIdentifier: N.Identifier | null,\n  ): node is Undone<N.ExportNamedDeclaration> {\n    if (maybeDefaultIdentifier || this.isExportDefaultSpecifier()) {\n      // export defaultObj ...\n      this.expectPlugin(\"exportDefaultFrom\", maybeDefaultIdentifier?.loc.start);\n      const id = maybeDefaultIdentifier || this.parseIdentifier(true);\n      const specifier = this.startNodeAtNode<N.ExportDefaultSpecifier>(id);\n      specifier.exported = id;\n      (node as Undone<N.ExportNamedDeclaration>).specifiers = [\n        this.finishNode(specifier, \"ExportDefaultSpecifier\"),\n      ];\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node: N.Node): boolean {\n    if (this.isContextual(tt._as)) {\n      if (!node.specifiers) node.specifiers = [];\n\n      const specifier = this.startNodeAt(this.state.lastTokStartLoc);\n\n      this.next();\n\n      specifier.exported = this.parseModuleExportName();\n      node.specifiers.push(\n        this.finishNode(specifier, \"ExportNamespaceSpecifier\"),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportNamedSpecifiers(node: N.Node): boolean {\n    if (this.match(tt.braceL)) {\n      if (!node.specifiers) node.specifiers = [];\n      const isTypeExport = node.exportKind === \"type\";\n      node.specifiers.push(...this.parseExportSpecifiers(isTypeExport));\n\n      node.source = null;\n      node.declaration = null;\n      if (this.hasPlugin(\"importAssertions\")) {\n        node.assertions = [];\n      }\n\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportDeclaration(\n    this: Parser,\n    node: Undone<N.ExportNamedDeclaration>,\n  ): boolean {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n      if (this.hasPlugin(\"importAssertions\")) {\n        node.assertions = [];\n      }\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n    return false;\n  }\n\n  isAsyncFunction(): boolean {\n    if (!this.isContextual(tt._async)) return false;\n    const next = this.nextTokenInLineStart();\n    return this.isUnparsedContextual(next, \"function\");\n  }\n\n  parseExportDefaultExpression(this: Parser): N.Expression | N.Declaration {\n    const expr = this.startNode();\n\n    if (this.match(tt._function)) {\n      this.next();\n      return this.parseFunction(\n        expr as Undone<N.FunctionDeclaration>,\n        ParseFunctionFlag.Declaration | ParseFunctionFlag.NullableId,\n      );\n    } else if (this.isAsyncFunction()) {\n      this.next(); // eat 'async'\n      this.next(); // eat 'function'\n      return this.parseFunction(\n        expr as Undone<N.FunctionDeclaration>,\n        ParseFunctionFlag.Declaration |\n          ParseFunctionFlag.NullableId |\n          ParseFunctionFlag.Async,\n      );\n    }\n\n    if (this.match(tt._class)) {\n      return this.parseClass(expr as Undone<N.ClassExpression>, true, true);\n    }\n\n    if (this.match(tt.at)) {\n      if (\n        this.hasPlugin(\"decorators\") &&\n        this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\") === true\n      ) {\n        this.raise(Errors.DecoratorBeforeExport, { at: this.state.startLoc });\n      }\n      return this.parseClass(\n        this.maybeTakeDecorators(\n          this.parseDecorators(false),\n          this.startNode<N.ClassDeclaration>(),\n        ),\n        true,\n        true,\n      );\n    }\n\n    if (this.match(tt._const) || this.match(tt._var) || this.isLet()) {\n      throw this.raise(Errors.UnsupportedDefaultExport, {\n        at: this.state.startLoc,\n      });\n    }\n\n    const res = this.parseMaybeAssignAllowIn();\n    this.semicolon();\n    return res;\n  }\n\n  // https://tc39.es/ecma262/#prod-ExportDeclaration\n  parseExportDeclaration(\n    this: Parser,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    node: Undone<N.ExportNamedDeclaration>,\n  ): N.Declaration | undefined | null {\n    if (this.match(tt._class)) {\n      const node = this.parseClass(\n        this.startNode<N.ClassDeclaration>(),\n        true,\n        false,\n      );\n      return node;\n    }\n    return this.parseStatementListItem() as N.Declaration;\n  }\n\n  isExportDefaultSpecifier(): boolean {\n    const { type } = this.state;\n    if (tokenIsIdentifier(type)) {\n      if ((type === tt._async && !this.state.containsEsc) || type === tt._let) {\n        return false;\n      }\n      if (\n        (type === tt._type || type === tt._interface) &&\n        !this.state.containsEsc\n      ) {\n        const { type: nextType } = this.lookahead();\n        // If we see any variable name other than `from` after `type` keyword,\n        // we consider it as flow/typescript type exports\n        // note that this approach may fail on some pedantic cases\n        // export type from = number\n        if (\n          (tokenIsIdentifier(nextType) && nextType !== tt._from) ||\n          nextType === tt.braceL\n        ) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(tt._default)) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n    if (\n      this.input.charCodeAt(next) === charCodes.comma ||\n      (tokenIsIdentifier(this.state.type) && hasFrom)\n    ) {\n      return true;\n    }\n    // lookahead again when `export default from` is seen\n    if (this.match(tt._default) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(\n        this.nextTokenStartSince(next + 4),\n      );\n      return (\n        nextAfterFrom === charCodes.quotationMark ||\n        nextAfterFrom === charCodes.apostrophe\n      );\n    }\n    return false;\n  }\n\n  parseExportFrom(\n    this: Parser,\n    node: Undone<N.ExportNamedDeclaration>,\n    expect?: boolean,\n  ): void {\n    if (this.eatContextual(tt._from)) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n      this.maybeParseImportAttributes(node);\n      this.checkJSONModuleImport(node);\n    } else if (expect) {\n      this.unexpected();\n    }\n\n    this.semicolon();\n  }\n\n  shouldParseExportDeclaration(): boolean {\n    const { type } = this.state;\n    if (type === tt.at) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n      if (this.hasPlugin(\"decorators\")) {\n        if (\n          this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\") === true\n        ) {\n          this.raise(Errors.DecoratorBeforeExport, {\n            at: this.state.startLoc,\n          });\n        }\n\n        return true;\n      }\n    }\n\n    return (\n      type === tt._var ||\n      type === tt._const ||\n      type === tt._function ||\n      type === tt._class ||\n      this.isLet() ||\n      this.isAsyncFunction()\n    );\n  }\n\n  checkExport(\n    node: Undone<N.ExportNamedDeclaration | N.ExportDefaultDeclaration>,\n    checkNames?: boolean,\n    isDefault?: boolean,\n    isFrom?: boolean,\n  ): void {\n    if (checkNames) {\n      // Check for duplicate exports\n      if (isDefault) {\n        // Default exports\n        this.checkDuplicateExports(node, \"default\");\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          const declaration = (node as any as N.ExportDefaultDeclaration)\n            .declaration;\n          if (\n            declaration.type === \"Identifier\" &&\n            declaration.name === \"from\" &&\n            declaration.end - declaration.start === 4 && // does not contain escape\n            !declaration.extra?.parenthesized\n          ) {\n            this.raise(Errors.ExportDefaultFromAsIdentifier, {\n              at: declaration,\n            });\n          }\n        }\n        // @ts-expect-error node.specifiers may not exist\n      } else if (node.specifiers?.length) {\n        // Named exports\n        // @ts-expect-error node.specifiers may not exist\n        for (const specifier of node.specifiers) {\n          const { exported } = specifier;\n          const exportName =\n            exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportName);\n          if (!isFrom && specifier.local) {\n            const { local } = specifier;\n            if (local.type !== \"Identifier\") {\n              this.raise(Errors.ExportBindingIsString, {\n                at: specifier,\n                localName: local.value,\n                exportName,\n              });\n            } else {\n              // check for keywords used as local names\n              this.checkReservedWord(local.name, local.loc.start, true, false);\n              // check if export is defined\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if (node.declaration) {\n        // Exported declarations\n        if (\n          node.declaration.type === \"FunctionDeclaration\" ||\n          node.declaration.type === \"ClassDeclaration\"\n        ) {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (const declaration of node.declaration.declarations) {\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n  }\n\n  checkDeclaration(node: N.Pattern | N.ObjectProperty): void {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (const prop of node.properties) {\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (const elem of node.elements) {\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      // @ts-expect-error migrate to Babel types\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n\n  checkDuplicateExports(\n    node: Undone<\n      | N.Identifier\n      | N.StringLiteral\n      | N.ExportNamedDeclaration\n      | N.ExportSpecifier\n      | N.ExportDefaultSpecifier\n    >,\n    exportName: string,\n  ): void {\n    if (this.exportedIdentifiers.has(exportName)) {\n      if (exportName === \"default\") {\n        this.raise(Errors.DuplicateDefaultExport, { at: node });\n      } else {\n        this.raise(Errors.DuplicateExport, { at: node, exportName });\n      }\n    }\n    this.exportedIdentifiers.add(exportName);\n  }\n\n  // Parses a comma-separated list of module exports.\n\n  parseExportSpecifiers(isInTypeExport: boolean): Array<N.ExportSpecifier> {\n    const nodes = [];\n    let first = true;\n\n    // export { x, y as z } [from '...']\n    this.expect(tt.braceL);\n\n    while (!this.eat(tt.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.eat(tt.braceR)) break;\n      }\n      const isMaybeTypeOnly = this.isContextual(tt._type);\n      const isString = this.match(tt.string);\n      const node = this.startNode();\n      node.local = this.parseModuleExportName();\n      nodes.push(\n        this.parseExportSpecifier(\n          node,\n          isString,\n          isInTypeExport,\n          isMaybeTypeOnly,\n        ),\n      );\n    }\n\n    return nodes;\n  }\n\n  parseExportSpecifier(\n    node: any,\n    isString: boolean,\n    /* eslint-disable @typescript-eslint/no-unused-vars -- used in TypeScript parser */\n    isInTypeExport: boolean,\n    isMaybeTypeOnly: boolean,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n  ): N.ExportSpecifier {\n    if (this.eatContextual(tt._as)) {\n      node.exported = this.parseModuleExportName();\n    } else if (isString) {\n      node.exported = cloneStringLiteral(node.local);\n    } else if (!node.exported) {\n      node.exported = cloneIdentifier(node.local);\n    }\n    return this.finishNode<N.ExportSpecifier>(node, \"ExportSpecifier\");\n  }\n\n  // https://tc39.es/ecma262/#prod-ModuleExportName\n  parseModuleExportName(): N.StringLiteral | N.Identifier {\n    if (this.match(tt.string)) {\n      const result = this.parseStringLiteral(this.state.value);\n      const surrogate = result.value.match(loneSurrogate);\n      if (surrogate) {\n        this.raise(Errors.ModuleExportNameHasLoneSurrogate, {\n          at: result,\n          surrogateCharCode: surrogate[0].charCodeAt(0),\n        });\n      }\n      return result;\n    }\n    return this.parseIdentifier(true);\n  }\n\n  isJSONModuleImport(\n    node: Undone<\n      N.ExportAllDeclaration | N.ExportNamedDeclaration | N.ImportDeclaration\n    >,\n  ): boolean {\n    if (node.assertions != null) {\n      return node.assertions.some(({ key, value }) => {\n        return (\n          value.value === \"json\" &&\n          (key.type === \"Identifier\"\n            ? key.name === \"type\"\n            : key.value === \"type\")\n        );\n      });\n    }\n    return false;\n  }\n\n  checkImportReflection(node: Undone<N.ImportDeclaration>) {\n    const { specifiers } = node;\n    const singleBindingType =\n      specifiers.length === 1 ? specifiers[0].type : null;\n\n    if (node.phase === \"source\") {\n      if (singleBindingType !== \"ImportDefaultSpecifier\") {\n        this.raise(Errors.SourcePhaseImportRequiresDefault, {\n          at: specifiers[0].loc.start,\n        });\n      }\n    } else if (node.phase === \"defer\") {\n      if (singleBindingType !== \"ImportNamespaceSpecifier\") {\n        this.raise(Errors.DeferImportRequiresNamespace, {\n          at: specifiers[0].loc.start,\n        });\n      }\n    } else if (node.module) {\n      if (singleBindingType !== \"ImportDefaultSpecifier\") {\n        this.raise(Errors.ImportReflectionNotBinding, {\n          at: specifiers[0].loc.start,\n        });\n      }\n      if (node.assertions?.length > 0) {\n        this.raise(Errors.ImportReflectionHasAssertion, {\n          at: node.specifiers[0].loc.start,\n        });\n      }\n    }\n  }\n\n  checkJSONModuleImport(\n    node: Undone<\n      N.ExportAllDeclaration | N.ExportNamedDeclaration | N.ImportDeclaration\n    >,\n  ) {\n    // @ts-expect-error Fixme: node.type must be undefined because they are undone\n    if (this.isJSONModuleImport(node) && node.type !== \"ExportAllDeclaration\") {\n      // @ts-expect-error specifiers may not index node\n      const { specifiers } = node;\n      if (specifiers != null) {\n        // @ts-expect-error refine specifier types\n        const nonDefaultNamedSpecifier = specifiers.find(specifier => {\n          let imported;\n          if (specifier.type === \"ExportSpecifier\") {\n            imported = specifier.local;\n          } else if (specifier.type === \"ImportSpecifier\") {\n            imported = specifier.imported;\n          }\n          if (imported !== undefined) {\n            return imported.type === \"Identifier\"\n              ? imported.name !== \"default\"\n              : imported.value !== \"default\";\n          }\n        });\n        if (nonDefaultNamedSpecifier !== undefined) {\n          this.raise(Errors.ImportJSONBindingNotDefault, {\n            at: nonDefaultNamedSpecifier.loc.start,\n          });\n        }\n      }\n    }\n  }\n\n  isPotentialImportPhase(isExport: boolean): boolean {\n    if (isExport) return false;\n    return (\n      this.isContextual(tt._source) ||\n      this.isContextual(tt._defer) ||\n      this.isContextual(tt._module)\n    );\n  }\n\n  applyImportPhase(\n    node: Undone<N.ImportDeclaration | N.ExportNamedDeclaration>,\n    isExport: boolean,\n    phase: string | null,\n    loc?: Position,\n  ): void {\n    if (isExport) {\n      if (!process.env.IS_PUBLISH) {\n        if (phase === \"module\" || phase === \"source\") {\n          throw new Error(\n            `Assertion failure: export declarations do not support the '${phase}' phase.`,\n          );\n        }\n      }\n      return;\n    }\n\n    if (phase === \"module\") {\n      this.expectPlugin(\"importReflection\", loc);\n      (node as N.ImportDeclaration).module = true;\n    } else if (this.hasPlugin(\"importReflection\")) {\n      (node as N.ImportDeclaration).module = false;\n    }\n\n    if (phase === \"source\") {\n      this.expectPlugin(\"sourcePhaseImports\", loc);\n      (node as N.ImportDeclaration).phase = \"source\";\n    } else if (phase === \"defer\") {\n      this.expectPlugin(\"deferredImportEvaluation\", loc);\n      (node as N.ImportDeclaration).phase = \"defer\";\n    } else if (this.hasPlugin(\"sourcePhaseImports\")) {\n      (node as N.ImportDeclaration).phase = null;\n    }\n  }\n\n  /*\n   * Parse `module` in `import module x from \"x\"`, disambiguating\n   * `import module from \"x\"` and `import module from from \"x\"`.\n   *\n   * This function might return an identifier representing the `module`\n   * if it eats `module` and then discovers that it was the default import\n   * binding and not the import reflection.\n   *\n   * This function is also used to parse `import type` and `import typeof`\n   * in the TS and Flow plugins.\n   *\n   * Note: the proposal has been updated to use `source` instead of `module`,\n   * but it has not been implemented yet.\n   */\n  parseMaybeImportPhase(\n    node: Undone<N.ImportDeclaration | N.TsImportEqualsDeclaration>,\n    isExport: boolean,\n  ): N.Identifier | null {\n    if (!this.isPotentialImportPhase(isExport)) {\n      this.applyImportPhase(\n        node as Undone<N.ImportDeclaration>,\n        isExport,\n        null,\n      );\n      return null;\n    }\n\n    const phaseIdentifier = this.parseIdentifier(true);\n\n    const { type } = this.state;\n    const isImportPhase = tokenIsKeywordOrIdentifier(type)\n      ? // OK: import <phase> x from \"foo\";\n        // OK: import <phase> from from \"foo\";\n        // NO: import <phase> from \"foo\";\n        // NO: import <phase> from 'foo';\n        // With the module declarations proposals, we will need further disambiguation\n        // for `import module from from;`.\n        type !== tt._from || this.lookaheadCharCode() === charCodes.lowercaseF\n      : // OK: import <phase> { x } from \"foo\";\n        // OK: import <phase> x from \"foo\";\n        // OK: import <phase> * as T from \"foo\";\n        // NO: import <phase> from \"foo\";\n        // OK: import <phase> \"foo\";\n        // The last one is invalid, we will continue parsing and throw\n        // an error later\n        type !== tt.comma;\n\n    if (isImportPhase) {\n      this.resetPreviousIdentifierLeadingComments(phaseIdentifier);\n      this.applyImportPhase(\n        node as Undone<N.ImportDeclaration>,\n        isExport,\n        phaseIdentifier.name,\n        phaseIdentifier.loc.start,\n      );\n      return null;\n    } else {\n      this.applyImportPhase(\n        node as Undone<N.ImportDeclaration>,\n        isExport,\n        null,\n      );\n      // `<phase>` is a default binding, return it to the main import declaration parser\n      return phaseIdentifier;\n    }\n  }\n\n  isPrecedingIdImportPhase(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    phase: string,\n  ) {\n    const { type } = this.state;\n    return tokenIsIdentifier(type)\n      ? // OK: import <phase> x from \"foo\";\n        // OK: import <phase> from from \"foo\";\n        // NO: import <phase> from \"foo\";\n        // NO: import <phase> from 'foo';\n        // With the module declarations proposals, we will need further disambiguation\n        // for `import module from from;`.\n        type !== tt._from || this.lookaheadCharCode() === charCodes.lowercaseF\n      : // OK: import <phase> { x } from \"foo\";\n        // OK: import <phase> x from \"foo\";\n        // OK: import <phase> * as T from \"foo\";\n        // NO: import <phase> from \"foo\";\n        // OK: import <phase> \"foo\";\n        // The last one is invalid, we will continue parsing and throw\n        // an error later\n        type !== tt.comma;\n  }\n\n  // Parses import declaration.\n  // https://tc39.es/ecma262/#prod-ImportDeclaration\n\n  parseImport(this: Parser, node: Undone<N.ImportDeclaration>): N.AnyImport {\n    if (this.match(tt.string)) {\n      // import '...'\n      return this.parseImportSourceAndAttributes(node);\n    }\n\n    return this.parseImportSpecifiersAndAfter(\n      node,\n      this.parseMaybeImportPhase(node, /* isExport */ false),\n    );\n  }\n\n  parseImportSpecifiersAndAfter(\n    this: Parser,\n    node: Undone<N.ImportDeclaration>,\n    maybeDefaultIdentifier: N.Identifier | null,\n  ): N.AnyImport {\n    node.specifiers = [];\n\n    // check if we have a default import like\n    // import React from \"react\";\n    const hasDefault = this.maybeParseDefaultImportSpecifier(\n      node,\n      maybeDefaultIdentifier,\n    );\n    /* we are checking if we do not have a default import, then it is obvious that we need named imports\n     * import { get } from \"axios\";\n     * but if we do have a default import\n     * we need to check if we have a comma after that and\n     * that is where this `|| this.eat` condition comes into play\n     */\n    const parseNext = !hasDefault || this.eat(tt.comma);\n    // if we do have to parse the next set of specifiers, we first check for star imports\n    // import React, * from \"react\";\n    const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n    // now we check if we need to parse the next imports\n    // but only if they are not importing * (everything)\n    if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n    this.expectContextual(tt._from);\n\n    return this.parseImportSourceAndAttributes(node);\n  }\n\n  parseImportSourceAndAttributes(\n    this: Parser,\n    node: Undone<N.ImportDeclaration>,\n  ): N.AnyImport {\n    node.specifiers ??= [];\n    node.source = this.parseImportSource();\n    this.maybeParseImportAttributes(node);\n    this.checkImportReflection(node);\n    this.checkJSONModuleImport(node);\n\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource(this: Parser): N.StringLiteral {\n    if (!this.match(tt.string)) this.unexpected();\n    return this.parseExprAtom() as N.StringLiteral;\n  }\n\n  parseImportSpecifierLocal<\n    T extends\n      | N.ImportSpecifier\n      | N.ImportDefaultSpecifier\n      | N.ImportNamespaceSpecifier,\n  >(\n    node: Undone<N.ImportDeclaration>,\n    specifier: Undone<T>,\n    type: T[\"type\"],\n  ): void {\n    specifier.local = this.parseIdentifier();\n    node.specifiers.push(this.finishImportSpecifier(specifier, type));\n  }\n\n  finishImportSpecifier<\n    T extends\n      | N.ImportSpecifier\n      | N.ImportDefaultSpecifier\n      | N.ImportNamespaceSpecifier,\n  >(\n    specifier: Undone<T>,\n    type: T[\"type\"],\n    bindingType: BindingTypes = BindingFlag.TYPE_LEXICAL,\n  ) {\n    this.checkLVal(specifier.local, {\n      in: { type },\n      binding: bindingType,\n    });\n    return this.finishNode(specifier, type);\n  }\n\n  /**\n   * parse assert entries\n   *\n   * @see {@link https://tc39.es/proposal-import-attributes/#prod-WithEntries WithEntries}\n   */\n  parseImportAttributes(): N.ImportAttribute[] {\n    this.expect(tt.braceL);\n\n    const attrs = [];\n    const attrNames = new Set();\n\n    do {\n      if (this.match(tt.braceR)) {\n        break;\n      }\n\n      const node = this.startNode<N.ImportAttribute>();\n\n      // parse AssertionKey : IdentifierName, StringLiteral\n      const keyName = this.state.value;\n      // check if we already have an entry for an attribute\n      // if a duplicate entry is found, throw an error\n      // for now this logic will come into play only when someone declares `type` twice\n      if (attrNames.has(keyName)) {\n        this.raise(Errors.ModuleAttributesWithDuplicateKeys, {\n          at: this.state.startLoc,\n          key: keyName,\n        });\n      }\n      attrNames.add(keyName);\n      if (this.match(tt.string)) {\n        node.key = this.parseStringLiteral(keyName);\n      } else {\n        node.key = this.parseIdentifier(true);\n      }\n      this.expect(tt.colon);\n\n      if (!this.match(tt.string)) {\n        throw this.raise(Errors.ModuleAttributeInvalidValue, {\n          at: this.state.startLoc,\n        });\n      }\n      node.value = this.parseStringLiteral(this.state.value);\n      attrs.push(this.finishNode(node, \"ImportAttribute\"));\n    } while (this.eat(tt.comma));\n\n    this.expect(tt.braceR);\n\n    return attrs;\n  }\n\n  /**\n   * parse module attributes\n   * @deprecated It will be removed in Babel 8\n   */\n  parseModuleAttributes() {\n    const attrs: N.ImportAttribute[] = [];\n    const attributes = new Set();\n    do {\n      const node = this.startNode<N.ImportAttribute>();\n      node.key = this.parseIdentifier(true);\n\n      if (node.key.name !== \"type\") {\n        this.raise(Errors.ModuleAttributeDifferentFromType, {\n          at: node.key,\n        });\n      }\n\n      if (attributes.has(node.key.name)) {\n        this.raise(Errors.ModuleAttributesWithDuplicateKeys, {\n          at: node.key,\n          key: node.key.name,\n        });\n      }\n      attributes.add(node.key.name);\n      this.expect(tt.colon);\n      if (!this.match(tt.string)) {\n        throw this.raise(Errors.ModuleAttributeInvalidValue, {\n          at: this.state.startLoc,\n        });\n      }\n      node.value = this.parseStringLiteral(this.state.value);\n      attrs.push(this.finishNode(node, \"ImportAttribute\"));\n    } while (this.eat(tt.comma));\n\n    return attrs;\n  }\n\n  maybeParseImportAttributes(\n    node: Undone<N.ImportDeclaration | N.ExportNamedDeclaration>,\n  ) {\n    let attributes: N.ImportAttribute[];\n    let useWith = false;\n\n    // https://tc39.es/proposal-import-attributes/#prod-WithClause\n    if (this.match(tt._with)) {\n      if (\n        this.hasPrecedingLineBreak() &&\n        this.lookaheadCharCode() === charCodes.leftParenthesis\n      ) {\n        // This will be parsed as a with statement, and we will throw a\n        // better error about it not being supported in strict mode.\n        return;\n      }\n\n      this.next(); // eat `with`\n\n      if (!process.env.BABEL_8_BREAKING) {\n        if (this.hasPlugin(\"moduleAttributes\")) {\n          attributes = this.parseModuleAttributes();\n        } else {\n          this.expectImportAttributesPlugin();\n          attributes = this.parseImportAttributes();\n        }\n      } else {\n        this.expectImportAttributesPlugin();\n        attributes = this.parseImportAttributes();\n      }\n      useWith = true;\n    } else if (this.isContextual(tt._assert) && !this.hasPrecedingLineBreak()) {\n      if (this.hasPlugin(\"importAttributes\")) {\n        if (\n          this.getPluginOption(\"importAttributes\", \"deprecatedAssertSyntax\") !==\n          true\n        ) {\n          this.raise(Errors.ImportAttributesUseAssert, {\n            at: this.state.startLoc,\n          });\n        }\n        this.addExtra(node, \"deprecatedAssertSyntax\", true);\n      } else {\n        this.expectOnePlugin([\"importAttributes\", \"importAssertions\"]);\n      }\n      this.next(); // eat `assert`\n      attributes = this.parseImportAttributes();\n    } else if (\n      this.hasPlugin(\"importAttributes\") ||\n      this.hasPlugin(\"importAssertions\")\n    ) {\n      attributes = [];\n    } else if (!process.env.BABEL_8_BREAKING) {\n      if (this.hasPlugin(\"moduleAttributes\")) {\n        attributes = [];\n      } else return;\n    } else return;\n\n    if (!useWith && this.hasPlugin(\"importAssertions\")) {\n      node.assertions = attributes;\n    } else {\n      node.attributes = attributes;\n    }\n  }\n\n  maybeParseDefaultImportSpecifier(\n    node: Undone<N.ImportDeclaration>,\n    maybeDefaultIdentifier: N.Identifier | null,\n  ): boolean {\n    // import defaultObj, { x, y as z } from '...'\n    if (maybeDefaultIdentifier) {\n      const specifier = this.startNodeAtNode<N.ImportDefaultSpecifier>(\n        maybeDefaultIdentifier,\n      );\n      specifier.local = maybeDefaultIdentifier;\n      node.specifiers.push(\n        this.finishImportSpecifier(specifier, \"ImportDefaultSpecifier\"),\n      );\n      return true;\n    } else if (\n      // We allow keywords, and parseImportSpecifierLocal will report a recoverable error\n      tokenIsKeywordOrIdentifier(this.state.type)\n    ) {\n      this.parseImportSpecifierLocal(\n        node,\n        this.startNode<N.ImportDefaultSpecifier>(),\n        \"ImportDefaultSpecifier\",\n      );\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseStarImportSpecifier(node: Undone<N.ImportDeclaration>): boolean {\n    if (this.match(tt.star)) {\n      const specifier = this.startNode<N.ImportNamespaceSpecifier>();\n      this.next();\n      this.expectContextual(tt._as);\n\n      this.parseImportSpecifierLocal(\n        node,\n        specifier,\n        \"ImportNamespaceSpecifier\",\n      );\n      return true;\n    }\n    return false;\n  }\n\n  parseNamedImportSpecifiers(node: Undone<N.ImportDeclaration>) {\n    let first = true;\n    this.expect(tt.braceL);\n    while (!this.eat(tt.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        // Detect an attempt to deep destructure\n        if (this.eat(tt.colon)) {\n          throw this.raise(Errors.DestructureNamedImport, {\n            at: this.state.startLoc,\n          });\n        }\n\n        this.expect(tt.comma);\n        if (this.eat(tt.braceR)) break;\n      }\n\n      const specifier = this.startNode<N.ImportSpecifier>();\n      const importedIsString = this.match(tt.string);\n      const isMaybeTypeOnly = this.isContextual(tt._type);\n      specifier.imported = this.parseModuleExportName();\n      const importSpecifier = this.parseImportSpecifier(\n        specifier,\n        importedIsString,\n        node.importKind === \"type\" || node.importKind === \"typeof\",\n        isMaybeTypeOnly,\n        undefined,\n      );\n      node.specifiers.push(importSpecifier);\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-ImportSpecifier\n  parseImportSpecifier(\n    specifier: Undone<N.ImportSpecifier>,\n    importedIsString: boolean,\n    /* eslint-disable @typescript-eslint/no-unused-vars -- used in TypeScript and Flow parser */\n    isInTypeOnlyImport: boolean,\n    isMaybeTypeOnly: boolean,\n    bindingType: BindingTypes | undefined,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n  ): N.ImportSpecifier {\n    if (this.eatContextual(tt._as)) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const { imported } = specifier;\n      if (importedIsString) {\n        throw this.raise(Errors.ImportBindingIsString, {\n          at: specifier,\n          importName: (imported as N.StringLiteral).value,\n        });\n      }\n      this.checkReservedWord(\n        (imported as N.Identifier).name,\n        specifier.loc.start,\n        true,\n        true,\n      );\n      if (!specifier.local) {\n        specifier.local = cloneIdentifier(imported);\n      }\n    }\n    return this.finishImportSpecifier(\n      specifier,\n      \"ImportSpecifier\",\n      bindingType,\n    );\n  }\n\n  // This is used in flow and typescript plugin\n  // Determine whether a parameter is a this param\n  isThisParam(\n    param: N.Pattern | N.Identifier | N.TSParameterProperty,\n  ): boolean {\n    return param.type === \"Identifier\" && param.name === \"this\";\n  }\n}\n","import type { Options } from \"../options.ts\";\nimport type * as N from \"../types.ts\";\nimport type { PluginList } from \"../plugin-utils.ts\";\nimport { getOptions } from \"../options.ts\";\nimport StatementParser from \"./statement.ts\";\nimport ScopeHandler from \"../util/scope.ts\";\n\nexport type PluginsMap = Map<\n  string,\n  {\n    [x: string]: any;\n  }\n>;\n\nexport default class Parser extends StatementParser {\n  // Forward-declaration so typescript plugin can override jsx plugin\n  // todo(flow->ts) - this probably can be removed\n  // abstract jsxParseOpeningElementAfterName(\n  //   node: N.JSXOpeningElement,\n  // ): N.JSXOpeningElement;\n\n  constructor(options: Options | undefined | null, input: string) {\n    options = getOptions(options);\n    super(options, input);\n\n    this.options = options;\n    this.initializeScopes();\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n\n  // This can be overwritten, for example, by the TypeScript plugin.\n  getScopeHandler(): {\n    new (...args: any): ScopeHandler;\n  } {\n    return ScopeHandler;\n  }\n\n  parse(): N.File {\n    this.enterInitialScopes();\n    const file = this.startNode() as N.File;\n    const program = this.startNode() as N.Program;\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n}\n\nfunction pluginsMap(plugins: PluginList): PluginsMap {\n  const pluginMap: PluginsMap = new Map();\n  for (const plugin of plugins) {\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n  return pluginMap;\n}\n","import type { Options } from \"./options.ts\";\nimport {\n  hasPlugin,\n  validatePlugins,\n  mixinPluginNames,\n  mixinPlugins,\n  type PluginList,\n} from \"./plugin-utils.ts\";\nimport type {\n  PluginConfig as ParserPlugin,\n  FlowPluginOptions,\n  RecordAndTuplePluginOptions,\n  PipelineOperatorPluginOptions,\n} from \"./typings.ts\";\nimport Parser from \"./parser/index.ts\";\n\nimport type { ExportedTokenType } from \"./tokenizer/types.ts\";\nimport {\n  getExportedToken,\n  tt as internalTokenTypes,\n  type InternalTokenTypes,\n} from \"./tokenizer/types.ts\";\n\nimport type { Expression, File } from \"./types.ts\";\n\nexport function parse(input: string, options?: Options): File {\n  if (options?.sourceType === \"unambiguous\") {\n    options = {\n      ...options,\n    };\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        // Top level await introduces code which can be both a valid script and\n        // a valid module, but which produces different ASTs:\n        //    await\n        //    0\n        // can be parsed either as an AwaitExpression, or as two ExpressionStatements.\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch {}\n      } else {\n        // This is both a valid module and a valid script, but\n        // we parse it as a script by default\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\n\nexport function parseExpression(input: string, options?: Options): Expression {\n  const parser = getParser(options, input);\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n  return parser.getExpression();\n}\n\nfunction generateExportedTokenTypes(\n  internalTokenTypes: InternalTokenTypes,\n): Record<string, ExportedTokenType> {\n  const tokenTypes: Record<string, ExportedTokenType> = {};\n  for (const typeName of Object.keys(\n    internalTokenTypes,\n  ) as (keyof InternalTokenTypes)[]) {\n    tokenTypes[typeName] = getExportedToken(internalTokenTypes[typeName]);\n  }\n  return tokenTypes;\n}\n\nexport const tokTypes = generateExportedTokenTypes(internalTokenTypes);\n\nfunction getParser(options: Options | undefined | null, input: string): Parser {\n  let cls = Parser;\n  if (options?.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n\n  return new cls(options, input);\n}\n\nconst parserClassCache: { [key: string]: { new (...args: any): Parser } } = {};\n\n/** Get a Parser class with plugins applied. */\nfunction getParserClass(pluginsFromOptions: PluginList): {\n  new (...args: any): Parser;\n} {\n  const pluginList = mixinPluginNames.filter(name =>\n    hasPlugin(pluginsFromOptions, name),\n  );\n\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n  if (!cls) {\n    cls = Parser;\n    for (const plugin of pluginList) {\n      // @ts-expect-error todo(flow->ts)\n      cls = mixinPlugins[plugin](cls);\n    }\n    parserClassCache[key] = cls;\n  }\n  return cls;\n}\n\nexport type {\n  FlowPluginOptions,\n  ParserPlugin,\n  PipelineOperatorPluginOptions,\n  RecordAndTuplePluginOptions,\n};\nexport type ParserOptions = Partial<Options>;\n","/*!\n  * vue-router v4.1.6\n  * (c) 2022 Eduardo San Martin Morote\n  * @license MIT\n  */\nimport { getCurrentInstance, inject, onUnmounted, onDeactivated, onActivated, computed, unref, watchEffect, defineComponent, reactive, h, provide, ref, watch, shallowRef, nextTick } from 'vue';\nimport { setupDevtoolsPlugin } from '@vue/devtools-api';\n\nconst isBrowser = typeof window !== 'undefined';\n\nfunction isESModule(obj) {\r\n    return obj.__esModule || obj[Symbol.toStringTag] === 'Module';\r\n}\r\nconst assign = Object.assign;\r\nfunction applyToParams(fn, params) {\r\n    const newParams = {};\r\n    for (const key in params) {\r\n        const value = params[key];\r\n        newParams[key] = isArray(value)\r\n            ? value.map(fn)\r\n            : fn(value);\r\n    }\r\n    return newParams;\r\n}\r\nconst noop = () => { };\r\n/**\r\n * Typesafe alternative to Array.isArray\r\n * https://github.com/microsoft/TypeScript/pull/48228\r\n */\r\nconst isArray = Array.isArray;\n\nfunction warn(msg) {\r\n    // avoid using ...args as it breaks in older Edge builds\r\n    const args = Array.from(arguments).slice(1);\r\n    console.warn.apply(console, ['[Vue Router warn]: ' + msg].concat(args));\r\n}\n\nconst TRAILING_SLASH_RE = /\\/$/;\r\nconst removeTrailingSlash = (path) => path.replace(TRAILING_SLASH_RE, '');\r\n/**\r\n * Transforms a URI into a normalized history location\r\n *\r\n * @param parseQuery\r\n * @param location - URI to normalize\r\n * @param currentLocation - current absolute location. Allows resolving relative\r\n * paths. Must start with `/`. Defaults to `/`\r\n * @returns a normalized history location\r\n */\r\nfunction parseURL(parseQuery, location, currentLocation = '/') {\r\n    let path, query = {}, searchString = '', hash = '';\r\n    // Could use URL and URLSearchParams but IE 11 doesn't support it\r\n    // TODO: move to new URL()\r\n    const hashPos = location.indexOf('#');\r\n    let searchPos = location.indexOf('?');\r\n    // the hash appears before the search, so it's not part of the search string\r\n    if (hashPos < searchPos && hashPos >= 0) {\r\n        searchPos = -1;\r\n    }\r\n    if (searchPos > -1) {\r\n        path = location.slice(0, searchPos);\r\n        searchString = location.slice(searchPos + 1, hashPos > -1 ? hashPos : location.length);\r\n        query = parseQuery(searchString);\r\n    }\r\n    if (hashPos > -1) {\r\n        path = path || location.slice(0, hashPos);\r\n        // keep the # character\r\n        hash = location.slice(hashPos, location.length);\r\n    }\r\n    // no search and no query\r\n    path = resolveRelativePath(path != null ? path : location, currentLocation);\r\n    // empty path means a relative query or hash `?foo=f`, `#thing`\r\n    return {\r\n        fullPath: path + (searchString && '?') + searchString + hash,\r\n        path,\r\n        query,\r\n        hash,\r\n    };\r\n}\r\n/**\r\n * Stringifies a URL object\r\n *\r\n * @param stringifyQuery\r\n * @param location\r\n */\r\nfunction stringifyURL(stringifyQuery, location) {\r\n    const query = location.query ? stringifyQuery(location.query) : '';\r\n    return location.path + (query && '?') + query + (location.hash || '');\r\n}\r\n/**\r\n * Strips off the base from the beginning of a location.pathname in a non-case-sensitive way.\r\n *\r\n * @param pathname - location.pathname\r\n * @param base - base to strip off\r\n */\r\nfunction stripBase(pathname, base) {\r\n    // no base or base is not found at the beginning\r\n    if (!base || !pathname.toLowerCase().startsWith(base.toLowerCase()))\r\n        return pathname;\r\n    return pathname.slice(base.length) || '/';\r\n}\r\n/**\r\n * Checks if two RouteLocation are equal. This means that both locations are\r\n * pointing towards the same {@link RouteRecord} and that all `params`, `query`\r\n * parameters and `hash` are the same\r\n *\r\n * @param a - first {@link RouteLocation}\r\n * @param b - second {@link RouteLocation}\r\n */\r\nfunction isSameRouteLocation(stringifyQuery, a, b) {\r\n    const aLastIndex = a.matched.length - 1;\r\n    const bLastIndex = b.matched.length - 1;\r\n    return (aLastIndex > -1 &&\r\n        aLastIndex === bLastIndex &&\r\n        isSameRouteRecord(a.matched[aLastIndex], b.matched[bLastIndex]) &&\r\n        isSameRouteLocationParams(a.params, b.params) &&\r\n        stringifyQuery(a.query) === stringifyQuery(b.query) &&\r\n        a.hash === b.hash);\r\n}\r\n/**\r\n * Check if two `RouteRecords` are equal. Takes into account aliases: they are\r\n * considered equal to the `RouteRecord` they are aliasing.\r\n *\r\n * @param a - first {@link RouteRecord}\r\n * @param b - second {@link RouteRecord}\r\n */\r\nfunction isSameRouteRecord(a, b) {\r\n    // since the original record has an undefined value for aliasOf\r\n    // but all aliases point to the original record, this will always compare\r\n    // the original record\r\n    return (a.aliasOf || a) === (b.aliasOf || b);\r\n}\r\nfunction isSameRouteLocationParams(a, b) {\r\n    if (Object.keys(a).length !== Object.keys(b).length)\r\n        return false;\r\n    for (const key in a) {\r\n        if (!isSameRouteLocationParamsValue(a[key], b[key]))\r\n            return false;\r\n    }\r\n    return true;\r\n}\r\nfunction isSameRouteLocationParamsValue(a, b) {\r\n    return isArray(a)\r\n        ? isEquivalentArray(a, b)\r\n        : isArray(b)\r\n            ? isEquivalentArray(b, a)\r\n            : a === b;\r\n}\r\n/**\r\n * Check if two arrays are the same or if an array with one single entry is the\r\n * same as another primitive value. Used to check query and parameters\r\n *\r\n * @param a - array of values\r\n * @param b - array of values or a single value\r\n */\r\nfunction isEquivalentArray(a, b) {\r\n    return isArray(b)\r\n        ? a.length === b.length && a.every((value, i) => value === b[i])\r\n        : a.length === 1 && a[0] === b;\r\n}\r\n/**\r\n * Resolves a relative path that starts with `.`.\r\n *\r\n * @param to - path location we are resolving\r\n * @param from - currentLocation.path, should start with `/`\r\n */\r\nfunction resolveRelativePath(to, from) {\r\n    if (to.startsWith('/'))\r\n        return to;\r\n    if ((process.env.NODE_ENV !== 'production') && !from.startsWith('/')) {\r\n        warn(`Cannot resolve a relative location without an absolute path. Trying to resolve \"${to}\" from \"${from}\". It should look like \"/${from}\".`);\r\n        return to;\r\n    }\r\n    if (!to)\r\n        return from;\r\n    const fromSegments = from.split('/');\r\n    const toSegments = to.split('/');\r\n    let position = fromSegments.length - 1;\r\n    let toPosition;\r\n    let segment;\r\n    for (toPosition = 0; toPosition < toSegments.length; toPosition++) {\r\n        segment = toSegments[toPosition];\r\n        // we stay on the same position\r\n        if (segment === '.')\r\n            continue;\r\n        // go up in the from array\r\n        if (segment === '..') {\r\n            // we can't go below zero, but we still need to increment toPosition\r\n            if (position > 1)\r\n                position--;\r\n            // continue\r\n        }\r\n        // we reached a non-relative path, we stop here\r\n        else\r\n            break;\r\n    }\r\n    return (fromSegments.slice(0, position).join('/') +\r\n        '/' +\r\n        toSegments\r\n            // ensure we use at least the last element in the toSegments\r\n            .slice(toPosition - (toPosition === toSegments.length ? 1 : 0))\r\n            .join('/'));\r\n}\n\nvar NavigationType;\r\n(function (NavigationType) {\r\n    NavigationType[\"pop\"] = \"pop\";\r\n    NavigationType[\"push\"] = \"push\";\r\n})(NavigationType || (NavigationType = {}));\r\nvar NavigationDirection;\r\n(function (NavigationDirection) {\r\n    NavigationDirection[\"back\"] = \"back\";\r\n    NavigationDirection[\"forward\"] = \"forward\";\r\n    NavigationDirection[\"unknown\"] = \"\";\r\n})(NavigationDirection || (NavigationDirection = {}));\r\n/**\r\n * Starting location for Histories\r\n */\r\nconst START = '';\r\n// Generic utils\r\n/**\r\n * Normalizes a base by removing any trailing slash and reading the base tag if\r\n * present.\r\n *\r\n * @param base - base to normalize\r\n */\r\nfunction normalizeBase(base) {\r\n    if (!base) {\r\n        if (isBrowser) {\r\n            // respect <base> tag\r\n            const baseEl = document.querySelector('base');\r\n            base = (baseEl && baseEl.getAttribute('href')) || '/';\r\n            // strip full URL origin\r\n            base = base.replace(/^\\w+:\\/\\/[^\\/]+/, '');\r\n        }\r\n        else {\r\n            base = '/';\r\n        }\r\n    }\r\n    // ensure leading slash when it was removed by the regex above avoid leading\r\n    // slash with hash because the file could be read from the disk like file://\r\n    // and the leading slash would cause problems\r\n    if (base[0] !== '/' && base[0] !== '#')\r\n        base = '/' + base;\r\n    // remove the trailing slash so all other method can just do `base + fullPath`\r\n    // to build an href\r\n    return removeTrailingSlash(base);\r\n}\r\n// remove any character before the hash\r\nconst BEFORE_HASH_RE = /^[^#]+#/;\r\nfunction createHref(base, location) {\r\n    return base.replace(BEFORE_HASH_RE, '#') + location;\r\n}\n\nfunction getElementPosition(el, offset) {\r\n    const docRect = document.documentElement.getBoundingClientRect();\r\n    const elRect = el.getBoundingClientRect();\r\n    return {\r\n        behavior: offset.behavior,\r\n        left: elRect.left - docRect.left - (offset.left || 0),\r\n        top: elRect.top - docRect.top - (offset.top || 0),\r\n    };\r\n}\r\nconst computeScrollPosition = () => ({\r\n    left: window.pageXOffset,\r\n    top: window.pageYOffset,\r\n});\r\nfunction scrollToPosition(position) {\r\n    let scrollToOptions;\r\n    if ('el' in position) {\r\n        const positionEl = position.el;\r\n        const isIdSelector = typeof positionEl === 'string' && positionEl.startsWith('#');\r\n        /**\r\n         * `id`s can accept pretty much any characters, including CSS combinators\r\n         * like `>` or `~`. It's still possible to retrieve elements using\r\n         * `document.getElementById('~')` but it needs to be escaped when using\r\n         * `document.querySelector('#\\\\~')` for it to be valid. The only\r\n         * requirements for `id`s are them to be unique on the page and to not be\r\n         * empty (`id=\"\"`). Because of that, when passing an id selector, it should\r\n         * be properly escaped for it to work with `querySelector`. We could check\r\n         * for the id selector to be simple (no CSS combinators `+ >~`) but that\r\n         * would make things inconsistent since they are valid characters for an\r\n         * `id` but would need to be escaped when using `querySelector`, breaking\r\n         * their usage and ending up in no selector returned. Selectors need to be\r\n         * escaped:\r\n         *\r\n         * - `#1-thing` becomes `#\\31 -thing`\r\n         * - `#with~symbols` becomes `#with\\\\~symbols`\r\n         *\r\n         * - More information about  the topic can be found at\r\n         *   https://mathiasbynens.be/notes/html5-id-class.\r\n         * - Practical example: https://mathiasbynens.be/demo/html5-id\r\n         */\r\n        if ((process.env.NODE_ENV !== 'production') && typeof position.el === 'string') {\r\n            if (!isIdSelector || !document.getElementById(position.el.slice(1))) {\r\n                try {\r\n                    const foundEl = document.querySelector(position.el);\r\n                    if (isIdSelector && foundEl) {\r\n                        warn(`The selector \"${position.el}\" should be passed as \"el: document.querySelector('${position.el}')\" because it starts with \"#\".`);\r\n                        // return to avoid other warnings\r\n                        return;\r\n                    }\r\n                }\r\n                catch (err) {\r\n                    warn(`The selector \"${position.el}\" is invalid. If you are using an id selector, make sure to escape it. You can find more information about escaping characters in selectors at https://mathiasbynens.be/notes/css-escapes or use CSS.escape (https://developer.mozilla.org/en-US/docs/Web/API/CSS/escape).`);\r\n                    // return to avoid other warnings\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        const el = typeof positionEl === 'string'\r\n            ? isIdSelector\r\n                ? document.getElementById(positionEl.slice(1))\r\n                : document.querySelector(positionEl)\r\n            : positionEl;\r\n        if (!el) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Couldn't find element using selector \"${position.el}\" returned by scrollBehavior.`);\r\n            return;\r\n        }\r\n        scrollToOptions = getElementPosition(el, position);\r\n    }\r\n    else {\r\n        scrollToOptions = position;\r\n    }\r\n    if ('scrollBehavior' in document.documentElement.style)\r\n        window.scrollTo(scrollToOptions);\r\n    else {\r\n        window.scrollTo(scrollToOptions.left != null ? scrollToOptions.left : window.pageXOffset, scrollToOptions.top != null ? scrollToOptions.top : window.pageYOffset);\r\n    }\r\n}\r\nfunction getScrollKey(path, delta) {\r\n    const position = history.state ? history.state.position - delta : -1;\r\n    return position + path;\r\n}\r\nconst scrollPositions = new Map();\r\nfunction saveScrollPosition(key, scrollPosition) {\r\n    scrollPositions.set(key, scrollPosition);\r\n}\r\nfunction getSavedScrollPosition(key) {\r\n    const scroll = scrollPositions.get(key);\r\n    // consume it so it's not used again\r\n    scrollPositions.delete(key);\r\n    return scroll;\r\n}\r\n// TODO: RFC about how to save scroll position\r\n/**\r\n * ScrollBehavior instance used by the router to compute and restore the scroll\r\n * position when navigating.\r\n */\r\n// export interface ScrollHandler<ScrollPositionEntry extends HistoryStateValue, ScrollPosition extends ScrollPositionEntry> {\r\n//   // returns a scroll position that can be saved in history\r\n//   compute(): ScrollPositionEntry\r\n//   // can take an extended ScrollPositionEntry\r\n//   scroll(position: ScrollPosition): void\r\n// }\r\n// export const scrollHandler: ScrollHandler<ScrollPosition> = {\r\n//   compute: computeScroll,\r\n//   scroll: scrollToPosition,\r\n// }\n\nlet createBaseLocation = () => location.protocol + '//' + location.host;\r\n/**\r\n * Creates a normalized history location from a window.location object\r\n * @param location -\r\n */\r\nfunction createCurrentLocation(base, location) {\r\n    const { pathname, search, hash } = location;\r\n    // allows hash bases like #, /#, #/, #!, #!/, /#!/, or even /folder#end\r\n    const hashPos = base.indexOf('#');\r\n    if (hashPos > -1) {\r\n        let slicePos = hash.includes(base.slice(hashPos))\r\n            ? base.slice(hashPos).length\r\n            : 1;\r\n        let pathFromHash = hash.slice(slicePos);\r\n        // prepend the starting slash to hash so the url starts with /#\r\n        if (pathFromHash[0] !== '/')\r\n            pathFromHash = '/' + pathFromHash;\r\n        return stripBase(pathFromHash, '');\r\n    }\r\n    const path = stripBase(pathname, base);\r\n    return path + search + hash;\r\n}\r\nfunction useHistoryListeners(base, historyState, currentLocation, replace) {\r\n    let listeners = [];\r\n    let teardowns = [];\r\n    // TODO: should it be a stack? a Dict. Check if the popstate listener\r\n    // can trigger twice\r\n    let pauseState = null;\r\n    const popStateHandler = ({ state, }) => {\r\n        const to = createCurrentLocation(base, location);\r\n        const from = currentLocation.value;\r\n        const fromState = historyState.value;\r\n        let delta = 0;\r\n        if (state) {\r\n            currentLocation.value = to;\r\n            historyState.value = state;\r\n            // ignore the popstate and reset the pauseState\r\n            if (pauseState && pauseState === from) {\r\n                pauseState = null;\r\n                return;\r\n            }\r\n            delta = fromState ? state.position - fromState.position : 0;\r\n        }\r\n        else {\r\n            replace(to);\r\n        }\r\n        // console.log({ deltaFromCurrent })\r\n        // Here we could also revert the navigation by calling history.go(-delta)\r\n        // this listener will have to be adapted to not trigger again and to wait for the url\r\n        // to be updated before triggering the listeners. Some kind of validation function would also\r\n        // need to be passed to the listeners so the navigation can be accepted\r\n        // call all listeners\r\n        listeners.forEach(listener => {\r\n            listener(currentLocation.value, from, {\r\n                delta,\r\n                type: NavigationType.pop,\r\n                direction: delta\r\n                    ? delta > 0\r\n                        ? NavigationDirection.forward\r\n                        : NavigationDirection.back\r\n                    : NavigationDirection.unknown,\r\n            });\r\n        });\r\n    };\r\n    function pauseListeners() {\r\n        pauseState = currentLocation.value;\r\n    }\r\n    function listen(callback) {\r\n        // set up the listener and prepare teardown callbacks\r\n        listeners.push(callback);\r\n        const teardown = () => {\r\n            const index = listeners.indexOf(callback);\r\n            if (index > -1)\r\n                listeners.splice(index, 1);\r\n        };\r\n        teardowns.push(teardown);\r\n        return teardown;\r\n    }\r\n    function beforeUnloadListener() {\r\n        const { history } = window;\r\n        if (!history.state)\r\n            return;\r\n        history.replaceState(assign({}, history.state, { scroll: computeScrollPosition() }), '');\r\n    }\r\n    function destroy() {\r\n        for (const teardown of teardowns)\r\n            teardown();\r\n        teardowns = [];\r\n        window.removeEventListener('popstate', popStateHandler);\r\n        window.removeEventListener('beforeunload', beforeUnloadListener);\r\n    }\r\n    // set up the listeners and prepare teardown callbacks\r\n    window.addEventListener('popstate', popStateHandler);\r\n    window.addEventListener('beforeunload', beforeUnloadListener);\r\n    return {\r\n        pauseListeners,\r\n        listen,\r\n        destroy,\r\n    };\r\n}\r\n/**\r\n * Creates a state object\r\n */\r\nfunction buildState(back, current, forward, replaced = false, computeScroll = false) {\r\n    return {\r\n        back,\r\n        current,\r\n        forward,\r\n        replaced,\r\n        position: window.history.length,\r\n        scroll: computeScroll ? computeScrollPosition() : null,\r\n    };\r\n}\r\nfunction useHistoryStateNavigation(base) {\r\n    const { history, location } = window;\r\n    // private variables\r\n    const currentLocation = {\r\n        value: createCurrentLocation(base, location),\r\n    };\r\n    const historyState = { value: history.state };\r\n    // build current history entry as this is a fresh navigation\r\n    if (!historyState.value) {\r\n        changeLocation(currentLocation.value, {\r\n            back: null,\r\n            current: currentLocation.value,\r\n            forward: null,\r\n            // the length is off by one, we need to decrease it\r\n            position: history.length - 1,\r\n            replaced: true,\r\n            // don't add a scroll as the user may have an anchor, and we want\r\n            // scrollBehavior to be triggered without a saved position\r\n            scroll: null,\r\n        }, true);\r\n    }\r\n    function changeLocation(to, state, replace) {\r\n        /**\r\n         * if a base tag is provided, and we are on a normal domain, we have to\r\n         * respect the provided `base` attribute because pushState() will use it and\r\n         * potentially erase anything before the `#` like at\r\n         * https://github.com/vuejs/router/issues/685 where a base of\r\n         * `/folder/#` but a base of `/` would erase the `/folder/` section. If\r\n         * there is no host, the `<base>` tag makes no sense and if there isn't a\r\n         * base tag we can just use everything after the `#`.\r\n         */\r\n        const hashIndex = base.indexOf('#');\r\n        const url = hashIndex > -1\r\n            ? (location.host && document.querySelector('base')\r\n                ? base\r\n                : base.slice(hashIndex)) + to\r\n            : createBaseLocation() + base + to;\r\n        try {\r\n            // BROWSER QUIRK\r\n            // NOTE: Safari throws a SecurityError when calling this function 100 times in 30 seconds\r\n            history[replace ? 'replaceState' : 'pushState'](state, '', url);\r\n            historyState.value = state;\r\n        }\r\n        catch (err) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                warn('Error with push/replace State', err);\r\n            }\r\n            else {\r\n                console.error(err);\r\n            }\r\n            // Force the navigation, this also resets the call count\r\n            location[replace ? 'replace' : 'assign'](url);\r\n        }\r\n    }\r\n    function replace(to, data) {\r\n        const state = assign({}, history.state, buildState(historyState.value.back, \r\n        // keep back and forward entries but override current position\r\n        to, historyState.value.forward, true), data, { position: historyState.value.position });\r\n        changeLocation(to, state, true);\r\n        currentLocation.value = to;\r\n    }\r\n    function push(to, data) {\r\n        // Add to current entry the information of where we are going\r\n        // as well as saving the current position\r\n        const currentState = assign({}, \r\n        // use current history state to gracefully handle a wrong call to\r\n        // history.replaceState\r\n        // https://github.com/vuejs/router/issues/366\r\n        historyState.value, history.state, {\r\n            forward: to,\r\n            scroll: computeScrollPosition(),\r\n        });\r\n        if ((process.env.NODE_ENV !== 'production') && !history.state) {\r\n            warn(`history.state seems to have been manually replaced without preserving the necessary values. Make sure to preserve existing history state if you are manually calling history.replaceState:\\n\\n` +\r\n                `history.replaceState(history.state, '', url)\\n\\n` +\r\n                `You can find more information at https://next.router.vuejs.org/guide/migration/#usage-of-history-state.`);\r\n        }\r\n        changeLocation(currentState.current, currentState, true);\r\n        const state = assign({}, buildState(currentLocation.value, to, null), { position: currentState.position + 1 }, data);\r\n        changeLocation(to, state, false);\r\n        currentLocation.value = to;\r\n    }\r\n    return {\r\n        location: currentLocation,\r\n        state: historyState,\r\n        push,\r\n        replace,\r\n    };\r\n}\r\n/**\r\n * Creates an HTML5 history. Most common history for single page applications.\r\n *\r\n * @param base -\r\n */\r\nfunction createWebHistory(base) {\r\n    base = normalizeBase(base);\r\n    const historyNavigation = useHistoryStateNavigation(base);\r\n    const historyListeners = useHistoryListeners(base, historyNavigation.state, historyNavigation.location, historyNavigation.replace);\r\n    function go(delta, triggerListeners = true) {\r\n        if (!triggerListeners)\r\n            historyListeners.pauseListeners();\r\n        history.go(delta);\r\n    }\r\n    const routerHistory = assign({\r\n        // it's overridden right after\r\n        location: '',\r\n        base,\r\n        go,\r\n        createHref: createHref.bind(null, base),\r\n    }, historyNavigation, historyListeners);\r\n    Object.defineProperty(routerHistory, 'location', {\r\n        enumerable: true,\r\n        get: () => historyNavigation.location.value,\r\n    });\r\n    Object.defineProperty(routerHistory, 'state', {\r\n        enumerable: true,\r\n        get: () => historyNavigation.state.value,\r\n    });\r\n    return routerHistory;\r\n}\n\n/**\r\n * Creates an in-memory based history. The main purpose of this history is to handle SSR. It starts in a special location that is nowhere.\r\n * It's up to the user to replace that location with the starter location by either calling `router.push` or `router.replace`.\r\n *\r\n * @param base - Base applied to all urls, defaults to '/'\r\n * @returns a history object that can be passed to the router constructor\r\n */\r\nfunction createMemoryHistory(base = '') {\r\n    let listeners = [];\r\n    let queue = [START];\r\n    let position = 0;\r\n    base = normalizeBase(base);\r\n    function setLocation(location) {\r\n        position++;\r\n        if (position === queue.length) {\r\n            // we are at the end, we can simply append a new entry\r\n            queue.push(location);\r\n        }\r\n        else {\r\n            // we are in the middle, we remove everything from here in the queue\r\n            queue.splice(position);\r\n            queue.push(location);\r\n        }\r\n    }\r\n    function triggerListeners(to, from, { direction, delta }) {\r\n        const info = {\r\n            direction,\r\n            delta,\r\n            type: NavigationType.pop,\r\n        };\r\n        for (const callback of listeners) {\r\n            callback(to, from, info);\r\n        }\r\n    }\r\n    const routerHistory = {\r\n        // rewritten by Object.defineProperty\r\n        location: START,\r\n        // TODO: should be kept in queue\r\n        state: {},\r\n        base,\r\n        createHref: createHref.bind(null, base),\r\n        replace(to) {\r\n            // remove current entry and decrement position\r\n            queue.splice(position--, 1);\r\n            setLocation(to);\r\n        },\r\n        push(to, data) {\r\n            setLocation(to);\r\n        },\r\n        listen(callback) {\r\n            listeners.push(callback);\r\n            return () => {\r\n                const index = listeners.indexOf(callback);\r\n                if (index > -1)\r\n                    listeners.splice(index, 1);\r\n            };\r\n        },\r\n        destroy() {\r\n            listeners = [];\r\n            queue = [START];\r\n            position = 0;\r\n        },\r\n        go(delta, shouldTrigger = true) {\r\n            const from = this.location;\r\n            const direction = \r\n            // we are considering delta === 0 going forward, but in abstract mode\r\n            // using 0 for the delta doesn't make sense like it does in html5 where\r\n            // it reloads the page\r\n            delta < 0 ? NavigationDirection.back : NavigationDirection.forward;\r\n            position = Math.max(0, Math.min(position + delta, queue.length - 1));\r\n            if (shouldTrigger) {\r\n                triggerListeners(this.location, from, {\r\n                    direction,\r\n                    delta,\r\n                });\r\n            }\r\n        },\r\n    };\r\n    Object.defineProperty(routerHistory, 'location', {\r\n        enumerable: true,\r\n        get: () => queue[position],\r\n    });\r\n    return routerHistory;\r\n}\n\n/**\r\n * Creates a hash history. Useful for web applications with no host (e.g. `file://`) or when configuring a server to\r\n * handle any URL is not possible.\r\n *\r\n * @param base - optional base to provide. Defaults to `location.pathname + location.search` If there is a `<base>` tag\r\n * in the `head`, its value will be ignored in favor of this parameter **but note it affects all the history.pushState()\r\n * calls**, meaning that if you use a `<base>` tag, it's `href` value **has to match this parameter** (ignoring anything\r\n * after the `#`).\r\n *\r\n * @example\r\n * ```js\r\n * // at https://example.com/folder\r\n * createWebHashHistory() // gives a url of `https://example.com/folder#`\r\n * createWebHashHistory('/folder/') // gives a url of `https://example.com/folder/#`\r\n * // if the `#` is provided in the base, it won't be added by `createWebHashHistory`\r\n * createWebHashHistory('/folder/#/app/') // gives a url of `https://example.com/folder/#/app/`\r\n * // you should avoid doing this because it changes the original url and breaks copying urls\r\n * createWebHashHistory('/other-folder/') // gives a url of `https://example.com/other-folder/#`\r\n *\r\n * // at file:///usr/etc/folder/index.html\r\n * // for locations with no `host`, the base is ignored\r\n * createWebHashHistory('/iAmIgnored') // gives a url of `file:///usr/etc/folder/index.html#`\r\n * ```\r\n */\r\nfunction createWebHashHistory(base) {\r\n    // Make sure this implementation is fine in terms of encoding, specially for IE11\r\n    // for `file://`, directly use the pathname and ignore the base\r\n    // location.pathname contains an initial `/` even at the root: `https://example.com`\r\n    base = location.host ? base || location.pathname + location.search : '';\r\n    // allow the user to provide a `#` in the middle: `/base/#/app`\r\n    if (!base.includes('#'))\r\n        base += '#';\r\n    if ((process.env.NODE_ENV !== 'production') && !base.endsWith('#/') && !base.endsWith('#')) {\r\n        warn(`A hash base must end with a \"#\":\\n\"${base}\" should be \"${base.replace(/#.*$/, '#')}\".`);\r\n    }\r\n    return createWebHistory(base);\r\n}\n\nfunction isRouteLocation(route) {\r\n    return typeof route === 'string' || (route && typeof route === 'object');\r\n}\r\nfunction isRouteName(name) {\r\n    return typeof name === 'string' || typeof name === 'symbol';\r\n}\n\n/**\r\n * Initial route location where the router is. Can be used in navigation guards\r\n * to differentiate the initial navigation.\r\n *\r\n * @example\r\n * ```js\r\n * import { START_LOCATION } from 'vue-router'\r\n *\r\n * router.beforeEach((to, from) => {\r\n *   if (from === START_LOCATION) {\r\n *     // initial navigation\r\n *   }\r\n * })\r\n * ```\r\n */\r\nconst START_LOCATION_NORMALIZED = {\r\n    path: '/',\r\n    name: undefined,\r\n    params: {},\r\n    query: {},\r\n    hash: '',\r\n    fullPath: '/',\r\n    matched: [],\r\n    meta: {},\r\n    redirectedFrom: undefined,\r\n};\n\nconst NavigationFailureSymbol = Symbol((process.env.NODE_ENV !== 'production') ? 'navigation failure' : '');\r\n/**\r\n * Enumeration with all possible types for navigation failures. Can be passed to\r\n * {@link isNavigationFailure} to check for specific failures.\r\n */\r\nvar NavigationFailureType;\r\n(function (NavigationFailureType) {\r\n    /**\r\n     * An aborted navigation is a navigation that failed because a navigation\r\n     * guard returned `false` or called `next(false)`\r\n     */\r\n    NavigationFailureType[NavigationFailureType[\"aborted\"] = 4] = \"aborted\";\r\n    /**\r\n     * A cancelled navigation is a navigation that failed because a more recent\r\n     * navigation finished started (not necessarily finished).\r\n     */\r\n    NavigationFailureType[NavigationFailureType[\"cancelled\"] = 8] = \"cancelled\";\r\n    /**\r\n     * A duplicated navigation is a navigation that failed because it was\r\n     * initiated while already being at the exact same location.\r\n     */\r\n    NavigationFailureType[NavigationFailureType[\"duplicated\"] = 16] = \"duplicated\";\r\n})(NavigationFailureType || (NavigationFailureType = {}));\r\n// DEV only debug messages\r\nconst ErrorTypeMessages = {\r\n    [1 /* ErrorTypes.MATCHER_NOT_FOUND */]({ location, currentLocation }) {\r\n        return `No match for\\n ${JSON.stringify(location)}${currentLocation\r\n            ? '\\nwhile being at\\n' + JSON.stringify(currentLocation)\r\n            : ''}`;\r\n    },\r\n    [2 /* ErrorTypes.NAVIGATION_GUARD_REDIRECT */]({ from, to, }) {\r\n        return `Redirected from \"${from.fullPath}\" to \"${stringifyRoute(to)}\" via a navigation guard.`;\r\n    },\r\n    [4 /* ErrorTypes.NAVIGATION_ABORTED */]({ from, to }) {\r\n        return `Navigation aborted from \"${from.fullPath}\" to \"${to.fullPath}\" via a navigation guard.`;\r\n    },\r\n    [8 /* ErrorTypes.NAVIGATION_CANCELLED */]({ from, to }) {\r\n        return `Navigation cancelled from \"${from.fullPath}\" to \"${to.fullPath}\" with a new navigation.`;\r\n    },\r\n    [16 /* ErrorTypes.NAVIGATION_DUPLICATED */]({ from, to }) {\r\n        return `Avoided redundant navigation to current location: \"${from.fullPath}\".`;\r\n    },\r\n};\r\nfunction createRouterError(type, params) {\r\n    // keep full error messages in cjs versions\r\n    if ((process.env.NODE_ENV !== 'production') || !true) {\r\n        return assign(new Error(ErrorTypeMessages[type](params)), {\r\n            type,\r\n            [NavigationFailureSymbol]: true,\r\n        }, params);\r\n    }\r\n    else {\r\n        return assign(new Error(), {\r\n            type,\r\n            [NavigationFailureSymbol]: true,\r\n        }, params);\r\n    }\r\n}\r\nfunction isNavigationFailure(error, type) {\r\n    return (error instanceof Error &&\r\n        NavigationFailureSymbol in error &&\r\n        (type == null || !!(error.type & type)));\r\n}\r\nconst propertiesToLog = ['params', 'query', 'hash'];\r\nfunction stringifyRoute(to) {\r\n    if (typeof to === 'string')\r\n        return to;\r\n    if ('path' in to)\r\n        return to.path;\r\n    const location = {};\r\n    for (const key of propertiesToLog) {\r\n        if (key in to)\r\n            location[key] = to[key];\r\n    }\r\n    return JSON.stringify(location, null, 2);\r\n}\n\n// default pattern for a param: non-greedy everything but /\r\nconst BASE_PARAM_PATTERN = '[^/]+?';\r\nconst BASE_PATH_PARSER_OPTIONS = {\r\n    sensitive: false,\r\n    strict: false,\r\n    start: true,\r\n    end: true,\r\n};\r\n// Special Regex characters that must be escaped in static tokens\r\nconst REGEX_CHARS_RE = /[.+*?^${}()[\\]/\\\\]/g;\r\n/**\r\n * Creates a path parser from an array of Segments (a segment is an array of Tokens)\r\n *\r\n * @param segments - array of segments returned by tokenizePath\r\n * @param extraOptions - optional options for the regexp\r\n * @returns a PathParser\r\n */\r\nfunction tokensToParser(segments, extraOptions) {\r\n    const options = assign({}, BASE_PATH_PARSER_OPTIONS, extraOptions);\r\n    // the amount of scores is the same as the length of segments except for the root segment \"/\"\r\n    const score = [];\r\n    // the regexp as a string\r\n    let pattern = options.start ? '^' : '';\r\n    // extracted keys\r\n    const keys = [];\r\n    for (const segment of segments) {\r\n        // the root segment needs special treatment\r\n        const segmentScores = segment.length ? [] : [90 /* PathScore.Root */];\r\n        // allow trailing slash\r\n        if (options.strict && !segment.length)\r\n            pattern += '/';\r\n        for (let tokenIndex = 0; tokenIndex < segment.length; tokenIndex++) {\r\n            const token = segment[tokenIndex];\r\n            // resets the score if we are inside a sub-segment /:a-other-:b\r\n            let subSegmentScore = 40 /* PathScore.Segment */ +\r\n                (options.sensitive ? 0.25 /* PathScore.BonusCaseSensitive */ : 0);\r\n            if (token.type === 0 /* TokenType.Static */) {\r\n                // prepend the slash if we are starting a new segment\r\n                if (!tokenIndex)\r\n                    pattern += '/';\r\n                pattern += token.value.replace(REGEX_CHARS_RE, '\\\\$&');\r\n                subSegmentScore += 40 /* PathScore.Static */;\r\n            }\r\n            else if (token.type === 1 /* TokenType.Param */) {\r\n                const { value, repeatable, optional, regexp } = token;\r\n                keys.push({\r\n                    name: value,\r\n                    repeatable,\r\n                    optional,\r\n                });\r\n                const re = regexp ? regexp : BASE_PARAM_PATTERN;\r\n                // the user provided a custom regexp /:id(\\\\d+)\r\n                if (re !== BASE_PARAM_PATTERN) {\r\n                    subSegmentScore += 10 /* PathScore.BonusCustomRegExp */;\r\n                    // make sure the regexp is valid before using it\r\n                    try {\r\n                        new RegExp(`(${re})`);\r\n                    }\r\n                    catch (err) {\r\n                        throw new Error(`Invalid custom RegExp for param \"${value}\" (${re}): ` +\r\n                            err.message);\r\n                    }\r\n                }\r\n                // when we repeat we must take care of the repeating leading slash\r\n                let subPattern = repeatable ? `((?:${re})(?:/(?:${re}))*)` : `(${re})`;\r\n                // prepend the slash if we are starting a new segment\r\n                if (!tokenIndex)\r\n                    subPattern =\r\n                        // avoid an optional / if there are more segments e.g. /:p?-static\r\n                        // or /:p?-:p2\r\n                        optional && segment.length < 2\r\n                            ? `(?:/${subPattern})`\r\n                            : '/' + subPattern;\r\n                if (optional)\r\n                    subPattern += '?';\r\n                pattern += subPattern;\r\n                subSegmentScore += 20 /* PathScore.Dynamic */;\r\n                if (optional)\r\n                    subSegmentScore += -8 /* PathScore.BonusOptional */;\r\n                if (repeatable)\r\n                    subSegmentScore += -20 /* PathScore.BonusRepeatable */;\r\n                if (re === '.*')\r\n                    subSegmentScore += -50 /* PathScore.BonusWildcard */;\r\n            }\r\n            segmentScores.push(subSegmentScore);\r\n        }\r\n        // an empty array like /home/ -> [[{home}], []]\r\n        // if (!segment.length) pattern += '/'\r\n        score.push(segmentScores);\r\n    }\r\n    // only apply the strict bonus to the last score\r\n    if (options.strict && options.end) {\r\n        const i = score.length - 1;\r\n        score[i][score[i].length - 1] += 0.7000000000000001 /* PathScore.BonusStrict */;\r\n    }\r\n    // TODO: dev only warn double trailing slash\r\n    if (!options.strict)\r\n        pattern += '/?';\r\n    if (options.end)\r\n        pattern += '$';\r\n    // allow paths like /dynamic to only match dynamic or dynamic/... but not dynamic_something_else\r\n    else if (options.strict)\r\n        pattern += '(?:/|$)';\r\n    const re = new RegExp(pattern, options.sensitive ? '' : 'i');\r\n    function parse(path) {\r\n        const match = path.match(re);\r\n        const params = {};\r\n        if (!match)\r\n            return null;\r\n        for (let i = 1; i < match.length; i++) {\r\n            const value = match[i] || '';\r\n            const key = keys[i - 1];\r\n            params[key.name] = value && key.repeatable ? value.split('/') : value;\r\n        }\r\n        return params;\r\n    }\r\n    function stringify(params) {\r\n        let path = '';\r\n        // for optional parameters to allow to be empty\r\n        let avoidDuplicatedSlash = false;\r\n        for (const segment of segments) {\r\n            if (!avoidDuplicatedSlash || !path.endsWith('/'))\r\n                path += '/';\r\n            avoidDuplicatedSlash = false;\r\n            for (const token of segment) {\r\n                if (token.type === 0 /* TokenType.Static */) {\r\n                    path += token.value;\r\n                }\r\n                else if (token.type === 1 /* TokenType.Param */) {\r\n                    const { value, repeatable, optional } = token;\r\n                    const param = value in params ? params[value] : '';\r\n                    if (isArray(param) && !repeatable) {\r\n                        throw new Error(`Provided param \"${value}\" is an array but it is not repeatable (* or + modifiers)`);\r\n                    }\r\n                    const text = isArray(param)\r\n                        ? param.join('/')\r\n                        : param;\r\n                    if (!text) {\r\n                        if (optional) {\r\n                            // if we have more than one optional param like /:a?-static we don't need to care about the optional param\r\n                            if (segment.length < 2) {\r\n                                // remove the last slash as we could be at the end\r\n                                if (path.endsWith('/'))\r\n                                    path = path.slice(0, -1);\r\n                                // do not append a slash on the next iteration\r\n                                else\r\n                                    avoidDuplicatedSlash = true;\r\n                            }\r\n                        }\r\n                        else\r\n                            throw new Error(`Missing required param \"${value}\"`);\r\n                    }\r\n                    path += text;\r\n                }\r\n            }\r\n        }\r\n        // avoid empty path when we have multiple optional params\r\n        return path || '/';\r\n    }\r\n    return {\r\n        re,\r\n        score,\r\n        keys,\r\n        parse,\r\n        stringify,\r\n    };\r\n}\r\n/**\r\n * Compares an array of numbers as used in PathParser.score and returns a\r\n * number. This function can be used to `sort` an array\r\n *\r\n * @param a - first array of numbers\r\n * @param b - second array of numbers\r\n * @returns 0 if both are equal, < 0 if a should be sorted first, > 0 if b\r\n * should be sorted first\r\n */\r\nfunction compareScoreArray(a, b) {\r\n    let i = 0;\r\n    while (i < a.length && i < b.length) {\r\n        const diff = b[i] - a[i];\r\n        // only keep going if diff === 0\r\n        if (diff)\r\n            return diff;\r\n        i++;\r\n    }\r\n    // if the last subsegment was Static, the shorter segments should be sorted first\r\n    // otherwise sort the longest segment first\r\n    if (a.length < b.length) {\r\n        return a.length === 1 && a[0] === 40 /* PathScore.Static */ + 40 /* PathScore.Segment */\r\n            ? -1\r\n            : 1;\r\n    }\r\n    else if (a.length > b.length) {\r\n        return b.length === 1 && b[0] === 40 /* PathScore.Static */ + 40 /* PathScore.Segment */\r\n            ? 1\r\n            : -1;\r\n    }\r\n    return 0;\r\n}\r\n/**\r\n * Compare function that can be used with `sort` to sort an array of PathParser\r\n *\r\n * @param a - first PathParser\r\n * @param b - second PathParser\r\n * @returns 0 if both are equal, < 0 if a should be sorted first, > 0 if b\r\n */\r\nfunction comparePathParserScore(a, b) {\r\n    let i = 0;\r\n    const aScore = a.score;\r\n    const bScore = b.score;\r\n    while (i < aScore.length && i < bScore.length) {\r\n        const comp = compareScoreArray(aScore[i], bScore[i]);\r\n        // do not return if both are equal\r\n        if (comp)\r\n            return comp;\r\n        i++;\r\n    }\r\n    if (Math.abs(bScore.length - aScore.length) === 1) {\r\n        if (isLastScoreNegative(aScore))\r\n            return 1;\r\n        if (isLastScoreNegative(bScore))\r\n            return -1;\r\n    }\r\n    // if a and b share the same score entries but b has more, sort b first\r\n    return bScore.length - aScore.length;\r\n    // this is the ternary version\r\n    // return aScore.length < bScore.length\r\n    //   ? 1\r\n    //   : aScore.length > bScore.length\r\n    //   ? -1\r\n    //   : 0\r\n}\r\n/**\r\n * This allows detecting splats at the end of a path: /home/:id(.*)*\r\n *\r\n * @param score - score to check\r\n * @returns true if the last entry is negative\r\n */\r\nfunction isLastScoreNegative(score) {\r\n    const last = score[score.length - 1];\r\n    return score.length > 0 && last[last.length - 1] < 0;\r\n}\n\nconst ROOT_TOKEN = {\r\n    type: 0 /* TokenType.Static */,\r\n    value: '',\r\n};\r\nconst VALID_PARAM_RE = /[a-zA-Z0-9_]/;\r\n// After some profiling, the cache seems to be unnecessary because tokenizePath\r\n// (the slowest part of adding a route) is very fast\r\n// const tokenCache = new Map<string, Token[][]>()\r\nfunction tokenizePath(path) {\r\n    if (!path)\r\n        return [[]];\r\n    if (path === '/')\r\n        return [[ROOT_TOKEN]];\r\n    if (!path.startsWith('/')) {\r\n        throw new Error((process.env.NODE_ENV !== 'production')\r\n            ? `Route paths should start with a \"/\": \"${path}\" should be \"/${path}\".`\r\n            : `Invalid path \"${path}\"`);\r\n    }\r\n    // if (tokenCache.has(path)) return tokenCache.get(path)!\r\n    function crash(message) {\r\n        throw new Error(`ERR (${state})/\"${buffer}\": ${message}`);\r\n    }\r\n    let state = 0 /* TokenizerState.Static */;\r\n    let previousState = state;\r\n    const tokens = [];\r\n    // the segment will always be valid because we get into the initial state\r\n    // with the leading /\r\n    let segment;\r\n    function finalizeSegment() {\r\n        if (segment)\r\n            tokens.push(segment);\r\n        segment = [];\r\n    }\r\n    // index on the path\r\n    let i = 0;\r\n    // char at index\r\n    let char;\r\n    // buffer of the value read\r\n    let buffer = '';\r\n    // custom regexp for a param\r\n    let customRe = '';\r\n    function consumeBuffer() {\r\n        if (!buffer)\r\n            return;\r\n        if (state === 0 /* TokenizerState.Static */) {\r\n            segment.push({\r\n                type: 0 /* TokenType.Static */,\r\n                value: buffer,\r\n            });\r\n        }\r\n        else if (state === 1 /* TokenizerState.Param */ ||\r\n            state === 2 /* TokenizerState.ParamRegExp */ ||\r\n            state === 3 /* TokenizerState.ParamRegExpEnd */) {\r\n            if (segment.length > 1 && (char === '*' || char === '+'))\r\n                crash(`A repeatable param (${buffer}) must be alone in its segment. eg: '/:ids+.`);\r\n            segment.push({\r\n                type: 1 /* TokenType.Param */,\r\n                value: buffer,\r\n                regexp: customRe,\r\n                repeatable: char === '*' || char === '+',\r\n                optional: char === '*' || char === '?',\r\n            });\r\n        }\r\n        else {\r\n            crash('Invalid state to consume buffer');\r\n        }\r\n        buffer = '';\r\n    }\r\n    function addCharToBuffer() {\r\n        buffer += char;\r\n    }\r\n    while (i < path.length) {\r\n        char = path[i++];\r\n        if (char === '\\\\' && state !== 2 /* TokenizerState.ParamRegExp */) {\r\n            previousState = state;\r\n            state = 4 /* TokenizerState.EscapeNext */;\r\n            continue;\r\n        }\r\n        switch (state) {\r\n            case 0 /* TokenizerState.Static */:\r\n                if (char === '/') {\r\n                    if (buffer) {\r\n                        consumeBuffer();\r\n                    }\r\n                    finalizeSegment();\r\n                }\r\n                else if (char === ':') {\r\n                    consumeBuffer();\r\n                    state = 1 /* TokenizerState.Param */;\r\n                }\r\n                else {\r\n                    addCharToBuffer();\r\n                }\r\n                break;\r\n            case 4 /* TokenizerState.EscapeNext */:\r\n                addCharToBuffer();\r\n                state = previousState;\r\n                break;\r\n            case 1 /* TokenizerState.Param */:\r\n                if (char === '(') {\r\n                    state = 2 /* TokenizerState.ParamRegExp */;\r\n                }\r\n                else if (VALID_PARAM_RE.test(char)) {\r\n                    addCharToBuffer();\r\n                }\r\n                else {\r\n                    consumeBuffer();\r\n                    state = 0 /* TokenizerState.Static */;\r\n                    // go back one character if we were not modifying\r\n                    if (char !== '*' && char !== '?' && char !== '+')\r\n                        i--;\r\n                }\r\n                break;\r\n            case 2 /* TokenizerState.ParamRegExp */:\r\n                // TODO: is it worth handling nested regexp? like :p(?:prefix_([^/]+)_suffix)\r\n                // it already works by escaping the closing )\r\n                // https://paths.esm.dev/?p=AAMeJbiAwQEcDKbAoAAkP60PG2R6QAvgNaA6AFACM2ABuQBB#\r\n                // is this really something people need since you can also write\r\n                // /prefix_:p()_suffix\r\n                if (char === ')') {\r\n                    // handle the escaped )\r\n                    if (customRe[customRe.length - 1] == '\\\\')\r\n                        customRe = customRe.slice(0, -1) + char;\r\n                    else\r\n                        state = 3 /* TokenizerState.ParamRegExpEnd */;\r\n                }\r\n                else {\r\n                    customRe += char;\r\n                }\r\n                break;\r\n            case 3 /* TokenizerState.ParamRegExpEnd */:\r\n                // same as finalizing a param\r\n                consumeBuffer();\r\n                state = 0 /* TokenizerState.Static */;\r\n                // go back one character if we were not modifying\r\n                if (char !== '*' && char !== '?' && char !== '+')\r\n                    i--;\r\n                customRe = '';\r\n                break;\r\n            default:\r\n                crash('Unknown state');\r\n                break;\r\n        }\r\n    }\r\n    if (state === 2 /* TokenizerState.ParamRegExp */)\r\n        crash(`Unfinished custom RegExp for param \"${buffer}\"`);\r\n    consumeBuffer();\r\n    finalizeSegment();\r\n    // tokenCache.set(path, tokens)\r\n    return tokens;\r\n}\n\nfunction createRouteRecordMatcher(record, parent, options) {\r\n    const parser = tokensToParser(tokenizePath(record.path), options);\r\n    // warn against params with the same name\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const existingKeys = new Set();\r\n        for (const key of parser.keys) {\r\n            if (existingKeys.has(key.name))\r\n                warn(`Found duplicated params with name \"${key.name}\" for path \"${record.path}\". Only the last one will be available on \"$route.params\".`);\r\n            existingKeys.add(key.name);\r\n        }\r\n    }\r\n    const matcher = assign(parser, {\r\n        record,\r\n        parent,\r\n        // these needs to be populated by the parent\r\n        children: [],\r\n        alias: [],\r\n    });\r\n    if (parent) {\r\n        // both are aliases or both are not aliases\r\n        // we don't want to mix them because the order is used when\r\n        // passing originalRecord in Matcher.addRoute\r\n        if (!matcher.record.aliasOf === !parent.record.aliasOf)\r\n            parent.children.push(matcher);\r\n    }\r\n    return matcher;\r\n}\n\n/**\r\n * Creates a Router Matcher.\r\n *\r\n * @internal\r\n * @param routes - array of initial routes\r\n * @param globalOptions - global route options\r\n */\r\nfunction createRouterMatcher(routes, globalOptions) {\r\n    // normalized ordered array of matchers\r\n    const matchers = [];\r\n    const matcherMap = new Map();\r\n    globalOptions = mergeOptions({ strict: false, end: true, sensitive: false }, globalOptions);\r\n    function getRecordMatcher(name) {\r\n        return matcherMap.get(name);\r\n    }\r\n    function addRoute(record, parent, originalRecord) {\r\n        // used later on to remove by name\r\n        const isRootAdd = !originalRecord;\r\n        const mainNormalizedRecord = normalizeRouteRecord(record);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            checkChildMissingNameWithEmptyPath(mainNormalizedRecord, parent);\r\n        }\r\n        // we might be the child of an alias\r\n        mainNormalizedRecord.aliasOf = originalRecord && originalRecord.record;\r\n        const options = mergeOptions(globalOptions, record);\r\n        // generate an array of records to correctly handle aliases\r\n        const normalizedRecords = [\r\n            mainNormalizedRecord,\r\n        ];\r\n        if ('alias' in record) {\r\n            const aliases = typeof record.alias === 'string' ? [record.alias] : record.alias;\r\n            for (const alias of aliases) {\r\n                normalizedRecords.push(assign({}, mainNormalizedRecord, {\r\n                    // this allows us to hold a copy of the `components` option\r\n                    // so that async components cache is hold on the original record\r\n                    components: originalRecord\r\n                        ? originalRecord.record.components\r\n                        : mainNormalizedRecord.components,\r\n                    path: alias,\r\n                    // we might be the child of an alias\r\n                    aliasOf: originalRecord\r\n                        ? originalRecord.record\r\n                        : mainNormalizedRecord,\r\n                    // the aliases are always of the same kind as the original since they\r\n                    // are defined on the same record\r\n                }));\r\n            }\r\n        }\r\n        let matcher;\r\n        let originalMatcher;\r\n        for (const normalizedRecord of normalizedRecords) {\r\n            const { path } = normalizedRecord;\r\n            // Build up the path for nested routes if the child isn't an absolute\r\n            // route. Only add the / delimiter if the child path isn't empty and if the\r\n            // parent path doesn't have a trailing slash\r\n            if (parent && path[0] !== '/') {\r\n                const parentPath = parent.record.path;\r\n                const connectingSlash = parentPath[parentPath.length - 1] === '/' ? '' : '/';\r\n                normalizedRecord.path =\r\n                    parent.record.path + (path && connectingSlash + path);\r\n            }\r\n            if ((process.env.NODE_ENV !== 'production') && normalizedRecord.path === '*') {\r\n                throw new Error('Catch all routes (\"*\") must now be defined using a param with a custom regexp.\\n' +\r\n                    'See more at https://next.router.vuejs.org/guide/migration/#removed-star-or-catch-all-routes.');\r\n            }\r\n            // create the object beforehand, so it can be passed to children\r\n            matcher = createRouteRecordMatcher(normalizedRecord, parent, options);\r\n            if ((process.env.NODE_ENV !== 'production') && parent && path[0] === '/')\r\n                checkMissingParamsInAbsolutePath(matcher, parent);\r\n            // if we are an alias we must tell the original record that we exist,\r\n            // so we can be removed\r\n            if (originalRecord) {\r\n                originalRecord.alias.push(matcher);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkSameParams(originalRecord, matcher);\r\n                }\r\n            }\r\n            else {\r\n                // otherwise, the first record is the original and others are aliases\r\n                originalMatcher = originalMatcher || matcher;\r\n                if (originalMatcher !== matcher)\r\n                    originalMatcher.alias.push(matcher);\r\n                // remove the route if named and only for the top record (avoid in nested calls)\r\n                // this works because the original record is the first one\r\n                if (isRootAdd && record.name && !isAliasRecord(matcher))\r\n                    removeRoute(record.name);\r\n            }\r\n            if (mainNormalizedRecord.children) {\r\n                const children = mainNormalizedRecord.children;\r\n                for (let i = 0; i < children.length; i++) {\r\n                    addRoute(children[i], matcher, originalRecord && originalRecord.children[i]);\r\n                }\r\n            }\r\n            // if there was no original record, then the first one was not an alias and all\r\n            // other aliases (if any) need to reference this record when adding children\r\n            originalRecord = originalRecord || matcher;\r\n            // TODO: add normalized records for more flexibility\r\n            // if (parent && isAliasRecord(originalRecord)) {\r\n            //   parent.children.push(originalRecord)\r\n            // }\r\n            // Avoid adding a record that doesn't display anything. This allows passing through records without a component to\r\n            // not be reached and pass through the catch all route\r\n            if ((matcher.record.components &&\r\n                Object.keys(matcher.record.components).length) ||\r\n                matcher.record.name ||\r\n                matcher.record.redirect) {\r\n                insertMatcher(matcher);\r\n            }\r\n        }\r\n        return originalMatcher\r\n            ? () => {\r\n                // since other matchers are aliases, they should be removed by the original matcher\r\n                removeRoute(originalMatcher);\r\n            }\r\n            : noop;\r\n    }\r\n    function removeRoute(matcherRef) {\r\n        if (isRouteName(matcherRef)) {\r\n            const matcher = matcherMap.get(matcherRef);\r\n            if (matcher) {\r\n                matcherMap.delete(matcherRef);\r\n                matchers.splice(matchers.indexOf(matcher), 1);\r\n                matcher.children.forEach(removeRoute);\r\n                matcher.alias.forEach(removeRoute);\r\n            }\r\n        }\r\n        else {\r\n            const index = matchers.indexOf(matcherRef);\r\n            if (index > -1) {\r\n                matchers.splice(index, 1);\r\n                if (matcherRef.record.name)\r\n                    matcherMap.delete(matcherRef.record.name);\r\n                matcherRef.children.forEach(removeRoute);\r\n                matcherRef.alias.forEach(removeRoute);\r\n            }\r\n        }\r\n    }\r\n    function getRoutes() {\r\n        return matchers;\r\n    }\r\n    function insertMatcher(matcher) {\r\n        let i = 0;\r\n        while (i < matchers.length &&\r\n            comparePathParserScore(matcher, matchers[i]) >= 0 &&\r\n            // Adding children with empty path should still appear before the parent\r\n            // https://github.com/vuejs/router/issues/1124\r\n            (matcher.record.path !== matchers[i].record.path ||\r\n                !isRecordChildOf(matcher, matchers[i])))\r\n            i++;\r\n        matchers.splice(i, 0, matcher);\r\n        // only add the original record to the name map\r\n        if (matcher.record.name && !isAliasRecord(matcher))\r\n            matcherMap.set(matcher.record.name, matcher);\r\n    }\r\n    function resolve(location, currentLocation) {\r\n        let matcher;\r\n        let params = {};\r\n        let path;\r\n        let name;\r\n        if ('name' in location && location.name) {\r\n            matcher = matcherMap.get(location.name);\r\n            if (!matcher)\r\n                throw createRouterError(1 /* ErrorTypes.MATCHER_NOT_FOUND */, {\r\n                    location,\r\n                });\r\n            // warn if the user is passing invalid params so they can debug it better when they get removed\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                const invalidParams = Object.keys(location.params || {}).filter(paramName => !matcher.keys.find(k => k.name === paramName));\r\n                if (invalidParams.length) {\r\n                    warn(`Discarded invalid param(s) \"${invalidParams.join('\", \"')}\" when navigating. See https://github.com/vuejs/router/blob/main/packages/router/CHANGELOG.md#414-2022-08-22 for more details.`);\r\n                }\r\n            }\r\n            name = matcher.record.name;\r\n            params = assign(\r\n            // paramsFromLocation is a new object\r\n            paramsFromLocation(currentLocation.params, \r\n            // only keep params that exist in the resolved location\r\n            // TODO: only keep optional params coming from a parent record\r\n            matcher.keys.filter(k => !k.optional).map(k => k.name)), \r\n            // discard any existing params in the current location that do not exist here\r\n            // #1497 this ensures better active/exact matching\r\n            location.params &&\r\n                paramsFromLocation(location.params, matcher.keys.map(k => k.name)));\r\n            // throws if cannot be stringified\r\n            path = matcher.stringify(params);\r\n        }\r\n        else if ('path' in location) {\r\n            // no need to resolve the path with the matcher as it was provided\r\n            // this also allows the user to control the encoding\r\n            path = location.path;\r\n            if ((process.env.NODE_ENV !== 'production') && !path.startsWith('/')) {\r\n                warn(`The Matcher cannot resolve relative paths but received \"${path}\". Unless you directly called \\`matcher.resolve(\"${path}\")\\`, this is probably a bug in vue-router. Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/router.`);\r\n            }\r\n            matcher = matchers.find(m => m.re.test(path));\r\n            // matcher should have a value after the loop\r\n            if (matcher) {\r\n                // we know the matcher works because we tested the regexp\r\n                params = matcher.parse(path);\r\n                name = matcher.record.name;\r\n            }\r\n            // location is a relative path\r\n        }\r\n        else {\r\n            // match by name or path of current route\r\n            matcher = currentLocation.name\r\n                ? matcherMap.get(currentLocation.name)\r\n                : matchers.find(m => m.re.test(currentLocation.path));\r\n            if (!matcher)\r\n                throw createRouterError(1 /* ErrorTypes.MATCHER_NOT_FOUND */, {\r\n                    location,\r\n                    currentLocation,\r\n                });\r\n            name = matcher.record.name;\r\n            // since we are navigating to the same location, we don't need to pick the\r\n            // params like when `name` is provided\r\n            params = assign({}, currentLocation.params, location.params);\r\n            path = matcher.stringify(params);\r\n        }\r\n        const matched = [];\r\n        let parentMatcher = matcher;\r\n        while (parentMatcher) {\r\n            // reversed order so parents are at the beginning\r\n            matched.unshift(parentMatcher.record);\r\n            parentMatcher = parentMatcher.parent;\r\n        }\r\n        return {\r\n            name,\r\n            path,\r\n            params,\r\n            matched,\r\n            meta: mergeMetaFields(matched),\r\n        };\r\n    }\r\n    // add initial routes\r\n    routes.forEach(route => addRoute(route));\r\n    return { addRoute, resolve, removeRoute, getRoutes, getRecordMatcher };\r\n}\r\nfunction paramsFromLocation(params, keys) {\r\n    const newParams = {};\r\n    for (const key of keys) {\r\n        if (key in params)\r\n            newParams[key] = params[key];\r\n    }\r\n    return newParams;\r\n}\r\n/**\r\n * Normalizes a RouteRecordRaw. Creates a copy\r\n *\r\n * @param record\r\n * @returns the normalized version\r\n */\r\nfunction normalizeRouteRecord(record) {\r\n    return {\r\n        path: record.path,\r\n        redirect: record.redirect,\r\n        name: record.name,\r\n        meta: record.meta || {},\r\n        aliasOf: undefined,\r\n        beforeEnter: record.beforeEnter,\r\n        props: normalizeRecordProps(record),\r\n        children: record.children || [],\r\n        instances: {},\r\n        leaveGuards: new Set(),\r\n        updateGuards: new Set(),\r\n        enterCallbacks: {},\r\n        components: 'components' in record\r\n            ? record.components || null\r\n            : record.component && { default: record.component },\r\n    };\r\n}\r\n/**\r\n * Normalize the optional `props` in a record to always be an object similar to\r\n * components. Also accept a boolean for components.\r\n * @param record\r\n */\r\nfunction normalizeRecordProps(record) {\r\n    const propsObject = {};\r\n    // props does not exist on redirect records, but we can set false directly\r\n    const props = record.props || false;\r\n    if ('component' in record) {\r\n        propsObject.default = props;\r\n    }\r\n    else {\r\n        // NOTE: we could also allow a function to be applied to every component.\r\n        // Would need user feedback for use cases\r\n        for (const name in record.components)\r\n            propsObject[name] = typeof props === 'boolean' ? props : props[name];\r\n    }\r\n    return propsObject;\r\n}\r\n/**\r\n * Checks if a record or any of its parent is an alias\r\n * @param record\r\n */\r\nfunction isAliasRecord(record) {\r\n    while (record) {\r\n        if (record.record.aliasOf)\r\n            return true;\r\n        record = record.parent;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Merge meta fields of an array of records\r\n *\r\n * @param matched - array of matched records\r\n */\r\nfunction mergeMetaFields(matched) {\r\n    return matched.reduce((meta, record) => assign(meta, record.meta), {});\r\n}\r\nfunction mergeOptions(defaults, partialOptions) {\r\n    const options = {};\r\n    for (const key in defaults) {\r\n        options[key] = key in partialOptions ? partialOptions[key] : defaults[key];\r\n    }\r\n    return options;\r\n}\r\nfunction isSameParam(a, b) {\r\n    return (a.name === b.name &&\r\n        a.optional === b.optional &&\r\n        a.repeatable === b.repeatable);\r\n}\r\n/**\r\n * Check if a path and its alias have the same required params\r\n *\r\n * @param a - original record\r\n * @param b - alias record\r\n */\r\nfunction checkSameParams(a, b) {\r\n    for (const key of a.keys) {\r\n        if (!key.optional && !b.keys.find(isSameParam.bind(null, key)))\r\n            return warn(`Alias \"${b.record.path}\" and the original record: \"${a.record.path}\" must have the exact same param named \"${key.name}\"`);\r\n    }\r\n    for (const key of b.keys) {\r\n        if (!key.optional && !a.keys.find(isSameParam.bind(null, key)))\r\n            return warn(`Alias \"${b.record.path}\" and the original record: \"${a.record.path}\" must have the exact same param named \"${key.name}\"`);\r\n    }\r\n}\r\n/**\r\n * A route with a name and a child with an empty path without a name should warn when adding the route\r\n *\r\n * @param mainNormalizedRecord - RouteRecordNormalized\r\n * @param parent - RouteRecordMatcher\r\n */\r\nfunction checkChildMissingNameWithEmptyPath(mainNormalizedRecord, parent) {\r\n    if (parent &&\r\n        parent.record.name &&\r\n        !mainNormalizedRecord.name &&\r\n        !mainNormalizedRecord.path) {\r\n        warn(`The route named \"${String(parent.record.name)}\" has a child without a name and an empty path. Using that name won't render the empty path child so you probably want to move the name to the child instead. If this is intentional, add a name to the child route to remove the warning.`);\r\n    }\r\n}\r\nfunction checkMissingParamsInAbsolutePath(record, parent) {\r\n    for (const key of parent.keys) {\r\n        if (!record.keys.find(isSameParam.bind(null, key)))\r\n            return warn(`Absolute path \"${record.record.path}\" must have the exact same param named \"${key.name}\" as its parent \"${parent.record.path}\".`);\r\n    }\r\n}\r\nfunction isRecordChildOf(record, parent) {\r\n    return parent.children.some(child => child === record || isRecordChildOf(record, child));\r\n}\n\n/**\r\n * Encoding Rules ␣ = Space Path: ␣ \" < > # ? { } Query: ␣ \" < > # & = Hash: ␣ \"\r\n * < > `\r\n *\r\n * On top of that, the RFC3986 (https://tools.ietf.org/html/rfc3986#section-2.2)\r\n * defines some extra characters to be encoded. Most browsers do not encode them\r\n * in encodeURI https://github.com/whatwg/url/issues/369, so it may be safer to\r\n * also encode `!'()*`. Leaving un-encoded only ASCII alphanumeric(`a-zA-Z0-9`)\r\n * plus `-._~`. This extra safety should be applied to query by patching the\r\n * string returned by encodeURIComponent encodeURI also encodes `[\\]^`. `\\`\r\n * should be encoded to avoid ambiguity. Browsers (IE, FF, C) transform a `\\`\r\n * into a `/` if directly typed in. The _backtick_ (`````) should also be\r\n * encoded everywhere because some browsers like FF encode it when directly\r\n * written while others don't. Safari and IE don't encode ``\"<>{}``` in hash.\r\n */\r\n// const EXTRA_RESERVED_RE = /[!'()*]/g\r\n// const encodeReservedReplacer = (c: string) => '%' + c.charCodeAt(0).toString(16)\r\nconst HASH_RE = /#/g; // %23\r\nconst AMPERSAND_RE = /&/g; // %26\r\nconst SLASH_RE = /\\//g; // %2F\r\nconst EQUAL_RE = /=/g; // %3D\r\nconst IM_RE = /\\?/g; // %3F\r\nconst PLUS_RE = /\\+/g; // %2B\r\n/**\r\n * NOTE: It's not clear to me if we should encode the + symbol in queries, it\r\n * seems to be less flexible than not doing so and I can't find out the legacy\r\n * systems requiring this for regular requests like text/html. In the standard,\r\n * the encoding of the plus character is only mentioned for\r\n * application/x-www-form-urlencoded\r\n * (https://url.spec.whatwg.org/#urlencoded-parsing) and most browsers seems lo\r\n * leave the plus character as is in queries. To be more flexible, we allow the\r\n * plus character on the query, but it can also be manually encoded by the user.\r\n *\r\n * Resources:\r\n * - https://url.spec.whatwg.org/#urlencoded-parsing\r\n * - https://stackoverflow.com/questions/1634271/url-encoding-the-space-character-or-20\r\n */\r\nconst ENC_BRACKET_OPEN_RE = /%5B/g; // [\r\nconst ENC_BRACKET_CLOSE_RE = /%5D/g; // ]\r\nconst ENC_CARET_RE = /%5E/g; // ^\r\nconst ENC_BACKTICK_RE = /%60/g; // `\r\nconst ENC_CURLY_OPEN_RE = /%7B/g; // {\r\nconst ENC_PIPE_RE = /%7C/g; // |\r\nconst ENC_CURLY_CLOSE_RE = /%7D/g; // }\r\nconst ENC_SPACE_RE = /%20/g; // }\r\n/**\r\n * Encode characters that need to be encoded on the path, search and hash\r\n * sections of the URL.\r\n *\r\n * @internal\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction commonEncode(text) {\r\n    return encodeURI('' + text)\r\n        .replace(ENC_PIPE_RE, '|')\r\n        .replace(ENC_BRACKET_OPEN_RE, '[')\r\n        .replace(ENC_BRACKET_CLOSE_RE, ']');\r\n}\r\n/**\r\n * Encode characters that need to be encoded on the hash section of the URL.\r\n *\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction encodeHash(text) {\r\n    return commonEncode(text)\r\n        .replace(ENC_CURLY_OPEN_RE, '{')\r\n        .replace(ENC_CURLY_CLOSE_RE, '}')\r\n        .replace(ENC_CARET_RE, '^');\r\n}\r\n/**\r\n * Encode characters that need to be encoded query values on the query\r\n * section of the URL.\r\n *\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction encodeQueryValue(text) {\r\n    return (commonEncode(text)\r\n        // Encode the space as +, encode the + to differentiate it from the space\r\n        .replace(PLUS_RE, '%2B')\r\n        .replace(ENC_SPACE_RE, '+')\r\n        .replace(HASH_RE, '%23')\r\n        .replace(AMPERSAND_RE, '%26')\r\n        .replace(ENC_BACKTICK_RE, '`')\r\n        .replace(ENC_CURLY_OPEN_RE, '{')\r\n        .replace(ENC_CURLY_CLOSE_RE, '}')\r\n        .replace(ENC_CARET_RE, '^'));\r\n}\r\n/**\r\n * Like `encodeQueryValue` but also encodes the `=` character.\r\n *\r\n * @param text - string to encode\r\n */\r\nfunction encodeQueryKey(text) {\r\n    return encodeQueryValue(text).replace(EQUAL_RE, '%3D');\r\n}\r\n/**\r\n * Encode characters that need to be encoded on the path section of the URL.\r\n *\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction encodePath(text) {\r\n    return commonEncode(text).replace(HASH_RE, '%23').replace(IM_RE, '%3F');\r\n}\r\n/**\r\n * Encode characters that need to be encoded on the path section of the URL as a\r\n * param. This function encodes everything {@link encodePath} does plus the\r\n * slash (`/`) character. If `text` is `null` or `undefined`, returns an empty\r\n * string instead.\r\n *\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction encodeParam(text) {\r\n    return text == null ? '' : encodePath(text).replace(SLASH_RE, '%2F');\r\n}\r\n/**\r\n * Decode text using `decodeURIComponent`. Returns the original text if it\r\n * fails.\r\n *\r\n * @param text - string to decode\r\n * @returns decoded string\r\n */\r\nfunction decode(text) {\r\n    try {\r\n        return decodeURIComponent('' + text);\r\n    }\r\n    catch (err) {\r\n        (process.env.NODE_ENV !== 'production') && warn(`Error decoding \"${text}\". Using original value`);\r\n    }\r\n    return '' + text;\r\n}\n\n/**\r\n * Transforms a queryString into a {@link LocationQuery} object. Accept both, a\r\n * version with the leading `?` and without Should work as URLSearchParams\r\n\n * @internal\r\n *\r\n * @param search - search string to parse\r\n * @returns a query object\r\n */\r\nfunction parseQuery(search) {\r\n    const query = {};\r\n    // avoid creating an object with an empty key and empty value\r\n    // because of split('&')\r\n    if (search === '' || search === '?')\r\n        return query;\r\n    const hasLeadingIM = search[0] === '?';\r\n    const searchParams = (hasLeadingIM ? search.slice(1) : search).split('&');\r\n    for (let i = 0; i < searchParams.length; ++i) {\r\n        // pre decode the + into space\r\n        const searchParam = searchParams[i].replace(PLUS_RE, ' ');\r\n        // allow the = character\r\n        const eqPos = searchParam.indexOf('=');\r\n        const key = decode(eqPos < 0 ? searchParam : searchParam.slice(0, eqPos));\r\n        const value = eqPos < 0 ? null : decode(searchParam.slice(eqPos + 1));\r\n        if (key in query) {\r\n            // an extra variable for ts types\r\n            let currentValue = query[key];\r\n            if (!isArray(currentValue)) {\r\n                currentValue = query[key] = [currentValue];\r\n            }\r\n            currentValue.push(value);\r\n        }\r\n        else {\r\n            query[key] = value;\r\n        }\r\n    }\r\n    return query;\r\n}\r\n/**\r\n * Stringifies a {@link LocationQueryRaw} object. Like `URLSearchParams`, it\r\n * doesn't prepend a `?`\r\n *\r\n * @internal\r\n *\r\n * @param query - query object to stringify\r\n * @returns string version of the query without the leading `?`\r\n */\r\nfunction stringifyQuery(query) {\r\n    let search = '';\r\n    for (let key in query) {\r\n        const value = query[key];\r\n        key = encodeQueryKey(key);\r\n        if (value == null) {\r\n            // only null adds the value\r\n            if (value !== undefined) {\r\n                search += (search.length ? '&' : '') + key;\r\n            }\r\n            continue;\r\n        }\r\n        // keep null values\r\n        const values = isArray(value)\r\n            ? value.map(v => v && encodeQueryValue(v))\r\n            : [value && encodeQueryValue(value)];\r\n        values.forEach(value => {\r\n            // skip undefined values in arrays as if they were not present\r\n            // smaller code than using filter\r\n            if (value !== undefined) {\r\n                // only append & with non-empty search\r\n                search += (search.length ? '&' : '') + key;\r\n                if (value != null)\r\n                    search += '=' + value;\r\n            }\r\n        });\r\n    }\r\n    return search;\r\n}\r\n/**\r\n * Transforms a {@link LocationQueryRaw} into a {@link LocationQuery} by casting\r\n * numbers into strings, removing keys with an undefined value and replacing\r\n * undefined with null in arrays\r\n *\r\n * @param query - query object to normalize\r\n * @returns a normalized query object\r\n */\r\nfunction normalizeQuery(query) {\r\n    const normalizedQuery = {};\r\n    for (const key in query) {\r\n        const value = query[key];\r\n        if (value !== undefined) {\r\n            normalizedQuery[key] = isArray(value)\r\n                ? value.map(v => (v == null ? null : '' + v))\r\n                : value == null\r\n                    ? value\r\n                    : '' + value;\r\n        }\r\n    }\r\n    return normalizedQuery;\r\n}\n\n/**\r\n * RouteRecord being rendered by the closest ancestor Router View. Used for\r\n * `onBeforeRouteUpdate` and `onBeforeRouteLeave`. rvlm stands for Router View\r\n * Location Matched\r\n *\r\n * @internal\r\n */\r\nconst matchedRouteKey = Symbol((process.env.NODE_ENV !== 'production') ? 'router view location matched' : '');\r\n/**\r\n * Allows overriding the router view depth to control which component in\r\n * `matched` is rendered. rvd stands for Router View Depth\r\n *\r\n * @internal\r\n */\r\nconst viewDepthKey = Symbol((process.env.NODE_ENV !== 'production') ? 'router view depth' : '');\r\n/**\r\n * Allows overriding the router instance returned by `useRouter` in tests. r\r\n * stands for router\r\n *\r\n * @internal\r\n */\r\nconst routerKey = Symbol((process.env.NODE_ENV !== 'production') ? 'router' : '');\r\n/**\r\n * Allows overriding the current route returned by `useRoute` in tests. rl\r\n * stands for route location\r\n *\r\n * @internal\r\n */\r\nconst routeLocationKey = Symbol((process.env.NODE_ENV !== 'production') ? 'route location' : '');\r\n/**\r\n * Allows overriding the current route used by router-view. Internally this is\r\n * used when the `route` prop is passed.\r\n *\r\n * @internal\r\n */\r\nconst routerViewLocationKey = Symbol((process.env.NODE_ENV !== 'production') ? 'router view location' : '');\n\n/**\r\n * Create a list of callbacks that can be reset. Used to create before and after navigation guards list\r\n */\r\nfunction useCallbacks() {\r\n    let handlers = [];\r\n    function add(handler) {\r\n        handlers.push(handler);\r\n        return () => {\r\n            const i = handlers.indexOf(handler);\r\n            if (i > -1)\r\n                handlers.splice(i, 1);\r\n        };\r\n    }\r\n    function reset() {\r\n        handlers = [];\r\n    }\r\n    return {\r\n        add,\r\n        list: () => handlers,\r\n        reset,\r\n    };\r\n}\n\nfunction registerGuard(record, name, guard) {\r\n    const removeFromList = () => {\r\n        record[name].delete(guard);\r\n    };\r\n    onUnmounted(removeFromList);\r\n    onDeactivated(removeFromList);\r\n    onActivated(() => {\r\n        record[name].add(guard);\r\n    });\r\n    record[name].add(guard);\r\n}\r\n/**\r\n * Add a navigation guard that triggers whenever the component for the current\r\n * location is about to be left. Similar to {@link beforeRouteLeave} but can be\r\n * used in any component. The guard is removed when the component is unmounted.\r\n *\r\n * @param leaveGuard - {@link NavigationGuard}\r\n */\r\nfunction onBeforeRouteLeave(leaveGuard) {\r\n    if ((process.env.NODE_ENV !== 'production') && !getCurrentInstance()) {\r\n        warn('getCurrentInstance() returned null. onBeforeRouteLeave() must be called at the top of a setup function');\r\n        return;\r\n    }\r\n    const activeRecord = inject(matchedRouteKey, \r\n    // to avoid warning\r\n    {}).value;\r\n    if (!activeRecord) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn('No active route record was found when calling `onBeforeRouteLeave()`. Make sure you call this function inside a component child of <router-view>. Maybe you called it inside of App.vue?');\r\n        return;\r\n    }\r\n    registerGuard(activeRecord, 'leaveGuards', leaveGuard);\r\n}\r\n/**\r\n * Add a navigation guard that triggers whenever the current location is about\r\n * to be updated. Similar to {@link beforeRouteUpdate} but can be used in any\r\n * component. The guard is removed when the component is unmounted.\r\n *\r\n * @param updateGuard - {@link NavigationGuard}\r\n */\r\nfunction onBeforeRouteUpdate(updateGuard) {\r\n    if ((process.env.NODE_ENV !== 'production') && !getCurrentInstance()) {\r\n        warn('getCurrentInstance() returned null. onBeforeRouteUpdate() must be called at the top of a setup function');\r\n        return;\r\n    }\r\n    const activeRecord = inject(matchedRouteKey, \r\n    // to avoid warning\r\n    {}).value;\r\n    if (!activeRecord) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn('No active route record was found when calling `onBeforeRouteUpdate()`. Make sure you call this function inside a component child of <router-view>. Maybe you called it inside of App.vue?');\r\n        return;\r\n    }\r\n    registerGuard(activeRecord, 'updateGuards', updateGuard);\r\n}\r\nfunction guardToPromiseFn(guard, to, from, record, name) {\r\n    // keep a reference to the enterCallbackArray to prevent pushing callbacks if a new navigation took place\r\n    const enterCallbackArray = record &&\r\n        // name is defined if record is because of the function overload\r\n        (record.enterCallbacks[name] = record.enterCallbacks[name] || []);\r\n    return () => new Promise((resolve, reject) => {\r\n        const next = (valid) => {\r\n            if (valid === false) {\r\n                reject(createRouterError(4 /* ErrorTypes.NAVIGATION_ABORTED */, {\r\n                    from,\r\n                    to,\r\n                }));\r\n            }\r\n            else if (valid instanceof Error) {\r\n                reject(valid);\r\n            }\r\n            else if (isRouteLocation(valid)) {\r\n                reject(createRouterError(2 /* ErrorTypes.NAVIGATION_GUARD_REDIRECT */, {\r\n                    from: to,\r\n                    to: valid,\r\n                }));\r\n            }\r\n            else {\r\n                if (enterCallbackArray &&\r\n                    // since enterCallbackArray is truthy, both record and name also are\r\n                    record.enterCallbacks[name] === enterCallbackArray &&\r\n                    typeof valid === 'function') {\r\n                    enterCallbackArray.push(valid);\r\n                }\r\n                resolve();\r\n            }\r\n        };\r\n        // wrapping with Promise.resolve allows it to work with both async and sync guards\r\n        const guardReturn = guard.call(record && record.instances[name], to, from, (process.env.NODE_ENV !== 'production') ? canOnlyBeCalledOnce(next, to, from) : next);\r\n        let guardCall = Promise.resolve(guardReturn);\r\n        if (guard.length < 3)\r\n            guardCall = guardCall.then(next);\r\n        if ((process.env.NODE_ENV !== 'production') && guard.length > 2) {\r\n            const message = `The \"next\" callback was never called inside of ${guard.name ? '\"' + guard.name + '\"' : ''}:\\n${guard.toString()}\\n. If you are returning a value instead of calling \"next\", make sure to remove the \"next\" parameter from your function.`;\r\n            if (typeof guardReturn === 'object' && 'then' in guardReturn) {\r\n                guardCall = guardCall.then(resolvedValue => {\r\n                    // @ts-expect-error: _called is added at canOnlyBeCalledOnce\r\n                    if (!next._called) {\r\n                        warn(message);\r\n                        return Promise.reject(new Error('Invalid navigation guard'));\r\n                    }\r\n                    return resolvedValue;\r\n                });\r\n            }\r\n            else if (guardReturn !== undefined) {\r\n                // @ts-expect-error: _called is added at canOnlyBeCalledOnce\r\n                if (!next._called) {\r\n                    warn(message);\r\n                    reject(new Error('Invalid navigation guard'));\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        guardCall.catch(err => reject(err));\r\n    });\r\n}\r\nfunction canOnlyBeCalledOnce(next, to, from) {\r\n    let called = 0;\r\n    return function () {\r\n        if (called++ === 1)\r\n            warn(`The \"next\" callback was called more than once in one navigation guard when going from \"${from.fullPath}\" to \"${to.fullPath}\". It should be called exactly one time in each navigation guard. This will fail in production.`);\r\n        // @ts-expect-error: we put it in the original one because it's easier to check\r\n        next._called = true;\r\n        if (called === 1)\r\n            next.apply(null, arguments);\r\n    };\r\n}\r\nfunction extractComponentsGuards(matched, guardType, to, from) {\r\n    const guards = [];\r\n    for (const record of matched) {\r\n        if ((process.env.NODE_ENV !== 'production') && !record.components && !record.children.length) {\r\n            warn(`Record with path \"${record.path}\" is either missing a \"component(s)\"` +\r\n                ` or \"children\" property.`);\r\n        }\r\n        for (const name in record.components) {\r\n            let rawComponent = record.components[name];\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (!rawComponent ||\r\n                    (typeof rawComponent !== 'object' &&\r\n                        typeof rawComponent !== 'function')) {\r\n                    warn(`Component \"${name}\" in record with path \"${record.path}\" is not` +\r\n                        ` a valid component. Received \"${String(rawComponent)}\".`);\r\n                    // throw to ensure we stop here but warn to ensure the message isn't\r\n                    // missed by the user\r\n                    throw new Error('Invalid route component');\r\n                }\r\n                else if ('then' in rawComponent) {\r\n                    // warn if user wrote import('/component.vue') instead of () =>\r\n                    // import('./component.vue')\r\n                    warn(`Component \"${name}\" in record with path \"${record.path}\" is a ` +\r\n                        `Promise instead of a function that returns a Promise. Did you ` +\r\n                        `write \"import('./MyPage.vue')\" instead of ` +\r\n                        `\"() => import('./MyPage.vue')\" ? This will break in ` +\r\n                        `production if not fixed.`);\r\n                    const promise = rawComponent;\r\n                    rawComponent = () => promise;\r\n                }\r\n                else if (rawComponent.__asyncLoader &&\r\n                    // warn only once per component\r\n                    !rawComponent.__warnedDefineAsync) {\r\n                    rawComponent.__warnedDefineAsync = true;\r\n                    warn(`Component \"${name}\" in record with path \"${record.path}\" is defined ` +\r\n                        `using \"defineAsyncComponent()\". ` +\r\n                        `Write \"() => import('./MyPage.vue')\" instead of ` +\r\n                        `\"defineAsyncComponent(() => import('./MyPage.vue'))\".`);\r\n                }\r\n            }\r\n            // skip update and leave guards if the route component is not mounted\r\n            if (guardType !== 'beforeRouteEnter' && !record.instances[name])\r\n                continue;\r\n            if (isRouteComponent(rawComponent)) {\r\n                // __vccOpts is added by vue-class-component and contain the regular options\r\n                const options = rawComponent.__vccOpts || rawComponent;\r\n                const guard = options[guardType];\r\n                guard && guards.push(guardToPromiseFn(guard, to, from, record, name));\r\n            }\r\n            else {\r\n                // start requesting the chunk already\r\n                let componentPromise = rawComponent();\r\n                if ((process.env.NODE_ENV !== 'production') && !('catch' in componentPromise)) {\r\n                    warn(`Component \"${name}\" in record with path \"${record.path}\" is a function that does not return a Promise. If you were passing a functional component, make sure to add a \"displayName\" to the component. This will break in production if not fixed.`);\r\n                    componentPromise = Promise.resolve(componentPromise);\r\n                }\r\n                guards.push(() => componentPromise.then(resolved => {\r\n                    if (!resolved)\r\n                        return Promise.reject(new Error(`Couldn't resolve component \"${name}\" at \"${record.path}\"`));\r\n                    const resolvedComponent = isESModule(resolved)\r\n                        ? resolved.default\r\n                        : resolved;\r\n                    // replace the function with the resolved component\r\n                    // cannot be null or undefined because we went into the for loop\r\n                    record.components[name] = resolvedComponent;\r\n                    // __vccOpts is added by vue-class-component and contain the regular options\r\n                    const options = resolvedComponent.__vccOpts || resolvedComponent;\r\n                    const guard = options[guardType];\r\n                    return guard && guardToPromiseFn(guard, to, from, record, name)();\r\n                }));\r\n            }\r\n        }\r\n    }\r\n    return guards;\r\n}\r\n/**\r\n * Allows differentiating lazy components from functional components and vue-class-component\r\n * @internal\r\n *\r\n * @param component\r\n */\r\nfunction isRouteComponent(component) {\r\n    return (typeof component === 'object' ||\r\n        'displayName' in component ||\r\n        'props' in component ||\r\n        '__vccOpts' in component);\r\n}\r\n/**\r\n * Ensures a route is loaded, so it can be passed as o prop to `<RouterView>`.\r\n *\r\n * @param route - resolved route to load\r\n */\r\nfunction loadRouteLocation(route) {\r\n    return route.matched.every(record => record.redirect)\r\n        ? Promise.reject(new Error('Cannot load a route that redirects.'))\r\n        : Promise.all(route.matched.map(record => record.components &&\r\n            Promise.all(Object.keys(record.components).reduce((promises, name) => {\r\n                const rawComponent = record.components[name];\r\n                if (typeof rawComponent === 'function' &&\r\n                    !('displayName' in rawComponent)) {\r\n                    promises.push(rawComponent().then(resolved => {\r\n                        if (!resolved)\r\n                            return Promise.reject(new Error(`Couldn't resolve component \"${name}\" at \"${record.path}\". Ensure you passed a function that returns a promise.`));\r\n                        const resolvedComponent = isESModule(resolved)\r\n                            ? resolved.default\r\n                            : resolved;\r\n                        // replace the function with the resolved component\r\n                        // cannot be null or undefined because we went into the for loop\r\n                        record.components[name] = resolvedComponent;\r\n                        return;\r\n                    }));\r\n                }\r\n                return promises;\r\n            }, [])))).then(() => route);\r\n}\n\n// TODO: we could allow currentRoute as a prop to expose `isActive` and\r\n// `isExactActive` behavior should go through an RFC\r\nfunction useLink(props) {\r\n    const router = inject(routerKey);\r\n    const currentRoute = inject(routeLocationKey);\r\n    const route = computed(() => router.resolve(unref(props.to)));\r\n    const activeRecordIndex = computed(() => {\r\n        const { matched } = route.value;\r\n        const { length } = matched;\r\n        const routeMatched = matched[length - 1];\r\n        const currentMatched = currentRoute.matched;\r\n        if (!routeMatched || !currentMatched.length)\r\n            return -1;\r\n        const index = currentMatched.findIndex(isSameRouteRecord.bind(null, routeMatched));\r\n        if (index > -1)\r\n            return index;\r\n        // possible parent record\r\n        const parentRecordPath = getOriginalPath(matched[length - 2]);\r\n        return (\r\n        // we are dealing with nested routes\r\n        length > 1 &&\r\n            // if the parent and matched route have the same path, this link is\r\n            // referring to the empty child. Or we currently are on a different\r\n            // child of the same parent\r\n            getOriginalPath(routeMatched) === parentRecordPath &&\r\n            // avoid comparing the child with its parent\r\n            currentMatched[currentMatched.length - 1].path !== parentRecordPath\r\n            ? currentMatched.findIndex(isSameRouteRecord.bind(null, matched[length - 2]))\r\n            : index);\r\n    });\r\n    const isActive = computed(() => activeRecordIndex.value > -1 &&\r\n        includesParams(currentRoute.params, route.value.params));\r\n    const isExactActive = computed(() => activeRecordIndex.value > -1 &&\r\n        activeRecordIndex.value === currentRoute.matched.length - 1 &&\r\n        isSameRouteLocationParams(currentRoute.params, route.value.params));\r\n    function navigate(e = {}) {\r\n        if (guardEvent(e)) {\r\n            return router[unref(props.replace) ? 'replace' : 'push'](unref(props.to)\r\n            // avoid uncaught errors are they are logged anyway\r\n            ).catch(noop);\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n    // devtools only\r\n    if (((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) && isBrowser) {\r\n        const instance = getCurrentInstance();\r\n        if (instance) {\r\n            const linkContextDevtools = {\r\n                route: route.value,\r\n                isActive: isActive.value,\r\n                isExactActive: isExactActive.value,\r\n            };\r\n            // @ts-expect-error: this is internal\r\n            instance.__vrl_devtools = instance.__vrl_devtools || [];\r\n            // @ts-expect-error: this is internal\r\n            instance.__vrl_devtools.push(linkContextDevtools);\r\n            watchEffect(() => {\r\n                linkContextDevtools.route = route.value;\r\n                linkContextDevtools.isActive = isActive.value;\r\n                linkContextDevtools.isExactActive = isExactActive.value;\r\n            }, { flush: 'post' });\r\n        }\r\n    }\r\n    /**\r\n     * NOTE: update {@link _RouterLinkI}'s `$slots` type when updating this\r\n     */\r\n    return {\r\n        route,\r\n        href: computed(() => route.value.href),\r\n        isActive,\r\n        isExactActive,\r\n        navigate,\r\n    };\r\n}\r\nconst RouterLinkImpl = /*#__PURE__*/ defineComponent({\r\n    name: 'RouterLink',\r\n    compatConfig: { MODE: 3 },\r\n    props: {\r\n        to: {\r\n            type: [String, Object],\r\n            required: true,\r\n        },\r\n        replace: Boolean,\r\n        activeClass: String,\r\n        // inactiveClass: String,\r\n        exactActiveClass: String,\r\n        custom: Boolean,\r\n        ariaCurrentValue: {\r\n            type: String,\r\n            default: 'page',\r\n        },\r\n    },\r\n    useLink,\r\n    setup(props, { slots }) {\r\n        const link = reactive(useLink(props));\r\n        const { options } = inject(routerKey);\r\n        const elClass = computed(() => ({\r\n            [getLinkClass(props.activeClass, options.linkActiveClass, 'router-link-active')]: link.isActive,\r\n            // [getLinkClass(\r\n            //   props.inactiveClass,\r\n            //   options.linkInactiveClass,\r\n            //   'router-link-inactive'\r\n            // )]: !link.isExactActive,\r\n            [getLinkClass(props.exactActiveClass, options.linkExactActiveClass, 'router-link-exact-active')]: link.isExactActive,\r\n        }));\r\n        return () => {\r\n            const children = slots.default && slots.default(link);\r\n            return props.custom\r\n                ? children\r\n                : h('a', {\r\n                    'aria-current': link.isExactActive\r\n                        ? props.ariaCurrentValue\r\n                        : null,\r\n                    href: link.href,\r\n                    // this would override user added attrs but Vue will still add\r\n                    // the listener, so we end up triggering both\r\n                    onClick: link.navigate,\r\n                    class: elClass.value,\r\n                }, children);\r\n        };\r\n    },\r\n});\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\n/**\r\n * Component to render a link that triggers a navigation on click.\r\n */\r\nconst RouterLink = RouterLinkImpl;\r\nfunction guardEvent(e) {\r\n    // don't redirect with control keys\r\n    if (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey)\r\n        return;\r\n    // don't redirect when preventDefault called\r\n    if (e.defaultPrevented)\r\n        return;\r\n    // don't redirect on right click\r\n    if (e.button !== undefined && e.button !== 0)\r\n        return;\r\n    // don't redirect if `target=\"_blank\"`\r\n    // @ts-expect-error getAttribute does exist\r\n    if (e.currentTarget && e.currentTarget.getAttribute) {\r\n        // @ts-expect-error getAttribute exists\r\n        const target = e.currentTarget.getAttribute('target');\r\n        if (/\\b_blank\\b/i.test(target))\r\n            return;\r\n    }\r\n    // this may be a Weex event which doesn't have this method\r\n    if (e.preventDefault)\r\n        e.preventDefault();\r\n    return true;\r\n}\r\nfunction includesParams(outer, inner) {\r\n    for (const key in inner) {\r\n        const innerValue = inner[key];\r\n        const outerValue = outer[key];\r\n        if (typeof innerValue === 'string') {\r\n            if (innerValue !== outerValue)\r\n                return false;\r\n        }\r\n        else {\r\n            if (!isArray(outerValue) ||\r\n                outerValue.length !== innerValue.length ||\r\n                innerValue.some((value, i) => value !== outerValue[i]))\r\n                return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Get the original path value of a record by following its aliasOf\r\n * @param record\r\n */\r\nfunction getOriginalPath(record) {\r\n    return record ? (record.aliasOf ? record.aliasOf.path : record.path) : '';\r\n}\r\n/**\r\n * Utility class to get the active class based on defaults.\r\n * @param propClass\r\n * @param globalClass\r\n * @param defaultClass\r\n */\r\nconst getLinkClass = (propClass, globalClass, defaultClass) => propClass != null\r\n    ? propClass\r\n    : globalClass != null\r\n        ? globalClass\r\n        : defaultClass;\n\nconst RouterViewImpl = /*#__PURE__*/ defineComponent({\r\n    name: 'RouterView',\r\n    // #674 we manually inherit them\r\n    inheritAttrs: false,\r\n    props: {\r\n        name: {\r\n            type: String,\r\n            default: 'default',\r\n        },\r\n        route: Object,\r\n    },\r\n    // Better compat for @vue/compat users\r\n    // https://github.com/vuejs/router/issues/1315\r\n    compatConfig: { MODE: 3 },\r\n    setup(props, { attrs, slots }) {\r\n        (process.env.NODE_ENV !== 'production') && warnDeprecatedUsage();\r\n        const injectedRoute = inject(routerViewLocationKey);\r\n        const routeToDisplay = computed(() => props.route || injectedRoute.value);\r\n        const injectedDepth = inject(viewDepthKey, 0);\r\n        // The depth changes based on empty components option, which allows passthrough routes e.g. routes with children\r\n        // that are used to reuse the `path` property\r\n        const depth = computed(() => {\r\n            let initialDepth = unref(injectedDepth);\r\n            const { matched } = routeToDisplay.value;\r\n            let matchedRoute;\r\n            while ((matchedRoute = matched[initialDepth]) &&\r\n                !matchedRoute.components) {\r\n                initialDepth++;\r\n            }\r\n            return initialDepth;\r\n        });\r\n        const matchedRouteRef = computed(() => routeToDisplay.value.matched[depth.value]);\r\n        provide(viewDepthKey, computed(() => depth.value + 1));\r\n        provide(matchedRouteKey, matchedRouteRef);\r\n        provide(routerViewLocationKey, routeToDisplay);\r\n        const viewRef = ref();\r\n        // watch at the same time the component instance, the route record we are\r\n        // rendering, and the name\r\n        watch(() => [viewRef.value, matchedRouteRef.value, props.name], ([instance, to, name], [oldInstance, from, oldName]) => {\r\n            // copy reused instances\r\n            if (to) {\r\n                // this will update the instance for new instances as well as reused\r\n                // instances when navigating to a new route\r\n                to.instances[name] = instance;\r\n                // the component instance is reused for a different route or name, so\r\n                // we copy any saved update or leave guards. With async setup, the\r\n                // mounting component will mount before the matchedRoute changes,\r\n                // making instance === oldInstance, so we check if guards have been\r\n                // added before. This works because we remove guards when\r\n                // unmounting/deactivating components\r\n                if (from && from !== to && instance && instance === oldInstance) {\r\n                    if (!to.leaveGuards.size) {\r\n                        to.leaveGuards = from.leaveGuards;\r\n                    }\r\n                    if (!to.updateGuards.size) {\r\n                        to.updateGuards = from.updateGuards;\r\n                    }\r\n                }\r\n            }\r\n            // trigger beforeRouteEnter next callbacks\r\n            if (instance &&\r\n                to &&\r\n                // if there is no instance but to and from are the same this might be\r\n                // the first visit\r\n                (!from || !isSameRouteRecord(to, from) || !oldInstance)) {\r\n                (to.enterCallbacks[name] || []).forEach(callback => callback(instance));\r\n            }\r\n        }, { flush: 'post' });\r\n        return () => {\r\n            const route = routeToDisplay.value;\r\n            // we need the value at the time we render because when we unmount, we\r\n            // navigated to a different location so the value is different\r\n            const currentName = props.name;\r\n            const matchedRoute = matchedRouteRef.value;\r\n            const ViewComponent = matchedRoute && matchedRoute.components[currentName];\r\n            if (!ViewComponent) {\r\n                return normalizeSlot(slots.default, { Component: ViewComponent, route });\r\n            }\r\n            // props from route configuration\r\n            const routePropsOption = matchedRoute.props[currentName];\r\n            const routeProps = routePropsOption\r\n                ? routePropsOption === true\r\n                    ? route.params\r\n                    : typeof routePropsOption === 'function'\r\n                        ? routePropsOption(route)\r\n                        : routePropsOption\r\n                : null;\r\n            const onVnodeUnmounted = vnode => {\r\n                // remove the instance reference to prevent leak\r\n                if (vnode.component.isUnmounted) {\r\n                    matchedRoute.instances[currentName] = null;\r\n                }\r\n            };\r\n            const component = h(ViewComponent, assign({}, routeProps, attrs, {\r\n                onVnodeUnmounted,\r\n                ref: viewRef,\r\n            }));\r\n            if (((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) &&\r\n                isBrowser &&\r\n                component.ref) {\r\n                // TODO: can display if it's an alias, its props\r\n                const info = {\r\n                    depth: depth.value,\r\n                    name: matchedRoute.name,\r\n                    path: matchedRoute.path,\r\n                    meta: matchedRoute.meta,\r\n                };\r\n                const internalInstances = isArray(component.ref)\r\n                    ? component.ref.map(r => r.i)\r\n                    : [component.ref.i];\r\n                internalInstances.forEach(instance => {\r\n                    // @ts-expect-error\r\n                    instance.__vrv_devtools = info;\r\n                });\r\n            }\r\n            return (\r\n            // pass the vnode to the slot as a prop.\r\n            // h and <component :is=\"...\"> both accept vnodes\r\n            normalizeSlot(slots.default, { Component: component, route }) ||\r\n                component);\r\n        };\r\n    },\r\n});\r\nfunction normalizeSlot(slot, data) {\r\n    if (!slot)\r\n        return null;\r\n    const slotContent = slot(data);\r\n    return slotContent.length === 1 ? slotContent[0] : slotContent;\r\n}\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\n/**\r\n * Component to display the current route the user is at.\r\n */\r\nconst RouterView = RouterViewImpl;\r\n// warn against deprecated usage with <transition> & <keep-alive>\r\n// due to functional component being no longer eager in Vue 3\r\nfunction warnDeprecatedUsage() {\r\n    const instance = getCurrentInstance();\r\n    const parentName = instance.parent && instance.parent.type.name;\r\n    if (parentName &&\r\n        (parentName === 'KeepAlive' || parentName.includes('Transition'))) {\r\n        const comp = parentName === 'KeepAlive' ? 'keep-alive' : 'transition';\r\n        warn(`<router-view> can no longer be used directly inside <transition> or <keep-alive>.\\n` +\r\n            `Use slot props instead:\\n\\n` +\r\n            `<router-view v-slot=\"{ Component }\">\\n` +\r\n            `  <${comp}>\\n` +\r\n            `    <component :is=\"Component\" />\\n` +\r\n            `  </${comp}>\\n` +\r\n            `</router-view>`);\r\n    }\r\n}\n\n/**\r\n * Copies a route location and removes any problematic properties that cannot be shown in devtools (e.g. Vue instances).\r\n *\r\n * @param routeLocation - routeLocation to format\r\n * @param tooltip - optional tooltip\r\n * @returns a copy of the routeLocation\r\n */\r\nfunction formatRouteLocation(routeLocation, tooltip) {\r\n    const copy = assign({}, routeLocation, {\r\n        // remove variables that can contain vue instances\r\n        matched: routeLocation.matched.map(matched => omit(matched, ['instances', 'children', 'aliasOf'])),\r\n    });\r\n    return {\r\n        _custom: {\r\n            type: null,\r\n            readOnly: true,\r\n            display: routeLocation.fullPath,\r\n            tooltip,\r\n            value: copy,\r\n        },\r\n    };\r\n}\r\nfunction formatDisplay(display) {\r\n    return {\r\n        _custom: {\r\n            display,\r\n        },\r\n    };\r\n}\r\n// to support multiple router instances\r\nlet routerId = 0;\r\nfunction addDevtools(app, router, matcher) {\r\n    // Take over router.beforeEach and afterEach\r\n    // make sure we are not registering the devtool twice\r\n    if (router.__hasDevtools)\r\n        return;\r\n    router.__hasDevtools = true;\r\n    // increment to support multiple router instances\r\n    const id = routerId++;\r\n    setupDevtoolsPlugin({\r\n        id: 'org.vuejs.router' + (id ? '.' + id : ''),\r\n        label: 'Vue Router',\r\n        packageName: 'vue-router',\r\n        homepage: 'https://router.vuejs.org',\r\n        logo: 'https://router.vuejs.org/logo.png',\r\n        componentStateTypes: ['Routing'],\r\n        app,\r\n    }, api => {\r\n        if (typeof api.now !== 'function') {\r\n            console.warn('[Vue Router]: You seem to be using an outdated version of Vue Devtools. Are you still using the Beta release instead of the stable one? You can find the links at https://devtools.vuejs.org/guide/installation.html.');\r\n        }\r\n        // display state added by the router\r\n        api.on.inspectComponent((payload, ctx) => {\r\n            if (payload.instanceData) {\r\n                payload.instanceData.state.push({\r\n                    type: 'Routing',\r\n                    key: '$route',\r\n                    editable: false,\r\n                    value: formatRouteLocation(router.currentRoute.value, 'Current Route'),\r\n                });\r\n            }\r\n        });\r\n        // mark router-link as active and display tags on router views\r\n        api.on.visitComponentTree(({ treeNode: node, componentInstance }) => {\r\n            if (componentInstance.__vrv_devtools) {\r\n                const info = componentInstance.__vrv_devtools;\r\n                node.tags.push({\r\n                    label: (info.name ? `${info.name.toString()}: ` : '') + info.path,\r\n                    textColor: 0,\r\n                    tooltip: 'This component is rendered by &lt;router-view&gt;',\r\n                    backgroundColor: PINK_500,\r\n                });\r\n            }\r\n            // if multiple useLink are used\r\n            if (isArray(componentInstance.__vrl_devtools)) {\r\n                componentInstance.__devtoolsApi = api;\r\n                componentInstance.__vrl_devtools.forEach(devtoolsData => {\r\n                    let backgroundColor = ORANGE_400;\r\n                    let tooltip = '';\r\n                    if (devtoolsData.isExactActive) {\r\n                        backgroundColor = LIME_500;\r\n                        tooltip = 'This is exactly active';\r\n                    }\r\n                    else if (devtoolsData.isActive) {\r\n                        backgroundColor = BLUE_600;\r\n                        tooltip = 'This link is active';\r\n                    }\r\n                    node.tags.push({\r\n                        label: devtoolsData.route.path,\r\n                        textColor: 0,\r\n                        tooltip,\r\n                        backgroundColor,\r\n                    });\r\n                });\r\n            }\r\n        });\r\n        watch(router.currentRoute, () => {\r\n            // refresh active state\r\n            refreshRoutesView();\r\n            api.notifyComponentUpdate();\r\n            api.sendInspectorTree(routerInspectorId);\r\n            api.sendInspectorState(routerInspectorId);\r\n        });\r\n        const navigationsLayerId = 'router:navigations:' + id;\r\n        api.addTimelineLayer({\r\n            id: navigationsLayerId,\r\n            label: `Router${id ? ' ' + id : ''} Navigations`,\r\n            color: 0x40a8c4,\r\n        });\r\n        // const errorsLayerId = 'router:errors'\r\n        // api.addTimelineLayer({\r\n        //   id: errorsLayerId,\r\n        //   label: 'Router Errors',\r\n        //   color: 0xea5455,\r\n        // })\r\n        router.onError((error, to) => {\r\n            api.addTimelineEvent({\r\n                layerId: navigationsLayerId,\r\n                event: {\r\n                    title: 'Error during Navigation',\r\n                    subtitle: to.fullPath,\r\n                    logType: 'error',\r\n                    time: api.now(),\r\n                    data: { error },\r\n                    groupId: to.meta.__navigationId,\r\n                },\r\n            });\r\n        });\r\n        // attached to `meta` and used to group events\r\n        let navigationId = 0;\r\n        router.beforeEach((to, from) => {\r\n            const data = {\r\n                guard: formatDisplay('beforeEach'),\r\n                from: formatRouteLocation(from, 'Current Location during this navigation'),\r\n                to: formatRouteLocation(to, 'Target location'),\r\n            };\r\n            // Used to group navigations together, hide from devtools\r\n            Object.defineProperty(to.meta, '__navigationId', {\r\n                value: navigationId++,\r\n            });\r\n            api.addTimelineEvent({\r\n                layerId: navigationsLayerId,\r\n                event: {\r\n                    time: api.now(),\r\n                    title: 'Start of navigation',\r\n                    subtitle: to.fullPath,\r\n                    data,\r\n                    groupId: to.meta.__navigationId,\r\n                },\r\n            });\r\n        });\r\n        router.afterEach((to, from, failure) => {\r\n            const data = {\r\n                guard: formatDisplay('afterEach'),\r\n            };\r\n            if (failure) {\r\n                data.failure = {\r\n                    _custom: {\r\n                        type: Error,\r\n                        readOnly: true,\r\n                        display: failure ? failure.message : '',\r\n                        tooltip: 'Navigation Failure',\r\n                        value: failure,\r\n                    },\r\n                };\r\n                data.status = formatDisplay('❌');\r\n            }\r\n            else {\r\n                data.status = formatDisplay('✅');\r\n            }\r\n            // we set here to have the right order\r\n            data.from = formatRouteLocation(from, 'Current Location during this navigation');\r\n            data.to = formatRouteLocation(to, 'Target location');\r\n            api.addTimelineEvent({\r\n                layerId: navigationsLayerId,\r\n                event: {\r\n                    title: 'End of navigation',\r\n                    subtitle: to.fullPath,\r\n                    time: api.now(),\r\n                    data,\r\n                    logType: failure ? 'warning' : 'default',\r\n                    groupId: to.meta.__navigationId,\r\n                },\r\n            });\r\n        });\r\n        /**\r\n         * Inspector of Existing routes\r\n         */\r\n        const routerInspectorId = 'router-inspector:' + id;\r\n        api.addInspector({\r\n            id: routerInspectorId,\r\n            label: 'Routes' + (id ? ' ' + id : ''),\r\n            icon: 'book',\r\n            treeFilterPlaceholder: 'Search routes',\r\n        });\r\n        function refreshRoutesView() {\r\n            // the routes view isn't active\r\n            if (!activeRoutesPayload)\r\n                return;\r\n            const payload = activeRoutesPayload;\r\n            // children routes will appear as nested\r\n            let routes = matcher.getRoutes().filter(route => !route.parent);\r\n            // reset match state to false\r\n            routes.forEach(resetMatchStateOnRouteRecord);\r\n            // apply a match state if there is a payload\r\n            if (payload.filter) {\r\n                routes = routes.filter(route => \r\n                // save matches state based on the payload\r\n                isRouteMatching(route, payload.filter.toLowerCase()));\r\n            }\r\n            // mark active routes\r\n            routes.forEach(route => markRouteRecordActive(route, router.currentRoute.value));\r\n            payload.rootNodes = routes.map(formatRouteRecordForInspector);\r\n        }\r\n        let activeRoutesPayload;\r\n        api.on.getInspectorTree(payload => {\r\n            activeRoutesPayload = payload;\r\n            if (payload.app === app && payload.inspectorId === routerInspectorId) {\r\n                refreshRoutesView();\r\n            }\r\n        });\r\n        /**\r\n         * Display information about the currently selected route record\r\n         */\r\n        api.on.getInspectorState(payload => {\r\n            if (payload.app === app && payload.inspectorId === routerInspectorId) {\r\n                const routes = matcher.getRoutes();\r\n                const route = routes.find(route => route.record.__vd_id === payload.nodeId);\r\n                if (route) {\r\n                    payload.state = {\r\n                        options: formatRouteRecordMatcherForStateInspector(route),\r\n                    };\r\n                }\r\n            }\r\n        });\r\n        api.sendInspectorTree(routerInspectorId);\r\n        api.sendInspectorState(routerInspectorId);\r\n    });\r\n}\r\nfunction modifierForKey(key) {\r\n    if (key.optional) {\r\n        return key.repeatable ? '*' : '?';\r\n    }\r\n    else {\r\n        return key.repeatable ? '+' : '';\r\n    }\r\n}\r\nfunction formatRouteRecordMatcherForStateInspector(route) {\r\n    const { record } = route;\r\n    const fields = [\r\n        { editable: false, key: 'path', value: record.path },\r\n    ];\r\n    if (record.name != null) {\r\n        fields.push({\r\n            editable: false,\r\n            key: 'name',\r\n            value: record.name,\r\n        });\r\n    }\r\n    fields.push({ editable: false, key: 'regexp', value: route.re });\r\n    if (route.keys.length) {\r\n        fields.push({\r\n            editable: false,\r\n            key: 'keys',\r\n            value: {\r\n                _custom: {\r\n                    type: null,\r\n                    readOnly: true,\r\n                    display: route.keys\r\n                        .map(key => `${key.name}${modifierForKey(key)}`)\r\n                        .join(' '),\r\n                    tooltip: 'Param keys',\r\n                    value: route.keys,\r\n                },\r\n            },\r\n        });\r\n    }\r\n    if (record.redirect != null) {\r\n        fields.push({\r\n            editable: false,\r\n            key: 'redirect',\r\n            value: record.redirect,\r\n        });\r\n    }\r\n    if (route.alias.length) {\r\n        fields.push({\r\n            editable: false,\r\n            key: 'aliases',\r\n            value: route.alias.map(alias => alias.record.path),\r\n        });\r\n    }\r\n    if (Object.keys(route.record.meta).length) {\r\n        fields.push({\r\n            editable: false,\r\n            key: 'meta',\r\n            value: route.record.meta,\r\n        });\r\n    }\r\n    fields.push({\r\n        key: 'score',\r\n        editable: false,\r\n        value: {\r\n            _custom: {\r\n                type: null,\r\n                readOnly: true,\r\n                display: route.score.map(score => score.join(', ')).join(' | '),\r\n                tooltip: 'Score used to sort routes',\r\n                value: route.score,\r\n            },\r\n        },\r\n    });\r\n    return fields;\r\n}\r\n/**\r\n * Extracted from tailwind palette\r\n */\r\nconst PINK_500 = 0xec4899;\r\nconst BLUE_600 = 0x2563eb;\r\nconst LIME_500 = 0x84cc16;\r\nconst CYAN_400 = 0x22d3ee;\r\nconst ORANGE_400 = 0xfb923c;\r\n// const GRAY_100 = 0xf4f4f5\r\nconst DARK = 0x666666;\r\nfunction formatRouteRecordForInspector(route) {\r\n    const tags = [];\r\n    const { record } = route;\r\n    if (record.name != null) {\r\n        tags.push({\r\n            label: String(record.name),\r\n            textColor: 0,\r\n            backgroundColor: CYAN_400,\r\n        });\r\n    }\r\n    if (record.aliasOf) {\r\n        tags.push({\r\n            label: 'alias',\r\n            textColor: 0,\r\n            backgroundColor: ORANGE_400,\r\n        });\r\n    }\r\n    if (route.__vd_match) {\r\n        tags.push({\r\n            label: 'matches',\r\n            textColor: 0,\r\n            backgroundColor: PINK_500,\r\n        });\r\n    }\r\n    if (route.__vd_exactActive) {\r\n        tags.push({\r\n            label: 'exact',\r\n            textColor: 0,\r\n            backgroundColor: LIME_500,\r\n        });\r\n    }\r\n    if (route.__vd_active) {\r\n        tags.push({\r\n            label: 'active',\r\n            textColor: 0,\r\n            backgroundColor: BLUE_600,\r\n        });\r\n    }\r\n    if (record.redirect) {\r\n        tags.push({\r\n            label: typeof record.redirect === 'string'\r\n                ? `redirect: ${record.redirect}`\r\n                : 'redirects',\r\n            textColor: 0xffffff,\r\n            backgroundColor: DARK,\r\n        });\r\n    }\r\n    // add an id to be able to select it. Using the `path` is not possible because\r\n    // empty path children would collide with their parents\r\n    let id = record.__vd_id;\r\n    if (id == null) {\r\n        id = String(routeRecordId++);\r\n        record.__vd_id = id;\r\n    }\r\n    return {\r\n        id,\r\n        label: record.path,\r\n        tags,\r\n        children: route.children.map(formatRouteRecordForInspector),\r\n    };\r\n}\r\n//  incremental id for route records and inspector state\r\nlet routeRecordId = 0;\r\nconst EXTRACT_REGEXP_RE = /^\\/(.*)\\/([a-z]*)$/;\r\nfunction markRouteRecordActive(route, currentRoute) {\r\n    // no route will be active if matched is empty\r\n    // reset the matching state\r\n    const isExactActive = currentRoute.matched.length &&\r\n        isSameRouteRecord(currentRoute.matched[currentRoute.matched.length - 1], route.record);\r\n    route.__vd_exactActive = route.__vd_active = isExactActive;\r\n    if (!isExactActive) {\r\n        route.__vd_active = currentRoute.matched.some(match => isSameRouteRecord(match, route.record));\r\n    }\r\n    route.children.forEach(childRoute => markRouteRecordActive(childRoute, currentRoute));\r\n}\r\nfunction resetMatchStateOnRouteRecord(route) {\r\n    route.__vd_match = false;\r\n    route.children.forEach(resetMatchStateOnRouteRecord);\r\n}\r\nfunction isRouteMatching(route, filter) {\r\n    const found = String(route.re).match(EXTRACT_REGEXP_RE);\r\n    route.__vd_match = false;\r\n    if (!found || found.length < 3) {\r\n        return false;\r\n    }\r\n    // use a regexp without $ at the end to match nested routes better\r\n    const nonEndingRE = new RegExp(found[1].replace(/\\$$/, ''), found[2]);\r\n    if (nonEndingRE.test(filter)) {\r\n        // mark children as matches\r\n        route.children.forEach(child => isRouteMatching(child, filter));\r\n        // exception case: `/`\r\n        if (route.record.path !== '/' || filter === '/') {\r\n            route.__vd_match = route.re.test(filter);\r\n            return true;\r\n        }\r\n        // hide the / route\r\n        return false;\r\n    }\r\n    const path = route.record.path.toLowerCase();\r\n    const decodedPath = decode(path);\r\n    // also allow partial matching on the path\r\n    if (!filter.startsWith('/') &&\r\n        (decodedPath.includes(filter) || path.includes(filter)))\r\n        return true;\r\n    if (decodedPath.startsWith(filter) || path.startsWith(filter))\r\n        return true;\r\n    if (route.record.name && String(route.record.name).includes(filter))\r\n        return true;\r\n    return route.children.some(child => isRouteMatching(child, filter));\r\n}\r\nfunction omit(obj, keys) {\r\n    const ret = {};\r\n    for (const key in obj) {\r\n        if (!keys.includes(key)) {\r\n            // @ts-expect-error\r\n            ret[key] = obj[key];\r\n        }\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * Creates a Router instance that can be used by a Vue app.\r\n *\r\n * @param options - {@link RouterOptions}\r\n */\r\nfunction createRouter(options) {\r\n    const matcher = createRouterMatcher(options.routes, options);\r\n    const parseQuery$1 = options.parseQuery || parseQuery;\r\n    const stringifyQuery$1 = options.stringifyQuery || stringifyQuery;\r\n    const routerHistory = options.history;\r\n    if ((process.env.NODE_ENV !== 'production') && !routerHistory)\r\n        throw new Error('Provide the \"history\" option when calling \"createRouter()\":' +\r\n            ' https://next.router.vuejs.org/api/#history.');\r\n    const beforeGuards = useCallbacks();\r\n    const beforeResolveGuards = useCallbacks();\r\n    const afterGuards = useCallbacks();\r\n    const currentRoute = shallowRef(START_LOCATION_NORMALIZED);\r\n    let pendingLocation = START_LOCATION_NORMALIZED;\r\n    // leave the scrollRestoration if no scrollBehavior is provided\r\n    if (isBrowser && options.scrollBehavior && 'scrollRestoration' in history) {\r\n        history.scrollRestoration = 'manual';\r\n    }\r\n    const normalizeParams = applyToParams.bind(null, paramValue => '' + paramValue);\r\n    const encodeParams = applyToParams.bind(null, encodeParam);\r\n    const decodeParams = \r\n    // @ts-expect-error: intentionally avoid the type check\r\n    applyToParams.bind(null, decode);\r\n    function addRoute(parentOrRoute, route) {\r\n        let parent;\r\n        let record;\r\n        if (isRouteName(parentOrRoute)) {\r\n            parent = matcher.getRecordMatcher(parentOrRoute);\r\n            record = route;\r\n        }\r\n        else {\r\n            record = parentOrRoute;\r\n        }\r\n        return matcher.addRoute(record, parent);\r\n    }\r\n    function removeRoute(name) {\r\n        const recordMatcher = matcher.getRecordMatcher(name);\r\n        if (recordMatcher) {\r\n            matcher.removeRoute(recordMatcher);\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`Cannot remove non-existent route \"${String(name)}\"`);\r\n        }\r\n    }\r\n    function getRoutes() {\r\n        return matcher.getRoutes().map(routeMatcher => routeMatcher.record);\r\n    }\r\n    function hasRoute(name) {\r\n        return !!matcher.getRecordMatcher(name);\r\n    }\r\n    function resolve(rawLocation, currentLocation) {\r\n        // const objectLocation = routerLocationAsObject(rawLocation)\r\n        // we create a copy to modify it later\r\n        currentLocation = assign({}, currentLocation || currentRoute.value);\r\n        if (typeof rawLocation === 'string') {\r\n            const locationNormalized = parseURL(parseQuery$1, rawLocation, currentLocation.path);\r\n            const matchedRoute = matcher.resolve({ path: locationNormalized.path }, currentLocation);\r\n            const href = routerHistory.createHref(locationNormalized.fullPath);\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (href.startsWith('//'))\r\n                    warn(`Location \"${rawLocation}\" resolved to \"${href}\". A resolved location cannot start with multiple slashes.`);\r\n                else if (!matchedRoute.matched.length) {\r\n                    warn(`No match found for location with path \"${rawLocation}\"`);\r\n                }\r\n            }\r\n            // locationNormalized is always a new object\r\n            return assign(locationNormalized, matchedRoute, {\r\n                params: decodeParams(matchedRoute.params),\r\n                hash: decode(locationNormalized.hash),\r\n                redirectedFrom: undefined,\r\n                href,\r\n            });\r\n        }\r\n        let matcherLocation;\r\n        // path could be relative in object as well\r\n        if ('path' in rawLocation) {\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                'params' in rawLocation &&\r\n                !('name' in rawLocation) &&\r\n                // @ts-expect-error: the type is never\r\n                Object.keys(rawLocation.params).length) {\r\n                warn(`Path \"${\r\n                // @ts-expect-error: the type is never\r\n                rawLocation.path}\" was passed with params but they will be ignored. Use a named route alongside params instead.`);\r\n            }\r\n            matcherLocation = assign({}, rawLocation, {\r\n                path: parseURL(parseQuery$1, rawLocation.path, currentLocation.path).path,\r\n            });\r\n        }\r\n        else {\r\n            // remove any nullish param\r\n            const targetParams = assign({}, rawLocation.params);\r\n            for (const key in targetParams) {\r\n                if (targetParams[key] == null) {\r\n                    delete targetParams[key];\r\n                }\r\n            }\r\n            // pass encoded values to the matcher, so it can produce encoded path and fullPath\r\n            matcherLocation = assign({}, rawLocation, {\r\n                params: encodeParams(rawLocation.params),\r\n            });\r\n            // current location params are decoded, we need to encode them in case the\r\n            // matcher merges the params\r\n            currentLocation.params = encodeParams(currentLocation.params);\r\n        }\r\n        const matchedRoute = matcher.resolve(matcherLocation, currentLocation);\r\n        const hash = rawLocation.hash || '';\r\n        if ((process.env.NODE_ENV !== 'production') && hash && !hash.startsWith('#')) {\r\n            warn(`A \\`hash\\` should always start with the character \"#\". Replace \"${hash}\" with \"#${hash}\".`);\r\n        }\r\n        // the matcher might have merged current location params, so\r\n        // we need to run the decoding again\r\n        matchedRoute.params = normalizeParams(decodeParams(matchedRoute.params));\r\n        const fullPath = stringifyURL(stringifyQuery$1, assign({}, rawLocation, {\r\n            hash: encodeHash(hash),\r\n            path: matchedRoute.path,\r\n        }));\r\n        const href = routerHistory.createHref(fullPath);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            if (href.startsWith('//')) {\r\n                warn(`Location \"${rawLocation}\" resolved to \"${href}\". A resolved location cannot start with multiple slashes.`);\r\n            }\r\n            else if (!matchedRoute.matched.length) {\r\n                warn(`No match found for location with path \"${'path' in rawLocation ? rawLocation.path : rawLocation}\"`);\r\n            }\r\n        }\r\n        return assign({\r\n            fullPath,\r\n            // keep the hash encoded so fullPath is effectively path + encodedQuery +\r\n            // hash\r\n            hash,\r\n            query: \r\n            // if the user is using a custom query lib like qs, we might have\r\n            // nested objects, so we keep the query as is, meaning it can contain\r\n            // numbers at `$route.query`, but at the point, the user will have to\r\n            // use their own type anyway.\r\n            // https://github.com/vuejs/router/issues/328#issuecomment-649481567\r\n            stringifyQuery$1 === stringifyQuery\r\n                ? normalizeQuery(rawLocation.query)\r\n                : (rawLocation.query || {}),\r\n        }, matchedRoute, {\r\n            redirectedFrom: undefined,\r\n            href,\r\n        });\r\n    }\r\n    function locationAsObject(to) {\r\n        return typeof to === 'string'\r\n            ? parseURL(parseQuery$1, to, currentRoute.value.path)\r\n            : assign({}, to);\r\n    }\r\n    function checkCanceledNavigation(to, from) {\r\n        if (pendingLocation !== to) {\r\n            return createRouterError(8 /* ErrorTypes.NAVIGATION_CANCELLED */, {\r\n                from,\r\n                to,\r\n            });\r\n        }\r\n    }\r\n    function push(to) {\r\n        return pushWithRedirect(to);\r\n    }\r\n    function replace(to) {\r\n        return push(assign(locationAsObject(to), { replace: true }));\r\n    }\r\n    function handleRedirectRecord(to) {\r\n        const lastMatched = to.matched[to.matched.length - 1];\r\n        if (lastMatched && lastMatched.redirect) {\r\n            const { redirect } = lastMatched;\r\n            let newTargetLocation = typeof redirect === 'function' ? redirect(to) : redirect;\r\n            if (typeof newTargetLocation === 'string') {\r\n                newTargetLocation =\r\n                    newTargetLocation.includes('?') || newTargetLocation.includes('#')\r\n                        ? (newTargetLocation = locationAsObject(newTargetLocation))\r\n                        : // force empty params\r\n                            { path: newTargetLocation };\r\n                // @ts-expect-error: force empty params when a string is passed to let\r\n                // the router parse them again\r\n                newTargetLocation.params = {};\r\n            }\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                !('path' in newTargetLocation) &&\r\n                !('name' in newTargetLocation)) {\r\n                warn(`Invalid redirect found:\\n${JSON.stringify(newTargetLocation, null, 2)}\\n when navigating to \"${to.fullPath}\". A redirect must contain a name or path. This will break in production.`);\r\n                throw new Error('Invalid redirect');\r\n            }\r\n            return assign({\r\n                query: to.query,\r\n                hash: to.hash,\r\n                // avoid transferring params if the redirect has a path\r\n                params: 'path' in newTargetLocation ? {} : to.params,\r\n            }, newTargetLocation);\r\n        }\r\n    }\r\n    function pushWithRedirect(to, redirectedFrom) {\r\n        const targetLocation = (pendingLocation = resolve(to));\r\n        const from = currentRoute.value;\r\n        const data = to.state;\r\n        const force = to.force;\r\n        // to could be a string where `replace` is a function\r\n        const replace = to.replace === true;\r\n        const shouldRedirect = handleRedirectRecord(targetLocation);\r\n        if (shouldRedirect)\r\n            return pushWithRedirect(assign(locationAsObject(shouldRedirect), {\r\n                state: typeof shouldRedirect === 'object'\r\n                    ? assign({}, data, shouldRedirect.state)\r\n                    : data,\r\n                force,\r\n                replace,\r\n            }), \r\n            // keep original redirectedFrom if it exists\r\n            redirectedFrom || targetLocation);\r\n        // if it was a redirect we already called `pushWithRedirect` above\r\n        const toLocation = targetLocation;\r\n        toLocation.redirectedFrom = redirectedFrom;\r\n        let failure;\r\n        if (!force && isSameRouteLocation(stringifyQuery$1, from, targetLocation)) {\r\n            failure = createRouterError(16 /* ErrorTypes.NAVIGATION_DUPLICATED */, { to: toLocation, from });\r\n            // trigger scroll to allow scrolling to the same anchor\r\n            handleScroll(from, from, \r\n            // this is a push, the only way for it to be triggered from a\r\n            // history.listen is with a redirect, which makes it become a push\r\n            true, \r\n            // This cannot be the first navigation because the initial location\r\n            // cannot be manually navigated to\r\n            false);\r\n        }\r\n        return (failure ? Promise.resolve(failure) : navigate(toLocation, from))\r\n            .catch((error) => isNavigationFailure(error)\r\n            ? // navigation redirects still mark the router as ready\r\n                isNavigationFailure(error, 2 /* ErrorTypes.NAVIGATION_GUARD_REDIRECT */)\r\n                    ? error\r\n                    : markAsReady(error) // also returns the error\r\n            : // reject any unknown error\r\n                triggerError(error, toLocation, from))\r\n            .then((failure) => {\r\n            if (failure) {\r\n                if (isNavigationFailure(failure, 2 /* ErrorTypes.NAVIGATION_GUARD_REDIRECT */)) {\r\n                    if ((process.env.NODE_ENV !== 'production') &&\r\n                        // we are redirecting to the same location we were already at\r\n                        isSameRouteLocation(stringifyQuery$1, resolve(failure.to), toLocation) &&\r\n                        // and we have done it a couple of times\r\n                        redirectedFrom &&\r\n                        // @ts-expect-error: added only in dev\r\n                        (redirectedFrom._count = redirectedFrom._count\r\n                            ? // @ts-expect-error\r\n                                redirectedFrom._count + 1\r\n                            : 1) > 10) {\r\n                        warn(`Detected an infinite redirection in a navigation guard when going from \"${from.fullPath}\" to \"${toLocation.fullPath}\". Aborting to avoid a Stack Overflow. This will break in production if not fixed.`);\r\n                        return Promise.reject(new Error('Infinite redirect in navigation guard'));\r\n                    }\r\n                    return pushWithRedirect(\r\n                    // keep options\r\n                    assign({\r\n                        // preserve an existing replacement but allow the redirect to override it\r\n                        replace,\r\n                    }, locationAsObject(failure.to), {\r\n                        state: typeof failure.to === 'object'\r\n                            ? assign({}, data, failure.to.state)\r\n                            : data,\r\n                        force,\r\n                    }), \r\n                    // preserve the original redirectedFrom if any\r\n                    redirectedFrom || toLocation);\r\n                }\r\n            }\r\n            else {\r\n                // if we fail we don't finalize the navigation\r\n                failure = finalizeNavigation(toLocation, from, true, replace, data);\r\n            }\r\n            triggerAfterEach(toLocation, from, failure);\r\n            return failure;\r\n        });\r\n    }\r\n    /**\r\n     * Helper to reject and skip all navigation guards if a new navigation happened\r\n     * @param to\r\n     * @param from\r\n     */\r\n    function checkCanceledNavigationAndReject(to, from) {\r\n        const error = checkCanceledNavigation(to, from);\r\n        return error ? Promise.reject(error) : Promise.resolve();\r\n    }\r\n    // TODO: refactor the whole before guards by internally using router.beforeEach\r\n    function navigate(to, from) {\r\n        let guards;\r\n        const [leavingRecords, updatingRecords, enteringRecords] = extractChangingRecords(to, from);\r\n        // all components here have been resolved once because we are leaving\r\n        guards = extractComponentsGuards(leavingRecords.reverse(), 'beforeRouteLeave', to, from);\r\n        // leavingRecords is already reversed\r\n        for (const record of leavingRecords) {\r\n            record.leaveGuards.forEach(guard => {\r\n                guards.push(guardToPromiseFn(guard, to, from));\r\n            });\r\n        }\r\n        const canceledNavigationCheck = checkCanceledNavigationAndReject.bind(null, to, from);\r\n        guards.push(canceledNavigationCheck);\r\n        // run the queue of per route beforeRouteLeave guards\r\n        return (runGuardQueue(guards)\r\n            .then(() => {\r\n            // check global guards beforeEach\r\n            guards = [];\r\n            for (const guard of beforeGuards.list()) {\r\n                guards.push(guardToPromiseFn(guard, to, from));\r\n            }\r\n            guards.push(canceledNavigationCheck);\r\n            return runGuardQueue(guards);\r\n        })\r\n            .then(() => {\r\n            // check in components beforeRouteUpdate\r\n            guards = extractComponentsGuards(updatingRecords, 'beforeRouteUpdate', to, from);\r\n            for (const record of updatingRecords) {\r\n                record.updateGuards.forEach(guard => {\r\n                    guards.push(guardToPromiseFn(guard, to, from));\r\n                });\r\n            }\r\n            guards.push(canceledNavigationCheck);\r\n            // run the queue of per route beforeEnter guards\r\n            return runGuardQueue(guards);\r\n        })\r\n            .then(() => {\r\n            // check the route beforeEnter\r\n            guards = [];\r\n            for (const record of to.matched) {\r\n                // do not trigger beforeEnter on reused views\r\n                if (record.beforeEnter && !from.matched.includes(record)) {\r\n                    if (isArray(record.beforeEnter)) {\r\n                        for (const beforeEnter of record.beforeEnter)\r\n                            guards.push(guardToPromiseFn(beforeEnter, to, from));\r\n                    }\r\n                    else {\r\n                        guards.push(guardToPromiseFn(record.beforeEnter, to, from));\r\n                    }\r\n                }\r\n            }\r\n            guards.push(canceledNavigationCheck);\r\n            // run the queue of per route beforeEnter guards\r\n            return runGuardQueue(guards);\r\n        })\r\n            .then(() => {\r\n            // NOTE: at this point to.matched is normalized and does not contain any () => Promise<Component>\r\n            // clear existing enterCallbacks, these are added by extractComponentsGuards\r\n            to.matched.forEach(record => (record.enterCallbacks = {}));\r\n            // check in-component beforeRouteEnter\r\n            guards = extractComponentsGuards(enteringRecords, 'beforeRouteEnter', to, from);\r\n            guards.push(canceledNavigationCheck);\r\n            // run the queue of per route beforeEnter guards\r\n            return runGuardQueue(guards);\r\n        })\r\n            .then(() => {\r\n            // check global guards beforeResolve\r\n            guards = [];\r\n            for (const guard of beforeResolveGuards.list()) {\r\n                guards.push(guardToPromiseFn(guard, to, from));\r\n            }\r\n            guards.push(canceledNavigationCheck);\r\n            return runGuardQueue(guards);\r\n        })\r\n            // catch any navigation canceled\r\n            .catch(err => isNavigationFailure(err, 8 /* ErrorTypes.NAVIGATION_CANCELLED */)\r\n            ? err\r\n            : Promise.reject(err)));\r\n    }\r\n    function triggerAfterEach(to, from, failure) {\r\n        // navigation is confirmed, call afterGuards\r\n        // TODO: wrap with error handlers\r\n        for (const guard of afterGuards.list())\r\n            guard(to, from, failure);\r\n    }\r\n    /**\r\n     * - Cleans up any navigation guards\r\n     * - Changes the url if necessary\r\n     * - Calls the scrollBehavior\r\n     */\r\n    function finalizeNavigation(toLocation, from, isPush, replace, data) {\r\n        // a more recent navigation took place\r\n        const error = checkCanceledNavigation(toLocation, from);\r\n        if (error)\r\n            return error;\r\n        // only consider as push if it's not the first navigation\r\n        const isFirstNavigation = from === START_LOCATION_NORMALIZED;\r\n        const state = !isBrowser ? {} : history.state;\r\n        // change URL only if the user did a push/replace and if it's not the initial navigation because\r\n        // it's just reflecting the url\r\n        if (isPush) {\r\n            // on the initial navigation, we want to reuse the scroll position from\r\n            // history state if it exists\r\n            if (replace || isFirstNavigation)\r\n                routerHistory.replace(toLocation.fullPath, assign({\r\n                    scroll: isFirstNavigation && state && state.scroll,\r\n                }, data));\r\n            else\r\n                routerHistory.push(toLocation.fullPath, data);\r\n        }\r\n        // accept current navigation\r\n        currentRoute.value = toLocation;\r\n        handleScroll(toLocation, from, isPush, isFirstNavigation);\r\n        markAsReady();\r\n    }\r\n    let removeHistoryListener;\r\n    // attach listener to history to trigger navigations\r\n    function setupListeners() {\r\n        // avoid setting up listeners twice due to an invalid first navigation\r\n        if (removeHistoryListener)\r\n            return;\r\n        removeHistoryListener = routerHistory.listen((to, _from, info) => {\r\n            if (!router.listening)\r\n                return;\r\n            // cannot be a redirect route because it was in history\r\n            const toLocation = resolve(to);\r\n            // due to dynamic routing, and to hash history with manual navigation\r\n            // (manually changing the url or calling history.hash = '#/somewhere'),\r\n            // there could be a redirect record in history\r\n            const shouldRedirect = handleRedirectRecord(toLocation);\r\n            if (shouldRedirect) {\r\n                pushWithRedirect(assign(shouldRedirect, { replace: true }), toLocation).catch(noop);\r\n                return;\r\n            }\r\n            pendingLocation = toLocation;\r\n            const from = currentRoute.value;\r\n            // TODO: should be moved to web history?\r\n            if (isBrowser) {\r\n                saveScrollPosition(getScrollKey(from.fullPath, info.delta), computeScrollPosition());\r\n            }\r\n            navigate(toLocation, from)\r\n                .catch((error) => {\r\n                if (isNavigationFailure(error, 4 /* ErrorTypes.NAVIGATION_ABORTED */ | 8 /* ErrorTypes.NAVIGATION_CANCELLED */)) {\r\n                    return error;\r\n                }\r\n                if (isNavigationFailure(error, 2 /* ErrorTypes.NAVIGATION_GUARD_REDIRECT */)) {\r\n                    // Here we could call if (info.delta) routerHistory.go(-info.delta,\r\n                    // false) but this is bug prone as we have no way to wait the\r\n                    // navigation to be finished before calling pushWithRedirect. Using\r\n                    // a setTimeout of 16ms seems to work but there is no guarantee for\r\n                    // it to work on every browser. So instead we do not restore the\r\n                    // history entry and trigger a new navigation as requested by the\r\n                    // navigation guard.\r\n                    // the error is already handled by router.push we just want to avoid\r\n                    // logging the error\r\n                    pushWithRedirect(error.to, toLocation\r\n                    // avoid an uncaught rejection, let push call triggerError\r\n                    )\r\n                        .then(failure => {\r\n                        // manual change in hash history #916 ending up in the URL not\r\n                        // changing, but it was changed by the manual url change, so we\r\n                        // need to manually change it ourselves\r\n                        if (isNavigationFailure(failure, 4 /* ErrorTypes.NAVIGATION_ABORTED */ |\r\n                            16 /* ErrorTypes.NAVIGATION_DUPLICATED */) &&\r\n                            !info.delta &&\r\n                            info.type === NavigationType.pop) {\r\n                            routerHistory.go(-1, false);\r\n                        }\r\n                    })\r\n                        .catch(noop);\r\n                    // avoid the then branch\r\n                    return Promise.reject();\r\n                }\r\n                // do not restore history on unknown direction\r\n                if (info.delta) {\r\n                    routerHistory.go(-info.delta, false);\r\n                }\r\n                // unrecognized error, transfer to the global handler\r\n                return triggerError(error, toLocation, from);\r\n            })\r\n                .then((failure) => {\r\n                failure =\r\n                    failure ||\r\n                        finalizeNavigation(\r\n                        // after navigation, all matched components are resolved\r\n                        toLocation, from, false);\r\n                // revert the navigation\r\n                if (failure) {\r\n                    if (info.delta &&\r\n                        // a new navigation has been triggered, so we do not want to revert, that will change the current history\r\n                        // entry while a different route is displayed\r\n                        !isNavigationFailure(failure, 8 /* ErrorTypes.NAVIGATION_CANCELLED */)) {\r\n                        routerHistory.go(-info.delta, false);\r\n                    }\r\n                    else if (info.type === NavigationType.pop &&\r\n                        isNavigationFailure(failure, 4 /* ErrorTypes.NAVIGATION_ABORTED */ | 16 /* ErrorTypes.NAVIGATION_DUPLICATED */)) {\r\n                        // manual change in hash history #916\r\n                        // it's like a push but lacks the information of the direction\r\n                        routerHistory.go(-1, false);\r\n                    }\r\n                }\r\n                triggerAfterEach(toLocation, from, failure);\r\n            })\r\n                .catch(noop);\r\n        });\r\n    }\r\n    // Initialization and Errors\r\n    let readyHandlers = useCallbacks();\r\n    let errorHandlers = useCallbacks();\r\n    let ready;\r\n    /**\r\n     * Trigger errorHandlers added via onError and throws the error as well\r\n     *\r\n     * @param error - error to throw\r\n     * @param to - location we were navigating to when the error happened\r\n     * @param from - location we were navigating from when the error happened\r\n     * @returns the error as a rejected promise\r\n     */\r\n    function triggerError(error, to, from) {\r\n        markAsReady(error);\r\n        const list = errorHandlers.list();\r\n        if (list.length) {\r\n            list.forEach(handler => handler(error, to, from));\r\n        }\r\n        else {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                warn('uncaught error during route navigation:');\r\n            }\r\n            console.error(error);\r\n        }\r\n        return Promise.reject(error);\r\n    }\r\n    function isReady() {\r\n        if (ready && currentRoute.value !== START_LOCATION_NORMALIZED)\r\n            return Promise.resolve();\r\n        return new Promise((resolve, reject) => {\r\n            readyHandlers.add([resolve, reject]);\r\n        });\r\n    }\r\n    function markAsReady(err) {\r\n        if (!ready) {\r\n            // still not ready if an error happened\r\n            ready = !err;\r\n            setupListeners();\r\n            readyHandlers\r\n                .list()\r\n                .forEach(([resolve, reject]) => (err ? reject(err) : resolve()));\r\n            readyHandlers.reset();\r\n        }\r\n        return err;\r\n    }\r\n    // Scroll behavior\r\n    function handleScroll(to, from, isPush, isFirstNavigation) {\r\n        const { scrollBehavior } = options;\r\n        if (!isBrowser || !scrollBehavior)\r\n            return Promise.resolve();\r\n        const scrollPosition = (!isPush && getSavedScrollPosition(getScrollKey(to.fullPath, 0))) ||\r\n            ((isFirstNavigation || !isPush) &&\r\n                history.state &&\r\n                history.state.scroll) ||\r\n            null;\r\n        return nextTick()\r\n            .then(() => scrollBehavior(to, from, scrollPosition))\r\n            .then(position => position && scrollToPosition(position))\r\n            .catch(err => triggerError(err, to, from));\r\n    }\r\n    const go = (delta) => routerHistory.go(delta);\r\n    let started;\r\n    const installedApps = new Set();\r\n    const router = {\r\n        currentRoute,\r\n        listening: true,\r\n        addRoute,\r\n        removeRoute,\r\n        hasRoute,\r\n        getRoutes,\r\n        resolve,\r\n        options,\r\n        push,\r\n        replace,\r\n        go,\r\n        back: () => go(-1),\r\n        forward: () => go(1),\r\n        beforeEach: beforeGuards.add,\r\n        beforeResolve: beforeResolveGuards.add,\r\n        afterEach: afterGuards.add,\r\n        onError: errorHandlers.add,\r\n        isReady,\r\n        install(app) {\r\n            const router = this;\r\n            app.component('RouterLink', RouterLink);\r\n            app.component('RouterView', RouterView);\r\n            app.config.globalProperties.$router = router;\r\n            Object.defineProperty(app.config.globalProperties, '$route', {\r\n                enumerable: true,\r\n                get: () => unref(currentRoute),\r\n            });\r\n            // this initial navigation is only necessary on client, on server it doesn't\r\n            // make sense because it will create an extra unnecessary navigation and could\r\n            // lead to problems\r\n            if (isBrowser &&\r\n                // used for the initial navigation client side to avoid pushing\r\n                // multiple times when the router is used in multiple apps\r\n                !started &&\r\n                currentRoute.value === START_LOCATION_NORMALIZED) {\r\n                // see above\r\n                started = true;\r\n                push(routerHistory.location).catch(err => {\r\n                    if ((process.env.NODE_ENV !== 'production'))\r\n                        warn('Unexpected error when starting the router:', err);\r\n                });\r\n            }\r\n            const reactiveRoute = {};\r\n            for (const key in START_LOCATION_NORMALIZED) {\r\n                // @ts-expect-error: the key matches\r\n                reactiveRoute[key] = computed(() => currentRoute.value[key]);\r\n            }\r\n            app.provide(routerKey, router);\r\n            app.provide(routeLocationKey, reactive(reactiveRoute));\r\n            app.provide(routerViewLocationKey, currentRoute);\r\n            const unmountApp = app.unmount;\r\n            installedApps.add(app);\r\n            app.unmount = function () {\r\n                installedApps.delete(app);\r\n                // the router is not attached to an app anymore\r\n                if (installedApps.size < 1) {\r\n                    // invalidate the current navigation\r\n                    pendingLocation = START_LOCATION_NORMALIZED;\r\n                    removeHistoryListener && removeHistoryListener();\r\n                    removeHistoryListener = null;\r\n                    currentRoute.value = START_LOCATION_NORMALIZED;\r\n                    started = false;\r\n                    ready = false;\r\n                }\r\n                unmountApp();\r\n            };\r\n            // TODO: this probably needs to be updated so it can be used by vue-termui\r\n            if (((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) && isBrowser) {\r\n                addDevtools(app, router, matcher);\r\n            }\r\n        },\r\n    };\r\n    return router;\r\n}\r\nfunction runGuardQueue(guards) {\r\n    return guards.reduce((promise, guard) => promise.then(() => guard()), Promise.resolve());\r\n}\r\nfunction extractChangingRecords(to, from) {\r\n    const leavingRecords = [];\r\n    const updatingRecords = [];\r\n    const enteringRecords = [];\r\n    const len = Math.max(from.matched.length, to.matched.length);\r\n    for (let i = 0; i < len; i++) {\r\n        const recordFrom = from.matched[i];\r\n        if (recordFrom) {\r\n            if (to.matched.find(record => isSameRouteRecord(record, recordFrom)))\r\n                updatingRecords.push(recordFrom);\r\n            else\r\n                leavingRecords.push(recordFrom);\r\n        }\r\n        const recordTo = to.matched[i];\r\n        if (recordTo) {\r\n            // the type doesn't matter because we are comparing per reference\r\n            if (!from.matched.find(record => isSameRouteRecord(record, recordTo))) {\r\n                enteringRecords.push(recordTo);\r\n            }\r\n        }\r\n    }\r\n    return [leavingRecords, updatingRecords, enteringRecords];\r\n}\n\n/**\r\n * Returns the router instance. Equivalent to using `$router` inside\r\n * templates.\r\n */\r\nfunction useRouter() {\r\n    return inject(routerKey);\r\n}\r\n/**\r\n * Returns the current route location. Equivalent to using `$route` inside\r\n * templates.\r\n */\r\nfunction useRoute() {\r\n    return inject(routeLocationKey);\r\n}\n\nexport { NavigationFailureType, RouterLink, RouterView, START_LOCATION_NORMALIZED as START_LOCATION, createMemoryHistory, createRouter, createRouterMatcher, createWebHashHistory, createWebHistory, isNavigationFailure, loadRouteLocation, matchedRouteKey, onBeforeRouteLeave, onBeforeRouteUpdate, parseQuery, routeLocationKey, routerKey, routerViewLocationKey, stringifyQuery, useLink, useRoute, useRouter, viewDepthKey };\n"],"names":["isCallable","tryToString","$TypeError","TypeError","module","exports","argument","isObject","$String","String","toIndexedObject","toAbsoluteIndex","lengthOfArrayLike","createMethod","IS_INCLUDES","$this","el","fromIndex","value","O","length","index","includes","indexOf","DESCRIPTORS","isArray","getOwnPropertyDescriptor","Object","SILENT_ON_NON_WRITABLE_LENGTH_SET","undefined","this","defineProperty","writable","error","uncurryThis","toString","stringSlice","slice","it","hasOwn","ownKeys","getOwnPropertyDescriptorModule","definePropertyModule","target","source","exceptions","keys","f","i","key","createPropertyDescriptor","object","bitmap","enumerable","configurable","makeBuiltIn","name","descriptor","get","getter","set","setter","defineGlobalProperty","options","simple","global","unsafe","nonConfigurable","nonWritable","P","fails","documentAll","document","all","IS_HTMLDDA","EXISTS","createElement","MAX_SAFE_INTEGER","getBuiltIn","match","version","userAgent","process","Deno","versions","v8","split","createNonEnumerableProperty","defineBuiltIn","copyConstructorProperties","isForced","FORCED","targetProperty","sourceProperty","TARGET","GLOBAL","STATIC","stat","prototype","dontCallGetSet","forced","sham","exec","test","bind","hasOwnProperty","NATIVE_BIND","call","Function","apply","arguments","FunctionPrototype","getDescriptor","PROPER","CONFIGURABLE","uncurryThisWithBind","fn","aFunction","namespace","method","aCallable","isNullOrUndefined","V","func","check","Math","globalThis","window","self","g","toObject","a","classof","$Object","propertyIsEnumerable","store","functionToString","inspectSource","has","NATIVE_WEAK_MAP","shared","sharedKey","hiddenKeys","OBJECT_ALREADY_INITIALIZED","WeakMap","enforce","getterFor","TYPE","state","type","metadata","facade","STATE","Array","$documentAll","replacement","feature","detection","data","normalize","POLYFILL","NATIVE","string","replace","toLowerCase","isPrototypeOf","USE_SYMBOL_AS_UID","$Symbol","toLength","obj","CONFIGURABLE_FUNCTION_NAME","InternalStateModule","enforceInternalState","getInternalState","CONFIGURABLE_LENGTH","TEMPLATE","arity","constructor","join","ceil","floor","trunc","x","n","IE8_DOM_DEFINE","V8_PROTOTYPE_DEFINE_BUG","anObject","toPropertyKey","$defineProperty","$getOwnPropertyDescriptor","ENUMERABLE","WRITABLE","Attributes","current","propertyIsEnumerableModule","internalObjectKeys","enumBugKeys","concat","getOwnPropertyNames","getOwnPropertySymbols","push","names","result","$propertyIsEnumerable","NASHORN_BUG","input","pref","val","valueOf","getOwnPropertyNamesModule","getOwnPropertySymbolsModule","that","hasIndices","ignoreCase","multiline","dotAll","unicode","unicodeSets","sticky","uid","SHARED","IS_PURE","mode","copyright","license","V8_VERSION","symbol","Symbol","toIntegerOrInfinity","max","min","integer","IndexedObject","requireObjectCoercible","number","isSymbol","getMethod","ordinaryToPrimitive","wellKnownSymbol","TO_PRIMITIVE","exoticToPrim","toPrimitive","id","postfix","random","NATIVE_SYMBOL","iterator","WellKnownSymbolsStore","symbolFor","createWellKnownSymbol","withoutSetter","description","$","setArrayLength","doesNotExceedSafeInteger","INCORRECT_TO_LENGTH","SILENT_ON_NON_WRITABLE_LENGTH","proto","item","len","argCount","deletePropertyOrThrow","INCORRECT_RESULT","unshift","k","to","j","defineBuiltInAccessor","regExpFlags","RegExp","RegExpPrototype","INDICES_SUPPORT","calls","expected","addGetter","chr","pairs","sfc","props","__vccOpts","makeMap","str","expectsLowerCase","map","create","list","PatchFlagNames","GLOBALS_WHITE_LISTED","isGloballyWhitelisted","specialBooleanAttrs","isSpecialBooleanAttr","includeBooleanAttr","normalizeStyle","res","normalized","isString","parseStringStyle","listDelimiterRE","propertyDelimiterRE","cssText","ret","forEach","tmp","trim","normalizeClass","normalizeProps","class","klass","style","HTML_TAGS","SVG_TAGS","VOID_TAGS","isHTMLTag","isSVGTag","isVoidTag","looseCompareArrays","b","equal","looseEqual","aValidType","isDate","bValidType","getTime","aKeysCount","bKeysCount","aHasKey","bHasKey","looseIndexOf","arr","findIndex","toDisplayString","objectToString","isFunction","JSON","stringify","replacer","_key","__v_isRef","isMap","size","entries","reduce","isSet","values","isPlainObject","EMPTY_OBJ","EMPTY_ARR","NOOP","NO","onRE","isOn","isModelListener","startsWith","extend","assign","remove","splice","toTypeString","Date","isPromise","then","catch","toRawType","isIntegerKey","parseInt","isReservedProp","cacheStringFunction","cache","hit","camelizeRE","camelize","_","c","toUpperCase","hyphenateRE","hyphenate","capitalize","charAt","toHandlerKey","hasChanged","oldValue","is","invokeArrayFns","fns","arg","def","toNumber","parseFloat","isNaN","activeEffectScope","effectScopeStack","EffectScope","detached","active","effects","cleanups","parent","scopes","run","on","off","pop","stop","fromParent","e","cleanup","last","effectScope","recordEffectScope","effect","scope","getCurrentScope","onScopeDispose","createDep","dep","Set","w","wasTracked","trackOpBit","newTracked","initDepMarkers","deps","finalizeDepMarkers","ptr","delete","targetMap","effectTrackDepth","maxMarkerBits","effectStack","activeEffect","ITERATE_KEY","MAP_KEY_ITERATE_KEY","ReactiveEffect","scheduler","enableTracking","cleanupEffect","resetTracking","onStop","_effect","lazy","runner","shouldTrack","trackStack","pauseTracking","track","isTracking","depsMap","Map","eventInfo","trackEffects","debuggerEventExtraInfo","add","trigger","newValue","oldTarget","triggerEffects","allowRecurse","isNonTrackableKeys","builtInSymbols","filter","createGetter","shallowGet","readonlyGet","shallowReadonlyGet","arrayInstrumentations","createArrayInstrumentations","instrumentations","args","toRaw","l","isReadonly","shallow","receiver","shallowReadonlyMap","readonlyMap","shallowReactiveMap","reactiveMap","targetIsArray","Reflect","isRef","shouldUnwrap","readonly","reactive","createSetter","shallowSet","hadKey","Number","deleteProperty","mutableHandlers","readonlyHandlers","shallowReactiveHandlers","shallowReadonlyHandlers","toReactive","toReadonly","toShallow","getProto","v","getPrototypeOf","get$1","isShallow","rawTarget","rawKey","wrap","has$1","set$1","deleteEntry","clear","hadItems","createForEach","callback","thisArg","observed","createIterableMethod","targetIsMap","isPair","isKeyOnly","innerIterator","next","done","createReadonlyMethod","createInstrumentations","mutableInstrumentations","shallowInstrumentations","readonlyInstrumentations","shallowReadonlyInstrumentations","iteratorMethods","createInstrumentationGetter","mutableCollectionHandlers","shallowCollectionHandlers","readonlyCollectionHandlers","shallowReadonlyCollectionHandlers","targetTypeMap","rawType","getTargetType","isExtensible","createReactiveObject","shallowReactive","shallowReadonly","baseHandlers","collectionHandlers","proxyMap","existingProxy","targetType","proxy","Proxy","isReactive","isProxy","raw","markRaw","trackRefValue","ref","triggerRefValue","newVal","convert","r","Boolean","createRef","shallowRef","RefImpl","_shallow","_rawValue","_value","rawValue","triggerRef","unref","shallowUnwrapHandlers","proxyRefs","objectWithRefs","CustomRefImpl","factory","_get","_set","customRef","toRefs","toRef","ObjectRefImpl","_object","ComputedRefImpl","_setter","_dirty","computed","getterOrOptions","debugOptions","onlyGetter","cRef","Promise","resolve","devtools","setDevtoolsHook","hook","emit","instance","event","rawArgs","vnode","modelArg","modifiersKey","handlerName","handler","callWithAsyncErrorHandling","onceHandler","emitted","normalizeEmitsOptions","comp","appContext","asMixin","emitsCache","cached","emits","hasExtends","isFunction$1","extendEmits","normalizedFromExtend","mixins","extends","isEmitListener","currentRenderingInstance","currentScopeId","setCurrentRenderingInstance","prev","__scopeId","pushScopeId","popScopeId","withScopeId","_id","withCtx","ctx","isNonScopedSlot","_n","renderFnWithContext","_d","setBlockTracking","prevInstance","_c","renderComponentRoot","Component","withProxy","propsOptions","slots","attrs","render","renderCache","setupState","inheritAttrs","fallthroughAttrs","shapeFlag","proxyToUse","normalizeVNode","getFunctionalFallthrough","err","blockStack","handleError","createVNode","Comment","root","some","filterModelListeners","cloneVNode","dirs","transition","filterSingleRoot","children","singleRoot","child","isVNode","shouldUpdateComponent","prevVNode","nextVNode","optimized","prevProps","prevChildren","component","nextProps","nextChildren","patchFlag","emitsOptions","$stable","hasPropsChanged","dynamicProps","nextKeys","updateHOCHostEl","subTree","isSuspense","__isSuspense","SuspenseImpl","n1","n2","container","anchor","parentComponent","parentSuspense","isSVG","slotScopeIds","rendererInternals","mountSuspense","patchSuspense","hydrate","hydrateSuspense","createSuspenseBoundary","normalizeSuspenseChildren","Suspense","triggerEvent","eventListener","p","patch","o","hiddenContainer","suspense","pendingBranch","ssContent","ssFallback","setActiveBranch","um","unmount","newBranch","newFallback","activeBranch","isInFallback","isHydrating","isSameVNodeType","pendingId","timeout","setTimeout","fallback","m","move","parentNode","isUnmounted","resume","delayEnter","afterLeave","hasUnresolvedAncestor","queuePostFlushCb","fallbackVNode","mountFallback","registerDep","setupRenderEffect","isInPendingSuspense","hydratedEl","asyncDep","asyncSetupResult","suspenseId","asyncResolved","handleSetupResult","placeholder","doRemove","node","hydrateNode","isSlotChildren","normalizeSuspenseSlot","default","s","block","trackBlock","isBlockTreeEnabled","openBlock","currentBlock","closeBlock","singleChild","dynamicChildren","queueEffectWithSuspense","branch","provide","currentInstance","provides","parentProvides","inject","defaultValue","treatDefaultAsFactory","useTransitionState","isMounted","isLeaving","isUnmounting","leavingVNodes","onMounted","onBeforeUnmount","TransitionHookValidator","BaseTransitionImpl","appear","persisted","onBeforeEnter","onEnter","onAfterEnter","onEnterCancelled","onBeforeLeave","onLeave","onAfterLeave","onLeaveCancelled","onBeforeAppear","onAppear","onAfterAppear","onAppearCancelled","setup","getCurrentInstance","prevTransitionKey","getTransitionRawChildren","rawProps","emptyPlaceholder","innerChild","getKeepAliveChild","enterHooks","resolveTransitionHooks","setTransitionHooks","oldChild","oldInnerChild","transitionKeyChanged","getTransitionKey","leavingHooks","update","delayLeave","earlyRemove","delayedLeave","leavingVNodesCache","getLeavingNodesForType","_leaveCb","BaseTransition","callHook","hooks","beforeEnter","leavingVNode","enter","afterHook","cancelHook","called","_enterCb","cancelled","leave","clone","isKeepAlive","keepComment","keyedFragmentCount","Fragment","defineComponent","isAsyncWrapper","__asyncLoader","defineAsyncComponent","loader","loadingComponent","errorComponent","delay","suspensible","onError","userOnError","resolvedComp","pendingRequest","retries","retry","load","thisRequest","Error","reject","userRetry","userFail","__esModule","toStringTag","__asyncResolved","createInnerComp","loaded","delayed","queueJob","__isKeepAlive","KeepAliveImpl","include","exclude","sharedContext","renderer","_unmount","storageContainer","resetShapeFlag","pruneCache","getComponentName","pruneCacheEntry","activate","queuePostRenderEffect","isDeactivated","vnodeHook","onVnodeMounted","invokeVNodeHook","deactivate","da","onVnodeUnmounted","watch","matches","flush","deep","pendingCacheKey","cacheSubtree","getInnerChild","onUpdated","rawVNode","cachedVNode","KeepAlive","pattern","onActivated","registerKeepAliveHook","onDeactivated","wrappedHook","__wdc","injectHook","injectToKeepAliveRoot","keepAliveRoot","injected","onUnmounted","prepend","__weh","setCurrentInstance","unsetCurrentInstance","createHook","lifecycle","isInSSRComponentSetup","onBeforeMount","onBeforeUpdate","onServerPrefetch","onRenderTriggered","onRenderTracked","onErrorCaptured","shouldCacheAccess","applyOptions","resolveMergedOptions","publicThis","beforeCreate","dataOptions","computedOptions","methods","watchOptions","provideOptions","injectOptions","created","beforeMount","mounted","beforeUpdate","updated","activated","deactivated","beforeDestroy","beforeUnmount","destroyed","unmounted","renderTracked","renderTriggered","errorCaptured","serverPrefetch","expose","components","directives","filters","checkDuplicateProperties","resolveInjections","config","unwrapInjectedRef","methodHandler","isObject$1","opt","createWatcher","registerLifecycleHook","register","_hook","exposed","unwrapRef","normalizeInject","from","h","createPathGetter","base","extendsOptions","globalMixins","optionsCache","optionMergeStrategies","resolved","mergeOptions","strats","strat","internalOptionMergeStrats","mergeDataFn","mergeObjectOptions","mergeAsArray","mergeWatchOptions","mergeInject","merged","initProps","isStateful","isSSR","InternalObjectKey","propsDefaults","setFullProps","updateProps","rawPrevProps","rawCurrentProps","hasAttrsChanged","kebabKey","resolvePropValue","propsToUpdate","camelizedKey","needCastKeys","rawCastValues","camelKey","castValues","isAbsent","hasDefault","normalizePropsOptions","propsCache","extendProps","normalizedKey","validatePropName","prop","booleanIndex","getTypeIndex","stringIndex","getType","ctor","isSameType","expectedTypes","t","isInternalKey","normalizeSlotValue","normalizeSlot","rawSlot","normalizeObjectSlots","rawSlots","_ctx","normalizeVNodeSlots","initSlots","updateSlots","needDeletionCheck","deletionComparisonTarget","withDirectives","internalInstance","bindings","dir","modifiers","traverse","invokeDirectiveHook","oldBindings","binding","createAppContext","app","isNativeTag","performance","globalProperties","errorHandler","warnHandler","compilerOptions","createAppAPI","rootComponent","rootProps","context","installedPlugins","_uid","_component","_props","_container","_context","_instance","use","plugin","install","mixin","directive","mount","rootContainer","isHydrate","__vue_app__","getExposeProxy","hasMismatch","isSVGContainer","namespaceURI","tagName","isComment","nodeType","createHydrationFunctions","mt","mountComponent","patchProp","nextSibling","insert","createComment","hasChildNodes","flushPostFlushCbs","firstChild","console","isFragmentStart","onMismatch","handleMismatch","domType","nextNode","Text","Static","needToAdoptContent","staticCount","outerHTML","hydrateFragment","hydrateElement","locateClosingAsyncAnchor","previousSibling","lastChild","createTextVNode","hydrateChildren","setRef","forcePatchValue","endsWith","onClick","vnodeHooks","onVnodeBeforeMount","innerHTML","textContent","cur","parentVNode","fragmentSlotScopeIds","isFragment","end","initFeatureFlags","createRenderer","baseCreateRenderer","createHydrationRenderer","createHydrationFns","hostInsert","hostRemove","hostPatchProp","hostCreateElement","createText","hostCreateText","hostCreateComment","setText","hostSetText","setElementText","hostSetElementText","hostParentNode","hostNextSibling","setScopeId","hostSetScopeId","cloneNode","hostCloneNode","insertStaticContent","hostInsertStaticContent","getNextHostNode","processText","processCommentNode","mountStaticNode","processFragment","processElement","processComponent","internals","moveStaticNode","removeStaticNode","mountElement","patchElement","mountChildren","unmountChildren","scopeId","needCallTransitionHooks","start","cloneIfMounted","oldProps","newProps","onVnodeBeforeUpdate","areChildrenSVG","patchBlockChildren","patchChildren","patchProps","onVnodeUpdated","oldChildren","newChildren","fallbackContainer","oldVNode","newVNode","fragmentStartAnchor","fragmentEndAnchor","traverseStaticChildren","updateComponent","initialVNode","createComponentInstance","setupComponent","updateComponentPreRender","invalidateJob","componentUpdateFn","bu","u","originNext","nextTree","prevTree","bm","isAsyncWrapperVNode","hydrateSubTree","scopedInitialVNode","flushPreFlushCbs","c1","prevShapeFlag","c2","patchKeyedChildren","patchUnkeyedChildren","oldLength","newLength","commonLength","nextChild","parentAnchor","l2","e1","e2","nextPos","s1","s2","keyToNewIndexMap","patched","toBePatched","moved","maxNewIndexSoFar","newIndexToOldIndexMap","prevChild","newIndex","increasingNewIndexSequence","getSequence","nextIndex","moveType","needTransition","performLeave","shouldInvokeDirs","shouldInvokeVnodeHook","onVnodeBeforeUnmount","unmountComponent","removeFragment","performRemove","bum","_vnode","mc","pc","pbc","createApp","rawRef","oldRawRef","isUnmount","refValue","owner","oldRef","refs","doSet","callWithErrorHandling","ch1","ch2","arrI","isTeleport","__isTeleport","isTeleportDisabled","disabled","isTargetSVG","SVGElement","resolveTarget","select","targetSelector","TeleportImpl","querySelector","mainAnchor","targetAnchor","wasDisabled","currentContainer","currentAnchor","moveTeleport","nextTarget","hydrateTeleport","isReorder","targetNode","_lpa","Teleport","COMPONENTS","DIRECTIVES","resolveComponent","maybeSelfReference","resolveAsset","NULL_DYNAMIC_COMPONENT","resolveDynamicComponent","resolveDirective","warnMissing","selfName","registry","disableTracking","vnodeArgsTransformer","setupBlock","createElementBlock","createBaseVNode","createBlock","__v_isVNode","transformVNodeArgs","transformer","normalizeKey","normalizeRef","isBlockNode","needFullChildrenNormalization","__v_skip","normalizeChildren","_createVNode","cloned","isClassComponent","guardReactiveProps","extraProps","mergeRef","mergedProps","mergeProps","text","flag","createStaticVNode","content","numberOfNodes","createCommentVNode","asBlock","memo","slot","slotFlag","toMerge","existing","incoming","renderList","renderItem","createSlots","dynamicSlots","renderSlot","noSlotted","isCE","validSlotContent","ensureValidVNode","rendered","vnodes","toHandlers","getPublicInstance","isStatefulComponent","publicPropertiesMap","$el","$data","$props","$attrs","$slots","$refs","$parent","$root","$emit","$options","$forceUpdate","$nextTick","nextTick","$watch","instanceWatch","PublicInstanceProxyHandlers","accessCache","normalizedProps","publicGetter","cssModule","__cssModules","RuntimeCompiledPublicInstanceProxyHandlers","unscopables","emptyAppContext","uid$1","exposeProxy","setupContext","bc","rtg","rtc","ec","sp","ce","compile","installWithProxy","setupResult","setupStatefulComponent","createSetupContext","isPromise$1","resolvedResult","finishComponentSetup","registerRuntimeCompiler","_compile","_rc","isRuntimeOnly","skipOptions","template","isCustomElement","delimiters","componentCompilerOptions","finalCompilerOptions","createAttrsProxy","classifyRE","classify","displayName","formatComponentName","isRoot","__file","inferFromRegistry","stack","warn","msg","appWarnHandler","trace","getComponentTrace","warnArgs","formatTrace","currentVNode","normalizedStack","recurseCount","parentInstance","logs","entry","formatTraceEntry","open","close","formatProps","formatProp","throwInDev","contextVNode","exposedInstance","errorInfo","errorCapturedHooks","appErrorHandler","logError","isFlushing","isFlushPending","queue","flushIndex","pendingPreFlushCbs","activePreFlushCbs","preFlushIndex","pendingPostFlushCbs","activePostFlushCbs","postFlushIndex","resolvedPromise","currentFlushPromise","currentPreFlushParentJob","findInsertionIndex","middle","middleJobId","getId","job","queueFlush","flushJobs","queueCb","cb","activeQueue","pendingQueue","queuePreFlushCb","seen","parentJob","deduped","sort","Infinity","watchEffect","doWatch","watchPostEffect","watchSyncEffect","INITIAL_WATCHER_VALUE","immediate","onTrack","onTrigger","forceTrigger","isMultiSource","onInvalidate","baseGetter","path","segments","defineProps","defineEmits","defineExpose","withDefaults","defaults","useSlots","getContext","useAttrs","mergeDefaults","withAsyncContext","getAwaitable","awaitable","propsOrChildren","ssrContextKey","useSSRContext","initCustomFormatter","withMemo","isMemoSame","_ssrUtils","ssrUtils","resolveFilter","compatUtils","svgNS","doc","staticTemplateCache","nodeOps","insertBefore","removeChild","tag","createElementNS","multiple","setAttribute","createTextNode","nodeValue","selector","before","wrapper","appendChild","patchClass","transitionClasses","_vtc","removeAttribute","className","patchStyle","currentDisplay","display","setStyle","importantRE","setProperty","prefixed","autoPrefix","prefixes","prefixCache","rawName","xlinkNS","patchAttr","removeAttributeNS","setAttributeNS","isBoolean","patchDOMProp","_a","_getNow","now","skipTimestampCheck","createEvent","timeStamp","ffMatch","navigator","cachedNow","reset","getNow","addEventListener","removeEventListener","patchEvent","prevValue","nextValue","invokers","_vei","existingInvoker","parseName","invoker","createInvoker","optionsModifierRE","initialValue","attached","patchStopImmediatePropagation","originalStop","stopImmediatePropagation","_stopped","nativeOnRE","shouldSetAsProp","_trueValue","_falseValue","defineCustomElement","hydate","Comp","VueCustomElement","VueElement","initialProps","super","defineSSRCustomElement","BaseClass","HTMLElement","_def","_connected","_resolved","_numberProps","shadowRoot","attachShadow","attributes","_setAttr","MutationObserver","mutations","attributeName","observe","connectedCallback","_resolveDef","_update","disconnectedCallback","styles","hasOptions","rawKeys","numberProps","_setProp","camelize$1","_getProp","_applyStyles","asyncDef","getAttribute","shouldReflect","dispatchEvent","CustomEvent","detail","host","css","useCssModule","modules","mod","useCssVars","setVars","setVarsOnVNode","ob","childList","disconnect","vars","setVarsOnNode","TRANSITION","ANIMATION","Transition","resolveTransitionProps","DOMTransitionPropsValidators","duration","enterFromClass","enterActiveClass","enterToClass","appearFromClass","appearActiveClass","appearToClass","leaveFromClass","leaveActiveClass","leaveToClass","TransitionPropsValidators","hasExplicitCallback","baseProps","durations","normalizeDuration","enterDuration","leaveDuration","finishEnter","isAppear","removeTransitionClass","finishLeave","makeEnterHook","nextFrame","addTransitionClass","whenTransitionEnds","forceReflow","NumberOf","cls","classList","requestAnimationFrame","endId","expectedType","explicitTimeout","_endId","resolveIfNotStale","propCount","getTransitionInfo","endEvent","ended","onEnd","getComputedStyle","getStyleProperties","transitionDelays","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationDurations","animationTimeout","hasTransform","delays","d","toMs","body","offsetHeight","positionMap","newPositionMap","TransitionGroupImpl","moveClass","hasCSSTransform","callPendingCbs","recordPosition","movedChildren","applyTranslation","transform","webkitTransform","transitionDuration","_moveCb","propertyName","cssTransitionProps","getBoundingClientRect","TransitionGroup","oldPos","newPos","dx","left","dy","top","getModelAssigner","onCompositionStart","composing","onCompositionEnd","initEvent","vModelText","_assign","castToNumber","domValue","activeElement","vModelCheckbox","modelValue","_modelValue","elementValue","getValue","checked","found","filtered","getCheckboxValue","setChecked","vModelRadio","vModelSelect","isSetModel","selectedVal","selected","setSelected","_binding","isMultiple","option","optionValue","selectedIndex","vModelDynamic","callModelHook","modelToUse","systemModifiers","modifierGuards","stopPropagation","prevent","preventDefault","currentTarget","ctrl","ctrlKey","shift","shiftKey","alt","altKey","meta","metaKey","button","right","exact","withModifiers","guard","keyNames","esc","space","up","down","withKeys","eventKey","vShow","_vod","setDisplay","rendererOptions","enabledHydration","ensureRenderer","ensureHydrationRenderer","containerOrSelector","normalizeContainer","Element","createSSRApp","defaultOnError","defaultOnWarn","createCompilerError","code","loc","messages","additionalMessage","SyntaxError","FRAGMENT","TELEPORT","SUSPENSE","KEEP_ALIVE","BASE_TRANSITION","OPEN_BLOCK","CREATE_BLOCK","CREATE_ELEMENT_BLOCK","CREATE_VNODE","CREATE_ELEMENT_VNODE","CREATE_COMMENT","CREATE_TEXT","CREATE_STATIC","RESOLVE_COMPONENT","RESOLVE_DYNAMIC_COMPONENT","RESOLVE_DIRECTIVE","RESOLVE_FILTER","WITH_DIRECTIVES","RENDER_LIST","RENDER_SLOT","CREATE_SLOTS","TO_DISPLAY_STRING","MERGE_PROPS","NORMALIZE_CLASS","NORMALIZE_STYLE","NORMALIZE_PROPS","GUARD_REACTIVE_PROPS","TO_HANDLERS","CAMELIZE","CAPITALIZE","TO_HANDLER_KEY","SET_BLOCK_TRACKING","PUSH_SCOPE_ID","POP_SCOPE_ID","WITH_CTX","UNREF","IS_REF","WITH_MEMO","IS_MEMO_SAME","helperNameMap","registerRuntimeHelpers","helpers","locStub","line","column","offset","createRoot","hoists","imports","temps","codegenNode","createVNodeCall","isBlock","isComponent","helper","getVNodeBlockHelper","inSSR","getVNodeHelper","createArrayExpression","elements","createObjectExpression","properties","createObjectProperty","createSimpleExpression","isStatic","constType","createCompoundExpression","createCallExpression","callee","createFunctionExpression","params","returns","newline","isSlot","createConditionalExpression","consequent","alternate","createCacheExpression","createBlockStatement","isStaticExp","isBuiltInType","isCoreComponent","nonIdentifierRE","isSimpleIdentifier","validFirstIdentCharRE","validIdentCharRE","whitespaceRE","isMemberExpressionBrowser","stateStack","currentOpenBracketCount","currentOpenParensCount","currentStringType","char","isMemberExpression","getInnerRange","substr","newLoc","advancePositionWithClone","pos","numberOfCharacters","advancePositionWithMutation","linesCount","lastNewLinePos","charCodeAt","findDir","allowEmpty","exp","findProp","dynamicOnly","isBindKey","hasDynamicKeyVBind","isText","isVSlot","isTemplateNode","tagType","isSlotOutlet","ssr","propsHelperSet","getUnnormalizedProps","callPath","injectProp","propsWithInjection","originalProps","parentCall","first","alreadyExists","propKeyName","toValidAssetId","searchValue","replaceValue","getMemoedVNodeCall","makeBlock","removeHelper","getCompatValue","compatConfig","isCompatEnabled","checkCompatEnabled","enabled","decodeRE","decodeMap","gt","lt","amp","apos","quot","defaultParserOptions","getNamespace","getTextMode","isPreTag","decodeEntities","rawText","p1","onWarn","comments","baseParse","createParserContext","getCursor","parseChildren","getSelection","rawOptions","originalSource","inPre","inVPre","ancestors","ns","nodes","isEnd","parseInterpolation","emitError","parseComment","parseBogusComment","parseCDATA","advanceBy","parseTag","parseElement","isSpecialTemplateDirective","parseText","pushNode","removedWhitespace","shouldCondense","whitespace","prevIndex","nestedIndex","contentStart","closeIndex","wasInPre","wasInVPre","element","isPreBoundary","isVPreBoundary","isSelfClosing","inlineTemplateProp","find","startsWithEndTagOpen","advanceSpaces","cursor","currentSource","parseAttributes","isBuiltInComponent","attributeNames","attr","parseAttribute","nameSet","parseAttributeValue","isPropShorthand","dirName","startOffset","lastIndexOf","getNewPosition","isQuoted","valueLoc","quote","endIndex","parseTextData","unexpectedChars","innerStart","innerEnd","rawContentLength","rawContent","preTrimContent","endOffset","endTokens","xs","searchString","hoistStatic","walk","isSingleElementRoot","doNotHoistNode","canStringify","originalCount","hoistedCount","constantType","getConstantType","hoist","getPatchFlag","getGeneratedPropsConstantType","getNodeProps","contentType","vSlot","branches","transformHoist","constantCache","returnType","generatedPropsType","childType","expType","allowHoistedHelperSet","getConstantTypeOfHelperCall","keyType","valueType","createTransformContext","filename","prefixIdentifiers","cacheHandlers","nodeTransforms","directiveTransforms","expressionPlugins","slotted","ssrCssVars","bindingMetadata","inline","isTS","nameMatch","identifiers","vFor","vPre","vOnce","currentNode","childIndex","inVOnce","count","currentCount","helperString","replaceNode","removeNode","removalIndex","onNodeRemoved","addIdentifiers","removeIdentifiers","identifier","hoisted","traverseNode","createRootCodegen","traverseChildren","nodeRemoved","exitFns","onExit","createStructuralDirectiveTransform","PURE_ANNOTATION","createCodegenContext","ast","sourceMap","optimizeImports","runtimeGlobalName","runtimeModuleName","indentLevel","pure","indent","deindent","withoutNewLine","repeat","generate","onContextCreated","hasHelpers","useWithBlock","preambleContext","genFunctionPreamble","functionName","signature","genAssets","genNode","preamble","toJSON","VueBinding","aliasHelper","staticHelpers","genHoists","assets","resolver","genNodeListAsArray","multilines","genNodeList","comma","genText","genExpression","genInterpolation","genCompoundExpression","genComment","genVNodeCall","genCallExpression","genObjectExpression","genArrayExpression","genFunctionExpression","genConditionalExpression","genCacheExpression","genExpressionAsPropertyKey","callHelper","genNullableArgs","needNewline","needsParens","isNested","transformIf","processIf","ifNode","siblings","sibling","createCodegenNodeForBranch","parentCondition","getParentCondition","processCodegen","createIfBranch","condition","userKey","keyIndex","createChildrenCodegenNode","keyProperty","needFragmentWrapper","vnodeCall","transformFor","processFor","forNode","renderExp","keyProp","keyExp","isStableFragment","fragmentFlag","childBlock","isTemplate","slotOutlet","loop","createForLoopParams","parseResult","parseForExpression","valueAlias","keyAlias","objectIndexAlias","forAliasRE","forIteratorRE","stripParensRE","inMatch","LHS","RHS","createAliasExpression","valueContent","trimmedOffset","iteratorMatch","keyContent","keyOffset","indexContent","range","memoArgs","createParamsList","defaultFallback","trackSlotScopes","buildClientSlotFn","buildSlots","buildSlotFn","slotsProperties","hasDynamicSlots","onComponentSlot","hasTemplateSlots","hasNamedDefaultSlot","implicitDefaultChildren","seenSlotNames","slotElement","slotDir","slotChildren","slotLoc","slotName","slotProps","dirLoc","staticSlotName","slotFunction","vIf","vElse","buildDynamicSlot","conditional","buildDefaultSlotProperty","isNonWhitespaceContent","hasForwardedSlots","directiveImportMap","transformElement","vnodeTag","resolveComponentType","isDynamicComponent","vnodeProps","vnodeChildren","vnodePatchFlag","vnodeDynamicProps","dynamicPropNames","vnodeDirectives","shouldUseBlock","propsBuildResult","buildProps","buildDirectiveArgs","shouldBuildAsSlots","hasDynamicTextChild","stringifyDynamicPropNames","isExplicitDynamic","isComponentTag","isProp","isDir","builtIn","elementLoc","mergeArgs","runtimeDirectives","hasRef","hasClassBinding","hasStyleBinding","hasHydrationEventBinding","hasDynamicKeys","hasVnodeHook","analyzePatchFlag","isEventHandler","valueNode","isVBind","isVOn","dedupeProperties","directiveTransform","needRuntime","propsExpression","classKeyIndex","styleKeyIndex","hasDynamicKey","isHandlerKey","classProp","styleProp","knownProps","dirArgs","runtime","trueExpression","modifier","propsNamesString","transformSlotOutlet","processSlotOutlet","slotArgs","expectedLen","nonNameProps","fnExpRE","transformOn","augmentor","eventName","shouldCache","isMemberExp","isInlineStatement","hasMultipleStatements","transformBind","_node","injectPrefix","prefix","transformText","hasText","callArgs","WeakSet","transformOnce","transformModel","createTransformProps","rawExp","expString","maybeRef","propName","assignmentExp","eventArg","validDivisionCharRE","transformFilter","rewriteFilter","parseFilter","expression","inSingle","inDouble","inTemplateString","inRegex","curly","square","paren","lastFilterIndex","pushFilter","wrapFilter","seen$1","transformMemo","getBaseTransformPreset","model","baseCompile","isModuleMode","noopDirectiveTransform","V_MODEL_RADIO","V_MODEL_CHECKBOX","V_MODEL_TEXT","V_MODEL_SELECT","V_MODEL_DYNAMIC","V_ON_WITH_MODIFIERS","V_ON_WITH_KEYS","V_SHOW","TRANSITION_GROUP","decoder","decodeHtmlBrowser","asAttr","isRawTextContainer","parserOptions","transformStyle","parseInlineCSS","createDOMCompilerError","transformVHtml","transformVText","baseResult","transformModel$1","directiveToUse","isInvalidType","isEventOptionModifier","isNonKeyModifier","maybeKeyModifier","isKeyboardEvent","resolveModifiers","keyModifiers","nonKeyModifiers","eventOptionModifiers","transformClick","isStaticClick","transformOn$1","handlerExp","modifierPostfix","transformShow","ignoreSideEffectTags","DOMNodeTransforms","DOMDirectiveTransforms","cloak","html","show","compileCache","compileToFunction","runtimeDom","Position","col","SourceLocation","identifierName","createPositionWithColumnOffset","position","columnOffset","ModuleErrors","ImportMetaOutsideModule","message","ImportOutsideModule","NodeDescriptions","ArrayPattern","AssignmentExpression","AssignmentPattern","ArrowFunctionExpression","ConditionalExpression","CatchClause","ForOfStatement","ForInStatement","ForStatement","FormalParameters","Identifier","ImportSpecifier","ImportDefaultSpecifier","ImportNamespaceSpecifier","ObjectPattern","ParenthesizedExpression","RestElement","UpdateExpression","true","false","VariableDeclarator","YieldExpression","toNodeDescription","StandardErrors","AccessorIsGenerator","kind","ArgumentsInClass","AsyncFunctionInSingleStatementContext","AwaitBindingIdentifier","AwaitBindingIdentifierInStaticBlock","AwaitExpressionFormalParameter","AwaitUsingNotInAsyncContext","AwaitNotInAsyncContext","AwaitNotInAsyncFunction","BadGetterArity","BadSetterArity","BadSetterRestParameter","ConstructorClassField","ConstructorClassPrivateField","ConstructorIsAccessor","ConstructorIsAsync","ConstructorIsGenerator","DeclarationMissingInitializer","DecoratorArgumentsOutsideParentheses","DecoratorBeforeExport","DecoratorsBeforeAfterExport","DecoratorConstructor","DecoratorExportClass","DecoratorSemicolon","DecoratorStaticBlock","DeferImportRequiresNamespace","DeletePrivateField","DestructureNamedImport","DuplicateConstructor","DuplicateDefaultExport","DuplicateExport","exportName","DuplicateProto","DuplicateRegExpFlags","DynamicImportPhaseRequiresImportExpressions","phase","ElementAfterRest","EscapedCharNotAnIdentifier","ExportBindingIsString","localName","ExportDefaultFromAsIdentifier","ForInOfLoopInitializer","ForInUsing","ForOfAsync","ForOfLet","GeneratorInSingleStatementContext","IllegalBreakContinue","IllegalLanguageModeDirective","IllegalReturn","ImportAttributesUseAssert","ImportBindingIsString","importName","ImportCallArgumentTrailingComma","ImportCallArity","maxArgumentCount","ImportCallNotNewExpression","ImportCallSpreadArgument","ImportJSONBindingNotDefault","ImportReflectionHasAssertion","ImportReflectionNotBinding","IncompatibleRegExpUVFlags","InvalidBigIntLiteral","InvalidCodePoint","InvalidCoverInitializedName","InvalidDecimal","InvalidDigit","radix","InvalidEscapeSequence","InvalidEscapeSequenceTemplate","InvalidEscapedReservedWord","reservedWord","InvalidIdentifier","InvalidLhs","ancestor","InvalidLhsBinding","InvalidLhsOptionalChaining","InvalidNumber","InvalidOrMissingExponent","InvalidOrUnexpectedToken","unexpected","InvalidParenthesizedAssignment","InvalidPrivateFieldResolution","InvalidPropertyBindingPattern","InvalidRecordProperty","InvalidRestAssignmentPattern","LabelRedeclaration","labelName","LetInLexicalBinding","LineTerminatorBeforeArrow","MalformedRegExpFlags","MissingClassName","MissingEqInAssignment","MissingSemicolon","MissingPlugin","missingPlugin","MissingOneOfPlugins","MissingUnicodeEscape","MixingCoalesceWithLogical","ModuleAttributeDifferentFromType","ModuleAttributeInvalidValue","ModuleAttributesWithDuplicateKeys","ModuleExportNameHasLoneSurrogate","surrogateCharCode","ModuleExportUndefined","MultipleDefaultsInSwitch","NewlineAfterThrow","NoCatchOrFinally","NumberIdentifier","NumericSeparatorInEscapeSequence","ObsoleteAwaitStar","OptionalChainingNoNew","OptionalChainingNoTemplate","OverrideOnConstructor","ParamDupe","PatternHasAccessor","PatternHasMethod","PrivateInExpectedIn","PrivateNameRedeclaration","RecordExpressionBarIncorrectEndSyntaxType","RecordExpressionBarIncorrectStartSyntaxType","RecordExpressionHashIncorrectStartSyntaxType","RecordNoProto","RestTrailingComma","SloppyFunction","SloppyFunctionAnnexB","SourcePhaseImportRequiresDefault","StaticPrototype","SuperNotAllowed","SuperPrivateField","TrailingDecorator","TupleExpressionBarIncorrectEndSyntaxType","TupleExpressionBarIncorrectStartSyntaxType","TupleExpressionHashIncorrectStartSyntaxType","UnexpectedArgumentPlaceholder","UnexpectedAwaitAfterPipelineBody","UnexpectedDigitAfterHash","UnexpectedImportExport","UnexpectedKeyword","keyword","UnexpectedLeadingDecorator","UnexpectedLexicalDeclaration","UnexpectedNewTarget","UnexpectedNumericSeparator","UnexpectedPrivateField","UnexpectedReservedWord","UnexpectedSuper","UnexpectedToken","UnexpectedTokenUnaryExponentiation","UnexpectedUsingDeclaration","UnsupportedBind","UnsupportedDecoratorExport","UnsupportedDefaultExport","UnsupportedImport","UnsupportedMetaProperty","onlyValidPropertyName","UnsupportedParameterDecorator","UnsupportedPropertyDecorator","UnsupportedSuper","UnterminatedComment","UnterminatedRegExp","UnterminatedString","UnterminatedTemplate","UsingDeclarationHasBindingPattern","VarRedeclaration","YieldBindingIdentifier","YieldInParameter","ZeroDigitNumericSeparator","StrictModeErrors","StrictDelete","StrictEvalArguments","referenceName","StrictEvalArgumentsBinding","bindingName","StrictFunction","StrictNumericEscape","StrictOctalLiteral","StrictWith","UnparenthesizedPipeBodyDescriptions","PipelineOperatorErrors","PipeBodyIsTighter","PipeTopicRequiresHackPipes","PipeTopicUnbound","PipeTopicUnconfiguredToken","token","PipeTopicUnused","PipeUnparenthesizedBody","PipelineBodyNoArrow","PipelineBodySequenceExpression","PipelineHeadSequenceExpression","PipelineTopicUnused","PrimaryTopicNotAllowed","PrimaryTopicRequiresSmartPipeline","defineHidden","toParseErrorConstructor","toMessage","details","overrides","ParseErrorEnum","syntaxPlugin","parseErrorTemplates","ParseErrorConstructors","reasonCode","rest","Errors","toUnenumerable","toESTreeLocation","superClass","parse","file","tokens","parseRegExpLiteral","flags","regex","estreeParseLiteral","parseBigIntLiteral","bigInt","BigInt","bigint","parseDecimalLiteral","decimal","parseLiteral","parseStringLiteral","parseNumericLiteral","parseNullLiteral","parseBooleanLiteral","directiveToStmt","extra","expressionValue","stmt","initFunction","isAsync","checkDeclaration","isObjectProperty","getObjectOrClassMethodParams","isValidDirective","_stmt$expression$extr","parenthesized","parseBlockBody","allowDirectives","topLevel","afterBlockParse","directiveStatements","pushClassMethod","classBody","isGenerator","isConstructor","allowsDirectSuper","parseMethod","typeParameters","parsePrivateName","getPluginOption","convertPrivateNameToPrivateIdentifier","getPrivateNameSV","isPrivateName","parseFunctionBody","allowExpression","isMethod","allowDirectSuper","inClassScope","funcNode","startNode","finishNode","parseClassProperty","propertyNode","parseClassPrivateProperty","parseObjectMethod","isPattern","isAccessor","shorthand","parseObjectProperty","startLoc","refExpressionErrors","isValidLVal","isUnparenthesizedInAssign","isAssignable","isBinding","toAssignable","isLHS","classScope","usePrivateName","toAssignableObjectExpressionProp","isLast","raise","at","finishCallExpression","unfinished","optional","hasPlugin","toReferencedArguments","parseExport","decorators","exportStartLoc","lastTokStartLoc","exported","specifiers","declaration","_declaration$decorato","resetStartLocation","parseSubscript","noCalls","optionalChainMember","substring","chain","startNodeAtNode","isOptionalMemberExpression","hasPropertyAsPrivateName","isObjectMethod","finishNodeAt","endLoc","resetEndLocation","lastTokEndLoc","TokContext","preserveSpace","types","brace","j_oTag","j_cTag","j_expr","beforeExpr","startsExpr","isLoop","isAssign","ExportedTokenType","label","conf","rightAssociative","binop","updateContext","keywords","createKeyword","createToken","createBinop","tokenTypeCounter","tokenTypes","tokenLabels","tokenBinops","tokenBeforeExprs","tokenStartsExprs","tokenPrefixes","createKeywordLike","tt","bracketL","bracketHashL","bracketBarL","bracketR","bracketBarR","braceL","braceBarL","braceHashL","braceR","braceBarR","parenL","parenR","semi","colon","doubleColon","dot","question","questionDot","arrow","ellipsis","backQuote","dollarBraceL","templateTail","templateNonTail","hash","interpreterDirective","eq","slashAssign","xorAssign","moduloAssign","incDec","bang","tilde","doubleCaret","doubleAt","pipeline","nullishCoalescing","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","bitShiftL","bitShiftR","plusMin","modulo","star","slash","exponent","_in","_instanceof","_break","_case","_catch","_continue","_debugger","_default","_else","_finally","_function","_if","_return","_switch","_throw","_try","_var","_const","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_typeof","_void","_delete","_do","_for","_while","_as","_assert","_async","_await","_defer","_from","_let","_meta","_of","_sent","_source","_static","_using","_yield","_asserts","_checks","_exports","_global","_implements","_intrinsic","_infer","_is","_mixins","_proto","_require","_satisfies","_keyof","_readonly","_unique","_abstract","_declare","_enum","_module","_namespace","_interface","_type","_opaque","num","regexp","privateName","eof","jsxName","jsxText","jsxTagStart","jsxTagEnd","tokenIsIdentifier","tokenKeywordOrIdentifierIsKeyword","tokenIsKeywordOrIdentifier","tokenIsLiteralPropertyName","tokenComesBeforeExpression","tokenCanStartExpression","tokenIsAssignment","tokenIsFlowInterfaceOrTypeOrOpaque","tokenIsLoop","tokenIsKeyword","tokenIsOperator","tokenIsPostfix","tokenIsPrefix","tokenIsTSTypeOperator","tokenIsTSDeclarationStart","tokenLabelName","tokenOperatorPrecedence","tokenIsRightAssociative","tokenIsTemplate","getExportedToken","tc","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","isIdentifierStart","fromCharCode","isIdentifierChar","reservedWords","strict","strictBind","reservedWordsStrictSet","reservedWordsStrictBindSet","isReservedWord","word","inModule","isStrictReservedWord","isStrictBindOnlyReservedWord","isStrictBindReservedWord","isKeyword","isIteratorStart","next2","reservedWordLikeSet","canBeReservedWord","Scope","var","lexical","functions","ScopeHandler","parser","scopeStack","undefinedExports","inTopLevel","currentScope","inFunction","currentVarScopeFlags","allowSuper","currentThisScopeFlags","inClass","inClassAndNotInNonArrowFunction","inStaticBlock","inNonArrowFunction","treatFunctionsAsVar","treatFunctionsAsVarInScope","createScope","exit","declareName","bindingType","checkRedeclarationInScope","maybeExportDefined","isRedeclaredInScope","checkLocalExport","topLevelScope","FlowScope","declareFunctions","FlowScopeHandler","BaseParser","sawUnambiguousESM","ambiguousScriptDifferentAst","pluginConfig","plugins","pluginName","pluginOptions","actualOptions","_this$plugins$get","setTrailingComments","trailingComments","setLeadingComments","leadingComments","setInnerComments","innerComments","adjustInnerComments","commentWS","lastElement","CommentsParser","addComment","comment","processComment","commentStack","commentStackLength","lastCommentWS","leadingNode","nodeStart","commentEnd","trailingNode","containingNode","finalizeComment","commentStart","finalizeRemainingComments","resetPreviousNodeTrailingComments","resetPreviousIdentifierLeadingComments","takeSurroundingComments","lineBreak","lineBreakG","isNewLine","skipWhiteSpace","skipWhiteSpaceInLine","skipWhiteSpaceToLineBreak","isWhitespace","State","curLine","lineStart","errors","potentialArrowAt","noArrowAt","noArrowParamsConversionAt","maybeInArrowParameters","inType","noAnonFunctionType","hasFlowComment","isAmbientContext","inAbstractClass","inDisallowConditionalTypesContext","topicContext","maxNumOfResolvableTopics","maxTopicIndex","soloAwait","inFSharpPipelineDirectBody","labels","lastTokStart","ct","canStartJSXElement","containsEsc","firstInvalidTemplateEscapePos","strictErrors","tokensLength","init","strictMode","sourceType","startLine","startColumn","curPosition","skipArrays","forbiddenNumericSeparatorSiblings","decBinOct","hex","isAllowedNumericSeparatorSibling","bin","ch","oct","dec","readStringContents","initialPos","initialLineStart","initialCurLine","out","firstInvalidLoc","chunkStart","unterminated","isStringEnd","readEscapedChar","containsInvalid","inTemplate","throwOnInvalid","readHexChar","readCodePoint","fromCodePoint","strictNumericEscape","startPos","octalStr","octal","forceLen","readInt","invalidEscapeSequence","allowNumSeparator","bailOnError","forbiddenSiblings","isAllowedSibling","invalid","total","_isDigit","invalidDigit","unexpectedNumericSeparator","numericSeparatorInEscapeSequence","invalidCodePoint","buildPosition","VALID_REGEX_FLAGS","Token","Tokenizer","isLookahead","errorHandlers_readInt","errorRecovery","errorBuilder","errorHandlers_readCodePoint","errorHandlers_readStringContents_string","recordStrictModeErrors","errorHandlers_readStringContents_template","pushToken","checkKeywordEscapes","nextToken","eat","createLookaheadState","curContext","lookahead","old","curr","nextTokenStart","nextTokenStartSince","lastIndex","lookaheadCharCode","nextTokenInLineStart","nextTokenInLineStartSince","lookaheadInLineCharCode","codePointAtPos","cp","trail","setStrict","toParseError","skipSpace","finishToken","getTokenFromCode","skipBlockComment","skipLineComment","startSkip","spaceStart","attachComment","annexB","commentWhitespace","prevType","replaceToken","readToken_numberSign","readToken_interpreter","expectPlugin","readWord1","finishOp","readToken_dot","readNumber","readToken_slash","readToken_mult_modulo","width","readToken_pipe_amp","readToken_caret","proposal","topicToken","lookaheadCh","codePointAt","readToken_atSign","readToken_plus_min","readToken_lt","readToken_gt","readToken_eq_excl","readToken_question","readTemplateToken","readRadixNumber","readString","readWord","readRegexp","escaped","mods","isBigInt","startsWithDot","isFloat","isDecimal","hasExponent","isOctal","hasLeadingZero","underscorePos","readTemplateContinuation","opening","firstCode","escStart","identifierCheck","keywordTypes","raiseProperties","raiseOverwrite","expectOnePlugin","pluginNames","ClassScope","privateNames","loneAccessors","undefinedPrivateNames","ClassScopeHandler","oldClassScope","declarePrivateName","elementType","redefined","accessor","oldStatic","newStatic","oldKind","newKind","ExpressionScope","canBeArrowParameterDeclaration","isCertainlyParameterDeclaration","ArrowHeadParsingScope","declarationErrors","recordDeclarationError","ParsingErrorClass","clearDeclarationError","iterateErrors","ExpressionScopeHandler","recordParameterInitializerError","origin","recordArrowParameterBindingError","recordAsyncArrowParametersError","validateAsPattern","newParameterDeclarationScope","newArrowHeadScope","newAsyncArrowScope","newExpressionScope","PARAM","PARAM_YIELD","PARAM_AWAIT","PARAM_RETURN","PARAM_IN","ProductionParameterHandler","stacks","currentFlags","hasAwait","hasYield","hasReturn","hasIn","functionFlags","UtilParser","addExtra","isContextual","isUnparsedContextual","nameStart","nameEnd","nextCh","isLookaheadContextual","eatContextual","expectContextual","canInsertSemicolon","hasPrecedingLineBreak","hasFollowingLineBreak","isLineTerminator","semicolon","allowAsi","expect","tryParse","oldState","abortSignal","failState","thrown","aborted","checkExpressionErrors","andThrow","shorthandAssignLoc","doubleProtoLoc","privateKeyLoc","optionalParametersLoc","hasErrors","isLiteralPropertyName","property","initializeScopes","oldLabels","oldExportedIdentifiers","exportedIdentifiers","oldInModule","oldScope","getScopeHandler","oldProdParam","prodParam","oldExpressionScope","expressionScope","enterInitialScopes","paramFlags","checkDestructuringPrivate","ExpressionErrors","Node","ranges","NodePrototype","clonePlaceholder","cloneIdentifier","expectedNode","cloneStringLiteral","__clone","newNode","NodeUtils","startNodeAt","resetStartLocationFromNode","locationNode","reservedTypes","FlowErrors","AmbiguousConditionalArrow","AmbiguousDeclareModuleKind","AssignReservedType","reservedType","DeclareClassElement","DeclareClassFieldInitializer","DuplicateDeclareModuleExports","EnumBooleanMemberNotInitialized","memberName","enumName","EnumDuplicateMemberName","EnumInconsistentMemberValues","EnumInvalidExplicitType","invalidEnumType","EnumInvalidExplicitTypeUnknownSupplied","EnumInvalidMemberInitializerPrimaryType","explicitType","EnumInvalidMemberInitializerSymbolType","EnumInvalidMemberInitializerUnknownType","EnumInvalidMemberName","suggestion","EnumNumberMemberNotInitialized","EnumStringMemberInconsistentlyInitialized","GetterMayNotHaveThisParam","ImportReflectionHasImportType","ImportTypeShorthandOnlyInPureImport","InexactInsideExact","InexactInsideNonObject","InexactVariance","InvalidNonTypeImportInDeclareModule","MissingTypeParamDefault","NestedDeclareModule","NestedFlowComment","PatternIsOptional","SetterMayNotHaveThisParam","SpreadVariance","ThisParamAnnotationRequired","ThisParamBannedInConstructor","ThisParamMayNotBeOptional","ThisParamMustBeFirst","ThisParamNoDefault","TypeBeforeInitializer","TypeCastInPattern","UnexpectedExplicitInexactInObject","UnexpectedReservedType","UnexpectedReservedUnderscore","UnexpectedSpaceBetweenModuloChecks","UnexpectedSpreadType","UnexpectedSubtractionOperand","UnexpectedTokenAfterTypeParameter","UnexpectedTypeParameterBeforeAsyncArrowFunction","UnsupportedDeclareExportKind","unsupportedExportKind","UnsupportedStatementInDeclareModule","UnterminatedFlowComment","isEsModuleType","bodyElement","hasTypeImportKind","importKind","exportSuggestions","const","let","interface","partition","list1","list2","FLOW_PRAGMA_REGEX","flowPragma","shouldParseTypes","shouldParseEnums","flowParseTypeInitialiser","tok","oldInType","flowParseType","flowParsePredicate","moduloLoc","parseExpression","flowParseTypeAndPredicateInitialiser","predicate","flowParseDeclareClass","flowParseInterfaceish","flowParseDeclareFunction","parseIdentifier","typeNode","typeContainer","flowParseTypeParameterDeclaration","flowParseFunctionTypeParams","typeAnnotation","flowParseDeclare","insideModule","flowParseDeclareVariable","flowParseDeclareModuleExports","flowParseDeclareModule","flowParseDeclareTypeAlias","flowParseDeclareOpaqueType","flowParseDeclareInterface","flowParseDeclareExportDeclaration","flowParseTypeAnnotatableIdentifier","parseExprAtom","bodyNode","parseImport","hasModuleExport","isLet","exportKind","flowParseTypeAnnotation","finished","flowParseTypeAlias","flowParseOpaqueType","isClass","flowParseRestrictedIdentifier","flowParseInterfaceExtends","implements","flowParseObjectType","allowStatic","allowExact","allowSpread","allowProto","allowInexact","flowParseQualifiedTypeIdentifier","flowParseTypeParameterInstantiation","flowParseInterface","checkNotUnderscore","checkReservedType","liberal","declare","supertype","impltype","flowParseTypeParameter","requireDefault","nodeStartLoc","variance","flowParseVariance","ident","bound","defaultRequired","typeParameter","oldNoAnonFunctionType","flowParseTypeParameterInstantiationCallOrNew","flowParseTypeOrImplicitInstantiation","flowParseInterfaceType","flowParseObjectPropertyKey","flowParseObjectTypeIndexer","static","flowParseObjectTypeInternalSlot","flowParseObjectTypeMethodish","flowParseFunctionTypeParam","flowParseObjectTypeCallProperty","endDelim","callProperties","indexers","internalSlots","inexact","protoStartLoc","inexactStartLoc","propOrInexact","flowParseObjectTypeProperty","flowObjectTypeSemicolon","isInexactToken","flowCheckGetterSetterParams","paramCount","node2","qualification","flowParseGenericType","flowParseTypeofType","flowParsePrimaryType","flowParseTupleType","lh","isThis","reinterpretTypeAsFunctionTypeParam","flowIdentToTypeAnnotation","isGroupedType","parseLiteralAtNode","createIdentifier","flowParsePostfixType","seenOptionalIndexedAccess","objectType","indexType","flowParsePrefixType","flowParseAnonFunctionWithoutParens","param","flowParseIntersectionType","flowParseUnionType","allowPrimitiveOverride","typeCastToParameter","allowExpressionBody","forwardNoArrowParamsConversionAt","parseFunctionBodyAndFinish","parseStatementLike","flowParseEnumDeclaration","parseExpressionStatement","expr","shouldParseExportDeclaration","isExportDefaultSpecifier","parseExportDefaultExpression","parseConditional","setOptionalParametersError","originalNoArrowAt","failed","tryParseConditionalConsequent","valid","getArrowLikeExpressions","parseMaybeAssign","parseMaybeAssignAllowIn","disallowInvalid","arrows","finishArrowValidation","every","toAssignableList","_node$extra","trailingCommaLoc","ScopeFlag","checkParams","parseParenItem","typeCastNode","assertModuleNodeAllowed","parseExportDeclaration","declarationNode","parseExportSpecifiers","parseExportFrom","eatExportStar","maybeParseExportNamespaceSpecifier","hasNamespace","parseClassId","isStatement","optionalId","parseClassMember","member","parseClassMemberFromModifier","isIterator","readIterator","fullWord","exprList","toReferencedList","isParenthesizedExpr","_expr$extra","parseArrayLike","canBePattern","isTuple","isParenthesized","isClassMethod","isClassProperty","isNonstaticConstructor","isThisParam","pushClassPrivateMethod","parseClassSuper","superTypeParameters","implemented","checkGetterSetterParams","parsePropertyNamePrefixOperator","parseObjPropValue","parseAssignableListItemTypes","parseMaybeDefault","checkImportReflection","parseImportSpecifierLocal","specifier","local","finishImportSpecifier","isPotentialImportPhase","isExport","applyImportPhase","parseImportSpecifier","importedIsString","isInTypeOnlyImport","isMaybeTypeOnly","firstIdent","imported","specifierTypeKind","as_ident","specifierIsTypeImport","checkReservedWord","parseBindingAtom","parseFunctionParams","parseVarId","decl","parseAsyncArrowFromCallExpression","shouldParseAsyncArrow","afterLeftParse","jsx","currentContext","_jsx","abort","arrowExpression","_arrowExpression$extr","maybeUnwrapTypeCastExpression","async","_jsx2","_jsx3","parseArrow","shouldParseArrow","setArrowFunctionParameters","allowDuplicates","isArrowFunction","strictModeChanged","parseParenAndDistinguishExpression","canBeArrow","parseSubscripts","parseCallExpressionArguments","parseAsyncArrowWithTypeParameters","subscriptState","isLookaheadToken_lt","typeArguments","parseNewCallee","targs","parseArrowExpression","parseTopLevel","program","fileNode","skipFlowComment","hasFlowCommentCompletion","commentSkip","shiftToFirstNonWhiteSpace","ch3","flowEnumErrorBooleanMemberNotInitialized","flowEnumErrorInvalidMemberInitializer","enumContext","flowEnumErrorNumberMemberNotInitialized","flowEnumErrorStringMemberInconsistentlyInitialized","flowEnumMemberInit","endOfInit","literal","flowEnumMemberRaw","flowEnumCheckExplicitTypeMismatch","flowEnumMembers","seenNames","members","booleanMembers","numberMembers","stringMembers","defaultedMembers","hasUnknownMembers","memberNode","flowEnumStringMembers","initializedMembers","flowEnumParseExplicitType","flowEnumBody","nameLoc","empty","boolsLen","numsLen","strsLen","defaultedLen","afterNext","entities","__proto__","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","JsxErrors","AttributeIsEmpty","MissingClosingTagElement","openingTagName","MissingClosingTagFragment","UnexpectedSequenceExpression","HTMLEntity","UnsupportedJsxValue","UnterminatedJsxContent","UnwrappedAdjacentJSXElements","getQualifiedJSXName","jsxReadToken","jsxReadEntity","jsxReadNewLine","normalizeCRLF","jsxReadString","codePoint","desc","entity","XHTMLEntities","jsxReadWord","jsxParseIdentifier","jsxParseNamespacedName","jsxParseElementName","jsxParseAttributeValue","setContext","jsxParseExpressionContainer","jsxParseEmptyExpression","jsxParseSpreadChild","previousContext","jsxParseAttribute","jsxParseOpeningElementAt","jsxParseOpeningElementAfterName","selfClosing","jsxParseClosingElementAt","jsxParseElementAt","openingElement","closingElement","contents","openingFragment","closingFragment","jsxParseElement","newContext","TypeScriptScope","enums","constEnums","classes","exportOnlyBindings","TypeScriptScopeHandler","importsStack","hasImport","allowShadow","isConst","wasConst","getOwn","unwrapParenthesizedExpression","LValParser","_node$extra2","_node$extra3","operator","checkToRestConversion","elt","toReferencedListDeep","parseSpread","parseRestBinding","parseBindingList","ParseBindingListFlags","parseObjectLike","closeCharCode","elts","checkCommaAfterRest","parseDecorator","parseAssignableListItem","parseBindingRestProperty","parseBindingProperty","parsePropertyName","ObjectProperty","checkLVal","in","checkClashes","hasParenthesizedAncestor","checkIdentifier","validity","_expression$extra","ParseErrorClass","isParenthesizedExpression","nextAncestor","declareNameFromIdentifier","allowPattern","nonNull","assert","TSErrors","AbstractMethodHasImplementation","methodName","AbstractPropertyHasInitializer","AccesorCannotDeclareThisParameter","AccesorCannotHaveTypeParameters","AccessorCannotBeOptional","ClassMethodHasDeclare","ClassMethodHasReadonly","ConstInitiailizerMustBeStringOrNumericLiteralOrLiteralEnumReference","ConstructorHasTypeParameters","DeclareAccessor","DeclareClassFieldHasInitializer","DeclareFunctionHasImplementation","DuplicateAccessibilityModifier","DuplicateModifier","EmptyHeritageClauseType","EmptyTypeArguments","EmptyTypeParameters","ExpectedAmbientAfterExportDeclare","ImportAliasHasImportType","IncompatibleModifiers","IndexSignatureHasAbstract","IndexSignatureHasAccessibility","IndexSignatureHasDeclare","IndexSignatureHasOverride","IndexSignatureHasStatic","InitializerNotAllowedInAmbientContext","InvalidModifierOnTypeMember","InvalidModifierOnTypeParameter","InvalidModifierOnTypeParameterPositions","InvalidModifiersOrder","orderedModifiers","InvalidPropertyAccessAfterInstantiationExpression","InvalidTupleMemberLabel","MissingInterfaceName","NonAbstractClassHasAbstractMethod","NonClassMethodPropertyHasAbstractModifer","OptionalTypeBeforeRequired","OverrideNotInSubClass","PrivateElementHasAbstract","PrivateElementHasAccessibility","ReadonlyForMethodSignature","ReservedArrowTypeParam","ReservedTypeAssertion","SetAccesorCannotHaveOptionalParameter","SetAccesorCannotHaveRestParameter","SetAccesorCannotHaveReturnType","SingleTypeParameterWithoutTrailingComma","typeParameterName","StaticBlockCannotHaveModifier","TupleOptionalAfterType","TypeAnnotationAfterAssign","TypeImportCannotSpecifyDefaultAndNamed","TypeModifierIsUsedInTypeExports","TypeModifierIsUsedInTypeImports","UnexpectedParameterModifier","UnexpectedReadonly","UnexpectedTypeAnnotation","UnexpectedTypeCastInParameter","UnsupportedImportTypeArgument","UnsupportedParameterPropertyKind","UnsupportedSignatureParameterKind","keywordTypeFromName","tsIsAccessModifier","tsIsVarianceAnnotations","tsParseInOutModifiers","tsParseModifiers","allowedModifiers","disallowedModifiers","errorTemplate","tsParseConstModifier","tsParseInOutConstModifiers","tsIsIdentifier","tsTokenCanFollowModifier","tsNextTokenCanFollowModifier","tsParseModifier","stopOnStartOfClassStaticBlock","tsIsStartOfStaticBlocks","tsTryParse","modified","enforceOrder","after","incompatible","mod1","mod2","accessibility","tsIsListTerminator","tsParseList","tsParseDelimitedList","refTrailingCommaPos","tsParseDelimitedListWorker","expectSuccess","trailingCommaPos","tsParseBracketedList","bracket","skipFirstToken","tsParseImportType","qualifier","tsParseEntityName","tsParseTypeArguments","allowReservedWords","tsParseTypeReference","typeName","tsParseThisTypePredicate","lhs","parameterName","tsParseTypeAnnotation","asserts","tsParseThisTypeNode","tsParseTypeQuery","exprName","tsParseTypeParameter","parseModifiers","tsParseTypeParameterName","constraint","tsEatThenParseType","tsTryParseTypeParameters","tsParseTypeParameters","tsFillSignature","returnToken","returnTokenRequired","paramsKey","returnTypeKey","tsParseBindingListForSignature","tsParseTypeOrTypePredicateAnnotation","tsParseTypeMemberSemicolon","tsParseSignatureMember","tsIsUnambiguouslyIndexSignature","tsTryParseIndexSignature","tsLookAhead","parameters","tsTryParseTypeAnnotation","tsParsePropertyOrMethodSignature","nodeAny","firstParameter","tsParseTypeMember","idx","tsParseTypeLiteral","tsParseObjectTypeMembers","tsIsStartOfMappedType","tsParseMappedTypeParameter","tsExpectThenParseType","tsParseMappedType","nameType","tsParseType","tsTryParseType","tsParseTupleType","elementTypes","tsParseTupleElementType","seenOptionalElement","elementNode","labeled","isWord","chAfterWord","wordName","typeOrLabel","tsParseNonArrayType","labeledNode","optionalTypeNode","restNode","tsParseParenthesizedType","tsParseFunctionOrConstructorType","abstract","tsInAllowConditionalTypesContext","tsParseLiteralTypeNode","tsParseTemplateLiteralType","parseTemplate","parseTemplateSubstitution","tsParseThisTypeOrThisTypePredicate","thisKeyword","parseMaybeUnary","tsParseArrayTypeOrHigher","tsParseTypeOperator","tsParseTypeOperatorOrHigher","tsCheckTypeAnnotationForReadOnly","tsParseInferType","tsParseConstraintForInferType","tsInDisallowConditionalTypesContext","isTypeOperator","tsParseUnionOrIntersectionType","parseConstituentType","hasLeadingOperator","tsParseIntersectionTypeOrHigher","tsParseUnionTypeOrHigher","tsIsStartOfFunctionType","tsIsUnambiguouslyStartOfFunctionType","tsSkipParameterStart","previousErrorCount","tsInType","tsParseTypePredicateAsserts","thisTypePredicate","typePredicateVariable","tsParseTypePredicatePrefix","tsTryParseTypeOrTypePredicateAnnotation","eatColon","tsParseNonConditionalType","checkType","extendsType","trueType","falseType","isAbstractConstructorSignature","tsParseTypeAssertion","tsParseHeritageClause","originalStartLoc","delimitedList","tsParseInterfaceDeclaration","tsParseTypeAliasDeclaration","tsInNoContext","oldContext","oldInDisallowConditionalTypesContext","tsNextThenParseType","tsParseEnumMember","initializer","tsParseEnumDeclaration","tsParseModuleBlock","parseBlockOrModuleBlockBody","tsParseModuleOrNamespaceDeclaration","nested","inner","tsParseAmbientExternalModuleDeclaration","tsParseImportEqualsDeclaration","maybeDefaultIdentifier","moduleReference","tsParseModuleReference","tsIsExternalModuleReference","tsParseExternalModuleReference","tsTryParseAndCatch","tsTryParseDeclare","nany","startType","tsInAmbientContext","parseFunctionStatement","parseClass","parseVarStatement","tsParseDeclaration","tsTryParseExportDeclaration","tsParseExpressionStatement","tsCheckLineTerminator","tsParseAbstractDeclaration","tsTryParseGenericAsyncArrowFunction","oldMaybeInArrowParameters","tsParseTypeArgumentsInExpression","reScan_lt","reScan_lt_gt","tsIsDeclarationStart","override","pp","parameter","isSimpleParameter","tsDisallowOptionalPattern","bodilessType","registerFunctionStatementId","tsCheckForInvalidTypeCasts","items","isInParens","nonNullExpression","isOptionalCall","missingParenErrorLoc","atPossibleAsyncArrow","asyncArrowFn","parseTaggedTemplateExpression","tokenType","_callee$extra","parseExprOp","leftStartLoc","minPrec","isSatisfies","checkKeywords","checkDuplicateExports","importNode","parseMaybeImportPhase","parseImportSpecifiersAndAfter","isAbstractClass","allowMissingInitializer","declarations","isValidAmbientConstInitializer","parseStatementContent","parseAccessModifier","tsHasSomeModifiers","callParseClassMemberWithIsStatic","parseClassStaticBlock","parseClassMemberWithIsStatic","hadSuperClass","parsePostMemberNameModifiers","methodOrProp","isDeclare","isIdentifier","parseClassPropertyAnnotation","definite","parseClassAccessorProperty","declareClassPrivateMethodInScope","typeCast","_typeParameters","reportReservedArrowTypeParam","_typeCast","_typeCast2","trailingComma","sawUnary","toAssignableParenthesizedExpression","TSTypeCastExpression","TSParameterProperty","TSNonNullExpression","TSAsExpression","TSSatisfiesExpression","TSTypeAssertion","parseMaybeDecoratorArguments","canHaveLeadingDecorator","getGetterSetterExpectedParamCount","baseCount","firstParam","hasContextParam","parseCatchClauseParam","oldIsAmbientContext","oldInAbstractClass","maybeTakeDecorators","hasBody","shouldParseAsAmbientContext","getExpression","parseExportSpecifier","isInTypeExport","parseTypeOnlyImportExportSpecifier","isImport","isInTypeOnlyImportExport","leftOfAsKey","rightOfAsKey","rightOfAs","leftOfAs","hasTypeSpecifier","canParseAsKeyword","firstAs","secondAs","parseModuleExportName","kindKey","isPossiblyLiteralEnum","expressions","isUncomputedMemberExpressionChain","estree","isNumber","isNegativeNumber","PlaceholderErrors","ClassNameIsRequired","UnexpectedSpace","parsePlaceholder","assertNoSpace","finishPlaceholder","isFinished","chStartsBindingIdentifier","verifyBreakContinue","isBreak","parseStatementOrSloppyAnnexBFunctionDeclaration","parseBlock","createNewLexicalScope","parseFunctionId","requireId","oldStrict","parseClassBody","maybeParseExportDefaultSpecifier","_specifiers","checkExport","hasStarImport","maybeParseStarImportSpecifier","parseNamedImportSpecifiers","parseImportSource","parseV8Intrinsic","v8IntrinsicStartLoc","parseIdentifierName","expectedConfig","expectedName","expectedOptions","expectedKeys","expectedOptionsIsEmpty","PIPELINE_PROPOSALS","TOPIC_TOKENS","RECORD_AND_TUPLE_SYNTAX_TYPES","validatePlugins","decoratorsBeforeExport","allowCallParenthesized","proposalList","tupleSyntaxIsHash","syntaxType","tokenList","moduleAttributesVersionPluginOption","missingPlugins","mixinPlugins","flow","typescript","v8intrinsic","placeholders","mixinPluginNames","defaultOptions","sourceFilename","allowAwaitOutsideFunction","allowReturnOutsideFunction","allowNewTargetOutsideFunction","allowImportExportEverywhere","allowSuperOutsideMethod","allowUndeclaredExports","createImportExpressions","createParenthesizedExpressions","getOptions","opts","ExpressionParser","checkProto","isRecord","protoRef","used","shouldExitDescending","disallowIn","disallowInAnd","parseExpressionBase","allowInAnd","parseMaybeAssignDisallowIn","resultError","parseYield","ownExpressionErrors","parseMaybeConditional","startIndex","parseExprOps","parseMaybeUnaryOrPrivate","op","prec","checkPipelineAtInfixOperator","logical","coalesce","parseExprOpRightExpr","finishedNode","nextOp","withTopicBindingContext","parseHackPipeBody","parseSmartPipelineBodyInStyle","parseExprOpBaseRightExpr","withSoloAwaitPermittingContext","parseFSharpPipelineBody","requiredParentheses","_body$extra","topicReferenceWasUsedInCurrentContext","checkExponentialAfterUnary","isAwait","isAwaitAllowed","parseAwait","isDelete","parseUpdate","isAmbiguousAwait","updateExpressionNode","parseExprSubscripts","maybeAsyncArrow","parseBind","parseCoverCallAndAsyncArrowHead","parseMember","parseNoCallExpr","quasi","expectImportAttributesPlugin","dynamicImport","allowPlaceholder","nodeForExtra","oldInFSharpPipelineDirectBody","addTrailingCommaExtraToNode","parseExprListItem","_call$extra","parseSuper","parseImportMetaProperty","parseImportCall","parseDo","parseFunctionOrFunctionSent","parseDecorators","parseNewOrNewTarget","parseTopicReferenceThenEqualsSign","parseTopicReference","pipeProposal","parseModuleExpression","parseAsyncFunctionExpression","parseAsyncArrowUnaryFunction","topicTokenType","topicTokenValue","finishTopicReference","testTopicReferenceConfiguration","topicReferenceIsAllowedInCurrentContext","registerTopicReference","parseMetaProperty","parseFunction","isSource","innerStartLoc","spreadStartLoc","optionalCommaStartLoc","spreadNodeStartLoc","innerEndLoc","arrowNode","wrapParenthesis","parenExpression","metaProp","parseNew","parseExprList","parseTemplateElement","isTagged","elemStart","elem","isTail","elemEnd","cooked","tail","curElt","quasis","propHash","parsePropertyDefinition","maybeAsyncOrAccessorProp","keyName","_params","finishedProp","generator","isExpression","hasStrictModeDirective","nonSimple","isSimpleParamList","formalParameters","reservedTest","delegating","delegate","childExpr","isSimpleReference","checkSmartPipeTopicBodyEarlyErrors","outerContextTopicState","withSmartMixTopicForbiddingContext","outerContextSoloAwaitState","prodParamToSet","prodParamToClear","revertScopes","parseProgram","loopLabel","switchLabel","loneSurrogate","keywordRelationalOperator","babel7CompatTokens","hashEndPos","hashEndLoc","backquoteEnd","backquoteEndLoc","startToken","templateValue","templateElementEnd","templateElementEndLoc","endToken","StatementParser","interpreter","parseInterpreterDirective","finishedProgram","stmtToDirective","directiveLiteral","hasFollowingBindingAtom","endCh","chStartsBindingPattern","hasInLineFollowingBindingIdentifier","startsUsingForOf","startsAwaitUsing","parseModuleItem","ParseStatementFlag","parseStatementListItem","allowLabeledFunction","parseStatement","starttype","allowDeclaration","allowFunctionDeclaration","parseBreakContinueStatement","parseDebuggerStatement","parseDoWhileStatement","parseForStatement","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseWhileStatement","parseWithStatement","parseEmptyStatement","nextTokenCharCode","isAsyncFunction","maybeName","parseLabeledStatement","decoratorsEnabledBeforeExport","maybeDecorators","classNode","exportNode","allowExport","paramsStartLoc","lab","parseHeaderExpression","awaitAt","parseFor","startsWithLet","startsWithAwaitUsing","starsWithUsingDeclaration","isLetOrUsing","initNode","parseVar","isForIn","parseForIn","startsWithAsync","isForOf","isHangingDeclaration","ParseFunctionFlag","discriminant","cases","sawDefault","isCase","clause","finalizer","statementStart","parsedNonDirective","await","isFor","hangingDeclaration","isDeclaration","hadConstructor","publicMethod","privateMethod","publicProp","privateProp","accessorProp","publicMember","parseClassElementName","isPrivate","maybeQuestionTokenStartLoc","pushClassPrivateProperty","pushClassProperty","pushClassAccessorProperty","_member$decorators","parseInitializer","parseAfterDefault","hasStar","parseAfterNamespace","isFromRequired","hasSpecifiers","maybeParseExportNamedSpecifiers","hasDeclaration","maybeParseExportDeclaration","_node2$declaration","isTypeExport","assertions","nextType","hasFrom","nextAfterFrom","maybeParseImportAttributes","checkJSONModuleImport","checkNames","isDefault","isFrom","_declaration$extra","_node$specifiers","surrogate","isJSONModuleImport","singleBindingType","_node$assertions","nonDefaultNamedSpecifier","phaseIdentifier","isImportPhase","isPrecedingIdImportPhase","parseImportSourceAndAttributes","maybeParseDefaultImportSpecifier","parseNext","parseImportAttributes","attrNames","parseModuleAttributes","useWith","importSpecifier","Parser","pluginsMap","pluginMap","_options","getParser","moduleError","generateExportedTokenTypes","internalTokenTypes","tokTypes","getParserClass","parserClassCache","pluginsFromOptions","pluginList","noop","isSameRouteRecord","aliasOf","isSameRouteLocationParams","isSameRouteLocationParamsValue","isEquivalentArray","NavigationType","NavigationDirection","NavigationFailureType","routerKey","routeLocationKey","useLink","router","currentRoute","route","activeRecordIndex","matched","routeMatched","currentMatched","parentRecordPath","getOriginalPath","isActive","includesParams","isExactActive","navigate","guardEvent","href","defaultPrevented","outer","innerValue","outerValue","record","getLinkClass","propClass","globalClass","defaultClass"],"sourceRoot":""}